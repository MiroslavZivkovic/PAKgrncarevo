C=======================================================================
C
C=======================================================================
      SUBROUTINE UCVRFN
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.       TO FORM POINTERS AND CALL ROUTINE FOR
CE.       READING OF TIME FUNCTIONS
CS.   P R O G R A M
CS.       ZA FORMIRANJE REPERA I POZIVANJE PROGRAMA
CS.       ZA UCITAVANJE VREMENSKIH FUNKCIJA
C .
CE.   P O I N T E R S
CE.       LNTFT  -  NUMBER OF POINTS FOR EACH TIME FUNCTIONS
CE.       LTABFT -  TIME FUNCTIONS
CS.   R E P E R I
CS.       LNTFT  -  BROJ TACAKA ZA FUNKCIJE
CS.       LTABFT -  VREMENSKE FUNKCIJE
C .
CE.    V A R I A B L E S
CE.       NTABFT -  NUMBER OF DIFFERENT TIME FUNCTIONS
CE.       MAXTFT -  MAXIMUM NUMBER OF POINTS FOR DEFINITION OF TIME
CE.                 FUNCTIONS
CS.       NTABFT -  BROJ VREMENSKIH FUNKCIJA
CS.       MAXTFT -  MAKSIMALNI BROJ TACAKA
CE.       /14/ USER MANUAL
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      include 'paka.inc'
      
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /FVREME/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON /DUPLAP/ IDVA
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /SRPSKI/ ISRPS
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UCVRFN'
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) NTABFT,MAXTFT
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) NTABFT,MAXTFT
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      CALL WBROJK(KARTIC,1)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NTABFT,MAXTFT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NTABFT,MAXTFT
      ENDIF
      IF(NTABFT.EQ.0) RETURN
      TMAX = VREME
      IBR=0
      ITMAX=0
      LTABFT = LRAD
      LNTFT = LTABFT + 2*NTABFT*MAXTFT*IDVA
      LMAX = LNTFT + NTABFT
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
      LRAD=LMAX
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2010)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6010)
      ENDIF
C
CE.   READING OF TIME FUNCTIONS
      CALL ULTABF(A(LNTFT),A(LTABFT),NTABFT,MAXTFT,IBR,IMAX,
     1ITMAX,TFMX,TMAX,1)
      IF(IBR.EQ.0.OR.ITMAX.EQ.1) GO TO 20
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2020)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6020)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030)IBR,IMAX,MAXTFT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030)IBR,IMAX,MAXTFT
      STOP
C
   20 IF(ITMAX.EQ.0) RETURN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2020)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6020)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040)IBR,TFMX,TMAX
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040)IBR,TFMX,TMAX
      STOP
 1000 FORMAT(14I5)
C-----------------------------------------------------------------------
 2000 FORMAT(6X,
     1'P O D A C I    O    V R E M E N S K I M     F U N K C I J A M A'/
     16X,63('-')///
     211X,'BROJ RAZLICITIH VREMENSKIH FUNKCIJA ........... NTABFT =',I5/
     216X,'EQ.0; NEMA VREMENSKIH FUNKCIJA'///
     311X,'MAX. BROJ TACAKA ZA DEF. VREM. FUNKCIJA ....... MAXTFT =',I5/
     216X,'EQ.0; NEMA VREMENSKIH FUNKCIJA'/
     316X,'EQ.1; VREMENSKE FUNKCIJE SU KONSTANTNE'/
     316X,'GT.1; VREMENSKE FUNKCIJE SU PROMENLJIVE')
 2010 FORMAT(//////6X,'V R E M E N S K E    F U N K C I J E'/6X,36('-'))
 2020 FORMAT(///' GRESKA U ULAZNIM PODACIMA ZA VREMENSKE FUNKCIJE')
 2030 FORMAT(/' FUNKCIJA BR. =',I5/' UCITAN BROJ TACAKA, IMAX=',I5/
     1' ZADATI MAKSIMALNI BROJ TACAKA ZA KRIVU , MAXTFT=',I5)
 2040 FORMAT(///' VREMENSKA FUNKCIJA NIJE DEFINISANA U CELOM INREVALU'/
     1/' FUNKCIJA BR. =',I5/' INTERVAL DEFINISANOSTI =',1PD12.5/
     2' VREMENSKI INTERVAL INTEGRACIJE, TMAX =',1PD12.5)
C-----------------------------------------------------------------------
 6000 FORMAT(6X,
     1'D A T A    F O R    T I M E    F U N C T I O N S'/
     16X,48('-')///
     211X,'NUMBER OF DIFFERENT TIME FUNCTIONS ............ NTABFT =',I5/
     216X,'EQ.0; THERE ARE NO TIME FUNCTIONS'///
     311X,'MAX NO OF POINTS FOR DEFINITION OF TIME FUNCT . MAXTFT =',I5/
     216X,'EQ.0; THERE ARE NO TIME FUNCTIONS'/
     316X,'EQ.1; TIME FUNCTIONS ARE CONSTANT'/
     316X,'GT.1; TIME FUNCTIONS ARE VARIABLE')
 6010 FORMAT(//////6X,'T I M E    F U N C T I O N S'/6X,28('-'))
 6020 FORMAT(///' ERROR IN INPUT DATA FOR TIME FUNCTIONS')
 6030 FORMAT(/' FUNKCIJA BR. =',I5/' UCITAN BROJ TACAKA, IMAX=',I5/
     1' ZADATI MAKSIMALNI BROJ TACAKA ZA KRIVU , MAXTFT=',I5)
 6040 FORMAT(///' VREMENSKA FUNKCIJA NIJE DEFINISANA U CELOM INREVALU'/
     1/' FUNKCIJA BR. =',I5/' INTERVAL DEFINISANOSTI =',1PD12.5/
     2' VREMENSKI INTERVAL INTEGRACIJE, TMAX =',1PD12.5)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE ULTABF(NTAV,FN,NBR,MAXT,IBR,IMAX,ITMAX,TFMX,TMAX,IND)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO READ TIME FUNCTIONS
CS.    P R O G R A M
CS.        ZA UCITAVANJE VREMENSKIH FUNKCIJA
C .
CE.    IBR=1,NBR   ( NBR -  TOTAL NUMBER OF TIME FUNCTIONS)
CS.    IBR=1,NBR   ( NBR -  UKUPAN BROJ VREMENSKIH FUNKCIJA)
CE.     /14-1/ USER MANUAL
C .
CE.             IBR  - FUNCTION SEQUENCE NUMBER
CE.        NTAV(IBR) - TOTAL NUMBER OF PAIRS ARGUMENT-FUNCTION
CS.        NTAV(IBR) - BROJ TACAKA ZA FUNKCIJU - IBR
C .
C .      J=1,NTAV(IBR)
C .
CE.        FN(1,IBR,J) - ARGUMENT (TIME)
CE.        FN(2,IBR,J) - FUNCTION
CS.        FN(1,IBR,J) - ARGUMENT - VREME
CS.        FN(2,IBR,J) - VREDNOST FUNKCIJE
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /CDEBUG/ IDEBUG
      DIMENSION NTAV(*),FN(2,NBR,*)
C
      IF(IDEBUG.GT.0) PRINT *, ' ULTABF'
      DO 100 N=1,NBR
      CALL ISPITA(ACOZ)
      KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) IBR,IMAX
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) IBR,IMAX
      IF(IMAX.LE.MAXT) GO TO 10
      RETURN
C
   10 NTAV(IBR)=IMAX
      DO 20 J=1,IMAX
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) (FN(I,IBR,J),I=1,2)
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1010) (FN(I,IBR,J),I=1,2)
   20 CONTINUE
      IF(IND.EQ.0) GO TO 30
      IF(FN(1,IBR,IMAX).GE.TMAX) GO TO 30
      ITMAX=1
      TFMX=FN(1,IBR,IMAX)
      RETURN
C
   30 IF(NULAZ.NE.1.AND.NULAZ.NE.3) GO TO 100
      CALL WBROJK(KARTI,0)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) IBR,NTAV(IBR)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) IBR,NTAV(IBR)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2010)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6010)
      WRITE(IZLAZ,5020) ((FN(I,IBR,J),I=1,2),J=1,IMAX)
C
  100 CONTINUE
      IBR=0
      RETURN
 1000 FORMAT(14I5)
 1010 FORMAT(2F10.0)
 5020 FORMAT(9X,1PD12.5,2X,1PD12.5)
C-----------------------------------------------------------------------
 2000 FORMAT(6X,'FUNKCIJA BR.=',I5,5X,'BROJ TACAKA NA KRIVOJ =',I5)
 2010 FORMAT(//12X,'ARGUMENT',6X,'FUNKCIJA')
C-----------------------------------------------------------------------
 6000 FORMAT(6X,
     *'FUNCTION SEQUENCE NUMBER ....................... =',I5,/6X,
     *'NUMBER OF POINTS FOR TIME FUNCTION DEFINITION .. =',I5)
 6010 FORMAT(//12X,'ARGUMENT',6X,'FUNCTION')
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UCOPT
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO READ GENERAL DATA ABOUT LOADS AND
CE.        READING OF DATA ABOUT EACH TYPE OF LOADING
CS.    P R O G R A M
CS.        ZA UCITAVANJE OPSTIH PODATAKA O OPTERECENJIMA I
CS.        ZA POZIVANJE PODPROGRAMA ZA POJEDINA OPTERECENJA
C .
CE.    V A R I A B L E S
CE.       NCF  - NUMBER OF CARDS FOR READING OF CONCENTRATED FORCE DATA
CE.       NPP2 - NUMBER OF CARDS FOR READING OF LINES WITH LINE LOADING
CE.       NPP3 - NUMBER OF CARDS FOR READING OF SURFACES WITH SURFACE
CE.              LOADING
CE.       NPGR - NUMBER OF CARDS FOR READING OF NODAL PRESSURE FOR
CE.              THIN WALLED BEAM
CE.       NPLJ - NUMBER OF CARDS FOR READING OF SURFACES OF AXISYMMETRIC
CE.              SHELL ELEMENTS WITH SURFACE LOADING
CE.       NTEMP- NUMBER OF CARDS FOR READING OF NODES FOR TEMPERATURE 
CE.              DATA
CE.       NZADP- NUMBER OF CARDS FOR READING OF PRESCRIBED DISPLACEMENTS 
CE.       INDZS- INDICATOR FOR BODY FORCES
CE.       /15/ USER MANUAL
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /SOPSVR/ ISOPS,ISTYP,NSOPV,ISTSV,IPROV,IPROL
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /DUPLAP/ IDVA
      COMMON /AXISYM/ INDAX
      COMMON /SRPSKI/ ISRPS
      COMMON /ZAPSIL/ UBXYZ(3,10),NVFUB(10),INDZS,LZAPS,LNPRZ
      COMMON /PRIT2D/ LFAKP,LTHICV,LITIPE,LNFUN,LIPRAV,LNODPR,ISRBA
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /CERIND/ ICERNE,ICERNM
      COMMON /KAKVZP/ INDVZP
      COMMON /MIXEDM/ MIXED,IOPGS(6),NDS
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UCOPT'
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2010)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6010)
      ENDIF
C
CE    INPUT DATA ABOUT LOADS FOR INTERNAL NODES
CS    ULAZNI PODACI O OPTERECENJIMA ZA UNUTRASNJE CVOROVE PODSTRUKTURE
C
      ISRBA=0
      DO 10 JPBB=1,JPS
         CALL ISPITA(ACOZ)
         IF(INDFOR.EQ.1)
     1   READ(IULAZ,*) NCF,NPP2,NPP3,NPGR,NPLJ,NTEMP,NZADP,INDZS,ICERNE
C     1   READ(IULAZ,*) NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP,NZADP,INDZS
C     2		       ,ICERNE
         IF(INDFOR.EQ.2.and.ind56.eq.0)
     1   READ(ACOZ,1000)NCF,NPP2,NPP3,NPGR,NPLJ,NTEMP,NZADP,INDZS,ICERNE
         IF(INDFOR.EQ.2.and.ind56.eq.1)
     1   READ(ACOZ,4000)NCF,NPP2,NPP3,NPGR,NPLJ,NTEMP,NZADP,INDZS,ICERNE
C     1   READ(ACOZ,1000) NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP,NZADP,INDZS
C     2		       ,ICERNE
         IF(INDZS.GT.10) STOP 'INDZS.GT.10'
         INDVZP=0
         IF(NZADP.LT.0) THEN
            NZADP=-NZADP
            INDVZP=-1
         ENDIF
         IF(NZADP.GT.0.AND.NDIN.EQ.1.AND.ISOPS.EQ.1) STOP
     +   'PROGRAM STOP-PAK051-(NZADP.GT.0.AND.NDIN.EQ.1.AND.ISOPS.EQ.1)'
         IF(METOD.EQ.-1.AND.NZADP.GT.0) STOP
     +   'PROGRAM STOP - UCOPT - PAK051 - (METOD.EQ.-1.AND.NZADP.GT.0)'
         IF(JPS.GT.1) THEN
            JPBR=JPBB 
            CALL UCELP(A(LIPODS),3)
         ELSE
            JPBR=JPS1
         ENDIF
         IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
            IF(JPS.GT.1) THEN 
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2070) JPBR
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6070) JPBR
            ENDIF
            CALL WBROJK(KARTIC,0)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NCF,NPP2,NPP3,NPGR,NPLJ,NTEMP,NZADP,INDZS,ICERNE
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NCF,NPP2,NPP3,NPGR,NPLJ,NTEMP,NZADP,INDZS,ICERNE
         ENDIF
C
         CALL UCELP(A(LIPODS),1)
         NPP=NP
         NMM=0
         IF(JPS.GT.1) THEN
            NMM=NGA-NGI+1
            NPP=NP+NPK
         ENDIF
         LID=LMAX
         LMAX=LID+NPP*6
         IF(MIXED.EQ.1) LMAX=LMAX+NPP*6
         IF(ICVEL.EQ.0) THEN
            LCVEL=LMAX
            LELCV=LMAX
            NP6=NP*6
            IF(MIXED.EQ.1) NP6=NP6*2
         ELSE
            NPM=NPA-NPI+1
            LCVEL=LMAX
            LELCV=LCVEL+NPP
            LMAX=LELCV+NPM+NMM
            NP6=NPP*7+NPM+NMM
         ENDIF
         CALL DELJIV(LMAX,2,INDL)
         IF(INDL.EQ.0) LMAX=LMAX+1
         LCORD=LMAX
         LMAX=LCORD+NPP*3*IDVA
         IF(LMAX.GT.MTOT) CALL ERROR(1)
         CALL READDD(A(LCORD),NPP*3,IPODS,LMAX13,LDUZI)
         CALL IREADD(A(LID),NP6,IPODS,LMAX13,LDUZI)
         LRAD=LMAX
C
CE       R E A D    C O N C E N T R A T E D    F O R C E    D A T A
CS       U C I T A V A N J E    K O N C E N T R I S A N I H    S I L A
C                     -----------
         IF(NCF.NE.0) CALL UCGRSS
C                     -----------
CE       R E A D    2 / D    S U R F A C E    L O A D I N G    D A T A
CS       UCITAVANJE POVRSINSKIH PRITISAKA NA GRANICI 2/D ELEMENATA
C                      -----------
         IF(NPP2.NE.0) CALL UCGRP2
C                      -----------
CE       R E A D    3 / D    S U R F A C E    L O A D I N G    D A T A
CS       UCITAVANJE POVRSINSKIH PRITISAKA NA GRANICI 3/D ELEMENATA
C                      -----------
         IF(NPP3.NE.0) CALL UCGRP3
C                      -----------
CE       READ NODAL PRESSURE DATA FOR THIN WALLED BEAM
CS       U L A Z N I   P O D A C I   O   PRITISCIMA ZA GREDU
C                       -----------
         IF(NPGR.GT.0) CALL UCPOCP
C                       -----------
CE       READ AXISYMMETRIC SHELL SURFACE LOADING DATA
CS       UCITAVANJE POVRSINSKIH PRITISAKA NA GRANICI OSNOSIM. LJUSKE
C                                     -----------
         IF(NPLJ.NE.0.AND.INDAX.EQ.1) CALL UCGRP7
C                                     -----------
CE       R E A D   T E M P E R A T U R E   D A T A
CS       U L A Z N I   P O D A C I   O   T E M P E R A T U R A M A
C                       -----------
         IF(NTEMP.GT.0) CALL UCPOCT
C                       -----------
CE       R E A D   P R E S C R I B E D   D I S P L A C E M E N T S
CS       U C I T A V A N J E    Z A D A T I H    P O M E R A N J A
C                       -----------
         IF(NZADP.NE.0) CALL UCZADP
C                       -----------
CE       R E A D   B O D Y   F O R C E S
      IF(INDZS.GT.0) THEN
        DO 20 IZS=1,INDZS
         CALL ISPITA(ACOZ)
         IF(INDFOR.EQ.1)
     1   READ(IULAZ,*) NVFUB(IZS),(UBXYZ(I,IZS),I=1,3)
         IF(INDFOR.EQ.2)
     1   READ(ACOZ,1100) NVFUB(IZS),(UBXYZ(I,IZS),I=1,3)
   20   CONTINUE 
         IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
            CALL WBROJK(KARTIC,0)
        DO 30 IZS=1,INDZS
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200) NVFUB(IZS),(UBXYZ(I,IZS),I=1,3)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200) NVFUB(IZS),(UBXYZ(I,IZS),I=1,3)
   30   CONTINUE 
         ENDIF
      ENDIF
C
CE    WRITE VECTOR OF CONCENTRATED VOLUME FORCES ON (ISILE)
CS    ZAPISIVANJE VEKTORA KONCENTRISANIH ZAPREMINSKIH SILA NA (ISILE)
C  ZA INSTITUT CERNE!!
C
      ICERNM=0
      IF(ICERNE.LT.0) THEN
         ICERNE=-ICERNE
C         ICERNM=1
         ICERNM=ICERNE
      ENDIF
      LCERNE=LMAX
      IF(ICERNE.GT.0) THEN
         LMAX=LCERNE+JEDN*IDVA
C
        OPEN(ISILE,FILE='ZCERNE',STATUS='UNKNOWN',
     &  FORM='UNFORMATTED',ACCESS='SEQUENTIAL')
        CALL CONFIL()
C
         DO 333 I=1,ICERNE
           CALL VOLFOR(A(LID),A(LCERNE),A(LELCV),NPI,NPA,ICVEL,IZLAZ,
     1                 ISRPS)
  333      CALL WRITED(A(LCERNE),JEDN,ISILE)
         REWIND (ISILE)
         CLOSE(35)
      ENDIF
C
         LMAX=LID
         IF(JPS.EQ.1) LMAX=LRAD
   10 CONTINUE 
C
CE    INPUT DATA ABOUT LOADS FOR CONTOUR NODES
CS    ULAZNI PODACI O OPTERECENJIMA ZA KONTURNE CVOROVE PODSTRUKTURE
C
      IF(JPS.GT.1) THEN
         CALL ISPITA(ACOZ)
         IF(INDFOR.EQ.1)
     1   READ(IULAZ,*) NCF,NTEMP,NZADP
         IF(INDFOR.EQ.2)
     1   READ(ACOZ,1000) NCF,NTEMP,NZADP
C
         CALL UCELP(A(LIPODS),4)
         IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2170)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6170)
         CALL WBROJK(KARTIC,0)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NCF,NTEMP,NZADP
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NCF,NTEMP,NZADP
         ENDIF 
C
         CALL UCELP(A(LIPODS),5)
         NMM=NGA-NGI+1
         NPP=NPG
         LID=LMAX
         LCVEL=LID+NPP*6
         LELCV=LCVEL+NPP
         LMAX=LELCV+NMM
         NP6=NPP*7+NMM
         CALL DELJIV(LMAX,2,INDL)
         IF(INDL.EQ.0) LMAX=LMAX+1
         LCORD=LMAX
         LMAX=LCORD+NPP*3*IDVA
         IF(LMAX.GT.MTOT) CALL ERROR(1)
         CALL READDD(A(LCORD),NPP*3,IPODS,LMAX13,LDUZI)
         CALL IREADD(A(LID),NP6,IPODS,LMAX13,LDUZI)
         LRAD=LMAX
         JPBR=JPS1
         JEDN=JEDNG
C
CE       R E A D    C O N C E N T R A T E D    F O R C E
CS       U C I T A V A N J E    K O N C E N T R I S A N I H    S I L A
C                     -----------
         IF(NCF.NE.0) CALL UCGRSS
C                     -----------
CE       R E A D   T E M P E R A T U R E   D A T A
CS       U L A Z N I   P O D A C I   O   T E M P E R A T U R A M A
C                       -----------
         IF(NTEMP.GT.0) CALL UCPOCT
C                       -----------
CE       R E A D   P R E S C R I B E D   D I S P L A C E M E N T S
CS       U C I T A V A N J E    Z A D A T I H    P O M E R A N J A
C                       -----------
         IF(NZADP.NE.0) CALL UCZADP
C                       -----------
         LMAX=LID
         LRAD=LID
      ENDIF
      RETURN
 1000 FORMAT(4I5,5X,9I5)
 4000 FORMAT(4I10,10X,9I10)
 1100 FORMAT(I5,3F10.0)
C-----------------------------------------------------------------------
 2010 FORMAT(///'1'///6X,
     1'P  O  D  A  C  I     O     O  P  T  E  R  E  C  E  N  J  I  M  A'
     1/6X,64('-'))
 2070 FORMAT(//////6X,
     1'P  O  D  S  T  R  U  K  T  U  R  A    B  R  O  J .... JPBR =',I5/
     16X,65('-'))
 2000 FORMAT(
     111X,'BROJ KONCENTRISANIH SILA I MOMENATA .............. NCF =',I9/
     116X,'EQ.0; NEMA KONCENTRISANIH SILA'///
     211X,'BROJ LINIJA POD PRITISKOM ....................... NPP2 =',I9/
     216X,'EQ.0; NEMA LINIJSKIH PRITISAKA'///
     211X,'BROJ POVRSINA POD PRITISKOM ..................... NPP3 =',I9/
     216X,'EQ.0; NEMA POVRSINSKIH PRITISAKA'///
     211X,'BROJ CVOROVA TANKOZ. GREDA POD PRITISKOM ........ NPGR =',I9/
     216X,'EQ.0; NEMA PRITISAKA KOD GREDA'///
C    211X,'BROJ IZOPARAMETARSKIH GREDA POD PRITISKOM ...... NPGRI =',I9/
C    216X,'EQ.0; NEMA PRITISAKA KOD IZOPARAMETARSKIH GREDA'///
     111X,'BROJ OSNOSIMETRICNIH LJUSKI POD PRITISKOM ....... NPLJ =',I9/
     116X,'EQ.0; NEMA PRITISAKA KOD OSNOSIMETRICNIH LJUSKI'///
     111X,'BROJ CVOROVA SA TEMPERATURAMA .................. NTEMP =',I9/
     116X,'LT.0; TEMPERATURE SE UCITAVAJU SA JEDINICE 56'/
     116X,'EQ.0; TEMPERATURE SE NE KORISTE U ANALIZI'///
     111X,'BROJ ZADATIH POMERANJA ......................... NZADP =',I9/
     116X,'EQ.0; NEMA ZADATIH POMERANJA'///
     111X,'BROJ ZAPREMINSKIH SILA ......................... INDZS =',I9/
     116X,'EQ.0; NEMA ZAPREMINSKIH SILA'///
     111X,'BROJ KORAKA SA FILTRACIONIM SILAMA SA DISKA ... ICERNE =',I9/
     116X,'EQ.0; NEMA FILTRACIONIH SILA')
 2170 FORMAT(//////6X,
     1'K  O  N  T  U  R  N  A      O  P  T  E  R  E  C  E  N  J  A'/
     16X,59('-'))
 2100 FORMAT(
     111X,'BROJ KONCENTRISANIH SILA I MOMENATA .............. NCF =',I9/
     116X,'EQ.0; NEMA KONCENTRISANIH SILA'///
     111X,'BROJ CVOROVA SA TEMPERATURAMA .................. NTEMP =',I9/
     116X,'LT.0; TEMPERATURE SE UCITAVAJU SA JEDINICE 56'/
     116X,'EQ.0; TEMPERATURE SE NE KORISTE U ANALIZI'///
     111X,'BROJ ZADATIH POMERANJA ......................... NZADP =',I9/
     116X,'EQ.0; NEMA ZADATIH POMERANJA')
 2200 FORMAT(6X,
     1'P O D A C I   O   Z A P R E M I N S K I M   S I L A M A'/
     16X,55('-')//
     111X,'BROJ VREMENSKE FUNKCIJE ZA ZAPREMINSKE SILE .... NVFUB =',I5/
     111X,'UBRZANJE U PRAVCU OSE - X .............. UBXYZ(1) =',1PD10.3/
     111X,'UBRZANJE U PRAVCU OSE - Y .............. UBXYZ(2) =',1PD10.3/
     111X,'UBRZANJE U PRAVCU OSE - Z .............. UBXYZ(3) =',1PD10.3)
C-----------------------------------------------------------------------
 6010 FORMAT(///'1'///6X,
     1'G E N E R A L    D A T A    A B O U T    L O A D S'/6X,50('-'))
 6070 FORMAT(//////6X,
     1'S U B S T R U C T U R E     N U M B E R ... JPBR=',I5/6X,55('-'))
 6000 FORMAT(
     111X,'NUMBER OF CONCENTRATED FORCES AND MOMENTS ........ NCF =',I9/
     116X,'EQ.0; NO CONCENTARTED FORCES'///
     211X,'NUMBER OF LINES UNDER PRESSURE .................. NPP2 =',I9/
     216X,'EQ.0; NO LINES UNDER PRESSURE'///
     211X,'NUMBER OF SURFACES UNDER PRESSURE ............... NPP3 =',I9/
     216X,'EQ.0; NO SURFACES UNDER PRESSURE'///
     211X,'NUMBER OF THIN-WALLED BEAM NODES UNDER PRESSURE . NPGR =',I9/
     216X,'EQ.0; NO THIN-WALLED BEAMS UNDER PRESSURE'///
     111X,'NUMBER OF AXISYMMETRIC SHELLS UNDER PRESSURE .... NPLJ =',I9/
     116X,'EQ.0; NO AXISYMMETRIC SHELLS UNDER PRESSURE'///
     111X,'NUMBER OF NODES WITH TEMPERATURE ............... NTEMP =',I9/
     116X,'LT.0; TEMPERATURES ARE READ FROM UNIT 56'/
     116X,'EQ.0; TEMPERATURES ARE NOT USED IN ANALYSIS'///
     111X,'NUMBER OF PRESCRIBED DISPLACEMENTS ............. NZADP =',I9/
     116X,'EQ.0; NO PRESCRIBED DISPLACEMENTS'///
     111X,'NUMBER OF BODY FORCES .......................... INDZS =',I9/
     116X,'EQ.0; NO BODY FORCES'///
     111X,'NUMBER OF STEPS FOR FILTRATION FORCES ......... ICERNE =',I9/
     116X,'EQ.0; NO FILTRATION FORCES')
 6170 FORMAT(//////6X,
     1'C  O  N  T  O  U  R  A  L      L  O  A  D  S'/6X,44('-'))
 6100 FORMAT(
     111X,'NUMBER OF CONCENTRATED FORCES AND MOMENTS ........ NCF =',I9/
     116X,'EQ.0; NO CONCENTARTED FORCES'///
     111X,'NUMBER OF NODES WITH TEMPERATURE ............... NTEMP =',I9/
     116X,'LT.0; TEMPERATURES ARE READ FROM UNIT 56'/
     116X,'EQ.0; TEMPERATURES ARE NOT USED IN ANALYSIS'///
     111X,'NUMBER OF PRESCRIBED DISPLACEMENTS ............. NZADP =',I9/
     116X,'EQ.0; NO PRESCRIBED DISPLACEMENTS')
 6200 FORMAT(6X,
     1'D A T A   A B O U T   B O D Y    F O R C E S'/
     16X,44('-')//
     111X,'TIME FUNCTION NUMBER ........................... NVFUB =',I5/
     111X,'ACCELERATION IN X DIRECTION ............ UBXYZ(1) =',1PD10.3/
     111X,'ACCELERATION IN Y DIRECTION ............ UBXYZ(2) =',1PD10.3/
     111X,'ACCELERATION IN Z DIRECTION ............ UBXYZ(3) =',1PD10.3)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UCGRSS
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        FORM POINTERS AND CALL ROUTINE FOR
CE.        READING CONCENTRATED LOADS DATA
CS    P R O G R A M
CS.        ZA FORMIRANJE REPERA I POZIVANJE PROGRAMA
CS.        ZA UCITAVANJE KONCENTRISANIH SILA
C .
CE.        NCF  - NUMBER OF CONCENTRATED FORCES 
CS.        NCF  - BROJ KONCENTRISANIH SILA
C .
CE.    POINTERS
CE.        LNFUJ  -  NUMBER OF EQUATIONS
CE.        LNFUG  -  NUMBER OF TIME FUNCTIONS
CE.        LFFUG  -  FUNCTION MULTIPLIER
CS.    R E P E R I
CS.        LNFUJ  -  BROJEVI JEDNACINA
CS.        LNFUG  -  BROJEVI VREMESKIH FUNKCIJA
CS.        LFFUG  -  FAKTORI MNOZENJA
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /DUPLAP/ IDVA
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /SOPSVR/ ISOPS,ISTYP,NSOPV,ISTSV,IPROV,IPROL
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /DINAMI/ IMASS,IDAMP,PIP,DIP,MDVI
      COMMON /EITEST/ VRKAS,FREKV,AMPLI
      COMMON /SRPSKI/ ISRPS
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UCGRSS'
      IF(NCF) 100,300,200
CE    HARMONIJSKE FUNKCIJE SILE
CS    HARMONIJSKE FUNKCIJE SILE
  100 CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*)  VRKAS,FREKV,AMPLI
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1100)  VRKAS,FREKV,AMPLI
      IF(NULAZ.NE.1.AND.NULAZ.NE.3) RETURN
      CALL WBROJK(KARTIC,1)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) VRKAS,FREKV,AMPLI
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) VRKAS,FREKV,AMPLI
      RETURN
CE    POINTERS FOR CONCENTRATED FORCES
CS    REPERI  ZA KONCENTRISANE  SILE
  200 LFFUG = LRAD
      NCF2=2*NCF
      LNFUG = LFFUG + NCF2*IDVA
      LNFUJ = LNFUG + NCF
      LMAX  = LNFUJ + NCF
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      CALL CLEAR(A(LFFUG),NCF2)
      CALL ICLEAR(A(LNFUG),NCF2)
      NII=NPI
      NAA=NPA
      NPP=NP
      IF(JPS.GT.1) THEN
         IF(JPBR.EQ.JPS1) THEN
            NII=NGI
            NAA=NGA
            NPP=NPG
         ELSE
            NPP=NP+NPK
         ENDIF
      ENDIF
      CALL FSPOLJ(A(LNFUJ),A(LNFUG),A(LFFUG),A(LID),A(LCORD),A(LELCV),
     1            NCF,NPP,ICVEL,NII,NAA)
      NPRO=LMAX-LRAD
      CALL DELJIV(NPRO,2,INDL)
      IF(INDL.EQ.1) NPRO=NPRO+1
      NPROS=NPRO+JEDN*IDVA
      IF(ISOPS.GT.0) NPROS=NPROS+JEDN*IDVA
      IF(ISOPS.EQ.0.AND.NDIN.GT.0.AND.MDVI.EQ.1) NPROS=NPROS+JEDN*IDVA
      IF(NRAD.LT.NPROS) NRAD=NPROS
      CALL UCELP(A(LIPODS),6)
C      WRITE(3,*) 'LMAX13',LMAX13
      CALL WRITDD(A(LFFUG),NPRO/IDVA,IPODS,LMAX13,LDUZI)
C      CALL IWRR(A(LNFUJ),NCF,'NFUJ')
C      CALL IWRR(A(LNFUG),NCF,'NFUG')
C      CALL WRR(A(LFFUG),NCF2,'FFUG')
      IF(MAX13.LT.LMAX13) MAX13=LMAX13
  300 RETURN
 1100 FORMAT(7F10.2)
C-----------------------------------------------------------------------
 2100 FORMAT(///' PARAMETRI HARMONIJSKE FUNKCIJE'/
     1'  X1=AMPLI*DSIN(2*PI*FREKV*VREME)'/
     1'  X2=AMPLI*DSIN(2*PI*FREKV*(VREME-VRKAS))'//
     1'  VREME KASNJENJA ZADNJIH TOCKOVA, BRZINA .... VRKAS =',1PD12.5//
     1'  FREKVENCIJA POBUDE NA TOCKOVIMA ............ FREKV =',1PD12.5//
     1'  AMPLITUDA POBUDNE HARMONIJSKE FUNKCIJE ..... AMPLI =',1PD12.5)
C-----------------------------------------------------------------------
 6100 FORMAT(///' PARAMETRI HARMONIJSKE FUNKCIJE'/
     1'  X1=AMPLI*DSIN(2*PI*FREKV*VREME)'/
     1'  X2=AMPLI*DSIN(2*PI*FREKV*(VREME-VRKAS))'//
     1'  VREME KASNJENJA ZADNJIH TOCKOVA, BRZINA .... VRKAS =',1PD12.5//
     1'  FREKVENCIJA POBUDE NA TOCKOVIMA ............ FREKV =',1PD12.5//
     1'  AMPLITUDA POBUDNE HARMONIJSKE FUNKCIJE ..... AMPLI =',1PD12.5)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE FSPOLJ(NFUJ,NFUG,FFUG,ID,CORD,NELCV,NCF,NPP,ICVEL,NPI,
     1                  NPA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO READ CONCENTRATED FORCES
CS.    P R O G R A M
CS.        ZA UCITAVANJE KONCENTRISANIH SILA
C .
CE.    I=1,NCF   (NCF - NUMBER OF CONCENTRATED FORCES)
CS.    I=1,NCF   (NCF - BROJ KONCENTRISANIH SILA)
C .
CE.         NFUJ(I)  -  NUMBER OF EQUATION
CE.         NFUG(I)  -  NUMBER OF TIME FUNCTION
CE.         FFUG(I,1)-  FUNCTION MULTIPLIER
CE.         FFUG(I,2)-  SHIFT
CS.         NFUJ(I)  -  BROJ JEDNACINE
CS.         NFUG(I)  -  BROJ VREMENSKE FUNKCIJE
CS.         FFUG(I,1)-  FAKTOR MNOZENJA
CS.         FFUG(I,2)-  KASNJENJE
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      include 'paka.inc'
      
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /MPOINC/ MMP,NMPC,NEZAV,LCMPC,LMPC,NEZA1
      COMMON /AXISYM/ INDAX
      COMMON /SRPSKI/ ISRPS
      DIMENSION NFUJ(*),NFUG(*),FFUG(NCF,*),
     +          ID(NPP,*),NELCV(*),CORD(NPP,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' FSPOLJ'
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2010)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6010)
      ENDIF
      I = 0
      NAUT=0
    5 I=I+1
      CALL ISPITA(ACOZ)
      IF(I.EQ.1) KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) NN,IP,NC,FAK,KORC,FPOM
      IF(INDFOR.EQ.2.and.ind56.eq.0)
     1READ(ACOZ,1000) NN,IP,NC,FAK,KORC,FPOM
      IF(INDFOR.EQ.2.and.ind56.eq.1)
     1READ(ACOZ,4000) NN,IP,NC,FAK,KORC,FPOM
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)
     1WRITE(IZLAZ,5020) NN,IP,NC,FAK,KORC,FPOM
      IF(ICVEL.EQ.0) THEN
         NI=NN
         IF(NN.LE.0.OR.NN.GT.NPP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
            STOP ' PROGRAM STOP - PAK051 - FSPOLJ'
         ENDIF
      ELSE
         N=NN-NPI+1
         NI=NELCV(N)
         IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
            STOP ' PROGRAM STOP - PAK051 - FSPOLJ'
         ENDIF
      ENDIF
      IF(NC.LE.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200)
         STOP ' PROGRAM STOP - PAK051 - FSPOLJ'
      ENDIF
      IF(IP.LT.1.OR.IP.GT.6) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2300)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6300)
         STOP ' PROGRAM STOP - PAK051 - FSPOLJ'
      ENDIF
      NJ = ID(NI,IP)
      IF(NJ.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NN,IP
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NN,IP
      ENDIF
      IF(NJ.GE.0) THEN
         NFUJ(I) = NJ
         NFUG(I) = NC
         FFUG(I,1) = FAK
         FFUG(I,2) = FPOM
CE       AXISYMMETRIC LOAD
CS       SLUCAJ OSNOSIMETRICNOG OPTERECENJA
         IF(INDAX.EQ.1) THEN
            IF(DABS(CORD(NI,1)).GT.1.D-6) THEN
               FFUG(I,1) = FAK * CORD(NI,1)
            ELSE
               FFUG(I,1) = FAK/8.D0/ATAN(1.D0)
            ENDIF
C            WRITE(IZLAZ,*) NN,IP,NC,FFUG(I,1),FAK,CORD(NI,1)
         ENDIF
      ELSE
C PROVERI ZA POVEZANA POMERANJA
         ND=1
         CALL SILPAK(FFUG,FAK,NJ,ND,A(LCMPC),A(LMPC))
      ENDIF
      IF(NAUT.GT.0) GO TO 30
      IF(KORC.GT.0) GO TO 20
      IF(I.EQ.NCF) GO TO 50
      GO TO 5
C
   20 NAUT=1
      N1  =NN
      FAK1=FAK
      KORA=KORC
      GO TO 5
C
CE    AUTOMATIC GENERATE DATA BETWEEN NODES N1 AND N2
CS    AUTOMATSKO GENERISANJE PODATAKA IZMEDJU CVOROVA N1 I N2
C
   30 N2    = NN
      FAK2  = FAK
      RKORA = KORA
      RN1N2 = N2-N1
      DD    = RKORA/RN1N2
      DF1F2 = DD*(FAK2-FAK1)
      IAUT  = (N2-N1)/KORA-1
      IA    = I+IAUT
      NFUJ(IA) = NFUJ(I)
      NFUG(IA) = NFUG(I)
      FFUG(IA,1) = FFUG(I,1)
      FFUG(IA,2) = FFUG(I,2)
      NN = N1
      DO 34 J=1,IAUT
         NN=NN+KORA
         IF(ICVEL.EQ.0) THEN
            NI=NN
            IF(NN.LE.0.OR.NN.GT.NPP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK051 - FSPOLJ'
            ENDIF
         ELSE
            N=NN-NPI+1
            NI=NELCV(N)
            IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK051 - FSPOLJ'
            ENDIF
         ENDIF
         NJ = ID(NI,IP)
         IF(NJ.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NN,IP
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NN,IP
         ENDIF
C PROVERI ZA POVEZANA POMERANJA
         IM1=I-1
         NFUJ(I) = NJ
         NFUG(I) = NFUG(IM1)
         FFUG(I,1) = FFUG(IM1,1)+DF1F2
         FFUG(I,2) = FFUG(IM1,2)
         I=I+1
   34 CONTINUE
      IF(I.EQ.NCF) GO TO 50
      NAUT=0
      IF(KORC.EQ.0) GO TO 5
      KORA=KORC
      NAUT=1
      N1=N2
      FAK1=FAK2
      GO TO 5
C
CE    PRINT READ AND GENERATE NODAL DATA
CS    STAMPANJE UCITANIH I GENERISANIH PODATAKA
C
   50 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
         CALL WBROJK(KARTI,0)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040)
         DO 70 I=1,NCF
            NJ = NFUJ(I)
            IF(NJ.EQ.0) GO TO 70
            NC = NFUG(I)
            FAK = FFUG(I,1)
            FPOM= FFUG(I,2)
            WRITE(IZLAZ,5050) NJ,NC,FAK,FPOM
   70    CONTINUE
      ENDIF
      RETURN
 1000 FORMAT(3I5,F10.0,I5,F10.0)
 4000 FORMAT(I10,I5,I5,F10.0,I5,F10.0)
 5020 FORMAT(5X,I5,7X,I5,7X,I5,7X,1PD12.5,I8,5X,1PD12.5)
 5050 FORMAT(6X,I8,17X,I5,13X,1PD12.5,5X,1PD12.5)
C-----------------------------------------------------------------------
 2000 FORMAT(///'1'/6X,'P O D A C I    O    C V O R N I M    S I L A M A
     1'/6X,48('-'))
 2010 FORMAT(//////6X,'U C I T A N I     P O D A C I'///6X,'CVOR BR.   S
     1TEP.SLOB.   FUNK.BR.   FAKTOR MNOZ.   KORAK GEN.  KASNJENJE')
 2030 FORMAT(' ZA CVOR N =',I10,' U PRAVCU',I2,' POSTOJI OGRANICENJE,',
     1' UCITANA SILA SE IGNORISE')
 2040 FORMAT(6X,
     1'G E N E R I S A N I     P O D A C I'///6X,'JEDNACINA BROJ',
     15X,'BROJ VREM. FUNKCIJE',5X,'FAKTOR MNOZENJA    KASNJENJE')
 2100 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O SILAMA'/
     1' CVOR',I10,' NE POSTOJI'//' PROGRAM STOP - PAK051 - FSPOLJ'//)
 2200 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O SILAMA'/
     1' BROJ FUNKCIJE NC =',I10//' PROGRAM STOP - PAK051 - FSPOLJ'//)
 2300 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O SILAMA'/
     1' INDIK. PRAVCA IP =',I10//' PROGRAM STOP - PAK051 - FSPOLJ'//)
C-----------------------------------------------------------------------
 6000 FORMAT(///'1'/6X,'C O N C E N T R A T E D    L O A D S    D A T A'
     1/6X,47('-'))
 6010 FORMAT(//////6X,'I N P U T      D A T A'///6X,'NODE NUMBER   DOF  
     1 FUNCTION NU.   PROP. FACTOR    STEP GEN.    SHIFT')
 6030 FORMAT(' NODE,  N =',I10,' IN DIRECTION',I2,' IS FIXED,',
     1' READ LOAD IS IGNORED')
 6040 FORMAT(6X,
     1'G E N E R A T E D     D A T A'///6X,'EQUATIONS NUMBER',
     13X,'TIME FUNCTION NUMBER',3X,'MULTIPL. FACTOR       SHIFT')
 6100 FORMAT(//' ERROR IN INPUT DATA ABOUT CONCENTRATED LOADS'/
     1' NODE',I10,' NOT EXIST'//' PROGRAM STOP - PAK051 - FSPOLJ'//)
 6200 FORMAT(//' ERROR IN INPUT DATA ABOUT CONCENTRATED LOADS'/
     1' NO. FUNCTION NC =',I10//' PROGRAM STOP - PAK051 - FSPOLJ'//)
 6300 FORMAT(//' ERROR IN INPUT DATA ABOUT CONCENTRATED LOADS'/
     1' DOF.  IP =',I10//' PROGRAM STOP - PAK051 - FSPOLJ'//)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UCZADP
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO FORM POINTERS AND CALL ROUTINE FOR  READING PRESCRIBED
CE.        DISPLACEMENTS
CS.    P R O G R A M
CS.        ZA FORMIRANJE REPERA I POZIVANJE PROGRAMA
CS.        ZA UCITAVANJE ZADATIH POMERANJA
C .
CE.        NZADP - NUMBER OF PRESCRIBED DISPLACEMENTS
CS.        NZADP - BROJ ZADATIH POMERANJA
C .
CE.    POINTERS
CE.        LNZADJ -  NUMBER OF EQUATIONS WITH PRESCRIBED DISPLACEMENTS
CE.        LNZADF -  NUMBER OF TIME FUNCTIONS
CE.        LZADFM -  MULTIPLICATION FACTORS
CS.    R E P E R I
CS.        LNZADJ -  BROJEVI JEDNACINA SA ZADATIM POMERANJIMA
CS.        LNZADF -  BROJEVI VREMESKIH FUNKCIJA
CS.        LZADFM -  FAKTORI MNOZENJA
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /DUPLAP/ IDVA
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UCZADP'
CE    POINTERS FOR PRESCRIBED DISPLACEMENTS
CS    REPERI ZA ZADATA POMERANJA
      LZADFM = LRAD
      LNZADF = LZADFM + NZADP*IDVA
      LNZADJ = LNZADF + NZADP
      LMAX   = LNZADJ + NZADP
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      CALL CLEAR(A(LZADFM),NZADP)
      CALL ICLEAR(A(LNZADF),2*NZADP)
      NII=NPI
      NAA=NPA
      NPP=NP
      IF(JPS.GT.1) THEN
         IF(JPBR.EQ.JPS1) THEN
            NII=NGI
            NAA=NGA
            NPP=NPG
         ELSE
            NPP=NP+NPK
         ENDIF
      ENDIF
      CALL ZADPOM(A(LNZADJ),A(LNZADF),A(LZADFM),A(LID),A(LELCV),
     1            NZADP,NPP,ICVEL,NII,NAA)
      NPRO=LMAX-LRAD
      CALL DELJIV(NPRO,2,INDL)
      IF(INDL.EQ.1) NPRO=NPRO+1
      NPROS=NPRO+JEDN*IDVA
      IF(NRAD.LT.NPROS) NRAD=NPROS
      CALL UCELP(A(LIPODS),11)
      CALL WRITDD(A(LZADFM),NPRO/IDVA,IPODS,LMAX13,LDUZI)
      IF(MAX13.LT.LMAX13) MAX13=LMAX13
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE ZADPOM(NZADJ,NZADF,ZADFM,ID,NELCV,NZADP,NPP,ICVEL,NPI,
     1NPA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO READ PRESCRIBED DISPLACEMENTS
CS.    P R O G R A M
CS.        ZA UCITAVANJE ZADATIH POMERANJA
C .
CE.    I=1,NZADP  (NZADP - NUMBER OF PRESCRIBED DISPLACEMENTS)
CS.    I=1,NZADP  (NZADP - BROJ ZADATIH POMERANJA)
C .
CE.         NZADJ(I) -  NUMBER OF EQUATION
CE.         NZADF(I) -  NUMBER OF TIME FUNCTION
CE.         ZADFM(I) -  FUNCTION MULTIPLIER
CS.         NZADJ(I) -  BROJ JEDNACINE
CS.         NZADF(I) -  BROJ VREMENSKE FUNKCIJE
CS.         ZADFM(I) -  FAKTOR MNOZENJA
C .
C ......................................................................
C
      include 'paka.inc'
      CHARACTER*250 ACOZ
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      DIMENSION NZADJ(*),NZADF(*),ZADFM(*),ID(NPP,*),NELCV(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' ZADPOM'
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2010)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6010)
      ENDIF
      I = 0
      NAUT=0
    5 I=I+1
      CALL ISPITA(ACOZ)
      IF(I.EQ.1) KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) NN,IP,NC,FAK,KORC
      IF(INDFOR.EQ.2.and.ind56.eq.0)
     1READ(ACOZ,1000) NN,IP,NC,FAK,KORC
      IF(INDFOR.EQ.2.and.ind56.eq.1)
     1READ(ACOZ,4000) NN,IP,NC,FAK,KORC
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)
     1WRITE(IZLAZ,5020) NN,IP,NC,FAK,KORC
      IF(ICVEL.EQ.0) THEN
         NI=NN
         IF(NN.LE.0.OR.NN.GT.NPP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
            STOP ' PROGRAM STOP - PAK051 - ZADPOM'
         ENDIF
      ELSE
         N=NN-NPI+1
         NI=NELCV(N)
         IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
            STOP ' PROGRAM STOP - PAK051 - ZADPOM'
         ENDIF
      ENDIF
      IF(NC.LE.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200)
         STOP ' PROGRAM STOP - PAK051 - ZADPOM'
      ENDIF
      IF(IP.LT.1.OR.IP.GT.6) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2300)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6300)
         STOP ' PROGRAM STOP - PAK051 - ZADPOM'
      ENDIF
      NJ = ID(NI,IP)
      IF(NJ.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NN,IP
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NN,IP
      ENDIF
C     DOGRADITI ZA POVEZANA POMERANJA
      IF(NJ.GE.0) THEN
         NZADJ(I) = NJ
         NZADF(I) = NC
         ZADFM(I) = FAK
C      ELSE
C         ND=1
C         CALL SILPAK(FFUG,FAK,NJ,ND,A(LCMPC),A(LMPC))
      ENDIF
      IF(NAUT.GT.0) GO TO 30
      IF(KORC.GT.0) GO TO 20
      IF(I.EQ.NZADP) GO TO 50
      GO TO 5
C
   20 NAUT=1
      N1  =NN
      FAK1=FAK
      KORA=KORC
      GO TO 5
C
CE    AUTOMATIC GENERATED DATA BETWEEN NODES N1 AND N2
CS    AUTOMATSKO GENERISANJE PODATAKA IZMEDJU CVOROVA N1 I N2
C
   30 N2    = NN
      FAK2  = FAK
      RKORA = KORA
      RN1N2 = N2-N1
      DD    = RKORA/RN1N2
      DF1F2 = DD*(FAK2-FAK1)
      IAUT  = (N2-N1)/KORA-1
      IA    = I+IAUT
      NZADJ(IA) = NZADJ(I)
      NZADF(IA) = NZADF(I)
      ZADFM(IA) = ZADFM(I)
      NN = N1
      DO 34 J=1,IAUT
         NN=NN+KORA
         IF(ICVEL.EQ.0) THEN
            NI=NN
            IF(NN.LE.0.OR.NN.GT.NPP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK051 - ZADPOM'
            ENDIF
         ELSE
            N=NN-NPI+1
            NI=NELCV(N)
            IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK051 - ZADPOM'
            ENDIF
         ENDIF
         NJ = ID(NI,IP)
         IF(NJ.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NN,IP
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NN,IP
         ENDIF
C PROVERI ZA POVEZANA POMERANJA
         NZADJ(I) = NJ
         NZADF(I) = NZADF(I-1)
         ZADFM(I) = ZADFM(I-1)+DF1F2
         I=I+1
   34 CONTINUE
      IF(I.EQ.NZADP) GO TO 50
      NAUT=0
      IF(KORC.EQ.0) GO TO 5
      KORA=KORC
      NAUT=1
      N1=N2
      FAK1=FAK2
      GO TO 5
C
CE    PRINT READ AND GENERATE NODAL DATA
CS    STAMPANJE UCITANIH I GENERISANIH PODATAKA
C
   50 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
         CALL WBROJK(KARTI,0)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040)
         DO 70 I=1,NZADP
            NJ=NZADJ(I)
C PROVERI ZA POVEZANA POMERANJA
            IF(NJ.EQ.0) GO TO 70
            NC = NZADF(I)
            FAK = ZADFM(I)
            WRITE(IZLAZ,5050) NJ,NC,FAK
   70    CONTINUE
      ENDIF
      RETURN
 1000 FORMAT(3I5,F10.2,I5)
 4000 FORMAT(I10,2I5,F10.2,I5)
 5020 FORMAT(10X,I5,7X,I5,7X,I5,7X,1PD12.5,I8)
 5050 FORMAT(11X,I8,17X,I5,13X,1PD15.8)
C-----------------------------------------------------------------------
 2000 FORMAT(///'1'/6X,'P O D A C I    O    Z A D A T I M    P O M E R A
     1 N J I M A'/6X,58('-'))
 2010 FORMAT(//////6X,'U C I T A N I     P O D A C I'///11X,
     1'CVOR BR.   STEP.SLOB.   FUNK.BR.   FAKTOR MNOZ.   KORAK GEN.')
 2030 FORMAT(' ZA CVOR N =',I10,' U PRAVCU',I2,' POSTOJI OGRANICENJE,',
     1' UCITANO POMERANJE SE IGNORISE')
 2040 FORMAT(6X,
     1'G E N E R I S A N I     P O D A C I'///11X,'JEDNACINA BROJ',
     15X,'BROJ VREM. FUNKCIJE',5X,'FAKTOR MNOZENJA')
 2100 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O ZADATIM POMERANJ
     1IMA'/' CVOR',I9,' NE POSTOJI'//' PROGRAM STOP - PAK051 - ZADPOM'/)
 2200 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O ZADATIM POMERANJ
     1IMA'/' BROJ FUNKCIJE NC =',I9//' PROGRAM STOP - PAK051 - ZADPOM'/)
 2300 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O ZADATIM POMERANJ
     1IMA'/' INDIK. PRAVCA IP =',I9//' PROGRAM STOP - PAK051 - ZADPOM'/)
C-----------------------------------------------------------------------
 6000 FORMAT(///'1'/6X,'D A T A    F O R   P R E S C R I B E D    D I S
     1P L A C E M E N T S'/6X,67('-'))
 6010 FORMAT(//////6X,'I N P U T    D A T A'///11X,
     1'NODE NO.      DOF       FUNC.NO.   PROP. FACTOR   INCR. GEN.')
 6030 FORMAT(' NODE N =',I9,' IN DIRECTION',I2,' IS FIXED,',
     1' READING PRESCRIBED DISPLACEMENT IS IGNORED')
 6040 FORMAT(6X,
     1'G E N E R A T E D     D A T A'///11X,'EQUATIONS NO.',
     15X,'TIME FUNCTION NO   ',5X,'MULTIPL. FACTOR')
 6100 FORMAT(//' ERROR IN INPUT DATA ABOUT PRESCRIBED DISPLACEMENTS'/
     1' NODE',I9,' NOT EXIST'//' PROGRAM STOP - PAK051 - ZADPOM'//)
 6200 FORMAT(//' ERROR IN INPUT DATA ABOUT PRESCRIBED DISPLACEMENTS'/
     1' NO. FUNCTION NC =',I9//' PROGRAM STOP - PAK051 - ZADPOM'//)
 6300 FORMAT(//' ERROR IN INPUT DATA ABOUT PRESCRIBED DISPLACEMENTS'/
     1' DOF.  IP =',I9//' PROGRAM STOP - PAK051 - ZADPOM'//)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UCPOCT
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO FORM POINTERS AND CALL ROUTINE FOR READING
CE.        DATA FOR TEMPERATURE
CS.    P R O G R A M
CS.        ZA FORMIRANJE REPERA I POZIVANJE PROGRAMA
CS.        ZA UCITAVANJE PODATAKA O TEMPERATURAMA
C .
CE.        NTEMP - NUMBER OF NODAL POINTS WITH TEMPERATURE
CS.        NTEMP - BROJ CVORNIH TACAKA SA TEMPERATURAMA
C .
CE.    POINTERS
CE.        LNFUJ -  NUMBER OF NODES
CE.        LNFUG -  NUMBER OF TIME FUNCTIONS
CE.        LFFUG -  MULTIPLICATION FACTORS
CS.    R E P E R I
CS.        LNFUJ -  BROJEVI CVOROVA
CS.        LNFUG -  BROJEVI VREMESKIH FUNKCIJA
CS.        LFFUG -  FAKTORI MNOZENJA
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UCPOCT'
CE    POINTERS FOR PRESCRIBED TEMPERATURES
CS    REPERI ZA ZADATE TEMPERATURE
      LFFUG = LRAD
      LNFUG = LFFUG + NTEMP*IDVA
      LNFUJ = LNFUG + NTEMP
      LMAX  = LNFUJ + NTEMP
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      CALL CLEAR(A(LFFUG),NTEMP)
      CALL ICLEAR(A(LNFUG),2*NTEMP)
      NII=NPI
      NAA=NPA
      NPP=NP
      IF(JPS.GT.1) THEN
         IF(JPBR.EQ.JPS1) THEN
            NII=NGI
            NAA=NGA
            NPP=NPG
         ELSE
            NPP=NP+NPK
         ENDIF
      ENDIF
      CALL UCTEMP(A(LNFUJ),A(LNFUG),A(LFFUG),A(LELCV),A(LCVEL),
     1            NTEMP,NPP,ICVEL,NII,NAA)
      NPRO=LMAX-LRAD
      CALL DELJIV(NPRO,2,INDL)
      IF(INDL.EQ.1) NPRO=NPRO+1
      NPROS=NPRO+NPP*IDVA
      IF(NRAD.LT.NPROS) NRAD=NPROS
      CALL UCELP(A(LIPODS),7)
      CALL WRITDD(A(LFFUG),NPRO/IDVA,IPODS,LMAX13,LDUZI)
      IF(MAX13.LT.LMAX13) MAX13=LMAX13
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UCTEMP(NFUJ,NFUG,FFUG,NELCV,NCVEL,NTEMP,NPP,ICVEL,NPI,
     1NPA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO READ NODAL TEMPERATURES
CS.    P R O G R A M
CS.        ZA UCITAVANJE CVORNIH TEMPERATURAMA
C .
CE.    I=1,NTEMP   (NTEMP  - NUMBER OF NODAL POINTS WITH TEMPERATURES)
CS.    I=1,NTEMP   (NTEMP  - BROJ CVOROVA SA TEMPERATURAMA)
C .
CE.         NFUJ(I)  -  NO. NODE
CE.         NFUG(I)  -  NO. TIME FUNCTION
CE.         FFUG(I)  -  FACTOR OF MULTIPLICATION
CS.         NFUJ(I)  -  BROJ CVORA
CS.         NFUG(I)  -  BROJ VREMENSKE FUNKCIJE
CS.         FFUG(I)  -  FAKTOR MNOZENJA
C .
C ......................................................................
C
      include 'paka.inc'
      CHARACTER*250 ACOZ
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      DIMENSION NFUJ(*),NFUG(*),FFUG(*),NELCV(*),NCVEL(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UCTEMP'
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2010)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6010)
      ENDIF
      I = 0
      NAUT=0
    5 I=I+1
      CALL ISPITA(ACOZ)
      IF(I.EQ.1) KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) NN,NC,FAK,KORC
      IF(INDFOR.EQ.2.and.ind56.eq.0)
     1READ(ACOZ,1000) NN,NC,FAK,KORC
      IF(INDFOR.EQ.2.and.ind56.eq.1)
     1READ(ACOZ,4000) NN,NC,FAK,KORC
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)
     1WRITE(IZLAZ,5020) NN,NC,FAK,KORC
      IF(ICVEL.EQ.0) THEN
         NI=NN
         IF(NN.LE.0.OR.NN.GT.NPP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
            STOP ' PROGRAM STOP - PAK051 - UCTEMP'
         ENDIF
      ELSE
         N=NN-NPI+1
         NI=NELCV(N)
         IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
            STOP ' PROGRAM STOP - PAK051 - UCTEMP'
         ENDIF
      ENDIF
      IF(NC.LE.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200)
         STOP ' PROGRAM STOP - PAK051 - UCTEMP'
      ENDIF
      NFUJ(I) = NI
      NFUG(I) = NC
      FFUG(I) = FAK
      IF(NAUT.GT.0) GO TO 30
      IF(KORC.GT.0) GO TO 20
      IF(I.EQ.NTEMP) GO TO 50
      GO TO 5
C
   20 NAUT=1
      N1  =NN
      FAK1=FAK
      KORA=KORC
      GO TO 5
C
CE    AUTOMATIC GENERATION DATA BETWEEN N1 AND N2
CS    AUTOMATSKO GENERISANJE PODATAKA IZMEDJU CVOROVA N1 I N2
C
   30 N2    = NN
      FAK2  = FAK
      RKORA = KORA
      RN1N2 = N2-N1
      DD    = RKORA/RN1N2
      DF1F2 = DD*(FAK2-FAK1)
      IAUT  = (N2-N1)/KORA-1
      IA    = I+IAUT
      NFUJ(IA) = NFUJ(I)
      NFUG(IA) = NFUG(I)
      FFUG(IA) = FFUG(I)
      NN = N1
      DO 34 J=1,IAUT
         NN=NN+KORA
         IF(ICVEL.EQ.0) THEN
            NI=NN
            IF(NN.LE.0.OR.NN.GT.NPP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK051 - UCTEMP'
            ENDIF
         ELSE
            N=NN-NPI+1
            NI=NELCV(N)
            IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK051 - UCTEMP'
            ENDIF
         ENDIF
         NFUJ(I) = NI
         NFUG(I) = NFUG(I-1)
         FFUG(I) = FFUG(I-1)+DF1F2
         I=I+1
   34 CONTINUE
      IF(I.EQ.NTEMP) GO TO 50
      NAUT=0
      IF(KORC.EQ.0) GO TO 5
      KORA=KORC
      NAUT=1
      N1=N2
      FAK1=FAK2
      GO TO 5
C
CE    PRINT READ AND GENERATED NODAL DATA
CS    STAMPANJE UCITANIH I GENERISANIH PODATAKA
C
   50 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
         CALL WBROJK(KARTI,0)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040)
         DO 70 I=1,NTEMP
            NI = NFUJ(I)
            IF(ICVEL.EQ.0) N = NI
            IF(ICVEL.GT.0) N = NCVEL(NI)
            NC = NFUG(I)
            FAK = FFUG(I)
            WRITE(IZLAZ,5050) N,NC,FAK
   70    CONTINUE
      ENDIF
      RETURN
 1000 FORMAT(2I5,F10.0,I5)
 4000 FORMAT(I10,I5,F10.0,I5)
 5020 FORMAT(10X,I10,7X,I5,7X,1PD12.5,I8)
 5050 FORMAT(11X,I10,15X,I5,13X,1PD15.8)
C-----------------------------------------------------------------------
 2000 FORMAT(///'1'/6X,'P O D A C I    O    C V O R N I M    T E M P E R
     1 A T U R A M A'/6X,62('-'))
 2010 FORMAT(//////6X,'U C I T A N I    P O D A C I'///11X,
     1'CVOR BR.    FUNK.BR.   FAKTOR MNOZ.   KORAK GEN.')
 2040 FORMAT(6X,
     1'G E N E R I S A N I    P O D A C I'///11X,'CVOR BROJ',5X,
     1'BROJ VREM. FUNKCIJE',5X,'FAKTOR MNOZENJA')
 2100 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O TEMPERATURAMA'/
     1' CVOR',I10,' NE POSTOJI'//' PROGRAM STOP - PAK051 - UCTEMP'//)
 2200 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O TEMPERATURAMA'/
     1' BROJ FUNKCIJE NC =',I10//' PROGRAM STOP - PAK051 - UCTEMP'/)
C-----------------------------------------------------------------------
 6000 FORMAT(///'1'/6X,'D A T A    A B O U T    N O D A L    T E M P E R
     1 A T U R E S'/6X,60('-'))
 6010 FORMAT(//////6X,'I N P U T    D A T A'///11X,
     1'NODE NO.    FUNC.NO.   MULT. FACTOR   INCR. GEN.')
 6040 FORMAT(6X,
     1'G E N E R A T E D    D A T A'///11X,'NODE NO. ',5X,
     1'TIME FUNCTION NO.  ',5X,'MULTIPL. FACTOR')
 6100 FORMAT(//' ERROR IN INPUT DATA ABOUT TEMPERATURES'/
     1' NODE',I10,' NOT EXIST'//' PROGRAM STOP - PAK051 - UCTEMP'//)
 6200 FORMAT(//' ERROR IN INPUT DATA ABOUT TEMPERATURES'/
     1' NO. FUNCTION NC =',I10//' PROGRAM STOP - PAK051 - UCTEMP'//)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UCGRP2
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C .......................................................................
C .
CE.   P R O G R A M
CE.       TO FORM POINTERS FOR SURFACE LOADING OF 2/D ELEMENTS
CS.   P R O G R A M
CS.       ZA FORMIRANJE REPERA ZA PRITISKE NA GRANICI 2/D ELEMENATA
C .
C .......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /DINAMI/ IMASS,IDAMP,PIP,DIP,MDVI
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /SOPSVR/ ISOPS,ISTYP,NSOPV,ISTSV,IPROV,IPROL
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /PRIT2D/ LFAKP,LTHICV,LITIPE,LNFUN,LIPRAV,LNODPR,ISRBA
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UCGRP2'
      LFAKP = LRAD
      LTHICV = LFAKP + NPP2*2*IDVA
      LITIPE = LTHICV + NPP2*IDVA
      LNFUN = LITIPE + NPP2
      LIPRAV = LNFUN + NPP2
      LNODPR = LIPRAV + NPP2
      LMAX = LNODPR + NPP2*3
      IF(ISOPS.GT.0) LMAX=LMAX+JEDN*IDVA
      IF(NDIN.EQ.0) GO TO 10
      IF(MDVI.EQ.1.AND.ISOPS.EQ.0) LMAX=LMAX+JEDN*IDVA
   10 IF(LMAX.GT.MTOT) CALL ERROR(1)
C
CS    POZIVANJE PROGRAMA ZA ULAZNE PODATKE  O  2/D PRITISCIMA
CE    CALL ROUTINE FOR INPUT DATA ABOUT 2/D PRESSURES
C
      CALL PSPOLJ(A(LITIPE),A(LNFUN),A(LIPRAV),A(LFAKP),A(LTHICV),
     1            A(LNODPR),NPP2,NP,A(LID),A(LELCV),ICVEL,NPI,NPA,ISRBA)
      ISRBA=0
      IF(ICVEL.EQ.1) CALL VEZACE(A(LNODPR),A(LELCV),NPP2,3)
      NPROS=LMAX-LRAD
      IF(NRAD.LT.NPROS) NRAD=NPROS
      CALL UCELP(A(LIPODS),8)
      CALL WRITDD(A(LFAKP),NPP2*3,IPODS,LMAX13,LDUZI)
      CALL IWRITD(A(LITIPE),NPP2*6,IPODS,LMAX13,LDUZI)
      IF(MAX13.LT.LMAX13) MAX13=LMAX13
      IF(ISRBA.EQ.1) THEN
         IF(JPS.GT.1) STOP ' NE MOZE (ISRBA.EQ.1) I PODSTRUKTURE'
         IF(ICVEL.EQ.1) STOP ' NE MOZE (ISRBA.EQ.1) I SLOB. NUMERACIJA'
         CALL DELJIV(LMAX,2,INDL)
         IF(INDL.EQ.0) LMAX=LMAX+1
         LRAD=LMAX
      ENDIF
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE PSPOLJ(ITIPE,NFUN,IPRAV,FAKP,THICV,NODPR,NPP,
     1                  NP,ID,NELCV,ICVEL,NPI,NPA,ISRBA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C .......................................................................
C .
CE.   P R O G R A M
CE.       TO READING INPUT DATA ABOUT SURFACE LOADING FOR 2/D ELEMENTS
CS.   P R O G R A M
CS.       ZA UCITAVANJE ULAZNIH PODATAKA O POVRSINSKIM PRITISCIMA 
CS.       NA GRANICI 2/D ELEMENTA
C .
C .......................................................................
C
      include 'paka.inc'
      CHARACTER*250 ACOZ
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      DIMENSION ITIPE(*),NFUN(*),IPRAV(*),FAKP(NPP,*),THICV(*),
     1          NODPR(NPP,*),ID(NP,*),NELCV(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' PSPOLJ'
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2010)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6010)
      ENDIF
      I = 0
      NAUT=0
    5 I = I + 1
      CALL ISPITA(ACOZ)
      IF(I.EQ.1) KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) ITIPE(I),NFUN(I),IPRAV(I),(FAKP(I,J),J=1,2),       
     1THICV(I),KORC
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) ITIPE(I),NFUN(I),IPRAV(I),(FAKP(I,J),J=1,2),     
     1THICV(I),KORC
      IF(IPRAV(I).LT.0) ISRBA=1
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) (NODPR(I,J),J=1,3)
      IF(INDFOR.EQ.2.and.ind56.eq.0)
     1READ(ACOZ,1000) (NODPR(I,J),J=1,3)
      IF(INDFOR.EQ.2.and.ind56.eq.1)
     1READ(ACOZ,4000) (NODPR(I,J),J=1,3)
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)
     1WRITE(IZLAZ,5020) (NODPR(I,J),J=1,3),
     1ITIPE(I),NFUN(I),IPRAV(I),(FAKP(I,J),J=1,2),THICV(I),KORC
      IF(ITIPE(I).EQ.1.AND.IPRAV(I).EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2410) ITIPE(I),IPRAV(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6410) ITIPE(I),IPRAV(I)
         STOP ' PROGRAM STOP - PAK051 - PSPOLJ'
      ENDIF
      IF(ITIPE(I).LT.0.OR.ITIPE(I).GT.4) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2400) ITIPE(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6400) ITIPE(I)
         STOP ' PROGRAM STOP - PAK051 - PSPOLJ'
      ENDIF
      IF(NFUN(I).LE.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200) NFUN(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200) NFUN(I)
         STOP ' PROGRAM STOP - PAK051 - PSPOLJ'
      ENDIF
      IP=IPRAV(I)
      IJ=1
      IF(IP.NE.1) IJ=2
      IF(IP.EQ.3) IJ=3
      IJ1=1
      IF(IP.GT.0) IJ1=IP
      IF(IP.LT.-1.OR.IP.GT.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2300) IPRAV(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6300) IPRAV(I)
         STOP ' PROGRAM STOP - PAK051 - PSPOLJ'
      ENDIF
      DO 10 J=1,3
         NN=NODPR(I,J)
         IF(J.EQ.3.AND.NN.EQ.0) GO TO 10
         IF(ICVEL.EQ.0) THEN
            NI=NN
            IF(NN.LE.0.OR.NN.GT.NP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK051 - PSPOLJ'
            ENDIF
         ELSE
            N=NN-NPI+1
            NI=NELCV(N)
            IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK051 - PSPOLJ'
            ENDIF
         ENDIF
         DO 11 JI=IJ1,IJ
            NJ = ID(NI,JI)
            IF(NJ.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NN,JI
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NN,JI
            ENDIF
   11    CONTINUE
   10 CONTINUE
      IF(NAUT.GT.0) GO TO 30
      IF(KORC.NE.0) GO TO 20
      IF(I.EQ.NPP) GO TO 50
      GO TO 5
C
   20 NAUT=1
      N1=NODPR(I,1)
      KORA=KORC
      GO TO 5
C
CE    AUTOMATIC GENERATED DATA BETWEEN NODES N1 AND N2
CS    AUTOMATSKO GENERISANJE PODATAKA IZMEDJU CVOROVA N1 I N2
C
   30 N2=NODPR(I,1)
      N11=NODPR(I-1,1)
      N22=NODPR(I,1)
      N12=N22-N11
      CALL DELJIV(N12,KORA,INDD)
      IF(INDD.EQ.1) GO TO 100
      N11=NODPR(I-1,2)
      N22=NODPR(I,2)
      N21=N22-N11
      IF(N12.NE.N21) GO TO 100
      N11=NODPR(I-1,3)
      N22=NODPR(I,3)
      IF(N11.EQ.0.AND.N22.EQ.0) GO TO 31
      N21=N22-N11
      IF(N12.NE.N21) GO TO 100
   31 RKORA = KORA
      RN1N2 = N2-N1
      DD = RKORA/RN1N2
      DF1F1 = DD*(FAKP(I,1) - FAKP(I-1,1))
      DF2F2 = DD*(FAKP(I,2) - FAKP(I-1,2))
      IAUT=(N2-N1)/KORA-1
      II=I-1
      I=I+IAUT
      ITIPE(I) = ITIPE(II+1)
      NFUN(I) = NFUN(II+1)
      IPRAV(I) = IPRAV(II+1)
      FAKP(I,1) = FAKP(II+1,1)
      FAKP(I,2) = FAKP(II+1,2)
      THICV(I) = THICV(II+1)
      DO 33 NN=1,3
   33 NODPR(I,NN)=NODPR(II+1,NN)
      DO 34 J=1,IAUT
         JJ=II+J
         ITIPE(JJ) = ITIPE(II)
         NFUN(JJ) = NFUN(II)
         IPRAV(JJ) = IPRAV(II)
         FAKP(JJ,1) = FAKP(JJ-1,1)+DF1F1
         FAKP(JJ,2) = FAKP(JJ-1,2)+DF2F2
         THICV(JJ) = THICV(II)
         DO 35 NN=1,3
            NODP=NODPR(JJ-1,NN)
            NODPR(JJ,NN)=NODP+KORA
            IF(NODP.EQ.0) NODPR(JJ,NN) = 0
            NNN=NODPR(JJ,NN)
            IF(NN.EQ.3.AND.NNN.EQ.0) GO TO 35
            IF(ICVEL.EQ.0) THEN
               NI=NNN
               IF(NNN.LE.0.OR.NNN.GT.NP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NNN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NNN
                  STOP ' PROGRAM STOP - PAK051 - PSPOLJ'
               ENDIF
            ELSE
               N=NNN-NPI+1
               NI=NELCV(N)
               IF(NI.EQ.0.OR.NNN.LT.NPI.OR.NNN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NNN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NNN
                  STOP ' PROGRAM STOP - PAK051 - PSPOLJ'
               ENDIF
            ENDIF
            DO 36 JI=IJ1,IJ
               NJ = ID(NI,JI)
               IF(NJ.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NNN,JI
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NNN,JI
               ENDIF
   36       CONTINUE
   35    CONTINUE
   34 CONTINUE
      IF(I.EQ.NPP) GO TO 50
      NAUT=0
      IF(KORC.EQ.0) GO TO 5
      KORA=KORC
      NAUT=1
      N1=N2
      GO TO 5
C
CE    PRINT READING AND GENERATED DATA ABOUT NODES IN BOUNDARY
CS    STAMPANJE UCITANIH I GENERISANIH PODATAKA O CVOROVIMA NA GRANICI
C
   50 IF(NULAZ.NE.1.AND.NULAZ.NE.3) RETURN
      CALL WBROJK(KARTI,0)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040)
      DO 70 I=1,NPP
         WRITE(IZLAZ,5020) (NODPR(I,J),J=1,3),ITIPE(I),NFUN(I),IPRAV(I),
     1                     (FAKP(I,J),J=1,2),THICV(I)
   70 CONTINUE
      RETURN
C
  100 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2500) N22,N11,KORA
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6500) N22,N11,KORA
      STOP ' PROGRAM STOP - PAK051 - PSPOLJ'
C
 1000 FORMAT(3I5,3F10.2,I5)
 4000 FORMAT(3I10,3F10.2,I5)
 5020 FORMAT(3I6,3I5,1X,1PD13.5,1PD13.5,1PD11.3,I6)
C-----------------------------------------------------------------------
 2000 FORMAT(///'1'/6X,'P O D A C I   O   L I N I J S K I M   P R I T I 
     1S C I M A'/6X,57('-'))
 2010 FORMAT(//////6X,'U C I T A N I    P O D A C I'///5X,'C V O R O V I
     1 ITIP NFUN IPRA  FAKTORI PROPORCIONALNOSTI  DEBLJINA  KORAK')
 2030 FORMAT(' ZA CVOR N =',I9,' U PRAVCU',I2,' POSTOJI OGRANICENJE,',
     1' UCITANA SILA SE IGNORISE')
 2040 FORMAT(6X,'G E N E R I S A N I    P O D A C I'///5X,'C V O R O V I
     1 ITIP NFUN IPRA  FAKTORI PROPORCIONALNOSTI  DEBLJINA')
 2100 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O 2D PRITISCIMA'/
     1' CVOR',I9,' NE POSTOJI'//' PROGRAM STOP - PAK051 - PSPOLJ'/)
 2200 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O 2D PRITISCIMA'/
     1' BROJ FUNKCIJE - NFUN =',I5//' PROGRAM STOP - PAK051 - PSPOLJ'/)
 2300 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O 2D PRITISCIMA'/
     1' INDIK. PRAVCA - IPRAV =',I5//' PROGRAM STOP - PAK051 - PSPOLJ'/)
 2400 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O 2D PRITISCIMA'/
     1' TIP ELEMENTA - ITIPE =',I5//' PROGRAM STOP - PAK051 - PSPOLJ'/)
 2410 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O 2D PRITISCIMA'/
     1' TIP ELEMENTA - ITIPE =',I5,'    INDIK. PRAVCA - IPRAV =',I5//
     1' PROGRAM STOP - PAK051 - PSPOLJ'/)
 2500 FORMAT(///' BROJ N2=',I9,' NE MOZE SE DOBITI SABIRANJEM BROJA N1='
     1,I9,' I KONACNOG BROJA KORAKA KORA=',I5)
C-----------------------------------------------------------------------
 6000 FORMAT(///'1'/6X,'D A T A   A B O U T   L I N E S   U N D E R   P 
     1R E S S U R E'/6X,61('-'))
 6010 FORMAT(//////6X,'R E A D I N G    D A T A    '///5X,'N  O  D  E  S
     1 ITIP NFUN IPRA   PROPORTIONALITY FACTORS     THICK    STEP')
 6030 FORMAT(' NODE,  N =',I9,' IN DIRECTION',I2,' IS FIXED,',
     1' READ LOAD IS IGNORED')
 6040 FORMAT(6X,'G E N E R A T E D    D A T A      '///5X,'N  O  D  E  S
     1 ITIP NFUN IPRA   PROPORTIONALITY FACTORS     THICK')
 6100 FORMAT(//' ERROR IN INPUT DATA ABOUT 2D PRESSURE'/
     1' NODE',I9,' NOT EXIST'//' PROGRAM STOP - PAK051 - PSPOLJ'//)
 6200 FORMAT(//' ERROR IN INPUT DATA ABOUT 2D PRESSURE'/
     1' NO. FUNCTION - NFUN =',I5//' PROGRAM STOP - PAK051 - PSPOLJ'//)
 6300 FORMAT(//' ERROR IN INPUT DATA ABOUT 2D PRESSURE'/
     1' DOF. - IPRAV =',I5//' PROGRAM STOP - PAK051 - PSPOLJ'//)
 6400 FORMAT(//' ERROR IN INPUT DATA ABOUT 2D PRESSURE'/
     1' ELEMENT TYPE - ITIPE =',I5//' PROGRAM STOP - PAK051 - PSPOLJ'//)
 6410 FORMAT(//' ERROR IN INPUT DATA ABOUT 2D PRESSURE'/
     1' ELEMENT TYPE - ITIPE =',I5,'       DOF. - IPRAV =',I5//
     1' PROGRAM STOP - PAK051 - PSPOLJ'//)
 6500 FORMAT(///' NODE NUMBER N2=',I9,' CAN NOT BE DEFINED BY SUPERPOSIT
     1ION OF NODE N1=',I9,' WITH A NUMBER OF STEPS  KORA=',I5)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UCGRP3
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C .......................................................................
C .
CE.   P R O G R A M
CE.       TO FORM POINTERS FOR SURFACE LOADING OF 3/D ELEMENTS
CS.   P R O G R A M
CS.       ZA FORMIRANJE REPERA ZA PRITISKE NA GRANICI 3/D ELEMENATA
C .
C .......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /DINAMI/ IMASS,IDAMP,PIP,DIP,MDVI
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /SOPSVR/ ISOPS,ISTYP,NSOPV,ISTSV,IPROV,IPROL
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UCGRP3'
      LFAKP = LRAD
      LNFUN  = LFAKP + NPP3*4*IDVA
      LIPRAV = LNFUN + NPP3
      LNODPR = LIPRAV + NPP3
      LMAX = LNODPR + NPP3*9
      IF(ISOPS.GT.0) LMAX=LMAX+JEDN*IDVA
      IF(NDIN.EQ.0) GO TO 10
      IF(MDVI.EQ.1.AND.ISOPS.EQ.0) LMAX=LMAX+JEDN*IDVA
   10 IF(LMAX.GT.MTOT) CALL ERROR(1)
C
CS    POZIVANJE PROGRAMA ZA ULAZNE PODATKE  O  3/D PRITISCIMA
CE    CALL ROUTINE FOR INPUT DATA ABOUT 3/D PRESSURES
C
      CALL PSPOL3(A(LNFUN),A(LIPRAV),A(LFAKP),A(LNODPR),NPP3,
     1            NP,A(LID),A(LELCV),ICVEL,NPI,NPA)
      IF(ICVEL.EQ.1) CALL VEZACE(A(LNODPR),A(LELCV),NPP3,9)
      NPROS=LMAX-LRAD
      IF(NRAD.LT.NPROS) NRAD=NPROS
      CALL UCELP(A(LIPODS),9)
      CALL WRITDD(A(LFAKP),NPP3*4,IPODS,LMAX13,LDUZI)
      CALL IWRITD(A(LNFUN),NPP3*11,IPODS,LMAX13,LDUZI)
      IF(MAX13.LT.LMAX13) MAX13=LMAX13
      RETURN
      END
C====================================================================
      SUBROUTINE PSPOL3(NFUN,IPRAV,FAKP,NODPR,NPP,
     1                  NP,ID,NELCV,ICVEL,NPI,NPA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C .......................................................................
C .
CE.   P R O G R A M
CE.       TO READING INPUT DATA ABOUT SURFACE LOADING FOR 3/D ELEMENTS
CS.   P R O G R A M
CS.       ZA UCITAVANJE ULAZNIH PODATAKA O POVRSINSKIM PRITISCIMA 
CS.       NA GRANICI 3/D ELEMENTA
C .
C .......................................................................
C
      include 'paka.inc'
      CHARACTER*250 ACOZ
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /SLOBAR/ IOPIT
      COMMON /SLOBAP/ NSLOB(3,1000),NPSLOB
      DIMENSION NFUN(*),IPRAV(*),FAKP(NPP,*),NODPR(NPP,*),
     1          ID(NP,*),NELCV(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' PSPOL3'
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000)

      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2010)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6010)
      ENDIF
C
      I = 0
      NAUT=0
    5 I = I + 1
      CALL ISPITA(ACOZ)
      IF(I.EQ.1) KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) NFUN(I),IPRAV(I),(FAKP(I,J),J=1,4),KORC 
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1010) NFUN(I),IPRAV(I),(FAKP(I,J),J=1,4),KORC
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) (NODPR(I,J),J=1,9)
      IF(INDFOR.EQ.2.and.ind56.eq.0)
     1READ(ACOZ,1000) (NODPR(I,J),J=1,9)
      IF(INDFOR.EQ.2.and.ind56.eq.1)
     1READ(ACOZ,4000) (NODPR(I,J),J=1,9)
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)
     1WRITE(IZLAZ,5020) NFUN(I),IPRAV(I),(FAKP(I,J),J=1,4),KORC,
     1                  (NODPR(I,J),J=1,9)
      IF(NFUN(I).LE.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200) NFUN(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200) NFUN(I)
         STOP ' PROGRAM STOP - PAK051 - PSPOL3'
      ENDIF
      IP=IPRAV(I)
      IJ=1
      IF(IP.EQ.0) IJ=3
      IF(IP.LT.0.OR.IP.GT.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2300) IPRAV(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6300) IPRAV(I)
         STOP ' PROGRAM STOP - PAK051 - PSPOLJ'
      ENDIF
      DO 10 J=1,9
         NN=NODPR(I,J)
         IF(J.GT.3.AND.NN.EQ.0) GO TO 10
C         IF(J.GT.4.AND.NN.EQ.0) GO TO 10
         IF(ICVEL.EQ.0) THEN
            NI=NN
            IF(NN.LE.0.OR.NN.GT.NP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK051 - PSPOL3'
            ENDIF
         ELSE
            N=NN-NPI+1
            NI=NELCV(N)
            IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK051 - PSPOL3'
            ENDIF
         ENDIF
         DO 11 JI=1,IJ
            IF(IJ.EQ.3.AND.JI.EQ.1) IP=1
            IF(IJ.EQ.3.AND.JI.EQ.2) IP=2
            IF(IJ.EQ.3.AND.JI.EQ.3) IP=3
            NJ = ID(NI,IP)
            IF(NJ.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NN,IP
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NN,IP
            ENDIF
   11    CONTINUE
   10 CONTINUE
      IF(NAUT.GT.0) GO TO 30
      IF(KORC.NE.0) GO TO 20
      IF(I.EQ.NPP) GO TO 50
      GO TO 5
C
   20 NAUT=1
      N1=NODPR(I,1)
      KORA=KORC
      GO TO 5
C
CE    AUTOMATIC GENERATED DATA BETWEEN NODES N1 AND N2
CS    AUTOMATSKO GENERISANJE PODATAKA IZMEDJU CVOROVA N1 I N2
C
   30 N2=NODPR(I,1)
      N11=NODPR(I-1,1)
      N22=NODPR(I,1)
      N12=N22-N11
      CALL DELJIV(N12,KORA,INDD)
      IF(INDD.EQ.1) GO TO 100
      DO 40 NC=2,4
         N11=NODPR(I-1,NC)
         N22=NODPR(I,NC)
         N21=N22-N11
         IF(N12.NE.N21) GO TO 100
   40 CONTINUE
      DO 45 NC=5,9
         N11=NODPR(I-1,NC)
         N22=NODPR(I,NC)
         IF(N11.EQ.0.AND.N22.EQ.0) GO TO 45
         N21=N22-N11
         IF(N12.NE.N21) GO TO 100
   45 CONTINUE
      RKORA = KORA
      RN1N2 = N2-N1
      DD = RKORA/RN1N2
      DF1F1 = DD*(FAKP(I,1) - FAKP(I-1,1))
      DF2F2 = DD*(FAKP(I,2) - FAKP(I-1,2))
      DF3F3 = DD*(FAKP(I,3) - FAKP(I-1,3))
      DF4F4 = DD*(FAKP(I,4) - FAKP(I-1,4))
      IAUT=(N2-N1)/KORA-1
      II=I-1
      I=I+IAUT
      NFUN(I) = NFUN(II+1)
      IPRAV(I) = IPRAV(II+1)
      FAKP(I,1) = FAKP(II+1,1)
      FAKP(I,2) = FAKP(II+1,2)
      FAKP(I,3) = FAKP(II+1,3)
      FAKP(I,4) = FAKP(II+1,4)
      DO 33 NN=1,9
         NODPR(I,NN)=NODPR(II+1,NN)
   33 CONTINUE
      DO 34 J=1,IAUT
         JJ=II+J
         NFUN(JJ) = NFUN(II)
         IPRAV(JJ) = IPRAV(II)
         FAKP(JJ,1) = FAKP(JJ-1,1)+DF1F1
         FAKP(JJ,2) = FAKP(JJ-1,2)+DF2F2
         FAKP(JJ,3) = FAKP(JJ-1,3)+DF3F3
         FAKP(JJ,4) = FAKP(JJ-1,4)+DF4F4
         DO 35 NN=1,9
            NODP=NODPR(JJ-1,NN)
            NODPR(JJ,NN)=NODP+KORA
            IF(NODP.EQ.0) NODPR(JJ,NN) = 0
            NNN=NODPR(JJ,NN)
            IF(NN.GT.4.AND.NNN.EQ.0) GO TO 35
            IF(ICVEL.EQ.0) THEN
               NI=NNN
               IF(NNN.LE.0.OR.NNN.GT.NP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NNN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NNN
                  STOP ' PROGRAM STOP - PAK051 - PSPOL3'
               ENDIF
            ELSE
               N=NNN-NPI+1
               NI=NELCV(N)
               IF(NI.EQ.0.OR.NNN.LT.NPI.OR.NNN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NNN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NNN
                  STOP ' PROGRAM STOP - PAK051 - PSPOL3'
               ENDIF
            ENDIF
            DO 36 JI=1,IJ
               IF(IJ.EQ.3.AND.JI.EQ.1) IP=1
               IF(IJ.EQ.3.AND.JI.EQ.2) IP=2
               IF(IJ.EQ.3.AND.JI.EQ.3) IP=3
               NJ = ID(NI,IP)
               IF(NJ.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NNN,IP
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NNN,IP
               ENDIF
   36       CONTINUE
   35    CONTINUE
   34 CONTINUE
      IF(I.EQ.NPP) GO TO 50
      NAUT=0
      IF(KORC.EQ.0) GO TO 5
      KORA=KORC
      NAUT=1
      N1=N2
      GO TO 5
C
CE    PRINT READING AND GENERATED DATA ABOUT NODES IN BOUNDARY
CS    STAMPANJE UCITANIH I GENERISANIH PODATAKA O CVOROVIMA NA GRANICI
C
   50 IF(IOPIT.GT.0) THEN
         NPSLOB=NPP
         DO 80 I=1,NPP
            NSLOB(1,I)=NODPR(I,1)
            NSLOB(2,I)=NODPR(I,2)
            NSLOB(3,I)=NODPR(I,3)
   80    CONTINUE
C      IF(IOPIT.GT.0.AND.ICVEL.EQ.1) CALL VEZACE(NSLOB,NELCV,3,NPP)
      ENDIF
C
      IF(NULAZ.NE.1.AND.NULAZ.NE.3) RETURN
      CALL WBROJK(KARTI,0)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040)
      DO 70 I=1,NPP
         WRITE(IZLAZ,5021) NFUN(I),IPRAV(I),(FAKP(I,J),J=1,4),
     1                     (NODPR(I,J),J=1,9)
   70 CONTINUE
      RETURN
C
  100 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2500) N22,N11,KORA
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6500) N22,N11,KORA
      STOP ' PROGRAM STOP - PAK051 - PSPOL3'
C
 1000 FORMAT(9I5)
 4000 FORMAT(9I10)
 1010 FORMAT(2I5,4F10.2,I5)
 5020 FORMAT(2I6,4X,4(1PD12.4),6X,I6/16X,9I10)
 5021 FORMAT(2I6,4X,4(1PD12.4)/16X,9I10)
C-----------------------------------------------------------------------
 2000 FORMAT(///'1'/6X,'P O D A C I   O   P O V R S I N S K I M   P R I 
     1T I S C I M A'/6X,61('-'))
 2010 FORMAT(//////6X,'U C I T A N I    P O D A C I'///
     12X,'FUNK  INDI     F A K T O R I   P R O P O R C I O N A L N O S T 
     1 I     KORAK'/
     12X,'BROJ  PRAV     CVOR1 CVOR2 CVOR3 CVOR4 CVOR5 CVOR6 CVOR7 CVOR8
     1 CVOR9  GENE')
 2030 FORMAT(' ZA CVOR N =',I9,' U PRAVCU',I2,' POSTOJI OGRANICENJE,',
     1' UCITANA SILA SE IGNORISE')
 2040 FORMAT(6X,'G E N E R I S A N I    P O D A C I'///
     12X,'FUNK  INDI     F A K T O R I   P R O P O R C I O N A L N O S T 
     1 I'/
     12X,'BROJ  PRAV     CVOR1 CVOR2 CVOR3 CVOR4 CVOR5 CVOR6 CVOR7 CVOR8
     1 CVOR9')
 2100 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O 3D PRITISCIMA'/
     1' CVOR',I9,' NE POSTOJI'//' PROGRAM STOP - PAK051 - PSPOL3'/)
 2200 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O 3D PRITISCIMA'/
     1' BROJ FUNKCIJE - NFUN =',I5//' PROGRAM STOP - PAK051 - PSPOL3'/)
 2300 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O 3D PRITISCIMA'/
     1' INDIK. PRAVCA - IPRAV =',I5//' PROGRAM STOP - PAK051 - PSPOL3'/)
 2500 FORMAT(///' BROJ N2=',I9,' NE MOZE SE DOBITI SABIRANJEM BROJA N1='
     1,I9,' I KONACNOG BROJA KORAKA KORA=',I5)
C-----------------------------------------------------------------------
 6000 FORMAT(///'1'/6X,'D A T A   A B O U T   S U R F A C E S   U N D E 
     1R   P R E S S U R E'/6X,67('-'))
 6010 FORMAT(//////6X,'R E A D I N G    D A T A'///
     12X,'FUNC  INDI     P R O P O R T I O N A L I T Y     F A C T O R S
     1        STEP'/
     12X,'NUMB  DIRE     NODE1 NODE2 NODE3 NODE4 NODE5 NODE6 NODE7 NODE8
     1 NODE9  GENE')
 6030 FORMAT(' NODE,  N =',I9,' IN DIRECTION',I2,' IS FIXED,',
     1' READ LOAD IS IGNORED')
 6040 FORMAT(6X,'G E N E R A T E D    D A T A'///
     12X,'FUNC  INDI     P R O P O R T I O N A L I T Y     F A C T O R S
     1'/
     12X,'NUMB  DIRE     NODE1 NODE2 NODE3 NODE4 NODE5 NODE6 NODE7 NODE8
     1 NODE9')
 6100 FORMAT(//' ERROR IN INPUT DATA ABOUT 3D PRESSURE'/
     1' NODE',I9,' NOT EXIST'//' PROGRAM STOP - PAK051 - PSPOL3'//)
 6200 FORMAT(//' ERROR IN INPUT DATA ABOUT 3D PRESSURE'/
     1' NO. FUNCTION - NFUN =',I5//' PROGRAM STOP - PAK051 - PSPOL3'//)
 6300 FORMAT(//' ERROR IN INPUT DATA ABOUT 3D PRESSURE'/
     1' DOF. - IPRAV =',I5//' PROGRAM STOP - PAK051 - PSPOL3'//)
 6500 FORMAT(///' BROJ N2=',I9,' NE MOZE SE DOBITI SABIRANJEM BROJA N1='
     1,I9,' I KONACNOG BROJA KORAKA KORA=',I5)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C====================================================================
      SUBROUTINE VOLFOR(ID,ZAP,NELCV,NPI,NPA,ICVEL,IZLAZ,ISRPS)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C .......................................................................
C .
CE.   P R O G R A M
CE.       TO READING INPUT DATA ABOUT CONCENTRATED VOLUME FORCES 
CS.   P R O G R A M
CS.       ZA UCITAVANJE ULAZNIH PODATAKA O KONCENTRISANIM ZAPREMINSKIM SILAMA 
CS.       (ZA CERNE)
C .
C .......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DJERDAP/ IDJERDAP
C
      DIMENSION VOL(3),ZAP(*),ID(NP,*),NELCV(*)
C
	    KK=0
	    NP3D1=NP
      IF(IDJERDAP.EQ.1) THEN
	       READ(35,1011) NP3D1
	    ENDIF
	    DO 10 II=1,NP3D1
C MORA SVAKA LAMELA DA IMA PREKO 100000 CVOROVA !!! OPASNO
c           if(np.gt.99999) then
	            READ(35,1011) NN,(VOL(K),K=1,3)
c	         else   
c              READ(35,1010) NN,(VOL(K),K=1,3)
c           endif
               IF(ICVEL.EQ.0) THEN
                  NI=NN
                  IF(NN.LE.0.OR.NN.GT.NP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
                     STOP ' PROGRAM STOP - PAK051 - VOLFOR'
                  ENDIF
               ELSE
                  N=NN-NPI+1
                  NI=NELCV(N)
                  IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
                     STOP ' PROGRAM STOP - PAK051 - VOLFOR'
                  ENDIF
               ENDIF
           DO 20 J=1,3
               IF (ID(NI,J).LE.0) GO TO 20
               KK=ID(NI,J)
C
               IF(KK.GT.0.AND.J.LE.3) ZAP(KK)=VOL(J)
C
  20       CONTINUE
  10    CONTINUE
C
	    RETURN
C
 1010 FORMAT(I5,3E13.5)
 1011 FORMAT(I10,3E13.5)
C-----------------------------------------------------------------------
 2100 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O SILAMA'/
     1' CVOR',I10,' NE POSTOJI'//' PROGRAM STOP - PAK051 - VOLFOR'//)
C-----------------------------------------------------------------------
 6100 FORMAT(//' ERROR IN INPUT DATA ABOUT CONCENTRATED LOADS'/
     1' NODE',I10,' NOT EXIST'//' PROGRAM STOP - PAK051 - VOLFOR'//)
C-----------------------------------------------------------------------
      END
C====================================================================
C
C====================================================================
      SUBROUTINE CONFIL()
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C .......................................................................
C .
CE.   P R O G R A M
CE.       FOR CONTROL IDENTIFICATION OF FILE FOR VOLUME FORCES
CS.   P R O G R A M
CE.       ZA KONTROLU POSTOJANJA DATOTEKE *.ZS ZA ZAPREMINSKE SILE
CS.       (ZA CERNE)
C .
C .......................................................................
C
      CHARACTER *24 ZSILE
      LOGICAL POST
      include 'paka.inc'
      
      COMMON /CERSIL/ ZSILE
C
C
	INQUIRE(FILE=ZSILE,EXIST=POST)
	IF (.NOT.POST) THEN
          WRITE(*,*) '    DATOTEKA ',ZSILE,' NE POSTOJI'
          STOP
	ELSE
          OPEN(35,FILE=ZSILE,STATUS='OLD',FORM='FORMATTED',
     1    ACCESS='SEQUENTIAL')
	ENDIF
C
      RETURN
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UCPOCP
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO FORM POINTERS AND CALL ROUTINE FOR READING
CE.        DATA FOR THIN-WALLED BEAM NODAL PRESSURE
CS.    P R O G R A M
CS.        ZA FORMIRANJE REPERA I POZIVANJE PROGRAMA
CS.        ZA UCITAVANJE PODATAKA O PRITISCIMA KOD TANKOZIDNIH GREDA
C .
CE.        NPGR - NUMBER OF NODAL POINTS WITH PRESSURE
CS.        NPGR - BROJ CVORNIH TACAKA SA PRITISCIMA
C .
CE.    POINTERS
CE.        LNFUJ -  NUMBER OF NODES
CE.        LNFUG -  NUMBER OF TIME FUNCTIONS
CE.        LFFUG -  MULTIPLICATION FACTORS
CS.    R E P E R I
CS.        LNFUJ -  BROJEVI CVOROVA
CS.        LNFUG -  BROJEVI VREMESKIH FUNKCIJA
CS.        LFFUG -  FAKTORI MNOZENJA
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UCPOCP'
CE    POINTERS FOR PRESCRIBED PRESSURE
CS    REPERI ZA ZADATE PRITISKE
      LFFUG = LRAD
      LNFUG = LFFUG + NPGR*IDVA
      LNFUJ = LNFUG + NPGR
      LMAX  = LNFUJ + NPGR
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      CALL CLEAR(A(LFFUG),NPGR)
      CALL ICLEAR(A(LNFUG),2*NPGR)
      NII=NPI
      NAA=NPA
      NPP=NP
      IF(JPS.GT.1) THEN
         IF(JPBR.EQ.JPS1) THEN
            NII=NGI
            NAA=NGA
            NPP=NPG
         ELSE
            NPP=NP+NPK
         ENDIF
      ENDIF
      CALL UCPRES(A(LNFUJ),A(LNFUG),A(LFFUG),A(LELCV),A(LCVEL),
     1            NPGR,NPP,ICVEL,NII,NAA)
      NPRO=LMAX-LRAD
      CALL DELJIV(NPRO,2,INDL)
      IF(INDL.EQ.1) NPRO=NPRO+1
      NPROS=NPRO+NPP*IDVA
      IF(NRAD.LT.NPROS) NRAD=NPROS
      CALL UCELP(A(LIPODS),12)
      CALL WRITDD(A(LFFUG),NPRO/IDVA,IPODS,LMAX13,LDUZI)
      IF(MAX13.LT.LMAX13) MAX13=LMAX13
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UCPRES(NFUJ,NFUG,FFUG,NELCV,NCVEL,NPGR,NPP,ICVEL,NPI,
     1NPA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO READ NODAL PRESSURES
CS.    P R O G R A M
CS.        ZA UCITAVANJE CVORNIH PRITISAKA
C .
CE.    I=1,NPGR   (NPGR  - NUMBER OF NODAL POINTS WITH PRESSURES)
CS.    I=1,NPGR   (NPGR  - BROJ CVOROVA SA PRITISCIMA)
C .
CE.         NFUJ(I)  -  NO. NODE
CE.         NFUG(I)  -  NO. TIME FUNCTION
CE.         FFUG(I)  -  FACTOR OF MULTIPLICATION
CS.         NFUJ(I)  -  BROJ CVORA
CS.         NFUG(I)  -  BROJ VREMENSKE FUNKCIJE
CS.         FFUG(I)  -  FAKTOR MNOZENJA
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      DIMENSION NFUJ(*),NFUG(*),FFUG(*),NELCV(*),NCVEL(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UCPRES'
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2010)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6010)
      ENDIF
      I = 0
      NAUT=0
    5 I=I+1
      CALL ISPITA(ACOZ)
      IF(I.EQ.1) KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) NN,NC,FAK,KORC
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) NN,NC,FAK,KORC
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)
     1WRITE(IZLAZ,5020) NN,NC,FAK,KORC
      IF(ICVEL.EQ.0) THEN
         NI=NN
         IF(NN.LE.0.OR.NN.GT.NPP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
            STOP ' PROGRAM STOP - PAK051 - UCPRES'
         ENDIF
      ELSE
         N=NN-NPI+1
         NI=NELCV(N)
         IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
            STOP ' PROGRAM STOP - PAK051 - UCPRES'
         ENDIF
      ENDIF
      IF(NC.LE.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200)
         STOP ' PROGRAM STOP - PAK051 - UCPRES'
      ENDIF
      NFUJ(I) = NI
      NFUG(I) = NC
      FFUG(I) = FAK
      IF(NAUT.GT.0) GO TO 30
      IF(KORC.GT.0) GO TO 20
      IF(I.EQ.NPGR) GO TO 50
      GO TO 5
C
   20 NAUT=1
      N1  =NN
      FAK1=FAK
      KORA=KORC
      GO TO 5
C
CE    AUTOMATIC GENERATION DATA BETWEEN N1 AND N2
CS    AUTOMATSKO GENERISANJE PODATAKA IZMEDJU CVOROVA N1 I N2
C
   30 N2    = NN
      FAK2  = FAK
      RKORA = KORA
      RN1N2 = N2-N1
      DD    = RKORA/RN1N2
      DF1F2 = DD*(FAK2-FAK1)
      IAUT  = (N2-N1)/KORA-1
      IA    = I+IAUT
      NFUJ(IA) = NFUJ(I)
      NFUG(IA) = NFUG(I)
      FFUG(IA) = FFUG(I)
      NN = N1
      DO 34 J=1,IAUT
         NN=NN+KORA
         IF(ICVEL.EQ.0) THEN
            NI=NN
            IF(NN.LE.0.OR.NN.GT.NPP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK051 - UCPRES'
            ENDIF
         ELSE
            N=NN-NPI+1
            NI=NELCV(N)
            IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK051 - UCPRES'
            ENDIF
         ENDIF
         NFUJ(I) = NI
         NFUG(I) = NFUG(I-1)
         FFUG(I) = FFUG(I-1)+DF1F2
         I=I+1
   34 CONTINUE
      IF(I.EQ.NPGR) GO TO 50
      NAUT=0
      IF(KORC.EQ.0) GO TO 5
      KORA=KORC
      NAUT=1
      N1=N2
      FAK1=FAK2
      GO TO 5
C
CE    PRINT READ AND GENERATED NODAL DATA
CS    STAMPANJE UCITANIH I GENERISANIH PODATAKA
C
   50 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
         CALL WBROJK(KARTI,0)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040)
         DO 70 I=1,NPGR
            NI = NFUJ(I)
            IF(ICVEL.EQ.0) N = NI
            IF(ICVEL.GT.0) N = NCVEL(NI)
            NC = NFUG(I)
            FAK = FFUG(I)
            WRITE(IZLAZ,5050) N,NC,FAK
   70    CONTINUE
      ENDIF
      RETURN
 1000 FORMAT(2I5,F10.0,I5)
 5020 FORMAT(10X,I5,7X,I5,7X,1PD12.5,I8)
 5050 FORMAT(11X,I5,15X,I5,13X,1PD15.8)
C-----------------------------------------------------------------------
 2000 FORMAT(///'1'/6X,'P O D A C I    O    C V O R N I M    P R I T I S
     1 C I M A'/6X,56('-'))
 2010 FORMAT(//////6X,'U C I T A N I    P O D A C I'///11X,
     1'CVOR BR.    FUNK.BR.   FAKTOR MNOZ.   KORAK GEN.')
 2040 FORMAT(6X,
     1'G E N E R I S A N I    P O D A C I'///11X,'CVOR BROJ',5X,
     1'BROJ VREM. FUNKCIJE',5X,'FAKTOR MNOZENJA')
 2100 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O PRITISCIMA'/
     1' CVOR',I10,' NE POSTOJI'//' PROGRAM STOP - PAK051 - UCPRIT'//)
 2200 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O PRITISCIMA'/
     1' BROJ FUNKCIJE NC =',I5//' PROGRAM STOP - PAK051 - UCPRIT'/)
C-----------------------------------------------------------------------
 6000 FORMAT(///'1'/6X,'D A T A    A B O U T    N O D A L    P R E S S U
     1 R E S'/6X,54('-'))
 6010 FORMAT(//////6X,'I N P U T    D A T A'///11X,
     1'NODE NO.    FUNC.NO.   MULT. FACTOR   INCR. GEN.')
 6040 FORMAT(6X,
     1'G E N E R A T E D    D A T A'///11X,'NODE NO. ',5X,
     1'TIME FUNCTION NO.  ',5X,'MULTIPL. FACTOR')
 6100 FORMAT(//' ERROR IN INPUT DATA ABOUT PRESSURES'/
     1' NODE',I10,' NOT EXIST'//' PROGRAM STOP - PAK051 - UCPRIT'//)
 6200 FORMAT(//' ERROR IN INPUT DATA ABOUT PRESSURES'/
     1' NO. FUNCTION NC =',I5//' PROGRAM STOP - PAK051 - UCPRIT'//)
C-----------------------------------------------------------------------
      END
