C=======================================================================
C
CE        READING DATA ABOUT 2/D ELEMENTS
CS        UCITAVANJE PODATAKA O 2/D ELEMENTIMA
C
C   SUBROUTINE UL2EGL
C              UL2EK
C              UL2EKC
C              LMIMHT
C              UCGRP2
C              PSPOLJ
C              TGRAFE
C
C=======================================================================
      SUBROUTINE UL2EGL
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM POINTERS AND READING INPUT DATA ABOUT 2/D ELEMENTS
CS.   P R O G R A M
CS.      ZA FORMIRANJE REPERA I UCITAVANJE OPSTIH ULAZNIH PODATAKA
CS.      O ELEMENTIMA: 2/D, TROUGAO
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /UGAOVL/ TE(4,4)
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /AXISYM/ INDAX
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /SRPSKI/ ISRPS
      COMMON /SPANEL/ ISHEAR
      COMMON /PODTIP/ IPODT
      COMMON /GEORGE/ TOLG,ALFAG,ICCGG
      COMMON /MIXEDM/ MIXED,IOPGS(6),NDS
      COMMON /CRACKS/ CONTE,SINTE,FK123(10,3),NODCR(10,14),NCRACK,LQST,
     1                LNERING,LMIE,LPSI,LQ,N100,IRING,NSEG,MAXRIN,MAXSEG
     1                ,MAXNOD,LXL,LYL,LZL,LSIF1,LXGG,LYGG,LZGG,LNNOD
      COMMON /CRXFEM/ NCXFEM,LNODTIP,LNSSN,LPSIE,LFIE,LHNOD,
     1                LPSIC,LFI,LHZNAK,LNSSE,LKELEM,LID1,LID2
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UL2EGL'
C
CS    OSNOVNI PODACI O ELEMENTIMA
CE    BASIC DATA ABOUT ELEMENTS
C
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) IETYP,NGAUSX,NGAUSY,MSET,BETA,MSLOJ,
     1              (CPP(J,1),J=1,3),IALFA
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) IETYP,NGAUSX,NGAUSY,MSET,BETA,MSLOJ,
     1                (CPP(J,1),J=1,3),IALFA
      IF(IETYP.EQ.1) INDAX=1
      IF(IALFA.EQ.0.AND.IETYP.NE.1) IALFA=2
      IF(IALFA.EQ.0.AND.IETYP.EQ.1) IALFA=2
      IF(IALFA.GT.2) IALFA=2
	IF(NCXFEM.NE.0) IALFA=-1
CE      CHECK FOR 5-POINTS INTEGRATION
       IF(NGAUSX.EQ.5) NGAUSY=1
C
CE      CHECK FOR NEWTON-COTES INTEGRATION
        INCOTX=INCOT(NGAUSX)
        INCOTY=INCOT(NGAUSY)
        INCOTZ=0
      IF(MSLOJ.EQ.0) MSLOJ = 10
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
        CALL WBROJK(KARTIC,0)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2004) IETYP
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6004) IETYP
      IF(ISRPS.EQ.0.AND.INCOTX.EQ.0)
     1WRITE(IZLAZ,2000) NGAUSX
      IF(ISRPS.EQ.1.AND.INCOTX.EQ.0)
     1WRITE(IZLAZ,6000) NGAUSX
      IF(ISRPS.EQ.0.AND.INCOTX.EQ.1)
     1WRITE(IZLAZ,2001) NGAUSX
      IF(ISRPS.EQ.1.AND.INCOTX.EQ.1)
     1WRITE(IZLAZ,6001) NGAUSX
      IF(ISRPS.EQ.0.AND.INCOTY.EQ.0)
     1WRITE(IZLAZ,2002) NGAUSY
      IF(ISRPS.EQ.1.AND.INCOTY.EQ.0)
     1WRITE(IZLAZ,6002) NGAUSY
      IF(ISRPS.EQ.0.AND.INCOTY.EQ.1)
     1WRITE(IZLAZ,2003) NGAUSY
      IF(ISRPS.EQ.1.AND.INCOTY.EQ.1)
     1WRITE(IZLAZ,6003) NGAUSY
        IF(MSET.GT.0) THEN
      IF(ISRPS.EQ.0) WRITE(IZLAZ,2010) MSET,BETA,MSLOJ
      IF(ISRPS.EQ.1) WRITE(IZLAZ,6010) MSET,BETA,MSLOJ
          ELSE
      IF(ISRPS.EQ.0) WRITE(IZLAZ,2020) BETA
      IF(ISRPS.EQ.1) WRITE(IZLAZ,6020) BETA
        ENDIF
      IF(ISRPS.EQ.0) WRITE(IZLAZ,2025) (CPP(J,1),J=1,3),IALFA
      IF(ISRPS.EQ.1) WRITE(IZLAZ,6025) (CPP(J,1),J=1,3),IALFA
      ENDIF
C
CS    SETOVANJE ZA SMICUCI PANEL
CE    SET SHEAR PANEL
C
      ISHEAR=0
      IF(IETYP.EQ.4) THEN
        IETYP =3
        ISHEAR=1
      ENDIF   
C
      BETA=BETA*3.1415926536D0/180.D0
      IBB0=1
      IF(DABS(CPP(1,1)).LT.1.D-6.AND.DABS(CPP(2,1)).LT.1.D-6.AND.
     1   DABS(CPP(3,1)).LT.1.D-6) IBB0=0
C PAZNJA!!!! NIJE DOGRADJEN UGAO PROJEKCIONOG PRAVCA U LBET0 ZA IBB0=1
C
CS    REPERI U VEKTORU AU ZA ULAZNE PODATKE
CE    POINTERS IN INPUT STORAGE VECTOR  AU
C
      NCVE=9
      IF(IPODT.EQ.1) NCVE=6
      LNNOD=1
      LMXAU=LNNOD+NE
      LNSLOJ=LMXAU
      LMATSL=LNSLOJ+MSET
      LBBET =LMATSL+MSET*MSLOJ
      CALL DELJIV(LBBET,2,INDL)
      IF(INDL.EQ.0) LBBET=LBBET+1
      LDSLOJ=LBBET+MSET*MSLOJ*IDVA
      LTHID =LDSLOJ+MSET*MSLOJ*IDVA
      LBET0 =LTHID+NE*IDVA
      NDEB=1
      IF(IATYP.GT.3) THEN
         NDEB=4
         IF(IPODT.EQ.1) NDEB=3
         LBET0 =LTHID+NDEB*NE*IDVA
      ENDIF
      LTBTH =LBET0+NE*IDVA
      LTDTH =LTBTH
      IF(INDBTH.EQ.1) LTDTH=LTBTH+NE*IDVA
      LNMAT =LTDTH
      IF(INDDTH.EQ.1) LNMAT=LTDTH+NE*IDVA
      LIPGC =LNMAT+NE
      LISNA =LIPGC+NE
      LIPRC =LISNA+NE
      LNEL  =LIPRC+NE
C
      NTOT=LMAX+LNEL-LNNOD
      LCEL=LNEL
      IF(ICVEL.EQ.1) THEN
        LNEL=LCEL+NE
        NTOT=NTOT+NE
      ENDIF
      IF(NTOT.GT.MTOT) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NTOT,MTOT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NTOT,MTOT
      STOP
      ENDIF
C
CS    POZIVANJE PROGRAMA ZA ULAZNE PODATKE U VEKTOR AU
CE    CALL ROUTINES FOR INPUT DATA IN VECTOR AU
C
      LAU=LMAX
      CALL UL2EK(A(LAU))
      NDUM=ND
      IF(NCXFEM.GT.0) ND=40
      IF(IETYP.LE.2) THEN
         MXAE = ND+(29+5*NCVE+6*ND+ND*(ND+1)/2)*IDVA
         IF(IETYP.EQ.1) MXAE = MXAE + (7+ND)*IDVA
      ELSE
         MXAE = ND+(29+12*NCVE+15*NCVE*NCVE+ND*(ND+1)/2)*IDVA
      ENDIF
      IF(ICCGG.EQ.2) MXAE=MXAE+(ND+NDS)*(ND+NDS)*IDVA
      K4=3
      IF(IETYP.EQ.1) K4=4
      IF(MIXED.EQ.1) MXAE=MXAE+(NDS+2*K4*NDS+ND*NDS+NDS*(NDS+1)/2)*IDVA
      IF(IALFA.GE.0) THEN
         MXAE = MXAE + 39*IDVA
         IF(IETYP.EQ.1) MXAE = MXAE + 17*IDVA
      ENDIF
      LMAX = LMAX + MXAE
	ND=NDUM
      RETURN
C
 1000 FORMAT(4I5,F10.3,I5,3F10.3,I5)
C-----------------------------------------------------------------------
 2004 FORMAT(
     111X,'INDIKATOR VRSTE 2/D ELEMENTA ................... IETYP =',I5/
     116X,'EQ.0; RAVANSKO STANJE NAPONA U RAVNI X - Y'/
     116X,'EQ.1; OSNOSIMETRICAN PROBLEM OKO Y OSE'/
     116X,'EQ.2; RAVANSKO STANJE DEFOFMACIJE U RAVNI X - Y'/
     116X,'EQ.3; 2/D ELEMENT U PROSTORU'/
     116X,'EQ.4; SMICUCI PANEL U PROSTORU'//)
 2000 FORMAT(
     611X,'BROJ GAUSOVIH TACAKA U PRAVCU OSE R   ......... NGAUSX =',I5/
     616X,'EQ.0; NGAUSX = 2'//)
 2002 FORMAT(
     611X,'BROJ GAUSOVIH TACAKA U PRAVCU OSE S   ......... NGAUSY =',I5/
     616X,'EQ.0; NGAUSY = 2'//)
 2001 FORMAT(
     611X,'BROJ NJUTN-KOTESOVIH TACAKA U PRAVCU OSE R  ... NGAUSX =',I5/
     6//)
 2003 FORMAT(
     611X,'BROJ NJUTN-KOTESOVIH TACAKA U PRAVCU OSE S  ... NGAUSY =',I5/
     6//)
 2010 FORMAT(
     611X,'BROJ RAZLICITIH VISESLOJNIH SETOVA MATERIJALA ... MSET =',I5/
     616X,'GT.0; VISESLOJNA LJUSKA'///
     611X,'UGAO SETOVA U ODNOSU NA REFERENTNI PRAVAC .. BETA =',1PD10.3/
     6//11X,'MAKSIMALAN BROJ SLOJEVA ................... MSLOJ =',5X,I5)
 2020 FORMAT(
     611X,'UGAO VLAKANA U ODNOSU NA REFERENTNI PRAVAC . BETA =',1PD10.3)
 2025 FORMAT(//
     611X,'KOORDINATE TACKE PROJEKCIONOG PRAVCA ....... CPPX =',1PD10.3/
     611X,'                                     ....... CPPY =',1PD10.3/
     611X,'                                     ....... CPPZ =',1PD10.3/
     6//
     611X,'METOD INKOMPATIBILNIH MODOVA ................... IALFA =',I5/
     616X,'EQ.-1; NE KORISTI SE'/
     616X,'EQ. 0; IALFA=1'/
     616X,'EQ. 1; 4 PARAMETARA - TAYLOR'/
     616X,'EQ. 2; 5 PARAMETARA')
 2030 FORMAT(///' NEDOVOLJNA DIMENZIJA U VEKTORU A ZA PODATKE O ELEMENTI
     1MA LJUSKE'/' POTREBNA DIMENZIJA , LMAX=',I10/' RASPOLOZIVA DIMENZI
     2JA,  MTOT =',I10)
C-----------------------------------------------------------------------
 6004 FORMAT(
     111X,'2/D ELEMENT TYPE IN THE CURRENT GROUP .......... IETYP =',I5/
     116X,'EQ.0; PLANE STRESS'/
     116X,'EQ.1; AXISYMMETRIC'/
     116X,'EQ.2; PLANE STRAIN'/
     116X,'EQ.3; PLANE STRESS IN SPACE'/
     116X,'EQ.4; SHEAR PANEL IN SPACE'//)
 6000 FORMAT(
     611X,'NUMBER OF GAUSS POINTS IN R-DIRECTION ......... NGAUSX =',I5/
     616X,'EQ.0; NGAUSX = 2'//)
 6002 FORMAT(
     611X,'NUMBER OF GAUSS POINTS IN S-DIRECTION ......... NGAUSY =',I5/
     616X,'EQ.0; NGAUSY = 2'//)
 6001 FORMAT(
     611X,'NUMBER OF NEWTON-COTES POINTS IN R-DIRECTION .. NGAUSX =',I5/
     6//)
 6003 FORMAT(
     611X,'NUMBER OF NEWTON-COTES POINTS IN S-DIRECTION .. NGAUSY =',I5/
     6//)
 6010 FORMAT(
     611X,'NUMBER OF DIFFERENT MULTILAYERD MATERIAL SETS ... MSET =',I5/
     616X,'GT.0; MULTILAYERD SHELL'///
     611X,'ANGLE OF SETS TO REFERENT DIRECTION ........ BETA =',1PD10.3/
     6//11X,'MAXIMUM NUMBER OF LAYERS .................. MSLOJ =',5X,I5)
 6020 FORMAT(
     611X,'ANGLE OF FIBER TO REFERENT DIRECTION ....... BETA =',1PD10.3)
 6025 FORMAT(//
     611X,'COORDINATES FOR PROJECTING DIRECTION ....... CPPX =',1PD10.3/
     611X,'                                     ....... CPPY =',1PD10.3/
     611X,'                                     ....... CPPZ =',1PD10.3/
     6//
     611X,'METHOD OF INCOMPATIBLE MODES ................... IALFA =',I5/
     616X,'EQ.-1; NOT USED'/
     616X,'EQ. 0; IALFA=1'/
     616X,'EQ. 1; 4 PARAMETERS - TAYLOR'/
     616X,'EQ. 2; 5 PARAMETERS')
 6030 FORMAT(///' NOT ENOUGH SPACE IN WORKING VECTOR  A'
     1/' REQUESTED DIMENSION , LMAX=',I10
     2/' AVAILABLE DIMENSION , MTOT=',I10)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UL2EK(AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM POINTERS AND READING INPUT DATA ABOUT 2/D ELEMENTS
CE.      IN VECTOR AU
CS.   P R O G R A M
CS.      ZA FORMIRANJE REPERA I U VEKTOR AU UCITAVANJE OPSTIH ULAZNIH 
CS.      PODATAKA O ELEMENTIMA: 2/D, TROUGAO
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /UGAOVL/ TE(4,4)
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /DUPLAP/ IDVA
      COMMON /restap/ irestp,lplas0,lstaz0
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /POSTPR/ LNDTPR,LNDTGR,NBLPR,NBLGR,INDPR,INDGR
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /MASINA/ INDPC,ICRTA
      COMMON /RESTAR/ TSTART,IREST
      COMMON /SRPSKI/ ISRPS
      COMMON /PODTIP/ IPODT
      COMMON /SPANEL/ ISHEAR
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /CVSILE/ NSILA,LESILA
      COMMON /MIXEDM/ MIXED,IOPGS(6),NDS
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
      COMMON /SUMELE/ ISUMEL,ISUMGR
      COMMON /MATERM/ LMODEL,LGUSM
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /OBNOVA/ IRUSI
      COMMON /CRACKS/ CONTE,SINTE,FK123(10,3),NODCR(10,14),NCRACK,LQST,
     1                LNERING,LMIE,LPSI,LQ,N100,IRING,NSEG,MAXRIN,MAXSEG
     1                ,MAXNOD,LXL,LYL,LZL,LSIF1,LXGG,LYGG,LZGG,LNNOD
      COMMON /CRXFEM/ NCXFEM,LNODTIP,LNSSN,LPSIE,LFIE,LHNOD,
     1                LPSIC,LFI,LHZNAK,LNSSE,LKELEM,LID1,LID2
      COMMON /gocajo/ LNGG,KOJEB
      DIMENSION AU(*)
      REAL AU
      COMMON /CDEBUG/ IDEBUG

C
      IF(IDEBUG.GT.0) PRINT *, ' UL2EK'
      LMAX8=LMAX8+1
      IF(IREST.EQ.1) THEN
        LMA8=LMAX8
        READ(IELEM,REC=LMAX8)
     1IETYP,NGAUSX,NGAUSY,BETA,NCVE,ITERME,ICORGT,LCEL,LELC,NMA,NMI,
     1MXAU,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,LLMEL,IPODT,ISHEAR,
     1ND,NGS12,MSLOJ,MXS,MSET,NSILA,LESILA,LNNOD,
     1LNSLOJ,LMATSL,LDSLOJ,LBBET,INCOTX,INCOTY,INCOTZ,
     1LBET0,(CPP(J,1),J=1,3),IBB0,LALFE,LHAEM,LHINV,LGEEK,IALFA,
     1INDBTH,INDDTH,LTBTH,LTDTH,NDS,ILEDE,NLD,ICPM1
        CALL READDD(AU,MXAU/IDVA,IELEM,LMAX8,LDUZI)
        LMAX8=LMA8
      ENDIF
C
CS     POZIVANJE PROGRAMA ZA ULAZNE PODATKE  O  2/D ELEMENTIMA
CE     CALL ROUTINE FOR INPUT DATA ABOUT 2/D ELEMENTS
C
      NMA=0
      NMI=0
      CALL UL2EKC(AU(LNEL),AU(LNMAT),AU(LIPGC),AU(LISNA),AU(LIPRC),
     1            AU(LTHID),AU(LNSLOJ),AU(LMATSL),AU(LBBET),AU(LDSLOJ),
     1            AU(LTBTH),AU(LTDTH),AU(LCEL),NMA,NMI,ICVEL,AU(LNNOD))
C      CALL IWRR(AU(LNNOD),NE,'NCV0')
C PAZNJA!!!! NIJE DOGRADJEN UGAO PROJEKCIONOG PRAVCA U LBET0 ZA IBB0=1
      CALL CLEAR(AU(LBET0),NE)
CE    WRITING DATA ABOUT ELEMENTS IN GRAPHIC OUTPUT FILES
      ISUMG=ISUMGR
      ISUME=ISUMEL
      IF(NBLGR.GE.0)
     1CALL TGRAFE(AU(LNEL),AU(LCEL),ICVEL,AU(LTHID),AU(LNMAT))
C
      ISUMGR=ISUMG
      ISUMEL=ISUME
      IF(NBLGR.GE.0) 
     +CALL TGRAU2(AU(LNEL),AU(LCEL),ICVEL,AU(LNMAT),AU(LTHID),49)
C
CE    CONNECT NODE NUMBERS FOR FREE NODE NUMERATION
      IF(ICVEL.EQ.1) CALL VEZACE(AU(LNEL),A(LELCV),NE,NCVE)
C
      K4=3
      IF(IETYP.EQ.1) K4=4
      NDS=0
      IF(MIXED.EQ.1) NDS=NCVE*K4
      NCVE2=NCVE*2
      IF(IETYP.LE.2) THEN
         ND=NCVE2
      ELSE
         ND=NCVE*3
      ENDIF
      LLMEL=LNEL+NE*NCVE
      LELC=LLMEL
      IF(ICVEL.EQ.1) THEN
CE      NMA IS MAXIMUM AND NMI IS MINIMUM ELEMENT NUMBERS USED IN FREE
CE      ELEMENT NUMERATION
        LLMEL=LELC+NMA-NMI+1
        LMAX=LAU+LLMEL-1
        IF(LMAX.GT.MTOT) GO TO 4
CE      CLEAR INTEGERS IN WORKING VECTOR
        CALL ICLEAR(AU(LELC),NMA-NMI+1)
CE      CONNECT ELEMENT NUMBERS FOR FREE ELEMENT NUMERATION
        CALL VEZAEL(AU(LCEL),AU(LELC),NE,NMI)
C       TO CONECT NUMBERS NODES AND ELEMENTS FOR CRACKS IN FREE NUMERATION
C       OVO BI MOGLO DA SE PREMESTI KOD UCITAVANJA PRSLINA JER SE ELEMENTI NE KORISTE
        IF(NCRACK.GT.0.AND.NGE.EQ.1) CALL VEZACC(A(LELCV),AU(LELC),2)
      ENDIF
C      LMXAU=LLMEL+NE*(ND+NDS)
      LMXAU=LLMEL
C
C     TEZINSKE FUNKCIJE I ELEMENTI PO PRSTENOVIMA ZA EDI INTEGRAL
      IF(NCRACK.GT.0.AND.NGE.EQ.1) THEN
         CALL DELJIV(LMXAU,2,INDL)
         IF(INDL.EQ.0) LMXAU=LMXAU+1
         LPSI=LMXAU
         LMXAU=LPSI+NCRACK*MAXRIN*NE*MAXNOD*IDVA
C        LQST=LPSI+NCRACK*MAXRIN*NE*NCVE*IDVA
C        LMXAU=LQST+NCRACK*MAXSEG*MAXRIN*N100*NCVE*IDVA
         LMAX=LAU+LMXAU-1
         IF(LMAX.GT.MTOT) GO TO 4
         CALL CLEAR(AU(LPSI),NCRACK*MAXRIN*NE*MAXNOD)
C         CALL CLEAR(AU(LQST),NCRACK*MAXSEG*MAXRIN*N100*MAXNOD)
      ENDIF
C
      LALFE=LMXAU
      LHAEM=LMXAU
      LHINV=LMXAU
      LGEEK=LMXAU
      IF(NCVE.NE.4) IALFA=-1
      LA=1
      IF(IALFA.EQ.1) LA=4
      IF(IALFA.EQ.2) LA=5
      IF(IALFA.EQ.3) LA=4
      CALL DELJIV(LMXAU,2,INDL)
      IF(INDL.EQ.0) LMXAU=LMXAU+1
      IF(IALFA.GE.0) THEN
         LALFE=LMXAU
         LHAEM=LALFE+NE*LA*IDVA
         LHINV=LHAEM+NE*LA*IDVA
         LGEEK=LHINV+NE*LA*LA*IDVA
         LMXAU=LGEEK+NE*LA*NCVE2*IDVA
      ENDIF
      LESILA=LMXAU
      LMXAU=LESILA+NSILA*ND*IDVA
C
      MXAU = LMXAU - 1
      CALL DELJIV(MXAU,2,INDL)
      IF(INDL.EQ.1) MXAU=MXAU+1
      LMAX=LAU+MXAU
    4 IF(LMAX.GT.MTOT) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2005) LMAX,MTOT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6005) LMAX,MTOT
      STOP
      ENDIF
C
      IF((IALFA.GE.0.OR.NSILA.GT.0).AND.IREST.NE.1) 
     1CALL CLEAR(AU(LALFE),(LMXAU-LALFE)/IDVA)
C
C     PROSTOR ZA XFEM
      IF(NCXFEM.GT.0) THEN
C        PROVERI DA LI MOZE DA RADI I ZA RAZLICIT BROJ CVOROVA OD 4?
         IF(NCVE.NE.4) STOP 'NCVE.NE.4.AND.NCXFEM.GT.0'
C        ZA VISE GRUPA MORALO BI DA SE ZAPISUJU REPERI I PODACI IZ *.INC     
         IF(NGE.GT.1) STOP 'NGE.GT.1.AND.NCXFEM.GT.0'
         CALL DELJIV(LMXAU,2,INDL)
         IF(INDL.EQ.0) LMXAU=LMXAU+1
         LPSIC=LMXAU
         LFI=LPSIC+NE*NCVE*IDVA
         LHZNAK=LFI+NE*NCVE*IDVA
         LKELEM=LHZNAK+NE*NCVE*IDVA
         LNSSE=LKELEM+NE
         LNGG=LNSSE+NE
         LMXAU=LNGG+NE
C
         LMAX=LAU+LMXAU-1
         IF(LMAX.GT.MTOT) GO TO 4
         CALL CLEAR(AU(LPSIC),3*NE*NCVE)
         CALL ICLEAR(AU(LKELEM),3*NE)
C        AKO SE DOGRADJUJE AUTOMATSKI RAST PRSLINE SVE MORA DA SE PREBACI U PAK22.FOR
C        ===============================================================
C        LS-FUNKCIJE PO CVOROVIMA ELEMENTA
         CALL LS_EDGE(AU(LNEL),AU(LFI),AU(LPSIC),AU(LKELEM),
     1                A(LCORD),A(LCORD+NP*IDVA),NE)
C        ===============================================================
C        PRESECNE TACKE PRSLINE PO ELEMENTIMA
         CALL XEC_YEC(AU(LNEL),AU(LFI),AU(LPSIC),AU(LKELEM),
     1                A(LCORD),A(LCORD+NP*IDVA),NE)
C        ===============================================================
C        CRTANJE LS-FUNKCIJA U TEC-PLOTU
         CALL CRT_LS(A(LFIE),A(LPSIE),AU(LNEL),AU(LFI),AU(LPSIC),
     1               A(LCORD),A(LCORD+NP*IDVA),NE,NP)
C        ===============================================================
C        POLARNO-CILINDRICNE KOORDINATE RO,TETA      
C        FUNKCIJE BOGACENJA (H (HZNAK) 
C        NT funkcije i njihovi izvodi (PSI1-4,PSI1-4R,PSI1-4T)
C        KOSINUSI PRAVACA PRSLINE VX1,VX2
C        BROJ STEPENI SLOBODE PO NODU NSSN, 
C        BROJ STEPENI SLOBODE PO ELEMENTU NSSE
C        BOGACENJE SA H funkciom
         IF(KOJEB.LT.0)
     1   CALL ENRICH1(A(LCORD),A(LNODTIP),A(LNSSN),AU(LHZNAK),A(LHNOD),
     1                AU(LNSSE),AU(LFI),AU(LPSIC),AU(LKELEM),
     1                AU(LNEL),NE,NP,K1,K2)

C        BOGACENJE SA H i NT funkcijama
         IF(KOJEB.GT.0)
     1   CALL ENRICH2(A(LCORD),A(LFIE),A(LPSIE),A(LNODTIP),A(LNSSN),
     1                AU(LHZNAK),A(LHNOD),AU(LNSSE),AU(LFI),AU(LPSIC),
     1                AU(LKELEM),AU(LNEL),NE,NP,K1,K2)
C        ===============================================================
C        DODAVANJE JEDNACINA ZA XFEM
         LID1=LMXAU
         LID2=LID1+K1*2
         LMXAU=LID2+K2*8
C        
         CALL JXFEM(AU(LID1),AU(LID2),K1,K2,JEDN)
C        ===============================================================
      ENDIF
C
CE    FORM VECTOR LM AND HEIGHT COLUMNS IN STIFFNESS MATRIX
CS    FORMIRANJE VEKTORA LM I VISINA STUBOVA
C
      NDNDS=ND+NDS
      LLMEL=LMXAU
      LMXAU=LLMEL+NE*NDNDS
      NLMM=NE*NDNDS
      MXAU = LMXAU - 1
      CALL DELJIV(MXAU,2,INDL)
      IF(INDL.EQ.1) MXAU=MXAU+1
      LMAX=LAU+MXAU
      IF(LMAX.GT.MTOT) GO TO 4
      CALL ICLEAR(AU(LLMEL),NLMM)
      CALL LMIMHT(A(LID),AU(LNEL),AU(LLMEL),NDNDS,K4,
     1            A(LNODTIP),AU(LID1),AU(LID2),K1,K2,NCXFEM)
C
      NGS12=NGAUSX*NGAUSY
      IF(NCXFEM.GT.0) NGS12=36
C
CS    ZAPISIVANJE SKALARA NA DIREKT ACCES FILE 
CE    WRITE SCALARS TO A DIRECT ACCESS FILE
C
      IF(LDUZI.LE.100) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) LDUZI
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) LDUZI
      STOP
      ENDIF
      WRITE(IELEM,REC=LMAX8)
     1IETYP,NGAUSX,NGAUSY,BETA,NCVE,ITERME,ICORGT,LCEL,LELC,NMA,NMI,
     1MXAU,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,LLMEL,IPODT,ISHEAR,
     1ND,NGS12,MSLOJ,MXS,MSET,NSILA,LESILA,LNNOD,
     1LNSLOJ,LMATSL,LDSLOJ,LBBET,INCOTX,INCOTY,INCOTZ,
     1LBET0,(CPP(J,1),J=1,3),IBB0,LALFE,LHAEM,LHINV,LGEEK,IALFA,
     1INDBTH,INDDTH,LTBTH,LTDTH,NDS,ILEDE,NLD,ICPM1
      CALL WRITDD(AU,MXAU/IDVA,IELEM,LMAX8,LDUZI)
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
C
      LPLAST=LMAX
      LPLAS1=LMAX
      lplas0=lmax
      LSIGMA=LMAX
      IF(IATYP.EQ.0) GO TO 10
      IF(NMODM.LE.4) GO TO 10
      NPROS=NE*NGS12*MXS*MODPR2( NMODM )*IDVA
      LPLAS1=LPLAST+NPROS
      LMAX=LPLAS1+NPROS
      idum=2
      if(irusi.eq.1) then
         idum=3
         LPLAS0=LMAX
         LMAX=LPLAS0+NPROS
      endif
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      IF(IREST.NE.1) THEN
         CALL CLEAR(A(LPLAST),NPROS*idum/IDVA)
         CALL WRITDD(A(LPLAST),NPROS/IDVA,IELEM,LMAX8,LDUZI)
         CALL WRITDD(A(LPLAS1),NPROS/IDVA,IELEM,LMAX8,LDUZI)
         if(irusi.eq.1) 
     1   CALL WRITDD(A(LPLAS0),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      ELSE
         CALL READDD(A(LPLAST),NPROS/IDVA,IELEM,LMAX8,LDUZI)
         CALL READDD(A(LPLAS1),NPROS/IDVA,IELEM,LMAX8,LDUZI)
         if(irusi.eq.1) 
     1   CALL READDD(A(LPLAS0),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      ENDIF
      IF(IATYP.GE.4) GO TO 10
      NPROS=0
      LSIGMA=LMAX
      IF(ITERME.EQ.1) GO TO 20
      IF(ICORGT.EQ.1) GO TO 30
      RETURN
C
   10 LSIGMA=LMAX
      N45=NLD
      NPROS=NE*NGS12*N45*MXS*IDVA
      IF(NMODM.LE.4) NPROS=NPROS*2
      LMAX=LSIGMA+NPROS
      LCOR0=LMAX
      IF(IATYP.GE.4) THEN
         NPRO1=NE*NCVE*3*IDVA
         LMAX=LCOR0+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
   20 LTEMGT=LMAX
      IF(ITERME.EQ.1) THEN
         NPRO1=NE*NGS12*MXS*IDVA
         LMAX=LTEMGT+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
   30 LCORGT=LMAX
      IF(ICORGT.EQ.1) THEN
         NPRO1=NE*NGS12*3*MXS*IDVA
         LMAX=LCORGT+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      IF(IREST.NE.1) THEN
         CALL CLEAR(A(LSIGMA),NPROS/IDVA)
C
CS       ZADAVANJE POCETNE VREDNOSTI ZA - B
CE       INITIAL VALUE FOR - B 
C
         IF(IATYP.GE.4)
     1   CALL ZADA2B(A(LSIGMA),NE,NGS12,MXS,N45)
         CALL WRITDD(A(LSIGMA),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      ELSE
         CALL READDD(A(LSIGMA),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      ENDIF
C      call wrr6(AU(LPSIC),NE*NCVE,'PSIC')
C      call wrr6(AU(LFI),NE*NCVE,'PFI ')
C      call wrr6(AU(LHZNAK),NE*NCVE,'HZNA')
C      CALL IWRR(AU(LKELEM),NE,'KELE')
C      CALL IWRR(AU(LNSSE),NE,'NSSE')
C      CALL IWRR(A(LNODTIP),NP,'NODT')
C      CALL IWRR(AU(LID1),K1*2,'ID1 ')
C      CALL IWRR(AU(LID2),K2*8,'ID2 ')
C      WRITE(3,*) 'LLMEL,LNEL,NDNDS',LLMEL,LNEL,NDNDS
C      CALL IWRR(AU(LLMEL),NE*NDNDS,'LMEL')
C      CALL IWRR(AU(LNEL),NE*NCVE,'LNEL')
C      CALL IWRR(AU(LNMAT),NE,'NMAT')
C      CALL WRR6(AU(LTHID),NE,'THID')
C      CALL IWRR(AU(LIPGC),NE,'IPGC')
C      CALL IWRR(AU(LIPRC),NE,'IPRC')
C      CALL IWRR(AU(LISNA),NE,'ISNA')
C      WRITE(3,*) 'MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA',
C     1               MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA
      RETURN
C-----------------------------------------------------------------------
 2000 FORMAT(//' DUZINA STAZE RECL=LDUZI=',I5,' ZA FILE=IELEM, ACCESS=
     1DIRECT, MORA BITI VECA OD    100'//' PROGRAM STOP'//)
 2005 FORMAT(///' NEDOVOLJNA DIMENZIJA U VEKTORU A ZA PODATKE O 2D ELEME
     1NTIMA'/' POTREBNA DIMENZIJA , LMAX=',I10/' RASPOLOZIVA DIMENZIJA,
     2NTOT =',I10)
C-----------------------------------------------------------------------
 6000 FORMAT(//' RECORD LENGTH RECL=LDUZI=',I5,'  FILE=IELEM, ACCESS=
     1DIRECT, MUST BE  .GT. THEN  100'//' PROGRAM STOP'//)
 6005 FORMAT(///' NOT ENOUGH SPACE IN WORKING VECTOR A FOR 2/D ELEMENTS'
     1/' REQUESTED DIMENSION , LMAX=',I10
     2/' AVAILABLE DIMENSION , MTOT=',I10)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UL2EKC(NEL,MATV,IPGCV,ISNAP,IPRCV,THICK,NSLOJ,MATSL,
     1                  BBET,DSLOJ,TBTH,TDTH,MCVEL,NMA,NMI,ICVEL,NNOD)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO READING INPUT DATA ABOUT 2/D ELEMENTS - FREE NUMBERING
CS.   P R O G R A M
CS.      ZA UCITAVANJE ULAZNIH PODATAKA O ELEMENTIMA: 2/D, TROUGAO
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      CHARACTER*5  CH
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /SRPSKI/ ISRPS
      COMMON /PODTIP/ IPODT
      COMMON /CVSILE/ NSILA,LESILA
      COMMON /RESTAR/ TSTART,IREST
      COMMON /STAPRO/ THIDP(100),NPROPR(100)
C
      DIMENSION NPODT(9)
      DIMENSION NEL(NE,*),MATV(*),IPGCV(*),ISNAP(*),IPRCV(*),THICK(NE,*)
     1         ,NSLOJ(*),MATSL(MSLOJ,*),BBET(MSLOJ,*),DSLOJ(MSLOJ,*),
     1          TBTH(*),TDTH(*),MCVEL(*),THI(4),NNOD(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UL2EKC'
      if(irest.ne.1) CALL ICLEAR(Nel,ne*9)
      CALL ICLEAR(NPROPR,100)
      NDEB=1
      IF(IATYP.GT.3) THEN
         NDEB=4
         IF(IPODT.EQ.1) NDEB=3
      ENDIF
      IF(ISRPS.EQ.0) CH=' BROJ'
      IF(ISRPS.EQ.1) CH='NUMBE'
      MXS=1
      ICORGT=0
C
CS     P  O  D  A  C  I      O      S  L  O  J  E  V  I  M  A
CE     D  A  T  A      A  B  O  U  T      L  A  Y  E  R  S
C
      IF(MSET.GT.0) THEN
         CH='  SET'
      IF(ISRPS.EQ.0.AND.(NULAZ.EQ.1.OR.NULAZ.EQ.3))
     1WRITE(IZLAZ,2500)
      IF(ISRPS.EQ.1.AND.(NULAZ.EQ.1.OR.NULAZ.EQ.3))
     1WRITE(IZLAZ,6500)
         DO 2 I=1,MSET
            CALL ISPITA(ACOZ)
            IF(INDFOR.EQ.1)
     1      READ(IULAZ,*) NSLOJ(I)
            IF(INDFOR.EQ.2)
     1      READ(ACOZ,1000) NSLOJ(I)
            IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2530) I,NSLOJ(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6530) I,NSLOJ(I)
            ENDIF
            IF(NSLOJ(I).LT.1.OR.NSLOJ(I).GT.MSLOJ) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2505)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6505)
               STOP 'STOP - UL2EKC'
            ENDIF
            IF(NSLOJ(I).GT.MXS) MXS=NSLOJ(I) 
            TTT=0.D0
            DO 1 J=1,NSLOJ(I)
               CALL ISPITA(ACOZ)
               IF(INDFOR.EQ.1)
     1         READ(IULAZ,*)   MATSL(J,I),DSLOJ(J,I),BBET(J,I)
               IF(INDFOR.EQ.2)
     1         READ(ACOZ,1515) MATSL(J,I),DSLOJ(J,I),BBET(J,I)
               IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2540) J,MATSL(J,I),DSLOJ(J,I),BBET(J,I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6540) J,MATSL(J,I),DSLOJ(J,I),BBET(J,I)
               ENDIF
               BBET(J,I)=BBET(J,I)*3.1415926536D0/180.D0
               TTT=TTT+DSLOJ(J,I)
    1       CONTINUE
CS....      PROVERA ZA DEBLJINE
            IF(DABS(TTT-1.D0).LT.1.D-6) GO TO 2
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2550) TTT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6550) TTT
            STOP 'STOP - UL2EKC'
    2    CONTINUE      
      ENDIF
C
CS    P  O  D  A  C  I      O      E  L  E  M  E  N  T  I  M  A
CE    D  A  T  A      A  B  O  U  T      E  L  E  M  E  N  T  S
C
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
         IF(IPODT.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NGE,CH
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NGE,CH
         ENDIF
         IF(IPODT.EQ.1) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2010) NGE,CH
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6010) NGE,CH
         ENDIF
      ENDIF
	ncveul=9
	if(irest.eq.1) ncveul=ncve
      IT1=4
      IT2=9
      IF(IPODT.EQ.1) THEN
         IT1=3
         IT2=6
      ENDIF
      NMATS=  1
      IPRCOS=-1
      IPGSS= -1
      ISNAA= -1
      THICS=  1.0D0
      I = 0
      NAUT=0
    5 I = I + 1
      CALL ISPITA(ACOZ)
      IF(I.EQ.1) KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) NN,NMAT,IPRCO,ISNA,IPGS,THI(1),KORC,BTH,DTH,
     +              (THI(J),J=2,NDEB)
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1010) NN,NMAT,IPRCO,ISNA,IPGS,THI(1),KORC,BTH,DTH,
     +                (THI(J),J=2,NDEB)
      IF(IPRCO.EQ.1) ICORGT=1
      IF(ICVEL.EQ.1) THEN
         MCVEL(I)=NN
         NI=NN
         IF(I.EQ.1) THEN
            NMA=NN
            NMI=NN
         ELSE
            IF(NMA.LT.NN) NMA=NN
            IF(NMI.GT.NN) NMI=NN
         ENDIF
         NN=I
      ENDIF
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) (NEL(NN,J),J=1,NCVE)
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) (NEL(NN,J),J=1,NCVE)
      IF(NMAT.EQ.0) NMAT=NMATS
      NMATS=NMAT
      MATV(NN)= NMAT
      IF(IPRCO.EQ.0) IPRCO=IPRCOS
      IPRCOS=IPRCO
      IF(IPRCO.LT.0) IPRCO = 0
      IPRCV(NN)=IPRCO
      IF(ISNA.EQ.0) ISNA=ISNAA
      ISNAA=ISNA
      IF(ISNA.LT.0) ISNA = 0
      ISNAP(NN)=ISNA
      IF(IPGS.EQ.0) IPGS=IPGSS
      IPGSS=IPGS
      IF(IPGS.LT.0) IPGS = 0
      IPGCV(NN)=IPGS
      IF(DABS(THI(1)).LT.1.D-10) THI(1)=THICS
      THICS=THI(1)
      THICK(NN,1)=THI(1)
      DO 731 J=2,NDEB
C         RELATIVNE DEBLJINE
C         IF(DABS(THI(J)).LT.1.D-10) THI(J)=1.D0
C         THICK(NN,J)=THI(1)*THI(J)
C        UKUPNE DEBLJINE
         IF(DABS(THI(J)).LT.1.D-10) THI(J)=THI(1)
         THICK(NN,J)=THI(J)
  731 CONTINUE
      IF(INDBTH.EQ.1) TBTH(NN)=BTH
      IF(INDDTH.EQ.1) TDTH(NN)=DTH
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
         IF(ICVEL.EQ.1) IN=MCVEL(NN)
         IF(ICVEL.EQ.0) IN=NN
         IF(IPODT.EQ.0) WRITE(IZLAZ,5000) IN,(NEL(NN,J),J=1,IT1),NMAT,
     1                  IPRCO,ISNA,IPGS,THI(1),KORC,(THI(J),J=2,NDEB)
         IF(IPODT.EQ.0.AND.NCVE.GT.IT1) 
     +                  WRITE(IZLAZ,5011) (NEL(NN,J),J=IT1+1,NCVE)
         IF(IPODT.EQ.1) WRITE(IZLAZ,5002) IN,(NEL(NN,J),J=1,IT1),NMAT,
     1                  IPRCO,ISNA,IPGS,THI(1),KORC,(THI(J),J=2,NDEB)
         IF(IPODT.EQ.1.AND.NCVE.GT.IT1) 
     +                  WRITE(IZLAZ,5013) (NEL(NN,J),J=IT1+1,NCVE)
         IF(INDBTH.EQ.1) THEN
         IF(DABS(TBTH(NN)).GT.1.0D-10) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040) TBTH(NN)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040) TBTH(NN)
         ENDIF
         ENDIF
         IF(INDDTH.EQ.1) THEN 
         IF(DABS(TDTH(NN)).GT.1.0D-10) THEN 
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2050) TDTH(NN)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6050) TDTH(NN)
         ENDIF
         ENDIF
      ENDIF
      IF(NAUT.GT.0) GO TO 30
      IF(KORC.NE.0) GO TO 20
      IF(I.EQ.NE) GO TO 50
      GO TO 5
C
   20 NAUT=1
      IF(ICVEL.EQ.1) N1=NI
      IF(ICVEL.EQ.0) NN1=NN
      KORA=KORC
      GO TO 5
C
CS    AUTOMATSKO GENERISANJE PODATAKA IZMEDJU CVOROVA N1 I N2
CE    AUTOMATIC  GENERATION BETWEN NODES  N1  AND  N2
C
   30 NN2=NN
      IF(ICVEL.EQ.1) THEN
         NN1=NN-1
         N2=NI
      ENDIF
      N11=NEL(NN1,1)
      N22=NEL(NN2,1)
      N12=N22-N11
      CALL DELJIV(N12,KORA,INDD)
      IF(INDD.EQ.1) GO TO 100
      DO 40 NC=2,IT1
         N11=NEL(NN1,NC)
         N22=NEL(NN2,NC)
         N21=N22-N11
         IF(N12.NE.N21) GO TO 100
   40 CONTINUE
      IF(NCVE.GT.IT1) THEN
         DO 45 NC=IT1+1,NCVE
            N11=NEL(NN1,NC)
            N22=NEL(NN2,NC)
            IF(N11.EQ.0.AND.N22.EQ.0) GO TO 45
            N21=N22-N11
            IF(N12.NE.N21) GO TO 100
   45    CONTINUE
      ENDIF
      IF(ICVEL.EQ.1) NNN=N2-N1-1
      IF(ICVEL.EQ.0) NNN=NN2-NN1-1
      NGG=N12/KORA-1
      IF(NNN.NE.NGG) THEN
         IF(ICVEL.EQ.1) THEN
            NN1=N1
            NN2=N2
         ENDIF
         GO TO 150
      ENDIF
      IAUT=N12/KORA-1
      IF(ICVEL.EQ.1) THEN
         NM=NN+IAUT
         MCVEL(NM)=MCVEL(NN)
         MATV(NM) = MATV(NN)
         IPRCV(NM)=IPRCV(NN)
         ISNAP(NM)=ISNAP(NN)
         IPGCV(NM)=IPGCV(NN)
         DO 732 J=1,NDEB
            THICK(NM,J)=THICK(NN,J)
  732    CONTINUE
         IF(INDBTH.EQ.1) TBTH(NM) = TBTH(NN)
         IF(INDDTH.EQ.1) TDTH(NM) = TDTH(NN)
         DO 32 II=1,NCVE
            NEL(NM,II)=NEL(NN,II)
   32    CONTINUE
      ENDIF
      DO 34 J=1,IAUT
         JJ=NN1+J
         IF(ICVEL.EQ.1) THEN
            N1=N1+1
            MCVEL(JJ)=N1
         ENDIF
         MATV(JJ) = MATV(NN1)
         IPRCV(JJ)=IPRCV(NN1)
         ISNAP(JJ)=ISNAP(NN1)
         IPGCV(JJ)=IPGCV(NN1)
         DO 735 II=1,NDEB
            THICK(JJ,II)=THICK(NN1,II)
  735    CONTINUE
         IF(INDBTH.EQ.1) TBTH(JJ) = TBTH(NN1)
         IF(INDDTH.EQ.1) TDTH(JJ) = TDTH(NN1)
         DO 35 II=1,NCVE
            NODP=NEL(JJ-1,II)
            NEL(JJ,II)=NODP+KORA
            IF(NODP.EQ.0) NEL(JJ,II) = 0
   35    CONTINUE
   34 CONTINUE
      IF(ICVEL.EQ.1) I=NM
      IF(ICVEL.EQ.0) I=I+IAUT
      IF(I.EQ.NE) GO TO 50
      NAUT=0
      IF(KORC.EQ.0) GO TO 5
      KORA=KORC
      NAUT=1
      IF(ICVEL.EQ.1) N1=N2
      IF(ICVEL.EQ.0) NN1=NN2
      GO TO 5
C
CS    ODREDJIVANJE MAKSIMALNOG BROJA CVOROVA
CE    OBTAIN MAXIMUM NUMBER OF NODES PER ELEMENT
C
   50 IF(IREST.EQ.1) GO TO 61
      NCVE=IT1
      DO 60 I=1,NE
         NNOD(I)=IT1
      DO 60 J=IT1+1,IT2
         IJ=NEL(I,J)
         IF(IJ.GT.0.AND.J.GT.NCVE) NCVE=J
         IF(IJ.GT.0.AND.J.GT.NNOD(I)) NNOD(I)=J
   60 CONTINUE
C
   61 NSILA=0
      IF(IETYP.GT.2) THEN
         CALL ICLEAR(IPGCV,NE)
      ELSE
      DO 65 I=1,NE
         IF(IPGCV(I).EQ.1) THEN
            NSILA=NSILA+1
            IPGCV(I)=NSILA
         ELSE
            IPGCV(I)=0
         ENDIF
   65 CONTINUE
      ENDIF
C
CS    STAMPANJE UCITANIH I GENERISANIH PODATAKA
CE    PRINT INPUT AND GENERATED DATA
C
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
         CALL WBROJK(KARTI,0)
         IF(IPODT.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2140) NGE,CH
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6140) NGE,CH
         ENDIF
         IF(IPODT.EQ.1) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2240) NGE,CH
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6240) NGE,CH
         ENDIF
         DO 70 I=1,NE
            IF(ICVEL.EQ.1) IN=MCVEL(I)
            IF(ICVEL.EQ.0) IN=I
            IF(IPODT.EQ.0) WRITE(IZLAZ,5001) IN,(NEL(I,J),J=1,IT1),
     1                     MATV(I),IPRCV(I),ISNAP(I),IPGCV(I),
     +                     (THICK(I,J),J=1,NDEB)
            IF(IPODT.EQ.0.AND.NCVE.GT.IT1) 
     1                     WRITE(IZLAZ,5011) (NEL(I,J),J=IT1+1,NCVE)
            IF(IPODT.EQ.1) WRITE(IZLAZ,5003) IN,(NEL(I,J),J=1,IT1),
     1                     MATV(I),IPRCV(I),ISNAP(I),IPGCV(I),
     +                     (THICK(I,J),J=1,NDEB)
            IF(IPODT.EQ.1.AND.NCVE.GT.IT1) 
     1                     WRITE(IZLAZ,5013) (NEL(I,J),J=IT1+1,NCVE)
         IF(INDBTH.EQ.1) THEN
         IF(DABS(TBTH(I)).GT.1.0D-10) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040) TBTH(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040) TBTH(I)
         ENDIF
         ENDIF
         IF(INDDTH.EQ.1) THEN 
         IF(DABS(TDTH(I)).GT.1.0D-10) THEN 
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2050) TDTH(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6050) TDTH(I)
         ENDIF
         ENDIF
   70    CONTINUE
      ENDIF
C
      IF(IPODT.EQ.1) THEN
         NCVZ=2
         IF(NCVE.EQ.3) NCVZ=1
         NCVE=NCVE+NCVZ
         DO 170 I=1,NE
            DO 171 J=4,IT2
               NPODT(J)=NEL(I,J)
  171       CONTINUE
            NEL(I,4)=NEL(I,1)
            IF(NCVE.GT.4) THEN
               NEL(I,8)=NEL(I,1)
               DO 172 J=1,3
                  NEL(I,J+4)=NPODT(J+3)
  172          CONTINUE
            ENDIF
  170    CONTINUE
      ENDIF
C     SVI ELEMENTI SU PROSIRENI NA KLASICAN 3D
      IT1=4
      IT2=9
	if(irest.eq.1) it2=ncveul
      IPODT=0
      NCVE=IT1
      DO 66 I=1,NE
         NNOD(I)=IT1
      DO 66 J=IT1+1,IT2
         IJ=NEL(I,J)
         IF(IJ.GT.0.AND.J.GT.NCVE) NCVE=J
         IF(IJ.GT.0.AND.J.GT.NNOD(I)) NNOD(I)=J
   66 CONTINUE
      RETURN
C
  150 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2110) NN1,NN2,NGG
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6110) NN1,NN2,NGG
      STOP
C
  100 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) N22,N11,KORA
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) N22,N11,KORA
      STOP
C
 1000 FORMAT(14I5)
 1010 FORMAT(5I5,F10.0,I5,2F10.0,3F5.3)
 1515 FORMAT(I5,2F10.0)
 5000 FORMAT(I6,1X,4I6,5X,4I6,1PD11.3,I6,3(1PD11.3))
 5001 FORMAT(I6,1X,4I6,5X,4I6,4(1PD11.3))
 5011 FORMAT(6X,5I6)
 5002 FORMAT(I6,3X,3I8,3X,4I6,1PD11.3,I6,3(1PD11.3))
 5003 FORMAT(I6,3X,3I8,3X,4I6,4(1PD11.3))
 5013 FORMAT(6X,3I8)
C-----------------------------------------------------------------------
 2000 FORMAT(///' UCITANI PODACI O CETVOROUGAONIM 2/D ELEMENTIMA GRUPE E
     1LEMENATA',I6/1X,68('-')///
     1' ELEME  CVOR1 CVOR2 CVOR3 CVOR4      MATER KOORD NAPON NAPON  DEB
     1LJINA  KORAK'/
     1'  BROJ CVOR5 CVOR6 CVOR7 CVOR8 CVOR9 ',A5,' STAMP STAMP CVORA  EL
     1EMENTA  GENER')
 2010 FORMAT(///' UCITANI PODACI O TROUGAONIM 2/D ELEMENTIMA GRUPE ELEME
     1NATA',I6/1X,64('-')///
     1' ELEME      CVOR1   CVOR2   CVOR3    MATER KOORD NAPON NAPON  DEB
     1LJINA  KORAK'/
     1'  BROJ   CVOR4   CVOR5   CVOR6       ',A5,' STAMP STAMP CVORA  EL
     1EMENTA  GENER')
 2100 FORMAT(///' BROJ CVORA N2=',I5,' NE MOZE SE DOBITI SABIRANJEM BROJ
     1A CVORA N1=',I5,' I KONACNOG BROJA KORAKA KORA=',I5)
 2110 FORMAT(///' IZMEDJU ELEMENATA N1=',I5,' I N2=',I5,' NEMA NG=',I5,
     1' ELEMENATA KOJE TREBA GENERISATI')
 2140 FORMAT(' GENERISANI PODACI O CETVOROUGAONIM 2/D ELEMENTIMA GRUPE E
     1LEMENATA',I6/1X,71('-')///
     3' ELEME  CVOR1 CVOR2 CVOR3 CVOR4      MATER KOORD NAPON NAPON  DEB
     1LJINA'/
     1'  BROJ CVOR5 CVOR6 CVOR7 CVOR8 CVOR9 ',A5,' STAMP STAMP CVORA  EL
     1EMENTA')
 2240 FORMAT(' GENERISANI PODACI O TROUGAONIM 2/D ELEMENTIMA GRUPE ELEME
     1NATA',I6/1X,67('-')///
     1' ELEME      CVOR1   CVOR2   CVOR3    MATER KOORD NAPON NAPON  DEB
     1LJINA'/
     1'  BROJ   CVOR4   CVOR5   CVOR6       ',A5,' STAMP STAMP CVORA  EL
     1EMENTA')
 2500 FORMAT(///6X,' UCITANI PODACI O VISESLOJNIM SETOVIMA MATERIJALA'/
     16X,49('-')///)
 2505 FORMAT(///' BROJ SLOJEVA U MATERIJALNOM SETU MORA BITI VECI OD 0'/
     1' (MAKSIMALNO :     MSLOJ )')
 2530 FORMAT(//10X,'MATERIJALNI SET (',I3,') ',5X,'BROJ SLOJEVA =',I3/)
 2540 FORMAT(/10X,'SLOJ =',I3/10X,'MATERIJAL =',I3/10X,'RELATIVNA ',
     1'DEBLJINA =',1PD10.3/10X,'UGAO VLAKANA =',1PD10.3) 
 2550 FORMAT(/// ' ZBIR RELATIVNIH DEBLJINA SLOJEVA U MATERIJALNOM SETU 
     1MORA BITI   1.00'/' (KONTROLNI ZBIR JE :   TTT =',1PD10.3)
 2040 FORMAT(/' VREME NASTAJANJA ELEMENTA - TBTH =',1PD10.3)
 2050 FORMAT(/' VREME NESTAJANJA ELEMENTA - TDTH =',1PD10.3)
C-----------------------------------------------------------------------
 6000 FORMAT(///' READING DATA ABOUT TO ISOPARAMETRIC 2/D ELEMENTS FOR G
     1ROUP',I6/1X,64('-')///
     1' ELEME  NODE1 NODE2 NODE3 NODE4      MATER COORD STRES STRES    T
     1HICK    STEP'/
     1' NUMBE NODE5 NODE6 NODE7 NODE8 NODE9 ',A5,' PRINT PRINT  NODE   E
     1LEMENT  GENER')
 6010 FORMAT(///' READING DATA ABOUT TO ISOPARAMETRIC TRIANGULAR ELEMENT
     1S FOR GROUP',I6/1X,71('-')///
     1' ELEME      NODE1   NODE2   NODE3    MATER COORD STRES STRES    T
     1HICK    STEP'/
     1' NUMBE   NODE4   NODE5   NODE6       ',A5,' PRINT PRINT  NODE   E
     1LEMENT  GENER')
 6100 FORMAT(///' NODE NUMBER N2=',I5,' CAN NOT BE DEFINED BY SUPERPOSIT
     1ION OF NODE N1=',I5,' WITH A NUMBER OF STEPS  KORA=',I5)
 6110 FORMAT(///' AMONG ELEMENTS N1=',I5,' AND N2=',I5,' THERE IS NO  ',
     1'NG=',I5,' ELEMENTS TO GENERATE')
 6140 FORMAT (' GENERATED DATA ABOUT TO ISOPARAMETRIC 2/D ELEMENTS FOR G
     1ROUP',I6/1X,66('-')///
     1' ELEME  NODE1 NODE2 NODE3 NODE4      MATER COORD STRES STRES    T
     1HICK '/
     1' NUMBE NODE5 NODE6 NODE7 NODE8 NODE9 ',A5,' PRINT PRINT  NODE   E
     1LEMENT')
 6240 FORMAT (' GENERATED DATA ABOUT TO ISOPARAMETRIC TRIANGULAR ELEMENT
     1S FOR GROUP',I6/1X,73('-')///
     1' ELEME      NODE1   NODE2   NODE3    MATER COORD STRES STRES    T
     1HICK '/
     1' NUMBE   NODE4   NODE5   NODE6       ',A5,' PRINT PRINT  NODE   E
     1LEMENT')
 6500 FORMAT(///6X,' READING DATA ABOUT MULTILAYERED MATERIAL SETS'/
     16X,46('-')///)
 6505 FORMAT(///' NUMBER OF LAYERS IN MATERIAL SET MUST BE GREATER',
     1          ' THAN   0'/' (MAXIMUM :     MSLOJ )')
 6530 FORMAT(//10X,'MATERIAL SET (',I3,') ',5X,'NUMBER OF LAYERS =',I3/)
 6540 FORMAT(/10X,'LAYER =',I3/10X,'MATERIAL =',I3/10X,'RELATIV ',
     1'THICKNESS =',1PD10.3/10X,'FIBER ANGLE =',1PD10.3) 
 6550 FORMAT(/// ' RELATIV THICKNESSES SUM IN MATERIAL SET MUST BE', 
     1'   1.00'/' (CONTROL SUM IS :   TTT =',1PD10.3)
 6040 FORMAT(/' ELEMENT BIRTH TIME - TBTH =',1PD10.3)
 6050 FORMAT(/' ELEMENT DEATH TIME - TDTH =',1PD10.3)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE LMIMHT(ID,NEL,LMEL,ND,K4,NODTIP,ID1,ID2,K1,K2,NCXFEM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C .......................................................................
C .
CE.   P R O G R A M
CE.       TO FORM VECTOR LM AND HEIGHT COLUMNS
CS.   P R O G R A M
CS.       ZA FORMIRANJE VEKTORA LM I VISINA STUBOVA MATRICE KRUTOSTI
C .
C .......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /MIXEDM/ MIXED,IOPGS(6),NDS
      COMMON /GEORGE/ TOLG,ALFAG,ICCGG
      COMMON /DRAKCE/ IDRAKCE,NELUK,NZERO,NEED1,NEED2,NEED3,NNZERO
     1                ,IROWS,LAILU,LUCG,LVCG,LWCG,LPCG,LRCG
      DIMENSION ID(NP,*),NEL(NE,*),LMEL(ND,*)
      DIMENSION ID1(2,*),ID2(8,*),NODTIP(*),LM(100)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' LMIMHT'
CE    LOOP OVER ELEMENTS
CS    PETLJA PO ELEMENTIMA
      DO 100 NLM=1,NE
C      
         DO 10 NC=1,NCVE                            
            IF(NEL(NLM,NC).EQ.0) GO TO 10              
            NNC=2*(NC-1)                               
            IF(IETYP.EQ.3) NNC=3*(NC-1)
            JJ=NEL(NLM,NC)
            NN=2
            IF(IETYP.EQ.3) NN=3
            DO 20 I=1,NN
               LMEL(NNC+I,NLM)=ID(JJ,I)
   20       CONTINUE                                                        
   10    CONTINUE
C   
         IF(MIXED.EQ.1) THEN
            NNC0=NCVE*2
            IF(IETYP.EQ.3) NNC0=NCVE*3
            DO 30 NC=1,NCVE                            
               IF(NEL(NLM,NC).EQ.0) GO TO 30              
               NNC=NNC0+K4*(NC-1)                               
               JJ=NEL(NLM,NC)
               LMEL(NNC+1,NLM)=ID(JJ,7)
               LMEL(NNC+2,NLM)=ID(JJ,8)
               LMEL(NNC+3,NLM)=ID(JJ,10)
               IF(IETYP.EQ.1) LMEL(NNC+4,NLM)=ID(JJ,9)
   30       CONTINUE                                                        
         ENDIF
C         
         CALL IJEDN1(LM,LMEL(1,NLM),ND)
C
         ND1=0
         ND2=0
         IF(NCXFEM.GT.0) THEN
            DO 40 NC=1,NCVE
               IF(NEL(NLM,NC).EQ.0) GO TO 40              
               JJ=NODTIP(NEL(NLM,NC))
               IF(JJ.LT.0) THEN
                  JJ=-JJ
                  DO J=1,2
                     LM(ND+ND1+J)=ID1(J,JJ)
                  ENDDO
                  ND1=ND1+2
               ENDIF
   40       CONTINUE                                                        
C
            DO 50 NC=1,NCVE
               IF(NEL(NLM,NC).EQ.0) GO TO 50              
               JJ=NODTIP(NEL(NLM,NC))
               IF(JJ.GT.0) THEN
                  DO J=1,8
                     LM(ND+ND1+ND2+J)=ID2(J,JJ)
                  ENDDO
                  ND2=ND2+8
               ENDIF
   50       CONTINUE                                                        
         ENDIF
C
CE    FORM HEIGHT COLUMNS
CS    FORMIRANJE VISINA STUBOVA
C
      NDD=ND+ND1+ND2
c      CALL IWRR(LM,NDD,'LM  ')
      IF(NDD.GT.40) STOP 'NDD.GT.40.AND.NCXFEM.GT.0'
      CALL VISINE(A(LMHT),NDD,LM)
      IF (IABS(ICCGG).EQ.1) THEN
         WRITE(IDRAKCE) NDD,(LM(I),I=1,NDD)
         NELUK=NELUK+1
      ENDIF
  100 CONTINUE
c      CALL IWRR(A(LMHT),JEDN+1,'LMHT')
C      CALL IWRR(ID,NP*2,'ID  ')
C      CALL IWRR(LMEL,NE*ND,'LMEL')
      RETURN
      END
C======================================================================
      SUBROUTINE TGRAFE(NEL,MCVEL,ICVEL,THID,NMAT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C .......................................................................
C .
CE.   P R O G R A M
CE.       TO PRINTOUT 2/D ELEMENTS DATA IN UNIVERSAL GRAPHICS FILE
CS.   P R O G R A M
CS.       ZA STAMPANJE 2/D ELEMENATA U UNIVERZALNI FILE
C .
C .......................................................................
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SUMELE/ ISUMEL,ISUMGR
      COMMON /SRPSKI/ ISRPS
      COMMON /NIDEAS/ IDEAS
C
      DIMENSION NEL(NE,*),MCVEL(*),THID(NE,*),NMAT(*)
      DIMENSION FIZ(14)         
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' TGRAFE'
      IF(ideas.eq.-1) return
      ISUMGR=ISUMGR+1
C
C     FIZICKE OSOBINE
C
      NULA=0
      ZERO=0.
      ONE=1.
      JEDAN=1
      INDPR=25
      INDPD=2
      I11=11
      I2=2
      I4=4
      I8=8
      I14=14
      I48=48
C
      CALL CLEAR(FIZ,14)
      ICL=1
      IPH=40
      NPR=3
      KCL=14
      IF(IDEAS.GT.6) THEN
         KLC=4
         NPR=2
      ENDIF
      IF(IETYP.EQ.1) THEN
         ICL=6
         IPH=80
         NPR=0
      ENDIF
      IF(IETYP.EQ.2) THEN
         ICL=6
         IPH=50
         NPR=2
      ENDIF
      IF(IDEAS.GT.6) ICL=1
      FIZ(1)=THID(1,1)
      IF(IABS(IATYP).GT.3) THEN
         FIZ(2)=THID(1,2)
         FIZ(3)=THID(1,3)
         FIZ(4)=THID(1,4)
      ENDIF
      IND=-1
      IF(IDEAS.GT.6) THEN
        ITYP=2437
      ELSE
        ITYP=772
      ENDIF
      WRITE(IGRAF,1100) IND
      WRITE(IGRAF,1100) ITYP
      WRITE(IGRAF,1000) ISUMGR,IPH,NPR
      IF(ISRPS.EQ.0)
     1WRITE(IGRAF,2000) ISUMGR
      IF(ISRPS.EQ.1)
     1WRITE(IGRAF,6000) ISUMGR
      IF(IDEAS.GT.6) THEN
         IF(NPR.GT.0) THEN
            WRITE(IGRAF,1000) JEDAN,I2,I4
            WRITE(IGRAF,1200) (FIZ(I),I=ICL,I4)
         ENDIF
         IF(NPR.GT.1) THEN
            WRITE(IGRAF,1000) I48,I2,JEDAN
            WRITE(IGRAF,1200) (FIZ(5))
         ENDIF
      ELSE
         WRITE(IGRAF,1200) (FIZ(I),I=ICL,KCL)
      ENDIF
      WRITE(IGRAF,1100) IND
C
C     M A T E R I J A L I
C
      MAT=NMAT(1)
      IF(IDEAS.LT.7) CALL MELGR(MAT)
C
C     E L E M E N T I
C
      IF(ISRPS.EQ.0.AND.(NCVE.NE.4.AND.NCVE.NE.8))
     1WRITE(IZLAZ,2200) NGE
      IF(ISRPS.EQ.1.AND.(NCVE.NE.4.AND.NCVE.NE.8))
     1WRITE(IZLAZ,6200) NGE
      NNCVE=NCVE
      IF(NCVE.LT.8) NCVE=4
      IF(NCVE.EQ.9) NCVE=8
      IF(NGAUSX.NE.5.AND.NGAUSX.NE.NGAUSY) GO TO 160
C     GRAFICKI OPIS RAVANSKOG ELEMENTA: SA 4 CVORA = 5, SA 8 CVOROVA = 6
      IFGD=5
      IF(NCVE.EQ.8) IFGD=6
C     GRAFICKI OPIS OSNOSIMETRICNOG ELEMENTA: 
C     SA 4 CVORA = 27, SA 8 CVOROVA = 28
C      IF(IETYP.EQ.1) THEN
        IFGD=27
        IF(NCVE.EQ.8) IFGD=28
C      ENDIF
C     VRSTA 2/D ELEMENTA: 
C          RAVNO STANJE NAPONA: SA 4 CVORA = 44, SA 8 CVOROVA = 45
      IFDI=44
      IF(NCVE.EQ.8) IFDI=45
C          OSNOSIMETRICAN PROBLEM: SA 4 CVORA = 84, SA 8 CVOROVA = 85
      IF(IETYP.EQ.1) THEN
        IFDI=84
        IF(NCVE.EQ.8) IFDI=85
      ENDIF
C          RAVNO STANJE DEFORMACIJE: SA 4 CVORA = 54, SA 8 CVOROVA = 55
      IF(IETYP.EQ.2) THEN
        IFDI=54
        IF(NCVE.EQ.8) IFDI=55
      ENDIF
C     TABELA FIZICKIH OSOBINA
      IPTN=ISUMGR
C     TABELA MATERIJALA
      IF(IDEAS.LT.7) THEN
         MPTN=ISUMGR
      ELSE
         MPTN=MAT
      ENDIF         
C     BOJA  
      ICOL=7
C     BROJ CVOROVA NA ELEMENTU
      NNODS=NCVE
      IND=-1
      IF(IDEAS.GT.6) THEN
         ITYP=2412
      ELSEIF(IDEAS.EQ.6) THEN
         ITYP=780
         ICOL=11
      ELSE
         ITYP=71
      ENDIF
      WRITE(IGRAF,1100) IND
      WRITE(IGRAF,1100) ITYP
      DO 10 I=1,NE
C        REDNI BROJ ELEMENTA
         IEL=I+ISUMEL
         IF(ICVEL.EQ.1) IEL=MCVEL(I)
         IF(IDEAS.GT.6) THEN
            WRITE(IGRAF,1000) IEL,IFDI,IPTN,MPTN,ICOL,NNODS
         ELSEIF(IDEAS.EQ.6) THEN
            WRITE(IGRAF,1000) IEL,IFDI,JEDAN,IPTN,MPTN,JEDAN,ICOL,NNODS
         ELSE
            WRITE(IGRAF,1000) IEL,IFGD,IFDI,IPTN,MPTN,ICOL,NNODS
         ENDIF
         IF(NCVE.EQ.4) THEN
            WRITE(IGRAF,1000) (NEL(I,J),J=1,4)
         ELSE
            WRITE(IGRAF,1000) (NEL(I,J),NEL(I,J+4),J=1,4)
         ENDIF
   10 CONTINUE
      WRITE(IGRAF,1100) IND
      ISUMEL=ISUMEL+NE
      NCVE=NNCVE
      RETURN
C
  160 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2160) NGE
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6160) NGE
      STOP
C
 1000 FORMAT(8I10)
 1100 FORMAT(I6)
 1200 FORMAT(6(1PE13.5))
C-----------------------------------------------------------------------
 2000 FORMAT('FIZICKI SET :',I10)
 2160 FORMAT(//' ZBOG GRAFIKE U GRUPI ELEMENATA NGE =',I5/
     1' GAUSOVA INTEGRACIJA U (R) I (S) PRAVCU MORA BITI ISTOG REDA')
 2200 FORMAT(//' PROGRAM ZA GRAFICKO PRIKAZIVANJE REZULTATA "IDEAS"'/
     1' ZAHTEVA 2/D ELEMENT SA 4 ILI 8 CVOROVA U GRUPI ELEMENATA NGE ='
     1,I5)
C-----------------------------------------------------------------------
 6000 FORMAT('PHISICAL PROPERTIES SET :',I10)
 6160 FORMAT(//' FOR GRAPHIC OUTPUT FOR ELEMENT GROUP  NGE =',I5/
     1' GAUSS INTEGRATION IN (R),(S) DIRECTION MUST BE SAME')
 6200 FORMAT(//' GRAPHIC PACKAGE   "IDEAS"'/
     1' PERMITS ONLY 2/D ELEMENTS WITH 4 OR 8 NODES PER ELEMENT IN',
     1' GROUP   NGE =',I5)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE ZADA2B(TAU,NE,NGS12,MXS,N45)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO INITIAL VALUE MATRIX - B
CS.   P R O G R A M
CS.      ZA ZADAVANJE POCETNE JEDINICNE VREDNOSTI ZA MATRICU - B
C .
C ......................................................................
C
      DIMENSION TAU(N45,NGS12,NE,*)
C
      DO 10 J=1,MXS
      DO 10 I=1,NE
         DO 20 K=1,NGS12
            IF(N45.EQ.4) THEN
               TAU(1,K,I,J)=1.D0
               TAU(2,K,I,J)=1.D0
               TAU(3,K,I,J)=1.D0
            ELSE
               TAU(1,K,I,J)=1.D0
               TAU(5,K,I,J)=1.D0
               TAU(9,K,I,J)=1.D0
            ENDIF
   20    CONTINUE
   10 CONTINUE
      RETURN
      END
