C=======================================================================
C
CE   COUPLED PLASTIC-DAMAGED MODEL FOR 2/D ELEMENTS
C
C=======================================================================
C=======================================================================
      SUBROUTINE MEL251(FUN,DMATX,MATE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
CE     FORM ( ELAST ) MATRIX
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /MATIZO/ E,V
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      DIMENSION FUN(MATE,*),DMATX(4,4)
C
      E=FUN(MAT,1)
      V=FUN(MAT,2)
      DO 15 I=1,4
      DO 15 J=I,4
   15 ELAST(I,J)=0.0D0
CE     PLANE STRESS
      IF(IETYP.EQ.0.OR.IETYP.EQ.3) THEN
        ELAST(1,1)=E/(1.-V*V)
        ELAST(2,2)=ELAST(1,1)
        ELAST(1,2)=ELAST(1,1)*V
        ELAST(3,3)=ELAST(1,1)*(1.-V)/2.
      ELSE
CE      PLANE STRAIN AND AXISYMMETRIC
        ELAST(1,1)=E*(1.-V)/(1.+V)/(1.-2.*V)
        ELAST(2,2)=ELAST(1,1)
        ELAST(1,2)=ELAST(1,1)*V/(1.-V)
        ELAST(3,3)=ELAST(1,1)*(1.-2.*V)/(1.-V)/2.
        ELAST(4,4)=ELAST(1,1)
        ELAST(1,4)=ELAST(1,2)
        ELAST(2,4)=ELAST(1,2)
      ENDIF
C
      DO 50 I=1,4
      DO 50 J=I,4
        DMATX(I,J)=ELAST(I,J)
        DMATX(J,I)=DMATX(I,J)
   50   ELAST(J,I)=ELAST(I,J)
      RETURN
      END
C======================================================================
      SUBROUTINE D2M51(TAU,DEF,IRAC,LPOCG,LPOC1,IBTC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
CE    LOKATIONS ON GAUSS LEVEL POINT
C
      include 'paka.inc'
      
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /REPERM/ MREPER(4)
      COMMON /DUPLAP/ IDVA
      COMMON /ITERBR/ ITER
      COMMON /CDEBUG/ IDEBUG
C ARGENTINA COMMON
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
      DIMENSION DMATX(4,4)
      IF(IDEBUG.GT.0) PRINT *, ' D2M51'
C
      LPROPS=MREPER(1)
      MATE=MREPER(4)
C
      CALL MEL251(A(LPROPS),DMATX,MATE)
      IF(IRAC.EQ.2) RETURN
C
      LTAUT =LPOCG
      LDEFT =LTAUT  + 4*IDVA
      LDEFPT=LDEFT  + 4*IDVA
      LEHIS1=LDEFPT + 4*IDVA
C
      LTAU1 =LPOC1
      LDEF1 =LTAU1  + 4*IDVA
      LDEFP1=LDEF1  + 4*IDVA
      LEHIS2=LDEFP1 + 4*IDVA
C
      JPUNM=20
      NPROP=33
      NTYPE=IETYP
      IF(IETYP.EQ.0) NTYPE=1
      IF(IETYP.EQ.1) NTYPE=3
      NSTRE=3
      IF(NTYPE.EQ.2.OR.NTYPE.EQ.3) NSTRE=4
      MMATS=MATE
      IINCS=KOR
      TOLER=TOLE
      IITER=ITER
      IF(KOR.EQ.1.AND.IITER.EQ.0) RETURN
      IF(KOR.NE.1) IITER=ITER+1
C
      CALL TUI251(A(LTAUT),A(LDEFPT),A(LEHIS1),
     1            A(LDEFP1),A(LEHIS2),ELAST,
     1            DMATX,A(LPROPS),TAU,DEF,MAT)
      CALL JEDNA1(A(LTAU1),TAU,4)
      CALL JEDNA1(A(LDEF1),DEF,4)
      CALL WRR(A(LTAU1),4,'TAU ')
      CALL WRR(A(LDEF1),4,'DEF ')
      CALL WRR(A(LDEFP1),4,'PDEF')
C
      RETURN
      END
C=======================================================================
      SUBROUTINE TUI251(STRSG,STRA1,EHIS1,
     1                  STRA2,EHIS2,ELAST,
     1                  DMATX,PROPS,TAU,STRAT,LPROP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C     STRSG(4) - STRESS AT START OF TIME STEP
C     STRAP(4) - PLASTIC STRAIN AT START OF TIME STEP
C     EHIS1(20) - WORKING ARRAY AT START OF TIME STEP
C     STRA2(4) - PLASTIC STRAIN AT END OF TIME STEP
C     EHIS2(20) - WORKING ARRAY AT END OF TIME STEP
C     DMATX(4,4) - ELASTIC CONSTITUTIVE MATRIX
C     PROPS(MMATS,33) - MATERIAL CONSTANTS
C     TAU(4) - STRESS AT END OF TIME STEP
C     STRAT(4) - STRAIN AT END OF TIME STEP
C     LPROP - MATERIAL NUMBER
C     TVOLE - VOLUME OF ELEMENT
C     NSTRE - NUMBER OF STRAIN COMPONENTS
C     NTYPE - ELEMENT TYPE
C     IITER - ITERATION NUMBER
C     IINCS - STEP NUMBER
C     TOLER - RELATIVE TOLERANCE FOR ENERGY CRITERION
C     MMATS - TOTAL NUMBER OF MATERIALS 
C     NPROP - 33 - NUMBER OF INPUT MATERIAL CONSTANTS
C
      COMMON /MMOD51/ TVOLE
C ARGENTINA COMMON
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      DIMENSION STRSG(4),STRAP(4),EHIS1(20),EHIST(20),TAU(4),STRAT(4),
     1          STRA2(4),EHIS2(20),DMATX(4,4),PROPS(MMATS,*),ELAST(6,6),
     1          STRA1(4),STRES(4),SIGMA(4),DEEPP(4),SGTOT(4)
C
      NCRIT=PROPS(LPROP,30)
      NCRIP=PROPS(LPROP,31)
      NTINT=PROPS(LPROP,32)
      NFLUG=PROPS(LPROP,33)
C      WRITE(3,*) 'CARD 6B',(PROPS(LPROP,I),I=30,33)
C      WRITE(3,*) 'CARD 6C',(PROPS(LPROP,I),I=1,7)
C      WRITE(3,*) 'CARD 6D',(PROPS(LPROP,I),I=8,13)
C      WRITE(3,*) 'CARD 6E',(PROPS(LPROP,I),I=14,19)
C      WRITE(3,*) 'CARD 6F',(PROPS(LPROP,I),I=20,22)
C      WRITE(3,*) 'CARD 6G',(PROPS(LPROP,I),I=23,25)
C      WRITE(3,*) 'CARD 6H',(PROPS(LPROP,I),I=26,29)
       WRITE(3,*) 'TVOLE,LPROP,IITER',TVOLE,LPROP,IITER
C
      IF(IINCS.EQ.1) THEN
         EHIS1(2)=PROPS(LPROP,7)
         CALL JEDNA1(EHIS1(5),DMATX,16)
      ENDIF
      CALL JEDNA1(EHIST,EHIS1,20)
      CALL JEDNA1(STRAP,STRA1,4)
      CALL WRR(DMATX,16,'DMAT')
      CALL WRR(EHIST,20,'EHIS')
C
CE    INTEGRATION OF CONSTITUTIVE RELATION FOR CONCRETE
C
      NSTR1=4
C
C      (a)  EVALUATE TOTAL 'TRIAL' STRESSES ( EFFECTIVE )
C
C*** CALCULO DEL INCREMENTO DE TENSION
C
        POISS=PROPS(LPROP,2)                                       !***
        DO 40 ISTRE=1,NSTRE    
	  STRES(ISTRE)=0.0                             !***
        DO 40 JSTRE=1,NSTRE                                 !***
        STRES(ISTRE)=STRES(ISTRE)+DMATX(ISTRE,JSTRE)*
     .               (STRAT(JSTRE)-STRAP(JSTRE))  !***
   40   CONTINUE                                                   !***
        IF(NTYPE.EQ.1) STRES(4)=0.0                                !***
        IF(NTYPE.EQ.2) STRES(4)=POISS*(STRES(1)+STRES(2))          !***
C
C      (b)  EVALUATE TOTAL 'TRUE' STRESSES  ( EFFECTIVE )
C
C**** NON-LINEAR PROBLEM
C
      IF(NCRIT.NE.0) THEN
C       LECTURA DE LA BASE DE DATOS -2
C
	DO JPUN=1,JPUNM
	  EHIST(JPUN)=EHIS1(JPUN)
	ENDDO
C
        DO 45 ISTRE=1,NSTR1
        STRES(ISTRE)=STRES(ISTRE)-STRSG(ISTRE)                     !***
        SIGMA(ISTRE)=STRSG(ISTRE)+STRES(ISTRE)
        SGTOT(ISTRE)=SIGMA(ISTRE)
   45   CONTINUE
C
C**** PLASTIC EQUATION (EULER) (NTINT: Nro.Tipo INTegracion)

C    
      CALL ECUAA(SIGMA,STRES,STRAP,EHIST(1),EHIST(4),DMATX,
     .            PROPS,SGTOT,EHIST(5),LPROP,TVOLE,DEEPP)
	ENDIF
C
C***(C)  STORE FINAL STRESSES IN THE PROPER ARRAY
C
      DO 60 ISTR1=1,NSTR1
   60 STRSG(ISTR1)=SGTOT(ISTR1)
C
C     ESCRITURA EN LA BASE DE DATOS -2
C
	DO JPUN=1,JPUNM
	  EHIS2(JPUN)=EHIST(JPUN)
	ENDDO
C
      CALL JEDNA1(TAU,STRSG,4)
      CALL JEDNA1(STRA2,STRAP,4)
      IJ=4
      DO 900 I=1,4
      DO 900 J=1,4
         IJ=IJ+1
         ELAST(I,J)=EHIST(IJ)
  900 CONTINUE
      DO 901 I=1,4
      DO 901 J=I+1,4
         DUM=(ELAST(I,J)+ELAST(J,I))/2.
         ELAST(I,J)=DUM
         ELAST(J,I)=DUM
  901 CONTINUE
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE ECUAA(SIGMA,DESIG,STRAP,EBASE,EUNLD,DMATX,PROPS,
     .                 SGTOT,DMATP,LPROP,TVOLE,DEEPP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C***********************************************************************
C
C****THIS ROUTINE EVALUATES TOTAL STRESSES FOR ELASTO/PLASTIC MATERIALS
C                            NCRIT= 1 - 5
C
C***********************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      DIMENSION DESIG(4),DMATX(4,4),EBASE(3),DPLAS(4,4),
     .          PROPS(MMATS,NPROP),SGTOT(4),
     .          SIGMA(4),STRAP(4),DMATP(16),VECTF(4),
     .          VECTG(4),DVECT(4),DEVIA(4),DP(4),DS(4),
     .          DEEPP(4),HCAPA(4)
C 
      DO 150 ISTR1=1,NSTR1
      DEEPP(ISTR1)=0.0D0
      DP(ISTR1)=0.0D0
      DO 150 JSTRS=1,NSTR1
 150  DPLAS(ISTR1,JSTRS)=0.0D0
 
C***  CALCULO DE INVARIANTES, FLUJO, VARIABLES INTERNAS, DENOM.PLAST.
 
      KFLUG=2
      KFL=1
      CALL MODAUX(SIGMA,EBASE,DMATX,PROPS,LPROP,TVOLE,VECTF,
     .            VECTG,DVECT,DEVIA,DP,PMEAN,VARJ2,VARJ3,SMAXS,
     .            THETA,DFTEQ,YIELD,HPREY,ABETA,KFLUG,KFL,
     .            ALPRI,STRAP,CAPAP,HCAPA)
C 
C***  VERIFICACION DE ESTADO ELASTICO O PLASTICO
C 
       ESCUR=DABS(YIELD)-DABS(EBASE(2))
       ERROR=0.0001D0*TOLER
       IF(ESCUR.LT.DABS(ERROR*EBASE(2))) GOTO 60
C 
C***  CASO PLASTICO
C
      EUNLD=0.0
C 
C***  CASO DE CARGA
C 
      NKONT=0
  600 CONTINUE
      NKONT=NKONT+1
C
      DLAMD=ESCUR*ABETA
      IF(DLAMD.LT.0.0D0)DLAMD=0.0D0
C 
C***  CALCULO DEL INCREMENTO DE DEFORMACION PLASTICA
C 
      DO 250 ISTR1=1,NSTR1
      DP(ISTR1)=DLAMD*VECTG(ISTR1)
  250 DEEPP(ISTR1)=DEEPP(ISTR1)+DP(ISTR1)
C 
C***  TENSION PLASTICA ***********
C 
      DO 205 ISTRE=1,NSTRE
      DS(ISTRE)=0.0
      DO 205 JSTRE=1,NSTRE
  205 DS(ISTRE)=DS(ISTRE)+DMATX(ISTRE,JSTRE)*DP(JSTRE)
C 
      DO 220 ISTRE=1,NSTRE
      DESIG(ISTRE)=DESIG(ISTRE)-DS(ISTRE)
      SGTOT(ISTRE)=SGTOT(ISTRE)-DS(ISTRE)
  220 CONTINUE 
C
C***  VERIFICACION DE LA SITUACION TENSIONAL DEL PUNTO
 
C***  CALCULO DE INVARIANTES, FLUJO, VARIABLES INTERNAS, DENOM.PLAST.
      KFL=2
      NFL=NFLUG
      CALL MODAUX(SGTOT,EBASE,DMATX,PROPS,LPROP,TVOLE,VECTF,
     .            VECTG,DVECT,DEVIA,DP,PMEAN,VARJ2,VARJ3,SMAXS,
     .            THETA,DFTEQ,YIELD,HPREY,ABETA,NFL,KFL,ALPRI,
     .            STRAP,CAPAP,HCAPA)
 
C***  VERIFICACION SI ES ELASTICO O PLASTICO
      ESCUR=DABS(YIELD)-DABS(EBASE(2))
      COECO= DABS(ERROR*EBASE(2))
      IF(ESCUR.LE.COECO) THEN
       CALL PLRIGI(ABETA,VECTG,VECTF,DMATX,DMATP,DPLAS)
       GOTO190
      ELSE
       MKONT=50
       IF(NKONT.GE.MKONT)THEN
        WRITE(16,348)YIELD,EBASE(2)
  348   FORMAT('## NO HAY CONVERGENCIA - INTEGRA. ECUA. CONSTITUTIVA'
     .  ,/, '   YIELD =',1E14.6
     .  ,/, '   TENEQ =',1E14.6)
       STOP
       ENDIF
      ENDIF
      GOTO 600
 
C***  CASO ELASTICO
 
   60 EUNLD=1.0
      DO 180 ISTRE=1,NSTRE
  180 SGTOT(ISTRE)=SIGMA(ISTRE)
  190 CONTINUE
      DO 200 ISTR1=1,NSTR1
  200 STRAP(ISTR1)=STRAP(ISTR1)+DEEPP(ISTR1)
      RETURN
      END
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
      SUBROUTINE MODAUX(SGTOT,EBASE,DMATX,PROPS,LPROP,TVOLE,
     .                  VECTF,VECTG,DVECT,DEVIA,DP,PMEAN,VARJ2,VARJ3,
     .                  SMAXS,THETA,DFTEQ,YIELD,HPREY,ABETA,NFL,
     .                  KFLAG,ALPRI,STRAP,CAPAP,HCAPA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C***********************************************************************
C
C****ESTA RUTINA CALCULA:
C                        INVARIANTES (PLINVA)
C                        FLUJO PLASTICO (PLYIEL)
C                        VARIABLES INTERNAS (PLVARI)
C                        DENOMINADOR PLASTICO (PLFLOW)
C
C***********************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
       DIMENSION DMATX(4,4),EBASE(3),PROPS(MMATS,NPROP),SGTOT(4),
     .          VECTF(4),VECTG(4),DVECT(4),DEVIA(4),DP(4),STRAP(4),
     .          HCAPA(4),PRSIG(3)
 
C***  CALCULO DE INVARIANTES Y DE LA TENSION EFECTIVA
 
      ICOD=1
      CALL PLINVA(PROPS,SGTOT,PROPS(LPROP,6),EBASE(1),PMEAN,VARJ2,
     .            VARJ3,DEVIA,STEFF,SMAXS,THETA,DFTEQ,
     .            YIELD,LPROP,ALPRI,STRAP)
C***  OBTENCION DEL NUEVO VECTOR NORMAL Y DE FLUJO
C 
      IF(NFL.EQ.2.OR.IITER.EQ.1)THEN
      KCRIT=1
	  ANGUL=PROPS(LPROP,6)
	  CALL PLYIEL(VECTF,ANGUL,KCRIT,PROPS(LPROP,20),PROPS(LPROP,23),
     .            PROPS(LPROP,24),PROPS(LPROP,25),VARJ2,VARJ3,
     .            DEVIA,STEFF,PMEAN,SMAXS,THETA)

      IF(NCRIT.EQ.NCRIP)THEN
C 
       DO 55 ISTR1=1,NSTR1
   55  VECTG(ISTR1)=VECTF(ISTR1)
      ELSE
       KCRIT=2
	   ANGUL=PROPS(LPROP,5)
       CALL PLYIEL(VECTG,ANGUL,KCRIT,PROPS(LPROP,26),PROPS(LPROP,27),
     .            PROPS(LPROP,28),PROPS(LPROP,29),VARJ2,VARJ3,
     .            DEVIA,STEFF,PMEAN,SMAXS,THETA)
      ENDIF
      ENDIF
C
C***  VARIABLES INTERNAS
C 
C***  TENSIONES PRINCIPALES
C
      CALL PRINC(PMEAN,STEFF,THETA,PRSIG)
C
C-----------------------------------------------------------------------
      CALL PLVARI(PROPS,EBASE(3),SGTOT,DP,EBASE(1),CAPAP,EBASE(2),
     .            VECTG,LPROP,DFTEQ,
     .            YIELD,TVOLE,KFLAG,HPREY,DPREY,SUMA,SUM,
     .            HCAPA,PRSIG)
C
C
C*** OBTENCION DEL MULTIPLICADOR "ABETA"
C 
      CALL PLFLOW(VECTF,ABETA,DMATX,EBASE(3),VECTG,DVECT)
C
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE PLINVA(PROPS,SIGMA,ANGFI,CAPAP,PMEAN,VARJ2,
     .            VARJ3,DEVIA,STEFF,SMAXS,THETA,DFTEQ,
     .            YIELD,LPROP,ALPRI,STRAP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*********************************************************************
C
C**** THIS SUBROUTINE EVALUATES THE STRESS INVARIANTS AND THE CURRENT
C     VALUE OF THE YIELD FUNCTION
C
C                        ANGFI
C                        CAPAP
C*********************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      DIMENSION SIGMA(4),PROPS(MMATS,NPROP),DEVIA(4),STRAP(4)
      DATA ROOT3,PIVAL/1.732050807568877,3.141592654/
C
C*** INICIALIZACION DE LAS PROPIEDADES DE PLASTICIDAD O DA%O
C
       NCRITI=NCRIT
       RETEN=PROPS(LPROP,20)
       ALFAT=PROPS(LPROP,23)
       GAMAT=PROPS(LPROP,24)
C      
C***  CALCULO DE LAS TENSIONES DESVIADORAS
C
      PMEAN=(SIGMA(1)+SIGMA(2)+SIGMA(4))/3.0
      DEVIA(1)=SIGMA(1)-PMEAN
      DEVIA(2)=SIGMA(2)-PMEAN
      DEVIA(3)=SIGMA(3)
      DEVIA(4)=SIGMA(4)-PMEAN
C
C***  SI TRABAJA CON LA TEORIA DE LUBLINER (ENDUR. CINEMATICO CONSTANTE)
C
      IF(NTINT.EQ.3)THEN
       CONST=(2.0/3.0)*ALPRI
       DEVIA(1)=DEVIA(1)-CONST*STRAP(1)
       DEVIA(2)=DEVIA(2)-CONST*STRAP(2)
       DEVIA(3)=DEVIA(3)-CONST*STRAP(3)
       DEVIA(4)=DEVIA(4)-CONST*STRAP(4)
      ENDIF
C
      VARJ2=DEVIA(3)*DEVIA(3)+
     . 0.5*(DEVIA(1)*DEVIA(1)+DEVIA(2)*DEVIA(2)+DEVIA(4)*DEVIA(4))
      VARJ3=DEVIA(4)*(DEVIA(4)*DEVIA(4)-VARJ2)
C
C***CALCULATE THE THREE STRESS INVARIANT
C
      STEFF=DSQRT(VARJ2)
C
      SINT3=1.0
      DENOM=VARJ2*STEFF
      IF(DABS(DENOM).GT.1.D-14)SINT3=-3.0*ROOT3*VARJ3/(2.0*DENOM)
      IF(SINT3.LT.-0.9986295348) SINT3=-1.0
      IF(SINT3.GT. 0.9986295348) SINT3= 1.0
      THETA=DASIN(SINT3)/3.0
C
C***  LIMITE CRITERION CHOISE
C 
      GO TO (31,32,33,34,35) NCRITI
 
C*** TRESCA
 
   31 YIELD=2.0*DCOS(THETA)*STEFF
      DFTEQ=-1.0D00
      GOTO 150
 
C*** VON MISES
 
   32 YIELD=ROOT3*STEFF
      DFTEQ=-1.0D00
      GOTO 150
 
C*** MOHR-COULOMB Y VARIANTE CON "TENSION CUT-OFF"
 
   33 CONTINUE
      ANPHI=(PIVAL*0.25D0)+ANGFI*0.5D00
      ALFA=RETEN/(DTAN(ANPHI)*DTAN(ANPHI))
      SNPHI=DSIN(ANGFI)
      CNPHI=DCOS(ANGFI)
      CAPA1=(0.5D0*(1.0D0+ALFA))-(0.5D0*(1.0-ALFA)*SNPHI)
      CAPA2=1.0D+23
      CAPA3=-((0.5D0*(1.0D0-ALFA))-(0.5D0*(1.0D0+ALFA)*SNPHI))
      IF(DABS(SNPHI).GT.1.D-14)
     .CAPA2=(0.5D0*(1.0D0+ALFA))+(0.5D0*(-1.0D0+ALFA)/SNPHI)
 
      CFL=2.0D0*DTAN(ANPHI)/CNPHI
      TEN0=PMEAN*(CAPA3)+STEFF*((CAPA1*DCOS(THETA))
     .              -((CAPA2)*DSIN(THETA)*SNPHI/ROOT3))
      YIELD=CFL*TEN0
 
      DK1=-0.5D0*CNPHI*(1.0D0-ALFA)
      DK2=DK1/(SNPHI)**2.0
      DK3=0.5D0*CNPHI*(ALFA+1.0D0)
      DCF=0.25D00*CAPAP/(DSIN(ANPHI)*DSIN(ANPHI))
 
      TEN0P=PMEAN*DK3+STEFF*((DK1*DCOS(THETA))-(DK2*DSIN(THETA)*SNPHI
     .      /ROOT3)-(CAPA2*DSIN(THETA)*CNPHI/ROOT3))
      DFTEQ=-1.0D0
      GOTO 150
 
C*** DRUCKER-PRAGER (coincide with the outer apices of the Mohr-Coulomb)
 
   34 CNPHI=DCOS(ANGFI)
      SNPHI=DSIN(ANGFI)
      CFL=-ROOT3*(3.0D0-SNPHI)/(3.0D0*SNPHI-3.0D0)
      TEN0=6.0D0*PMEAN*SNPHI/(ROOT3*(3.0D0-SNPHI))+STEFF
      YIELD=CFL*TEN0
 
      TEN0P=PMEAN*((2.0D0*ROOT3*CNPHI*(3.0D0-SNPHI))+(2.0D0*ROOT3*
     .      SNPHI*CNPHI))/((3.0D0-SNPHI)*(3.0D0-SNPHI))
      DFTEQ=-1.0D0
      GOTO 150
 
C*** TEORIA DE J. LUBLINER
 
   35 BETAT=((1.0D0-ALFAT)*RETEN)-(1.0D0+ALFAT)
      SMAXS=2.0*(STEFF/ROOT3)*DSIN(THETA+(2.0*PIVAL/3.0))+PMEAN
      DELTA=0.0
      IF(SMAXS.LT.0.0)DELTA=-GAMAT
      IF(SMAXS.GT.0.0)DELTA=BETAT
      YIELD=(DSQRT(3.0D0*VARJ2)+(ALFAT*PMEAN*3.0D0)+(DELTA*SMAXS))
     .      /(1.0-ALFAT)
      DFTEQ=-1.0D00
      GOTO 150
 
  150 RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE PLYIEL(AVECT,ANGUL,KCRIT,RETEN,ALFAT,GAMAT,CEPSI,
     .                  VARJ2,VARJ3,DEVIA,STEFF,PMEAN,SMAXS,THETA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*********************************************************************
C
C**** THIS SUBROUTINE EVALUATES THE FLOW VECTOR   'g' OR
C           NORMAL VECTOR  'f'
C
C     ANGUL:  ANGFI          FLUJO ASOCIADO A "F" ---> VECTF(ISTR1)
C             ANGSI          FLUJO ASOCIADO A "G" ---> VECTG(ISTR1)
C
C     NCRIV:  NCRIT    FLUJO ASOCIADO A "F"
C             NCRIP    FLUJO ASOCIADO A "G"
C*********************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      DIMENSION AVECT(4),DEVIA(4),VECA1(4),VECA2(4),VECA3(4)
c
      DATA ROOT3,PIVAL/1.732050807568877,3.141592654/
      DATA TWOPI /6.283185308/
 
      IF(DABS(STEFF).LT.1.D-14) RETURN
      IF (KCRIT.EQ.1) THEN
      NCRIV=NCRIT
      ELSE
      NCRIV=NCRIP
      ENDIF
      TANTH=DTAN(THETA)
      TANT3=DTAN(3.0*THETA)
      SINTH=DSIN(THETA)
      COSTH=DCOS(THETA)
      COST3=DCOS(3.0*THETA)
      SINT3=DSIN(3.0*THETA)
      VARDE=VARJ2/3.
C
C*** CALCULATE VECTOR A1
C
      DO 5 ISTR1=1,NSTR1
   5  VECA1(ISTR1)=0.0
      VECA1(1)=1.0
      VECA1(2)=1.0
      VECA1(4)=1.0
C
C*** CALCULATE VECTOR A2
C
      DO 10 ISTR1=1,NSTR1
      VECA2(ISTR1)=DEVIA(ISTR1)/(2.0*STEFF)
   10 CONTINUE
      VECA2(3)=2.0*VECA2(3)
C
C***CALCULATE VECTOR A3
C
      VECA3(1)= DEVIA(2)*DEVIA(4)+VARDE
      VECA3(2)= DEVIA(1)*DEVIA(4)+VARDE
      VECA3(3)=-2.0*DEVIA(3)*DEVIA(4)
      VECA3(4)= DEVIA(1)*DEVIA(2)-DEVIA(3)*DEVIA(3)+VARDE
 
      GO TO (31,32,33,34,35) NCRIV
C
C*** TRESCA
C
   31 CONS1=0.0
      ABTHE=DABS(THETA*57.29577951308D0)
      IF(ABTHE.LT.29.0D0) GO TO 40
      CONS2=ROOT3
      CONS3=0.0
      GO TO 60
   40 CONS2=2.0*(COSTH+SINTH*TANT3)
      CONS3=ROOT3*SINTH/(VARJ2*COST3)
      GO TO 60
C
C*** VON MISES
C
   32 CONS1=0.0
      CONS2=ROOT3
      CONS3=0.0
      GO TO 60
C
C*** MOHR-COULOMB Y VARIANTE CON "TENSION CUT-OFF"
C
   33 SNPHI=DSIN(ANGUL)
      CNPHI=DCOS(ANGUL)
      ANPHI=(PIVAL*0.25D0)+ANGUL*0.5D00
      CFL=2.0D0*DTAN(ANPHI)/CNPHI
      ALFA=RETEN/(DTAN(ANPHI)*DTAN(ANPHI))
      CAPA1=(0.5*(1.0+ALFA))-(0.5*(1.0-ALFA)*SNPHI)
      CAPA2=1.0D+23
      CAPA3=-((0.5*(1.0-ALFA))-(0.5*(1.0+ALFA)*SNPHI))
 
      IF(DABS(SNPHI).GT.1.D-14)
     .CAPA2=(0.5*(1.0+ALFA))+(0.5*(-1.0+ALFA)/SNPHI)
      CONS1=CFL*(CAPA3)/3.0
      ABTHE=DABS(THETA*57.29577951308D0)
      IF(ABTHE.LT.29.0D0) GO TO 50
      PLUMI=1.0
      IF(THETA.GT.0.0D0) PLUMI=-1.0D0
      CONS2=0.5D0*CFL*(CAPA1*ROOT3+PLUMI*(CAPA2)*SNPHI/ROOT3)
      GO TO 60
   50 CONS2=COSTH*CFL*((CAPA1)*(1.0+TANTH*TANT3)+(CAPA2)*SNPHI*
     .            (TANT3-TANTH)/ROOT3)
      CONS3=CFL*((CAPA1)*ROOT3*SINTH+(CAPA2)*SNPHI*COSTH)/
     .      (2.0*VARJ2*COST3)
      GO TO 60
C
C*** DRUCKER-PRAGER
C
   34 SNPHI=DSIN(ANGUL)
      CFL=-ROOT3*(3.0D0-SNPHI)/(3.0D0*SNPHI-3.0D0)
      CONS1=CFL*2.0*SNPHI/(ROOT3*(3.0-SNPHI))
      CONS2=CFL
      CONS3=0.0
      GO TO 60
C
C*** LUBLINER
C
   35 BETAT=((1.0D0-ALFAT)*RETEN)-(1.0D0+ALFAT)
      CFL=1.0D0/(1.0D0-ALFAT)
c      IF(SMAXS)110,105,120
c  105 DELTA=(1.0-CEPSI)*BETAT+CEPSI*GAMAT
c      GOTO 130
c  110 DELTA=GAMAT
c      GOTO 130
c  120 DELTA=BETAT
      IF (DABS(SMAXS).LT.(0.01*DABS(PMEAN))) THEN 
      DELTA=(1.0-CEPSI)*BETAT+CEPSI*GAMAT
      ELSE IF (SMAXS.LT.(-0.01*DABS(PMEAN))) THEN
      DELTA=GAMAT
      ELSE
      DELTA=BETAT
      ENDIF 
C  130 CONTINUE
      SINTP=DSIN(THETA+TWOPI/3.0D0)
      ABTHE=DABS(THETA*57.29577951308D0)
      CONS1=CFL*(ALFAT+DELTA/3.0)
      SINT3=DSIN(3.0D0*THETA)
      COST3=DCOS(3.0D0*THETA)
      TANT3=DTAN(3.0D0*THETA)
       IF(ABTHE.LT.29.0D0)THEN
       COSTP=DCOS(THETA+TWOPI/3.0)
       CONS2=CFL*(ROOT3+(2.0*DELTA*(SINTP-TANT3*COSTP)/ROOT3))
       CONS3=CFL*(-DELTA*COSTP/(VARJ2*COST3))
      ELSE
       IF((THETA*57.29577951308D0).GE.29.0D0)THEN
        CONS2=CFL*(ROOT3+2.0*DELTA/(3.0*ROOT3))
        CONS3=CFL*(-DELTA/(6.0*VARJ2))
       ELSE
        CONS2=CFL*(ROOT3+4.0*DELTA/(3.0*ROOT3))
        CONS3=CFL*(DELTA/(3.0*VARJ2))
       END IF
      END IF
C 
C***  CALCULO DEL VECTOR NORMAL 'f' o 'g'
C 
   60 CONTINUE
      AFACT=0.0D0
      DO 70 ISTR1=1,NSTR1
      AVECT(ISTR1)=CONS1*VECA1(ISTR1)+CONS2*VECA2(ISTR1)+CONS3*
     . VECA3(ISTR1)
C***  CALCULO DEL PRODUCTO INTERNO
      AFACT=AFACT+AVECT(ISTR1)*AVECT(ISTR1)
   70 CONTINUE
      IF(NTINT.EQ.3)THEN
       DO 71 ISTR1=1,NSTR1
   71  AVECT(ISTR1)=AVECT(ISTR1)/DSQRT(AFACT*2.0/3.0)
      ENDIF
      RETURN

      END
C-----------------------------------------------------------------------
      SUBROUTINE PRINC(PMEAN,STEFF,THETA,PRSIG)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C***********************************************************************
C
C***  ESTA SUBRUTINA CALCULA LAS TENSIONES PRINCIPALES PARA 3-D
C
C***********************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      DIMENSION PRSIG(3)
C
      DATA TWOPI,ROOT3/6.283185308,1.732050807568877/
C
      PRSIG(1)=(2/ROOT3)*STEFF*DSIN(THETA+TWOPI/3)+PMEAN
      PRSIG(2)=(2/ROOT3)*STEFF*DSIN(THETA)+PMEAN
      PRSIG(3)=(2/ROOT3)*STEFF*DSIN(THETA+2*TWOPI/3)+PMEAN
C
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE PLVARI(PROPS,HARDS,SIGMA,DP,CAPAK,CAPAP,
     .                  PREYS,VECTG,LPROP,DFTEQ,
     .                  YIELD,TVOLE,KFLAG,HPREY,DPREY,SUMA,
     .                  SUM,HCAPA,PRSIG)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*****************************************************************
C
C***  ESTA RUTINA CALCULA LAS VARIABLES INTERNAS:
C               CAPAP
C               PREYS
C               ANGFI
C               ANGSI
C
C***  Y EL PARAMETRO DE ENDURECIMIENTO:
C               HARDS
C
C*****************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      DIMENSION PROPS(MMATS,NPROP),GE(2),SIGMA(4),DP(4),
     .          VECTG(4),HCAPA(4),PRSIG(3),SA(3),SB(3),SC(3)
      SUM=0.0D00
      SUMA=0.0D00
      SUMB=0.0D00
      SUMC=0.0D00
      DO 10 I=1,3
      SA(I)=DABS(PRSIG(I))
      SB(I)=0.5D00*(PRSIG(I)+SA(I))
      SC(I)=0.5D00*(-PRSIG(I)+SA(I))
      SUM=SUM+PRSIG(I)
      SUMA=SUMA+SA(I)
      SUMB=SUMB+SB(I)
   10 SUMC=SUMC+SC(I)
      IF (DABS(SUMA).GT.1.D-14) THEN
      ERE0=SUMB/SUMA
      ERE1=SUMC/SUMA
      ELSE
      ERE0=1.
      ERE1=0.0D0
      ENDIF 
 
C***  CALCULO DE LA VARIABLE INTERNA DE ENDURECIMIENTO

      CALL PLCAPA(ERE0,ERE1,SUMA,SUMB,SUMC,SIGMA,DP,
     .            HCAPA,CAPAK,CAPAP,DCAPA,PROPS,GE(1),GE(2),
     .            YIELD,LPROP,TVOLE,KFLAG)
C***  CALCULO DE LA EVOLUCION DE LA TENSION EFECTIVA UNIAXIAL
 
      ICOD=1
      CALL PLEQUI(PREYS,CAPAK,HPREY,PROPS,GE,ERE0,
     .            ERE1,LPROP,DPREY)
 
C***  CALCULO DEL PARAMETRO DE ENDURECIMIENTO
 
      CALL PLHARD(HARDS,DFTEQ,HCAPA,HPREY,VECTG)
C
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE PLCAPA(ERE0,ERE1,SUMA,SUMB,SUMC,SIGMA,DP,
     .                  HCAPA,CAPAK,CAPAP,DCAPA,PROPS,GF,GC,
     .                  YIELD,LPROP,TVOLE,KFLAG)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*****************************************************************
C
C***  ESTA RUTINA CALCULA LA VARIABLE INTERNA:
C               CAPAP
C
C*****************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      DIMENSION SIGMA(4),DP(4),HCAPA(4),PROPS(MMATS,NPROP)
 
      RETEN=PROPS(LPROP,20)
      GSUBF=PROPS(LPROP,13)
      GSUBC=PROPS(LPROP,19)
 
C***  CALCULO DE LA ENERERGIA ESPECIFICA A DISIPAR
 
      DCAPA=0.0D00
      CONS0=0.0D00
      CONS1=0.0D00
      GF=GSUBF/DSQRT(TVOLE)
      GC=GSUBC/DSQRT(TVOLE)
      IF(DABS(YIELD).LT.1.D-14)THEN
       GFM=GF
       GCM=GC
      ELSE
       GFM=GF*RETEN*(SUMB/DABS(YIELD))
       GCM=GC*(SUMC/DABS(YIELD))
      ENDIF
c
      IF(DABS(SUMA).GT.1.D-14) THEN
      CONS0=ERE0*DABS(YIELD/RETEN)/(GF*SUMA)
      CONS1=ERE1*DABS(YIELD)/(GC*SUMA)
      ELSE
      CONS0=0.0D0
      CONS1=0.0D0
      ENDIF
c
C***  CALCULO DE LA FUNCION DE ESTADO DE CAPA
C 
      DO 11 I=1,NSTR1
  11  HCAPA(I)=0.0D0
C
      CONST=CONS0+CONS1
      DCAPA=0.0
       DO 10 I=1,NSTRE
       HCAPA(I)=CONST*SIGMA(I)
  10   DCAPA=DCAPA+HCAPA(I)*DP(I)
      IF((DCAPA.LT.0.0D00).OR.(CAPAK.GE.1.0D0))DCAPA=0.0D00
      IF(KFLAG.EQ.2) THEN
      CAPAK=CAPAK+DCAPA
      CAPAP=CAPAK
      ENDIF      
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE PLEQUI(PREYS,CAPAP,HPREY,PROPS,GE,ERE0,
     .                  ERE1,LPROP,DPREY)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)

C*****************************************************************
C
C***  ESTA RUTINA CALCULA LA VARIABLE INTERNA:
C               PREYS
C*****************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      DIMENSION PROPS(MMATS,NPROP),GE(2),PREY(2),PEND(2)
 
C***  OBTENCION DE LA TENSION EFECTIVA UNIAXIAL Y LA
C***  PENDIENTE CONTRAPESADA
       IND=2
       JND=6
       SIKMA=PROPS(LPROP,7)
      DO 20 I=1,2
      IND=IND+JND
      NINDI=INT(PROPS(LPROP,IND))
      CAPPI=PROPS(LPROP,IND+1)
      SIKPI=PROPS(LPROP,IND+2)
      HARD0=PROPS(LPROP,IND+3)
      NICUR=INT(PROPS(LPROP,IND+4))
   20 CALL PLCURV(NINDI,PREY(I),PEND(I),CAPAP,GE(I),SIKMA,
     .            SIKPI,CAPPI,HARD0,NICUR)
C***  CALCULO DE LA TENSION EQUIVALENTE Y DE LA PENDIENTE
      PREYS=(ERE0*PREY(1))+(ERE1*PREY(2))
C***  CALCULO DE LA CORRESPONDIENTE FUNCION DE ESTADO
      HPREY=PREYS*((ERE0*PEND(1)/PREY(1))+(ERE1*PEND(2)/PREY(2)))
      DPREY=PREY(1)-PREY(2)
      RETURN
      END

C-----------------------------------------------------------------------
      SUBROUTINE PLFLOW(VECTF,ABETA,DMATX,HARDS,VECTG,DVECT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*********************************************************************
C
C**** THIS SUBROUTINE EVALUATES THE PLASTIC D VECTOR
C
C*********************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      DIMENSION VECTF(4),DMATX(4,4),DVECT(4),
     .          VECTG(4)
 
C*** COMPUTE "DVECT=(VECTF*DMATX)" PRODUCT
 
      CALL PLPDXV(VECTF,DMATX,DVECT)
C
C***COMPUTE THE DENOMINATOR OF CONSISTENT PLASTIC FACTOR
C
      DENOM=HARDS
      DO 50 ISTRE=1,NSTRE
   50 DENOM=DENOM+VECTG(ISTRE)*DVECT(ISTRE)
      IF (DABS(DENOM).GT.1.D-14) THEN
      ABETA=1.0D0/DENOM
      ELSE
      ABETA=1
      ENDIF
C
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE PLHARD(HARDS,DFTEQ,HCAPA,HPREY,
     .                  VECTG)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*****************************************************************
C
C***  ESTA RUTINA CALCULA EL PARAMETRO DE ENDURECIMIENTO
C               HARDS
C
C*****************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      DIMENSION HCAPA(4),VECTG(4)
 
      HARDS=-(DFTEQ*HPREY)
 
C***  CALCULO DEL PARAMETRO DE ENDURECIMIENTO
 
      AUX=0.0D0
      DO 20 ISTRE=1,NSTRE
   20 AUX=AUX+HCAPA(ISTRE)*VECTG(ISTRE)
      HARDS=HARDS*AUX
C 
      RETURN
      END
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
      SUBROUTINE PLCURV(NINDI,PREY,PEND,CAPAP,GEN,SIKMA,SIKPI,
     .                  CAPPI,HARD0,NICUR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C**************************************************************
C
C**   ESTA RUTINA CONTIENE LAS FUNCIONES DE ENDURECIMIENTO
C     EN TENSIONES EQUIVALENTE, Y CALCULA ADEMAS LA PENDIENTE
C                        DE DICHAS CURVAS
C**************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      GO TO (10,20,30,40) NINDI
 
C***  FUNCION DE  C- CAPA --> LINEAL
C***              C- EPSI --> EXPONENCIAL
 
   10 CALL PLEQF1(CAPAP,PEND,PREY,SIKMA)
 
      GOTO 1000
 
C***  FUNCION DE  C- CAPA --> EXPONENCIAL
C***              C- EPSI --> POLINOMICA
 
   20 CALL PLEQF2(CAPAP,PEND,PREY,SIKMA,SIKPI,CAPPI)
 
      GOTO 1000
 
C***  FUNCION DE  C- CAPA --> POLINOMICA CUADRATICA Y CUBICA
C***              C- EPSI --> POLINOMICA DE MAYOR ORDEN
 
   30 CALL PLEQF3(CAPAP,PEND,PREY,SIKMA,SIKPI,CAPPI)
 
      GOTO 1000
 
C***  FUNCION DE  C- CAPA --> POLINOMICA
C***              C- EPSI --> LINEAL
 
   40 CALL PLEQF4(CAPAP,PEND,PREY,SIKMA,HARD0,NICUR,GEN)
 
      GOTO 1000
 
 1000 RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE  PLEQF1(CAPAP,PEND,PREY,SIKMA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C************************************************************
C***  FUNCION DE  C- CAPA --> LINEAL
C             DA  C- EPSI --> EXPONENCIAL
C***********************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      PREY=0.1D-10
      PEND=0.0
      IF(CAPAP.LE.1.0D0)THEN
       PREY=SIKMA*(1.0-CAPAP)
       PEND=-SIKMA
      ENDIF
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE  PLEQF2(CAPAP,PEND,PREY,SIKMA,SIKPI,CAPPI)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C************************************************************
C***  FUNCION DE  C- CAPA --> EXPONENCIAL
C             DA  C- EPSI --> POLINOMICA
C***********************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      PREY=-0.1D-10
      PEND=0.0D0
      IF(CAPAP.LE.1.0D0)THEN
       RO=DSQRT(1.0D0-(SIKMA/SIKPI))
       ALFA=DLOG((1.0D0-(1.0D0-RO)*(1.0D0-RO))/
     .            ((3.0D0-RO)*(1.0D0+RO)*(CAPPI)))
       ALFA=DEXP(ALFA/(1.0D0-CAPPI))
       FI=((1.0D0-RO)*(1.0D0-RO))+((3.0D0-RO)*(1.0D0+RO)*CAPAP
     .     *((ALFA)**(1.0D0-CAPAP)))
       PREY=SIKPI*(2.0D0*DSQRT(FI)-FI)
       PEND=SIKPI*((1.0D0/(DSQRT(FI)))-1.0D0)
     .          *(3.0D0-RO)*(1.0D0+RO)*((ALFA)**(1.0D0-CAPAP))
     .          *(1.0D0-DLOG(ALFA)*CAPAP)
       ENDIF
 
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE  PLEQF3(CAPAP,PEND,PREY,SIKMA,SIKPI,CAPPI)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C************************************************************
C***  FUNCION DE  C- CAPA --> POLINOMICA CUADRATICA Y CUBICA
C             DA  C- EPSI --> POLINOMICA
C***********************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      PREY=-0.1D-10
      PEND=0.0D0
      IF(CAPAP.LE.1.0D0)THEN
        IF(CAPAP.LE.CAPPI)THEN
C*         PARABOLA CUADRATICA (Endurecimiento)
            COEF=(-SIKPI+SIKMA)/(CAPPI*CAPPI)
            PREY=(COEF*(-CAPPI+CAPAP)*(-CAPPI+CAPAP))+SIKPI
            PEND=2.0*COEF*(-CAPPI+CAPAP)
        ELSE
C*         POLINOMIO DE TERCER GRADO (Ablandamiento)
            COEF1=CAPAP-CAPPI
            COEF2=1.0D0-CAPPI
            COEF3=COEF1/COEF2
            PREY=(1.0-(3.0*COEF3*COEF3)+(2.0*COEF3*COEF3*COEF3))*SIKPI
            PEND=((-6.0*COEF1/(COEF2*COEF2))+(6.0*(COEF1*COEF1)/
     .              (COEF2*COEF2*COEF2)))*(SIKPI)
         ENDIF
        ENDIF
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE  PLEQF4(CAPAP,PEND,PREY,SIKMA,HARD0,NICUR,GEN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C************************************************************
C***  FUNCION DE  C- CAPA --> EXPONENCIAL
C             DA  C- EPSI --> LINEAL
C***********************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      PREY=0.1D-10
      PEND=0.0
      IF((CAPAP.LE.1.0D0).AND.(GEN.GT.0.0D0))THEN
       PECOM=-0.5D0*(SIKMA*SIKMA)/GEN
       IF(NICUR.EQ.0)THEN
        HARD0=PECOM
       ELSE
        IF(HARD0.LT.PECOM)THEN
        VALU2=0.0
        CALL RUNEND(' ERROR !!! -- pend. impuesta debe ser >',PECOM,
     .                VALU2 )
        STOP
        ENDIF
       ENDIF
C 
       PREY=DSQRT((SIKMA*SIKMA)+(2.0D0*HARD0*CAPAP*GEN))
       PEND=HARD0*GEN/PREY
      ENDIF
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE PLPDXV(VECTO,DMATX,DXVEC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*********************************************************************
C
C**** THIS SUBROUTINE EVALUATES DxV PRODUCT
C
C*********************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      DIMENSION VECTO(4), DMATX(4,4), DXVEC(4)
 
      IF(NTYPE.GE.2.AND.NTYPE.LE.3)THEN
C
C***PLANE STRAIN AND AXISYMMETRIC CASE
C
      DXVEC(1)=DMATX(1,1)*VECTO(1)+DMATX(1,2)*VECTO(2)
     .        +DMATX(1,4)*VECTO(4)
      DXVEC(2)=DMATX(2,1)*VECTO(1)+DMATX(2,2)*VECTO(2)
     .        +DMATX(2,4)*VECTO(4)
      DXVEC(3)=DMATX(3,3)*VECTO(3)
      DXVEC(4)=DMATX(4,1)*VECTO(1)+DMATX(4,2)*VECTO(2)
     .        +DMATX(4,4)*VECTO(4)
C
      ELSE
C
C***PLANE STRESS
C
      DXVEC(1)=DMATX(1,1)*VECTO(1)+DMATX(1,2)*VECTO(2)
      DXVEC(2)=DMATX(2,1)*VECTO(1)+DMATX(2,2)*VECTO(2)
      DXVEC(3)=DMATX(3,3)*VECTO(3)
      DXVEC(4)=0.0D0
C
      ENDIF
      RETURN
      END
C-----------------------------------------------------------------------
      SUBROUTINE PLRIGI(ABETA,VECTG,VECTF,DMATX,DMATP,DPLAS)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*********************************************************************
C
C**** THIS SUBROUTINE EVALUATE THE ELASTO-PLASTIC MATERIAL TENSOR
C
C*********************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
C
      DIMENSION DMATX(4,4),VECTF(4),VECTG(4),DGVEC(4),DMATP(16),
     .          DPLAS(4,4),DVECT(4)
 
C*** COMPUTE "DEVEC=(D:vectf)" PRODUCT
      KSTRE=0
      DO 45 ISTRE=1,NSTRE
      DVECT(ISTRE)=0
      DO 45 JSTRE=1,NSTRE
   45 DVECT(ISTRE)=DVECT(ISTRE)+DMATX(ISTRE,JSTRE)*VECTF(JSTRE)
C*** COMPUTE "DGVEC=(VECTG*DMATX)* PRODUCT
      CALL PLPDXV(VECTG,DMATX,DGVEC)
C*** COMPUTE THE DAMAGE-ELASTO-PLASTIC MATERIAL TENSOR
 
      IKONT=0
      DO 60 ISTRE=1,NSTRE
      DO 60 JSTRE=1,NSTRE
      DPLAS(ISTRE,JSTRE)=ABETA*DGVEC(ISTRE)*DVECT(JSTRE)
      DMATP(IKONT)=DMATX(ISTRE,JSTRE)-DPLAS(ISTRE,JSTRE)
   60 CONTINUE
      RETURN
      END
C-----------------------------------------------------------------------

C-----------------------------------------------------------------------
      SUBROUTINE RUNEND(CPARA,V1,V2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C*********************************************************************
C
C**** ESTA DETIENE EL PROCESO E INDICA ERROR EN CASO DE OCURRIR
C
C***********************************************************************
C
      COMMON /DATGE1/ NTYPE,MMATS,NCRIT,NCRIP,NSTRE,NTINT,NSTR1
      COMMON /DATGE2/ NFLUG,NPROP,JPUNM
      COMMON /DATCUR/ IITER,IINCS,TOLER
C      INCLUDE 'COMUNES.FOR'
      CHARACTER CPARA*70
C
      WRITE(16,1000)CPARA,V1,V2
 1000 FORMAT(' -->',1A70,/,10X,2(3X,1E12.4) )
C
C     CALL CIERRA      
C
      RETURN
      END
