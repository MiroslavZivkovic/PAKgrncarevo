C=======================================================================
C
C   TERMO-ELASTO-PLASTICNOST             -  3/D ELEMENT     (02.09.1994)
C          (ANIZOTROPAN MATERIJAL SA MESOVITIM OJACANJEM)
C
C=======================================================================
      SUBROUTINE D3M17(TAU,DEF,TGT,IRAC,LPOCG,LPOC1)
      USE PLAST3D
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PROGRAM ZA ODREDIVANJE LOKACIJA VELICINA KOJE SE CUVAJU
C     NA NIVOU INTEGRACIONE TACKE
C
      include 'paka.inc'
      
      COMMON /REPERM/ MREPER(4)
      COMMON /DUPLAP/ IDVA
C
      LFUN=MREPER(1)
      LNTA=MREPER(2)
      LTEM=MREPER(3)
      MATE=MREPER(4)
C
      LTAU  =LPOCG
      LDEFT =LTAU   + 6
      LDEFPT=LDEFT  + 6
      LALFAT=LDEFPT + 6
      LTEQT =LALFAT + 6
      LDQPT =LTEQT  + 1
      LIPL  =LDQPT  + 1
C
      LTAU1 =LPOC1
      LDEF1 =LTAU1  + 6
      LDEFP1=LDEF1  + 6
      LALFA1=LDEFP1 + 6
      LTEQ1 =LALFA1 + 6
      LDQP1 =LTEQ1  + 1
      LIPL1 =LDQP1  + 1
C
      CALL TI317 (PLAST(LIPL) ,PLAST(LDEFPT),
     1            PLAST(LALFAT),PLAST(LDQPT) ,PLAST(LTEQT),
     &            PLAS1(LIPL1),PLAS1(LDEFP1),PLAS1(LALFA1),PLAS1(LDQP1),
     1            PLAS1(LTEQ1),PLAS1(LTAU1),PLAS1(LDEF1),
     &            A(LFUN),MATE,TAU,DEF,TGT,A(LTEM),A(LNTA),IRAC)
C
      RETURN
      END
C=======================================================================
      SUBROUTINE TI317 (PL  ,DEFPT,ALFPT,DEFQPT,TEQT  ,
     &                  PL1 ,DEFP ,ALFP ,DEFQP ,TEQ   ,
     &                  TAU1,DEF1 ,
     &                  FUN,MATE,TAU,DEF,TGT,TREF,NTFUN,IRAC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
CE   THERMO-ELASTIC-PLASTIC WITH CREEP - ANISOTROPIC MATERIAL
C
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TAUD3/ TAUD(6),DEFDPR(6),DEFDS(6),DDEFP(6),
     1                DETAU(6),DDEF(6)
      COMMON /SRPSKI/ ISRPS
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /ITERBR/ ITER
      DIMENSION SHATP(6),SGI(6),DEFL(6),TAUL(6),ETHERM(3)
      DIMENSION CE(6,6),CPE(3,3),CM(3)
      DIMENSION CHPM(3,3),CHPV(3),GBP(3),EPL(6)
      DIMENSION Y0(6),CY(6),AN(6),AN1(6)
      DIMENSION TAU(*),DEF(*),TAU1(*),DEF1(*),
     &          DEFPT(*),DEFP(*),ALFPT(*),ALFP(*)
      DIMENSION FUN(4,MATE*18,*),TREF(*),NTFUN(*)
      DATA ITMAX/100/,EPSIL/1.0D-10/
      KDIM = 6
C
CE  INITIAL DATA
C
      IPL   = PL
      DVA   = 2.D0
      DVT   = DVA/3.
C
CE  MATERIAL CONSTANTS FOR GIVEN TEMPERATURE TGT
C
      CALL PEL319(FUN,CE,CYQ,ANQ,Y0,CY,AN,AN1,CPE,CM,EM,EMC,
     &            TGT,MATE,NTFUN,TREF)
      ANQ1  = ANQ-1.
      IF (ANQ1.LT.1.D-8) ANQ1=1.D-8
      EM1   = 1.-EM
      IMIX  = 1
      IF (DABS(EM1).LT.EPSIL) IMIX=0
C
C     THERMAL STRAIN
C
      CALL STERM3(ETHERM,TGT)
C
      DO 4 I=1,3
        CHPV(I)=0.D0
        DO 4 J=1,3
    4     CHPM(I,J)=0.D0
C
CE    YIELD STRESS
C
      CALL ENTY(TEQY,EPL,Y0,CY,AN,EM,DEFQPT,DEFQPT,KDIM)
C
C... TRANSFORM STRAIN INTO MATERIAL AXES DIRECTION
C
      CALL CLEAR(DEFL,6)
      CALL CLEAR(TAUL,6)
      CALL MNOZI1(DEFL,TSG,DEF,6,6)
      IF (IRAC.EQ.2) THEN
        CALL JEDNA1(ELAST,CE,36)
        GO TO 700
      END IF
C
C... TRANSFORM ENGENEER. SHEAR STRAIN INTO TENSORIAL
C
      DO 10 I=4,6
   10 DEFPT(I) = 0.5*DEFPT(I)
C
      DO 20 I=1,3
        I3 = I+3
        DEFDS(I)  = DEFL(I)
   20   DEFDS(I3) = 0.5*DEFL(I3)
      IF (IATYP.NE.4) THEN
        DO 25 I=1,3
          I3 = I+3
          DEFDS(I)  = DEFDS(I)-DEFPT(I)-ETHERM(I)
   25     DEFDS(I3) = DEFDS(I3)-DEFPT(I3)
      END IF
C
CE   1)  ELASTIC DEVIATORIC STRESS SOLUTION  (TAUD)
C
      DO 40 I=1,3
        I3 = I+3
        DUM = 0.D0
        DO 30 J=1,3
   30     DUM    = DUM+CPE(I,J)*DEFDS(J)
        TAUD(I)  = DUM
        SHATP(I) = DUM-ALFPT(I)
        SGI(I)   = SHATP(I)
        DUM      = DVA*DEFDS(I3)*CE(I3,I3)
        TAUD(I3) = DUM
        SHATP(I3)= DUM-ALFPT(I3)
        SGI(I3)  = SHATP(I3)
   40 CONTINUE
      TEQ=DSQRT(1.5*TDOTAN(SHATP,EPL))
C
CE   2)  CHECK FOR YIELDING
C
      IF((TEQ-TEQY)/TEQY.LT.1.D-5)THEN
        DEFQP=DEFQPT
        CALL JEDNA1(DEFP,DEFPT,6)
        GO TO 500
      ENDIF
C
CE   3)    OBTAIN ZERO OF THE ESF (BISECTION)
C
      PL1=1.0D0
C
CE    FINDING THE RADIUS OF THE YIELD SURFACE (TEQ)
C
      DEFQP = DEFQPT
      IF (DEFQP.LT.1.D-8) DEFQP=1.D-8
      EP2=ANQ*CYQ*DEFQP**ANQ1
      IF (EP2.LT.1.D-8) EP2=1.D-8
C
      AF    = 3.D0
      KB    = 0
      KT    = 0
      DQMIN = 0.D0
      DQTOL = 1.D-10
      DEPL  = 0.D0
      FHETL = TEQ-TEQY
      DDEP  = 0.1*FHETL/EP2
      DDEFQP= DDEP
C
      TOLD = TEQY
      DOLD = DEFQPT
      EP   = EP2
C
  250   KT  = KT+1
        KB1 = KB
C
        IF(KT.GT.ITMAX) THEN
          IF (ISRPS.EQ.0) WRITE(IZLAZ,2015)
          IF (ISRPS.EQ.1) WRITE(IZLAZ,6015)
          WRITE(IZLAZ,2001)NLM,NGR,NGS,NGT
          STOP
        END IF
C
        DEFQP = DEFQPT+DDEFQP
C
        CALL ENTY(TEQY,EPL,Y0,CY,AN,EM,DEFQP,DEFQPT,KDIM)
        DLAM = 1.5*DDEFQP/TEQY
        IF(IMIX.EQ.1)
     &    CALL CHATP(CHPM,CHPV,EPL,DEFQP,EM1,DVT,CY,AN,AN1,KDIM)
        CALL INIOR(SGI,EPL,CE,CPE,GBP,CXXP,CYYP,CXYP,CYXP,DXXP,DYYP,
     &              CEDP,CHPM,CHPV,DLAM,KDIM)
        CALL DEV3(SHATP,SGI,GBP,CXXP,CYYP,DXXP,DYYP,CEDP,DLAM,DL)
        TEQ  = DSQRT(1.5*TDOTAN(SHATP,EPL))
C
        FHET = TEQ-TEQY
C
        CALL BISECB(DDEFQP,DEPL,DEPD,DDEP,
     &              FHET,FHETL,FHETD,AF,KB,DQMIN,DQTOL)
      IF (KB.EQ.-1) GO TO 255
      IF (KB1.EQ.0) GO TO 250
C
      DDF    = DEFQP-DOLD
      IF (DABS(DDF).GE.1.D-10) THEN
        EP   = DABS((TEQY-TOLD)/DDF)
        TOLD = TEQY
        DOLD = DEFQP
      END IF
C
      IF ((DABS(DDEP)/(DEPL+DEPD)).GT.EPSIL) GO TO 250
C
  255 CALL INDEF3(DDEFP,EPL,SHATP,DLAM)
C
CE   4)  DETERMINE SOLUTION
C
C
CE     E L A S T I C - P L A S T I C - C R E E P   M A T R I X   CEPC
C
      IF (ISKNP.NE.2)
     &   CALL CEP3O(SHATP,EPL,CE,CPE,CM,GBP,CEDP,CXXP,CYYP,CXYP,CYXP,
     &              DL,DXXP,DYYP,DLAM,TEQY,CHPM,CHPV,EP,AN1,DEFQP)
C
CE      ...   ( BACK STRESS )
C
      DO 51 I=1,6
        TAUD(I) = SHATP(I)
   51   DEFP(I) = DEFPT(I)+DDEFP(I)
C
      IF(IMIX.EQ.1)THEN
        CALL ABACK3(ALFP,ALFPT,DDEFP,CHPM,CHPV)
        DO 160 I=1,6
  160   TAUD(I) = TAUD(I)+ALFP(I)
      ENDIF
C
CE   5)    CALCULATE STRESS
C
  500 CONTINUE
      TAUM=CM(1)*(DEFL(1)-DEFP(1)-ETHERM(1))+
     &     CM(2)*(DEFL(2)-DEFP(2)-ETHERM(2))+
     &     CM(3)*(DEFL(3)-DEFP(3)-ETHERM(3))
      DO 201 I=1,3
  201 TAUL(I)=TAUD(I)+TAUM
      DO 205 I=4,6
      TAUL(I)=TAUD(I)
  205 DEFP(I)=2.*DEFP(I)
C
C... TRANSFORM STRESS INTO GLOBAL AXES DIRECTION
C
      CALL CLEAR(TAU,6)
      CALL MNOZI2(TAU,TSG,TAUL,6,6)
C
CE  UPDATE FROM PREVIOUS STEP
C
  700 DO 290 I=1,6
      DEF1(I)=DEFL(I)
  290 TAU1(I)=TAU(I)
      RETURN
C-----------------------------------------------------------------------
 2001 FORMAT( ' ELEMENT =',I6,'  IR =',I2,'  IS =',I2,'  IT =',I2)
 2015 FORMAT(/' DOSTIGNUT MAKSIMALAN BROJ BISEKCIJA U TI317 ',
     &        '( RADIJUS POVRSI TECENJA )')
C-----------------------------------------------------------------------
 6015 FORMAT(/' MAXIMUM NUMBER OF BISECTION IS REACHED IN TI317 ',
     &        '( THE RADIUS OF YIELD SURFACE )')
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C   PUZANJE  3/D ELEMENT  -  ANIZOTROPNI MATERIJAL
C
C=======================================================================
      SUBROUTINE D3M18(TAU,DEF,TGT,IRAC,LPOCG,LPOC1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PROGRAM ZA ODREDIVANJE LOKACIJA VELICINA KOJE SE CUVAJU
C     NA NIVOU INTEGRACIONE TACKE
C
      include 'paka.inc'
      
      COMMON /REPERM/ MREPER(4)
      COMMON /DUPLAP/ IDVA
C
      LFUN=MREPER(1)
      LNTA=MREPER(2)
      LTEM=MREPER(3)
      MATE=MREPER(4)
C
      LTAU  =LPOCG
      LDEFT =LTAU   + 6*IDVA
      LDEFCT=LDEFT  + 6*IDVA
      LOPLUT=LDEFCT + 6*IDVA
      LOMINT=LOPLUT + 6*IDVA
      LALFCT=LOMINT + 6*IDVA
      LTECT =LALFCT + 6*IDVA
      LDQCT =LTECT  + 1*IDVA
      LIOR  =LDQCT  + 1*IDVA
      LPTAUT=LIOR   + 1*IDVA
      LA2CT =LPTAUT + 1*IDVA
      LCCFT =LA2CT  + 1*IDVA
C
      LTAU1 =LPOC1
      LDEF1 =LTAU1  + 6*IDVA
      LDEFC1=LDEF1  + 6*IDVA
      LOPLU1=LDEFC1 + 6*IDVA
      LOMIN1=LOPLU1 + 6*IDVA
      LALFC1=LOMIN1 + 6*IDVA
      LTEC1 =LALFC1 + 6*IDVA
      LDQC1 =LTEC1  + 1*IDVA
      LIOR1 =LDQC1  + 1*IDVA
      LPTAU1=LIOR1  + 1*IDVA
      LA2C1 =LPTAU1 + 1*IDVA
      LCCF1 =LA2C1  + 1*IDVA
C
      CALL TI318 (A(LIOR) ,A(LDEFCT),A(LOPLUT),A(LOMINT),A(LDQCT) ,
     &            A(LIOR1),A(LDEFC1),A(LOPLU1),A(LOMIN1),A(LDQC1) ,
     &            A(LTAU1),A(LDEF1) ,A(LTECT) ,A(LTEC1) ,A(LALFCT),
     &            A(LA2CT),A(LA2C1) ,A(LPTAUT),A(LPTAU1),A(LALFC1),
     &            A(LCCFT),A(LCCF1) ,
     &            A(LFUN),MATE,TAU,DEF,TGT,A(LTEM),A(LNTA),IRAC)
C
      RETURN
      END
C=======================================================================
      SUBROUTINE TI318 (ORI ,DEFCT,OPLUT,OMINT ,DEFQCT,
     &                  ORI1,DEFC ,OPLUS,OMINS ,DEFQC ,
     &                  TAU1,DEF1 ,TECT ,TEC   ,ALFCT ,
     &                  A2CT,A2C  ,PTAUT,PTAU  ,ALFC  ,
     &                  CCFT,CCF  ,
     &                  FUN,MATE,TAU,DEF,TGT,TREF,NTFUN,IRAC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
CE   ELASTIC-CREEP ANISOTROPIC MATERIAL
C
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TAUD3/ TAUD(6),DEFDPR(6),DEFDS(6),DDEFP(6),
     1                DETAU(6),DDEF(6)
      COMMON /ITERBR/ ITER
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /CREEPI/ ICELAW,ICLAW,ISG1,ITI1,ITH1,ISG2,ITI2,ITH2
      COMMON /SRPSKI/ ISRPS
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /ECOEF/ ECR(6)
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      DIMENSION SE(6),DEFL(6),TAUL(6),ETHERM(3),DDEFC(6)
      DIMENSION CE(6,6),CPE(3,3),CM(3),GB(3),CHCM(3,3),CHCV(3)
      DIMENSION DEFCT(*),TAU(*),DEF(*),TAU1(*),DEF1(*),DEFC(*),
     1          OPLUT(*),OMINT(*),OPLUS(*),OMINS(*),ALFCT(*),ALFC(*)
      DIMENSION FUN(2,MATE*13,*),TREF(*),NTFUN(*)
      DATA ITMAX/100/,EPSIL/1.0D-10/
      KDIM = 6
C
CE  INITIAL DATA
C
      IOR =ORI
      IOR1=IOR
      DVA = 2.D0
      DVT = DVA/3.
      TRIPO =3.D0/2.
C
CE  MATERIAL CONSTANTS FOR GIVEN TEMPERATURE TGT
C
      CALL PEL318(FUN,CE,CPE,CM,EMC,TGT,MATE,NTFUN,TREF)
      EMC1   = 1.-EMC
      IMIXC  = 1
      IF (DABS(EMC1).LT.EPSIL) IMIXC=0
C
C     THERMAL STRAIN, ESEKUNDUM
C
      CALL STERM3(ETHERM,TGT)
C
      DO 4 I=1,3
        CHCV(I)=0.D0
        DO 4 J=1,3
    4     CHCM(I,J)=0.D0
C
C... TRANSFORM STRAIN INTO MATERIAL AXES DIRECTION
C
      CALL CLEAR(DEFL,6)
      CALL CLEAR(TAUL,6)
      CALL MNOZI1(DEFL,TSG,DEF,6,6)
      IF (IRAC.EQ.2) THEN
        CALL JEDNA1(ELAST,CE,36)
        GO TO 700
      END IF
C
C... TRANSFORM ENGENEER. SHEAR STRAIN INTO TENSORIAL
C
      DO 10 I=4,6
   10 DEFCT(I) = 0.5*DEFCT(I)
C
      DO 20 I=1,3
        I3 = I+3
        DEFDS(I)  = DEFL(I)
   20   DEFDS(I3) = 0.5*DEFL(I3)
      IF (IATYP.NE.4) THEN
        DO 25 I=1,3
          I3 = I+3
          DEFDS(I)  = DEFDS(I)-DEFCT(I)-ETHERM(I)
   25     DEFDS(I3) = DEFDS(I3)-DEFCT(I3)
      END IF
C
CE   1)  ELASTIC DEVIATORIC STRESS SOLUTION  (TAUD)
C
      DO 40 I=1,3
        I3 = I+3
        DUM = 0.D0
        DO 30 J=1,3
   30     DUM    = DUM+CPE(I,J)*DEFDS(J)
        TAUD(I)  = DUM
        SE(I)    = DUM-ALFCT(I)
        DUM      = DVA*DEFDS(I3)*CE(I3,I3)
        TAUD(I3) = DUM
        SE(I3)   = DUM-ALFCT(I3)
   40 CONTINUE
      TEC=DSQRT(1.5*TDOTAN(SE,E))
C
      LPU=0
      IF (TEC.LT.1.D-12) THEN
        LPU=-1
        DEFQC=DEFQCT
        CALL JEDNA1(DEFC,DEFCT,6)
        GO TO 500
      END IF
C
CE   1)    OBTAIN ZERO OF THE ESF (BISECTION)
C
      AF    = 3.D0
      IB    = 0
      IT    = 0
      DQTOL = 1.D-10
      DCMIN = 1.D-10
      TECL  = 1.D-10
      IF (ITER.EQ.0) TECL=TECT
      IF (TECL.LT.1.D-10) TECL=1.D-10
      TECP  = TECL
      DTEC  = 0.1*TECT
      IF (DTEC.LT.1.D-8) DTEC=0.1*TEC
C
      PTAU=PTAUT+DT
      IF (ICLAW.EQ.1) THEN
        GAMP   = TRIPO*(ECTAU(TECL,DEFQCT)-DEFQCT)/(DT*TECL)
      ELSE
        GAMP   = TRIPO*ECDOT(TECL,PTAU,TGT)/TECL
      END IF
      GAMDT  = DT*GAMP
      A2C    = A2CT
      CCF    = CCFT
      IF (CCF.LT.1.D-8) CCF=1.D-8
C
      IF(IMIXC.EQ.1) CALL CHATC(CHCM,CHCV,ECR,EMC1,DVT,CCF,KDIM)
      CALL INIOR(SE,ECR,CE,CPE,GB,CXX,CYY,CXY,CYX,DXX,DYY,CED,
     &           CHCM,CHCV,GAMDT,KDIM)
      CALL DEV3(TAUD,SE,GB,CXX,CYY,DXX,DYY,CED,GAMDT,DG)
      ETEC = DSQRT(1.5*TDOTAN(TAUD,E))
      FL   = ETEC-TECL
C
      IF (ITER.EQ.0) GO TO 50
      TEC  = TECL+DTEC
C
  100 IT  = IT+1
      IB1 = IB
C
      IF(IT.GT.ITMAX) THEN
        IF (ISRPS.EQ.0) WRITE(IZLAZ,2000)
        IF (ISRPS.EQ.1) WRITE(IZLAZ,6000)
        WRITE(IZLAZ,2001)NLM,NGR,NGS,NGT
        STOP
      END IF
C
CE    FINDING THE PSEUDO TIME (PTAU)
C
        IF (DT.LE.1.D-3.OR.ICLAW.EQ.1) THEN
          PTAU=PTAUT+DT
          GO TO 195
        END IF
        JB    = 0
        JT    = 0
        PTL   = 1.D-10
        DPT   = 0.1*(PTAUT+DT)
        GL    = DEFQCT+DT*ECDOT(TEC,PTL,TGT)-EC(TEC,PTL,TGT)
        PTAU  = PTL+DPT
C
  200   JT    = JT+1
        JB1   = JB
C
        IF(JT.GT.ITMAX) THEN
          IF (ISRPS.EQ.0) WRITE(IZLAZ,2010)
          IF (ISRPS.EQ.1) WRITE(IZLAZ,6010)
          WRITE(IZLAZ,2001)NLM,NGR,NGS,NGT
          STOP
        END IF
C
        G    = DEFQCT+DT*ECDOT(TEC,PTAU,TGT)-EC(TEC,PTAU,TGT)
C
        CALL BISECB(PTAU,PTL,PD,DPT,G,GL,GD,AF,JB,DCMIN,DQTOL)
        IF (JB.EQ.-1) GO TO 195
        IF (JB1.EQ.0) GO TO 200
        IF ((DABS(DPT)/(PTL+PD)).GT.EPSIL) GO TO 200
C
  195 IF (ICLAW.EQ.1) THEN
        GAMAC  = TRIPO*(ECTAU(TEC,DEFQCT)-DEFQCT)/(DT*TEC)
      ELSE
        GAMAC  = TRIPO*ECDOT(TEC,PTAU,TGT)/TEC
      END IF
      GAMDT  = DT*GAMAC
C
      EEE    = EC(TEC,PTAU,TGT)-EC(TECP,PTAU,TGT)
      DDD    = TEC-TECP
      IF (DABS(DDD).GE.1.D-10) THEN
        A2C  = (GAMAC-GAMP)/DDD
        GAMP = GAMAC
        TECP = TEC
      END IF
      IF (DABS(EEE).GE.1.D-10) CCF=DDD/EEE
C
      IF(IMIXC.EQ.1) CALL CHATC(CHCM,CHCV,ECR,EMC1,DVT,CCF,KDIM)
      CALL INIOR(SE,ECR,CE,CPE,GB,CXX,CYY,CXY,CYX,DXX,DYY,CED,
     &           CHCM,CHCV,GAMDT,KDIM)
      CALL DEV3(TAUD,SE,GB,CXX,CYY,DXX,DYY,CED,GAMDT,DG)
C
      ETEC = DSQRT(1.5*TDOTAN(TAUD,E))
      F    = ETEC-TEC
C
      CALL BISECB(TEC,TECL,TECD,DTEC,F,FL,FD,AF,IB,DCMIN,DQTOL)
      IF (IB.EQ.-1) GO TO 105
      IF (IB1.EQ.0) GO TO 100
      IF ((DABS(DTEC)/(TECL+TECD)).GT.EPSIL) GO TO 100
C
CE   2)  DETERMINE SOLUTION
C
C
CE     E L A S T I C  -  C R E E P   M A T R I X   CEC
C
  105 IF (ISKNP.NE.2)
     &     CALL CEC3O(TAUD,ECR,CE,CPE,CM,GB,CED,CXX,CYY,CXY,CYX,
     &               DG,DXX,DYY,GAMAC,GAMDT,A2C,TEC,CHCM,CHCV)
C
CE      ...   ( CREEP STRAIN ), ( BACK STRESS )
C
   50 CALL INDEF3(DDEFC,ECR,TAUD,GAMDT)
      DO 51 I=1,6
   51   DEFC(I) = DEFCT(I)+DDEFC(I)
C
      IF(IMIXC.EQ.1)THEN
        CALL ABACK3(ALFC,ALFCT,DDEFC,CHCM,CHCV)
        DO 160 I=1,6
  160   TAUD(I) = TAUD(I)+ALFC(I)
      ENDIF
C
CE   3)    CALCULATE STRESS
C
  500 CONTINUE
      TAUM=CM(1)*(DEFL(1)-DEFC(1)-ETHERM(1))+
     &     CM(2)*(DEFL(2)-DEFC(2)-ETHERM(2))+
     &     CM(3)*(DEFL(3)-DEFC(3)-ETHERM(3))
      DO 201 I=1,3
  201 TAUL(I)=TAUD(I)+TAUM
      DO 205 I=4,6
      TAUL(I)=TAUD(I)
  205 DEFC(I)=2.*DEFC(I)
C
CE     THE MODIFIED EFFECTIVE CREEP STRAIN (DEFQC)
C
      IF (LPU.NE.-1) THEN
        DO 410 I=1,6
          OPLUS(I)=OPLUT(I)
  410     OMINS(I)=OMINT(I)
        CALL ORNL3(TAU,DEFC,DEFQC,OPLUS,OMINS,IOR1)
        ORI1=IOR1
      END IF
C
C... TRANSFORM STRESS INTO GLOBAL AXES DIRECTION
C
      CALL CLEAR(TAU,6)
      CALL MNOZI2(TAU,TSG,TAUL,6,6)
C
CE  UPDATE FROM PREVIOUS STEP
C
  700 DO 290 I=1,6
      DEF1(I)=DEFL(I)
  290 TAU1(I)=TAU(I)
      RETURN
C-----------------------------------------------------------------------
 2001 FORMAT( ' ELEMENT =',I6,'  IR =',I2,'  IS =',I2,'  IT =',I2)
 2000 FORMAT(/' DOSTIGNUT MAKSIMALAN BROJ BISEKCIJA U TI318')
 2010 FORMAT(/' DOSTIGNUT MAKSIMALAN BROJ BISEKCIJA U TI318 ',
     &        '( PSEUDO-TIME )')
C-----------------------------------------------------------------------
 6000 FORMAT(/' MAXIMUM NUMBER OF BISECTION IS REACHED IN TI318')
 6010 FORMAT(/' MAXIMUM NUMBER OF BISECTION IS REACHED IN TI318 ',
     &        '( PSEUDO-TIME )')
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE PEL318(FUN,CE,CPE,CM,EMC,TGT,MATE,NTFUN,TREF)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     EVALUATE MATERIAL CONSTANTS
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      DIMENSION FUN(2,MATE*13,*),TREF(*),NTFUN(*),FC(6)
      DIMENSION CE(6,*),CPE(3,*),CM(*)
C
      D13 =1.D0/3.
      ONE =1.D0
      DVA =2.D0
C
      MAT13=(MAT-1)*13
      MATE13=MATE*13
      DO 60 J=1,12
        NFE=MAT13+J
        CALL BTAB(FUN,NTFUN,NFE,MATE13,TGT,NL,IND,2)
        IF (IND.EQ.2) GO TO 300
        IF (IND.EQ.1) THEN
          EVA=FUN(2,NFE,1)
        ELSE
          AMU=TGT-FUN(1,NFE,NL)
          DEN=FUN(1,NFE,NL+1)-FUN(1,NFE,NL)
          EVA=((FUN(2,NFE,NL+1)-FUN(2,NFE,NL))/DEN)*AMU+FUN(2,NFE,NL)
        END IF
        GO TO (1,2,3,4,5,6,7,8,9,10,11,12) J
C
    1   EX      = EVA
        GO TO 60
    2   EY      = EVA
        GO TO 60
    3   EZ      = EVA
        GO TO 60
C
    4   VXY     = EVA
        GO TO 60
    5   VYZ     = EVA
        GO TO 60
    6   VZX     = EVA
        GO TO 60
C
    7   GXY     = EVA
        GO TO 60
    8   GYZ     = EVA
        GO TO 60
    9   GZX     = EVA
        GO TO 60
C
   10   ALFA(1) = EVA
        GO TO 60
   11   ALFA(2) = EVA
        GO TO 60
   12   ALFA(3) = EVA
        GO TO 60
C
   60 CONTINUE
C
      TEMP0 = TREF(MAT)
      EMC   = FUN(2,MAT13+13,1)
C
C... CHECK MATERIAL CONSTANTS
C
      FC(1) = EX
      FC(2) = EY
      FC(3) = EZ
      FC(4) = VXY
      FC(5) = VYZ
      FC(6) = VZX
      CALL ANICHK(FC,IZLAZ,ISRPS)
C
      CALL CLEAR(CE,36)
C
C     MATRICA CE
C
      POM=(ONE-DVA*VXY*VYZ*VZX-EX/EZ*VZX*VZX-EY/EX*VXY*VXY
     1-EZ/EY*VYZ*VYZ)/(EX*EY*EZ)
      CE(1,1)=(ONE/EZ-VYZ*VYZ/EY)/(EY*POM)
      CE(2,2)=(ONE/EX-VZX*VZX/EZ)/(EZ*POM)
      CE(3,3)=(ONE/EY-VXY*VXY/EX)/(EX*POM)
      CE(1,2)=(VZX*VYZ/EY+VXY/EX)/(EZ*POM)
      CE(1,3)=(VXY*VYZ/EX+VZX/EZ)/(EY*POM)
      CE(2,3)=(VXY*VZX/EZ+VYZ/EY)/(EX*POM)
      CE(4,4)=GXY
      CE(5,5)=GYZ
      CE(6,6)=GZX
      DO 50 I=1,6
      DO 50 J=I,6
   50 CE(J,I)=CE(I,J)
C
C...   MATRIX  C'E
C
      CPE(1,1)=D13*(DVA*CE(1,1)-CE(1,2)-CE(1,3))
      CPE(1,2)=D13*(DVA*CE(1,2)-CE(2,2)-CE(2,3))
      CPE(1,3)=D13*(DVA*CE(1,3)-CE(2,3)-CE(3,3))
      CPE(2,1)=D13*(DVA*CE(1,2)-CE(1,1)-CE(1,3))
      CPE(2,2)=D13*(DVA*CE(2,2)-CE(1,2)-CE(2,3))
      CPE(2,3)=D13*(DVA*CE(2,3)-CE(1,3)-CE(3,3))
      CPE(3,1)=D13*(DVA*CE(1,3)-CE(1,1)-CE(1,2))
      CPE(3,2)=D13*(DVA*CE(2,3)-CE(1,2)-CE(2,2))
      CPE(3,3)=D13*(DVA*CE(3,3)-CE(1,3)-CE(2,3))
C
C...   VECTOR   CM
C
      CM(1)=D13*(CE(1,1)+CE(1,2)+CE(1,3))
      CM(2)=D13*(CE(1,2)+CE(2,2)+CE(2,3))
      CM(3)=D13*(CE(1,3)+CE(2,3)+CE(3,3))
      RETURN
  300 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2005) NFE,TGT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6005) NFE,TGT
      STOP
C-----------------------------------------------------------------------
 2005 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE U PEL318'/
     1' TEMPERATURSKA FUNKCIJA BROJ =',I5/
     2' ARGUMENT TEMPERATURA =',1PD12.4)
C-----------------------------------------------------------------------
 6005 FORMAT(///' ARGUMENT IS OUT OF RANGE IN PEL318'/
     1' TEMPERATURE FUNCTION  =',I5/
     2' ARGUMENT TEMPERATURE  =',1PD12.4)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C   TERMO-ELASTO-PLASTICNOST SA PUZANJEM -  3/D ELEMENT     (02.09.1994)
C          (ANIZOTROPAN MATERIJAL SA MESOVITIM OJACANJEM)
C
C=======================================================================
      SUBROUTINE D3M19(TAU,DEF,TGT,IRAC,LPOCG,LPOC1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PROGRAM ZA ODREDIVANJE LOKACIJA VELICINA KOJE SE CUVAJU
C     NA NIVOU INTEGRACIONE TACKE
C
      include 'paka.inc'
      
      COMMON /REPERM/ MREPER(4)
      COMMON /DUPLAP/ IDVA
C
      LFUN=MREPER(1)
      LNTA=MREPER(2)
      LTEM=MREPER(3)
      MATE=MREPER(4)
C
      LTAU  =LPOCG
      LDEFT =LTAU   + 6*IDVA
      LDEFPT=LDEFT  + 6*IDVA
      LALFAT=LDEFPT + 6*IDVA
      LDEFCT=LALFAT + 6*IDVA
      LOPLUT=LDEFCT + 6*IDVA
      LOMINT=LOPLUT + 6*IDVA
      LALFCT=LOMINT + 6*IDVA
      LTEQT =LALFCT + 6*IDVA
      LTECT =LTEQT  + 1*IDVA
      LDQPT =LTECT  + 1*IDVA
      LDQCT =LDQPT  + 1*IDVA
      LIPL  =LDQCT  + 1*IDVA
      LIOR  =LIPL   + 1*IDVA
      LPTAUT=LIOR   + 1*IDVA
      LA2CT =LPTAUT + 1*IDVA
      LCCFT =LA2CT  + 1*IDVA
C
      LTAU1 =LPOC1
      LDEF1 =LTAU1  + 6*IDVA
      LDEFP1=LDEF1  + 6*IDVA
      LALFA1=LDEFP1 + 6*IDVA
      LDEFC1=LALFA1 + 6*IDVA
      LOPLU1=LDEFC1 + 6*IDVA
      LOMIN1=LOPLU1 + 6*IDVA
      LALFC1=LOMIN1 + 6*IDVA
      LTEQ1 =LALFC1 + 6*IDVA
      LTEC1 =LTEQ1  + 1*IDVA
      LDQP1 =LTEC1  + 1*IDVA
      LDQC1 =LDQP1  + 1*IDVA
      LIPL1 =LDQC1  + 1*IDVA
      LIOR1 =LIPL1  + 1*IDVA
      LPTAU1=LIOR1  + 1*IDVA
      LA2C1 =LPTAU1 + 1*IDVA
      LCCF1 =LA2C1  + 1*IDVA
C
      CALL TI319 (A(LIOR) ,A(LDEFCT),A(LOPLUT),A(LOMINT),A(LDQCT) ,
     &            A(LIPL) ,A(LDEFPT),A(LALFAT),A(LDQPT) ,A(LTEQT),
     &            A(LIOR1),A(LDEFC1),A(LOPLU1),A(LOMIN1),A(LDQC1) ,
     &            A(LIPL1),A(LDEFP1),A(LALFA1),A(LDQP1) ,A(LTEQ1),
     &            A(LTAU1),A(LDEF1) ,A(LTECT) ,A(LTEC1) ,A(LALFCT),
     &            A(LA2CT),A(LA2C1) ,A(LPTAUT),A(LPTAU1),A(LALFC1),
     &            A(LCCFT),A(LCCF1) ,
     &            A(LFUN),MATE,TAU,DEF,TGT,A(LTEM),A(LNTA),IRAC)
C
      RETURN
      END
C=======================================================================
      SUBROUTINE TI319 (ORI ,DEFCT,OPLUT,OMINT ,DEFQCT,
     &                  PL  ,DEFPT,ALFPT,DEFQPT,TEQT  ,
     &                  ORI1,DEFC ,OPLUS,OMINS ,DEFQC ,
     &                  PL1 ,DEFP ,ALFP ,DEFQP ,TEQ   ,
     &                  TAU1,DEF1 ,TECT ,TEC   ,ALFCT ,
     &                  A2CT,A2C  ,PTAUT,PTAU  ,ALFC  ,
     &                  CCFT,CCF  ,
     &                  FUN,MATE,TAU,DEF,TGT,TREF,NTFUN,IRAC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
CE   THERMO-ELASTIC-PLASTIC WITH CREEP - ANISOTROPIC MATERIAL
C
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TAUD3/ TAUD(6),DEFDPR(6),DEFDS(6),DDEFP(6),
     1                DETAU(6),DDEF(6)
      COMMON /ITERBR/ ITER
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /CREEPI/ ICELAW,ICLAW,ISG1,ITI1,ITH1,ISG2,ITI2,ITH2
      COMMON /SRPSKI/ ISRPS
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /ECOEF/ ECR(6)
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      DIMENSION SHATP(6),SHATC(6),SGAM(6),SLAM(6),SGI(6),SLI(6),
     &          DEFL(6),TAUL(6),ETHERM(3)
      DIMENSION CE(6,6),CPE(3,3),CM(3)
      DIMENSION CHCM(3,3),CHCV(3),GBC(3),DDEFC(6)
      DIMENSION CHPM(3,3),CHPV(3),GBP(3),EPL(6)
      DIMENSION Y0(6),CY(6),AN(6),AN1(6)
      DIMENSION TAU(*),DEF(*),TAU1(*),DEF1(*),
     &          DEFCT(*),DEFC(*),OPLUT(*),OMINT(*),OPLUS(*),OMINS(*),
     &          DEFPT(*),DEFP(*),ALFPT(*),ALFP(*),ALFCT(*),ALFC(*)
      DIMENSION FUN(4,MATE*18,*),TREF(*),NTFUN(*)
      DIMENSION TAUS(6),PEP(6,6),DEFLS(6),DEFPS(6),ALFPS(6),DEFCS(6),
     &          ALFCS(6)
      DATA ITMAX/100/,EPSIL/1.0D-10/
      KDIM = 6
C
CE  INITIAL DATA
C
      IOR   = ORI
      IOR1  = IOR
      IPL   = PL
      DVA   = 2.D0
      DVT   = DVA/3.
      TRIPO = 3.D0/2.
      IPERT = 0
C
CE  MATERIAL CONSTANTS FOR GIVEN TEMPERATURE TGT
C
      CALL PEL319(FUN,CE,CYQ,ANQ,Y0,CY,AN,AN1,CPE,CM,EM,EMC,
     &            TGT,MATE,NTFUN,TREF)
      ANQ1  = ANQ-1.
      IF (ANQ1.LT.1.D-8) ANQ1=1.D-8
      EM1   = 1.-EM
      IMIX  = 1
      IF (DABS(EM1).LT.EPSIL) IMIX=0
C
      EMC1   = 1.-EMC
      IMIXC  = 1
      IF (DABS(EMC1).LT.EPSIL) IMIXC=0
C
C     THERMAL STRAIN, ESEKUNDUM
C
      CALL STERM3(ETHERM,TGT)
C
      DO 4 I=1,3
        CHPV(I)=0.D0
        CHCV(I)=0.D0
        DO 4 J=1,3
          CHPM(I,J)=0.D0
    4     CHCM(I,J)=0.D0
C
CE    YIELD STRESS
C
      CALL ENTY(TEQY,EPL,Y0,CY,AN,EM,DEFQPT,DEFQPT,KDIM)
C
C... TRANSFORM STRAIN INTO MATERIAL AXES DIRECTION
C
      CALL CLEAR(DEFL,6)
      CALL CLEAR(TAUL,6)
      CALL MNOZI1(DEFL,TSG,DEF,6,6)
      IF (IRAC.EQ.2) THEN
        CALL JEDNA1(ELAST,CE,36)
        GO TO 700
      END IF
C
C... TRANSFORM ENGENEER. SHEAR STRAIN INTO TENSORIAL
C
      DO 10 I=4,6
      DEFPT(I) = 0.5*DEFPT(I)
   10 DEFCT(I) = 0.5*DEFCT(I)
C
      KBROJ=0
  800 CONTINUE
C
      DO 20 I=1,3
        I3 = I+3
        DEFDS(I)  = DEFL(I)
   20   DEFDS(I3) = 0.5*DEFL(I3)
      IF (IATYP.NE.4) THEN
        DO 25 I=1,3
          I3 = I+3
          DEFDS(I)  = DEFDS(I)-DEFPT(I)-DEFCT(I)-ETHERM(I)
   25     DEFDS(I3) = DEFDS(I3)-DEFPT(I3)-DEFCT(I3)
      END IF
C
CE   1)  ELASTIC DEVIATORIC STRESS SOLUTION  (TAUD)
C
      DO 40 I=1,3
        I3 = I+3
        DUM = 0.D0
        DO 30 J=1,3
   30     DUM    = DUM+CPE(I,J)*DEFDS(J)
        SHATP(I) = DUM-ALFPT(I)
        SHATC(I) = DUM-ALFCT(I)
        SGI(I)   = SHATP(I)
        SLI(I)   = SHATC(I)
        DUM      = DVA*DEFDS(I3)*CE(I3,I3)
        SHATP(I3)= DUM-ALFPT(I3)
        SHATC(I3)= DUM-ALFCT(I3)
        SGI(I3)  = SHATP(I3)
        SLI(I3)  = SHATC(I3)
   40 CONTINUE
      TEC=DSQRT(1.5*TDOTAN(SHATC,ECR))
      TEQ=DSQRT(1.5*TDOTAN(SHATP,EPL))
      TEQE=TEQ
C
CE   2)  CHECK FOR YIELDING
C
      LPU=0
      IF ((TEQ-TEQY)/TEQY.LT.1.D-5) THEN
        IPL1=0
        DEFQP=DEFQPT
        IF (TEC.LT.1.D-10) THEN
          LPU=-1
          DEFQC=DEFQCT
          CALL JEDNA1(DEFC,DEFCT,6)
          GO TO 500
        END IF
      ELSE
        PL1 =1.0D0
        IPL1=1
      END IF
C
CE   3)    OBTAIN ZERO OF THE ESF (BISECTION)
C
      AF    = 3.D0
      IB    = 0
      IT    = 0
      DQTOL = 1.D-10
      DCMIN = 1.D-10
      DQMIN = 0.D0
      TECL  = 1.D-10
      IF (ITER.EQ.0) TECL=TECT
      IF (TECL.LT.1.D-10) TECL=1.D-10
      TECP  = TECL
      DTEC  = 0.1*TECT
      IF (DTEC.LT.1.D-8) DTEC=0.1*TEC
C
      PTAU=PTAUT+DT
      IF (ICLAW.EQ.1) THEN
        GAMP   = TRIPO*(ECTAU(TECL,DEFQCT)-DEFQCT)/(DT*TECL)
      ELSE
        GAMP   = TRIPO*ECDOT(TECL,PTAU,TGT)/TECL
      END IF
      GAMDT  = DT*GAMP
      A2C    = A2CT
      CCF    = CCFT
      IF (CCF.LT.1.D-10) CCF=1.D-10
C
      IF(IMIXC.EQ.1) CALL CHATC(CHCM,CHCV,ECR,EMC1,DVT,CCF,KDIM)
      CALL INIOR(SLI,ECR,CE,CPE,GBC,CXXC,CYYC,CXYC,CYXC,DXXC,DYYC,CEDC,
     &            CHCM,CHCV,GAMDT,KDIM)
      CALL DEV3(SHATC,SLI,GBC,CXXC,CYYC,DXXC,DYYC,CEDC,GAMDT,DG)
      ETEC = DSQRT(1.5*TDOTAN(SHATC,ECR))
      FL   = ETEC-TECL
C
      IF (ITER.EQ.0) GO TO 50
      TEC  = TECL+DTEC
C
  100 IT  = IT+1
      IB1 = IB
C
      IF(IT.GT.ITMAX) THEN
        IF (ISRPS.EQ.0) WRITE(IZLAZ,2000)
        IF (ISRPS.EQ.1) WRITE(IZLAZ,6000)
        WRITE(IZLAZ,2001)NLM,NGR,NGS,NGT
        STOP
      END IF
C
CE    FINDING THE PSEUDO TIME (PTAU)
C
        IF (DT.LE.1.D-3.OR.ICLAW.EQ.1) THEN
          PTAU=PTAUT+DT
          GO TO 195
        END IF
        JB    = 0
        JT    = 0
        PTL   = 1.D-10
        DPT   = 0.1*(PTAUT+DT)
        GL    = DEFQCT+DT*ECDOT(TEC,PTL,TGT)-EC(TEC,PTL,TGT)
        PTAU  = PTL+DPT
C
  200   JT    = JT+1
        JB1   = JB
C
        IF(JT.GT.ITMAX) THEN
          IF (ISRPS.EQ.0) WRITE(IZLAZ,2010)
          IF (ISRPS.EQ.1) WRITE(IZLAZ,6010)
          WRITE(IZLAZ,2001)NLM,NGR,NGS,NGT
          STOP
        END IF
C
        G    = DEFQCT+DT*ECDOT(TEC,PTAU,TGT)-EC(TEC,PTAU,TGT)
C
        CALL BISECB(PTAU,PTL,PD,DPT,G,GL,GD,AF,JB,DCMIN,DQTOL)
        IF (JB.EQ.-1) GO TO 195
        IF (JB1.EQ.0) GO TO 200
        IF ((DABS(DPT)/(PTL+PD)).GT.EPSIL) GO TO 200
C
  195 IF (ICLAW.EQ.1) THEN
        GAMAC  = TRIPO*(ECTAU(TEC,DEFQCT)-DEFQCT)/(DT*TEC)
      ELSE
        GAMAC  = TRIPO*ECDOT(TEC,PTAU,TGT)/TEC
      END IF
      GAMDT  = DT*GAMAC
C
CE    FINDING THE RADIUS OF THE YIELD SURFACE (TEQ)
C
      DEFQP = DEFQPT
      CALL ENTY(TEQY,EPL,Y0,CY,AN,EM,DEFQP,DEFQPT,KDIM)
      IF (DEFQP.LT.1.D-8) DEFQP=1.D-8
      EP2=ANQ*CYQ*DEFQP**ANQ1
      IF (EP2.LT.1.D-8) EP2=1.D-8
C
      KB    = 0
      KT    = 0
      DEPL  = 0.D0
      CALL INDEF3(DDEFC,ECR,SHATC,GAMDT)
      DO 99 L=1,3
        L3 = L+3
        DUM = 0.D0
        DO 98 M=1,3
   98     DUM = DUM+CPE(L,M)*DDEFC(M)
        SGAM(L)  = SGI(L)-DUM
        DUM      = DVA*DDEFC(L3)*CE(L3,L3)
   99   SGAM(L3) = SGI(L3)-DUM
      DO 97 L=1,6
   97   SHATP(L)=SGAM(L)
      TEQ   = DSQRT(1.5*TDOTAN(SHATP,EPL))
      FHETL = TEQ-TEQY
      IF (FHETL.LE.0.D0) THEN
        IPL1 = 0
        GO TO 260
      END IF
      IPL1 = 1
      DDEP  = 0.1*FHETL/EP2
      DDEFQP= DDEP
C
      TOLD = TEQY
      DOLD = DEFQPT
      EP   = EP2
C
  250   KT  = KT+1
        KB1 = KB
C
        IF(KT.GT.ITMAX) THEN
          IF (ISRPS.EQ.0) WRITE(IZLAZ,2015)
          IF (ISRPS.EQ.1) WRITE(IZLAZ,6015)
          WRITE(IZLAZ,2001)NLM,NGR,NGS,NGT
          STOP
        END IF
C
        DEFQP = DEFQPT+DDEFQP
C
        CALL ENTY(TEQY,EPL,Y0,CY,AN,EM,DEFQP,DEFQPT,KDIM)
        DLAM = 1.5*DDEFQP/TEQY
        IF(IMIX.EQ.1)
     &    CALL CHATP(CHPM,CHPV,EPL,DEFQP,EM1,DVT,CY,AN,AN1,KDIM)
        CALL INIOR(SGAM,EPL,CE,CPE,GBP,CXXP,CYYP,CXYP,CYXP,DXXP,DYYP,
     &              CEDP,CHPM,CHPV,DLAM,KDIM)
        CALL DEV3(SHATP,SGAM,GBP,CXXP,CYYP,DXXP,DYYP,CEDP,DLAM,DL)
        TEQ  = DSQRT(1.5*TDOTAN(SHATP,EPL))
C
        FHET = TEQ-TEQY
C
        CALL BISECB(DDEFQP,DEPL,DEPD,DDEP,
     &              FHET,FHETL,FHETD,AF,KB,DQMIN,DQTOL)
      IF (KB.EQ.-1) GO TO 255
      IF (KB1.EQ.0) GO TO 250
C
      DDF    = DEFQP-DOLD
      IF (DABS(DDF).GT.1.D-10) THEN
        EP   = DABS((TEQY-TOLD)/DDF)
        TOLD = TEQY
        DOLD = DEFQP
      END IF
C
      IF ((DABS(DDEP)/(DEPL+DEPD)).GT.EPSIL) GO TO 250
C
  255 CALL INDEF3(DDEFP,EPL,SHATP,DLAM)
      DO 89 L=1,3
        L3 = L+3
        DUM = 0.D0
        DO 88 M=1,3
   88     DUM = DUM+CPE(L,M)*DDEFP(M)
        SLAM(L)  = SLI(L)-DUM
        DUM      = DVA*DDEFP(L3)*CE(L3,L3)
   89   SLAM(L3) = SLI(L3)-DUM
  260 IF (IPL1.NE.1) THEN
        DO 256 I=1,6
  256     SLAM(I)=SLI(I)
      END IF
C
      IF (IB1.NE.0) THEN
        EEE    = EC(TEC,PTAU,TGT)-EC(TECP,PTAU,TGT)
        DDD    = TEC-TECP
        IF (DABS(DDD).GE.1.D-10) THEN
          A2C  = (GAMAC-GAMP)/DDD
          GAMP = GAMAC
          TECP = TEC
        END IF
        IF (DABS(EEE).GE.1.D-10) CCF=DDD/EEE
      END IF
C
      IF(IMIXC.EQ.1) CALL CHATC(CHCM,CHCV,ECR,EMC1,DVT,CCF,KDIM)
      CALL INIOR(SLAM,ECR,CE,CPE,GBC,CXXC,CYYC,CXYC,CYXC,DXXC,DYYC,
     &            CEDC,CHCM,CHCV,GAMDT,KDIM)
      CALL DEV3(SHATC,SLAM,GBC,CXXC,CYYC,DXXC,DYYC,CEDC,GAMDT,DG)
      ETEC = DSQRT(1.5*TDOTAN(SHATC,ECR))
C
      F    = ETEC-TEC
C
      CALL BISECB(TEC,TECL,TECD,DTEC,F,FL,FD,AF,IB,DCMIN,DQTOL)
      IF (IB.EQ.-1) GO TO 105
      IF (IB1.EQ.0) GO TO 100
      IF ((DABS(DTEC)/(TECL+TECD)).GT.EPSIL) GO TO 100
C
CE   4)  DETERMINE SOLUTION
C
C
CE     E L A S T I C - P L A S T I C - C R E E P   M A T R I X   CEPC
C
  105 IF (ISKNP.NE.2) THEN
        IF (KBROJ.EQ.0) THEN
          IF (IPL1.EQ.1) THEN
            IF (DABS(EC(TEC,PTAU,TGT)-DEFQCT).GT.1.D-6) THEN
              IPERT=1
            ELSE
              CALL CEP3O(SHATP,EPL,CE,CPE,CM,GBP,CEDP,CXXP,CYYP,CXYP,
     &                   CYXP,DL,DXXP,DYYP,DLAM,TEQY,CHPM,CHPV,EP,AN1,
     &                   DEFQP)
            END IF
          ELSE
            CALL CEC3O(SHATC,ECR,CE,CPE,CM,GBC,CEDC,CXXC,CYYC,CXYC,CYXC,
     &                 DG,DXXC,DYYC,GAMAC,GAMDT,A2C,TEC,CHCM,CHCV)
          END IF
        END IF
      END IF
C
CE      ...   ( CREEP STRAIN ), ( BACK STRESS )
C
   50 CALL INDEF3(DDEFC,ECR,SHATC,GAMDT)
      DO 51 I=1,6
        DEFC(I) = DEFCT(I)+DDEFC(I)
        TAUD(I) = SHATC(I)
   51   IF (IPL1.EQ.1) DEFP(I) = DEFPT(I)+DDEFP(I)
C
      IF(IMIXC.EQ.1)THEN
        CALL ABACK3(ALFC,ALFCT,DDEFC,CHCM,CHCV)
        DO 160 I=1,6
  160   TAUD(I) = TAUD(I)+ALFC(I)
      ENDIF
      IF (IMIX.EQ.1.AND.IPL1.EQ.1) CALL ABACK3(ALFP,ALFPT,DDEFP,CHPM,
     &                                         CHPV)
C
CE   5)    CALCULATE STRESS
C
  500 CONTINUE
      IF (IPL1.NE.1) THEN
        TEQ = TEQE
        CALL JEDNA1(DEFP,DEFPT,6)
        DEFQP=DEFQPT
      END IF
      TAUM=CM(1)*(DEFL(1)-DEFP(1)-DEFC(1)-ETHERM(1))+
     &     CM(2)*(DEFL(2)-DEFP(2)-DEFC(2)-ETHERM(2))+
     &     CM(3)*(DEFL(3)-DEFP(3)-DEFC(3)-ETHERM(3))
      DO 201 I=1,3
  201 TAUL(I)=TAUD(I)+TAUM
      DO 205 I=4,6
      TAUL(I)=TAUD(I)
      DEFP(I)=2.*DEFP(I)
  205 DEFC(I)=2.*DEFC(I)
C
CE     THE MODIFIED EFFECTIVE CREEP STRAIN (DEFQC)
C
      IF (LPU.NE.-1) THEN
        DO 410 I=1,6
          OPLUS(I)=OPLUT(I)
  410     OMINS(I)=OMINT(I)
        CALL ORNL3(TAU,DEFC,DEFQC,OPLUS,OMINS,IOR1)
        ORI1=IOR1
      END IF
C
C     CEPC BY PERTURBATION METHOD
C
      IF (IPERT.EQ.1) THEN
        IF (KBROJ.NE.7) THEN
          KBROJ=KBROJ+1
          IF (KBROJ.EQ.1) THEN
            DEFQPS = DEFQP
            DEFQCS = DEFQC
            A2CS   = A2C
            PTAUS  = PTAU
            CCFS   = CCF
            TEQS   = TEQ
            TECS   = TEC
            DO 71 I=1,6
              DEFLS(I) = DEFL(I)
              DEFPS(I) = DEFP(I)
              ALFPS(I) = ALFP(I)
              DEFCS(I) = DEFC(I)
              ALFCS(I) = ALFC(I)
   71         TAUS(I)  = TAUL(I)
            DD=1.D-7
            IF (DEFL(KBROJ).LT.0.D0) DD=-DD
            DEFL(KBROJ)=DEFL(KBROJ)+DD
          ELSE
            DO 72 I=1,6
              DEFL(I)=DEFLS(I)
   72         PEP(I,KBROJ-1)=(TAUL(I)-TAUS(I))/DD
            DD=1.D-7
            IF (DEFL(KBROJ).LT.0.D0) DD=-DD
            IF (KBROJ.NE.7) DEFL(KBROJ)=DEFL(KBROJ)+DD
          END IF
          GO TO 800
        END IF
        DO 77 I=1,6
        DO 77 J=I,6
          PEP(I,J)=.5*(PEP(I,J)+PEP(J,I))
   77     PEP(J,I)=PEP(I,J)
        DO 78 I=1,6
        DO 78 J=1,6
   78     ELAST(I,J)=PEP(I,J)
C
        DEFQP = DEFQPS
        DEFQC = DEFQCS
        A2C   = A2CS
        PTAU  = PTAUS
        CCF   = CCFS
        TEQ   = TEQS
        TEC   = TECS
        DO 79 I=1,6
          DEFL(I) = DEFLS(I)
          DEFP(I) = DEFPS(I)
          ALFP(I) = ALFPS(I)
          DEFC(I) = DEFCS(I)
          ALFC(I) = ALFCS(I)
   79     TAUL(I) = TAUS(I)
      END IF
C
C... TRANSFORM STRESS INTO GLOBAL AXES DIRECTION
C
      CALL CLEAR(TAU,6)
      CALL MNOZI2(TAU,TSG,TAUL,6,6)
C
CE  UPDATE FROM PREVIOUS STEP
C
  700 DO 290 I=1,6
      DEF1(I)=DEFL(I)
  290 TAU1(I)=TAU(I)
      RETURN
C-----------------------------------------------------------------------
 2001 FORMAT( ' ELEMENT =',I6,'  IR =',I2,'  IS =',I2,'  IT =',I2)
 2000 FORMAT(/' DOSTIGNUT MAKSIMALAN BROJ BISEKCIJA U TI319')
 2010 FORMAT(/' DOSTIGNUT MAKSIMALAN BROJ BISEKCIJA U TI319 ',
     &        '( PSEUDO-TIME )')
 2015 FORMAT(/' DOSTIGNUT MAKSIMALAN BROJ BISEKCIJA U TI319 ',
     &        '( RADIJUS POVRSI TECENJA )')
C-----------------------------------------------------------------------
 6000 FORMAT(/' MAXIMUM NUMBER OF BISECTION IS REACHED IN TI319')
 6010 FORMAT(/' MAXIMUM NUMBER OF BISECTION IS REACHED IN TI319 ',
     &        '( PSEUDO-TIME )')
 6015 FORMAT(/' MAXIMUM NUMBER OF BISECTION IS REACHED IN TI319 ',
     &        '( THE RADIUS OF YIELD SURFACE )')
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE PEL319(FUN,CE,CYQ,ANQ,Y0,CY,AN,AN1,CPE,CM,EM,EMC,
     &                  TGT,MATE,NTFUN,TREF)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     EVALUATE MATERIAL CONSTANTS
C
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      DIMENSION FUN(4,MATE*18,*),TREF(*),NTFUN(*),FC(6)
      DIMENSION CE(6,*),CPE(3,*),CM(*)
      DIMENSION Y0(*),CY(*),AN(*),AN1(*)
C
      D13 =1.D0/3.
      ONE =1.D0
      DVA =2.D0
C
      MAT18=(MAT-1)*18
      MATE18=MATE*18
      DO 60 J=1,18
        NFE=MAT18+J
        CALL BTAB(FUN,NTFUN,NFE,MATE18,TGT,NL,IND,4)
        IF (IND.EQ.2) GO TO 300
        IF (IND.EQ.1) THEN
          EVA=FUN(2,NFE,1)
        ELSE
          AMU=TGT-FUN(1,NFE,NL)
          DEN=FUN(1,NFE,NL+1)-FUN(1,NFE,NL)
          EVA=((FUN(2,NFE,NL+1)-FUN(2,NFE,NL))/DEN)*AMU+FUN(2,NFE,NL)
        END IF
        IF (J.LE.12) THEN
          GO TO (1,2,3,4,5,6,7,8,9,10,11,12) J
C
    1     EX      = EVA
          GO TO 60
    2     EY      = EVA
          GO TO 60
    3     EZ      = EVA
          GO TO 60
C
    4     VXY     = EVA
          GO TO 60
    5     VYZ     = EVA
          GO TO 60
    6     VZX     = EVA
          GO TO 60
C
    7     GXY     = EVA
          GO TO 60
    8     GYZ     = EVA
          GO TO 60
    9     GZX     = EVA
          GO TO 60
C
   10     ALFA(1) = EVA
          GO TO 60
   11     ALFA(2) = EVA
          GO TO 60
   12     ALFA(3) = EVA
          GO TO 60
C
        ELSE
          K=J-12
          Y0(K)   = EVA
          IF (IND.EQ.1) THEN
            CY(K) = FUN(3,NFE,1)
            AN(K) = FUN(4,NFE,1)
          ELSE
            CY(K) = ((FUN(3,NFE,NL+1)-FUN(3,NFE,NL))/DEN)*AMU+
     &              FUN(3,NFE,NL)
            AN(K) = ((FUN(4,NFE,NL+1)-FUN(4,NFE,NL))/DEN)*AMU+
     &              FUN(4,NFE,NL)
          END IF
          AN1(K) = AN(K)-ONE
        END IF
   60 CONTINUE
      TEMP0 = TREF(MAT)
      EM    = FUN(3,MAT18+1,1)
      IF (NMODM.EQ.19) EMC   = FUN(4,MAT18+1,1)
C
C... CHECK MATERIAL CONSTANTS
C
      FC(1) = EX
      FC(2) = EY
      FC(3) = EZ
      FC(4) = VXY
      FC(5) = VYZ
      FC(6) = VZX
      CALL ANICHK(FC,IZLAZ,ISRPS)
C
      CYQ   = CY(1)
      ANQ   = AN(1)
C
      CALL CLEAR(CE,36)
C
C     MATRICA CE
C
      POM=(ONE-DVA*VXY*VYZ*VZX-EX/EZ*VZX*VZX-EY/EX*VXY*VXY
     1-EZ/EY*VYZ*VYZ)/(EX*EY*EZ)
      CE(1,1)=(ONE/EZ-VYZ*VYZ/EY)/(EY*POM)
      CE(2,2)=(ONE/EX-VZX*VZX/EZ)/(EZ*POM)
      CE(3,3)=(ONE/EY-VXY*VXY/EX)/(EX*POM)
      CE(1,2)=(VZX*VYZ/EY+VXY/EX)/(EZ*POM)
      CE(1,3)=(VXY*VYZ/EX+VZX/EZ)/(EY*POM)
      CE(2,3)=(VXY*VZX/EZ+VYZ/EY)/(EX*POM)
      CE(4,4)=GXY
      CE(5,5)=GYZ
      CE(6,6)=GZX
      DO 50 I=1,6
      DO 50 J=I,6
   50 CE(J,I)=CE(I,J)
C
C...   MATRIX  C'E
C
      CPE(1,1)=D13*(DVA*CE(1,1)-CE(1,2)-CE(1,3))
      CPE(1,2)=D13*(DVA*CE(1,2)-CE(2,2)-CE(2,3))
      CPE(1,3)=D13*(DVA*CE(1,3)-CE(2,3)-CE(3,3))
      CPE(2,1)=D13*(DVA*CE(1,2)-CE(1,1)-CE(1,3))
      CPE(2,2)=D13*(DVA*CE(2,2)-CE(1,2)-CE(2,3))
      CPE(2,3)=D13*(DVA*CE(2,3)-CE(1,3)-CE(3,3))
      CPE(3,1)=D13*(DVA*CE(1,3)-CE(1,1)-CE(1,2))
      CPE(3,2)=D13*(DVA*CE(2,3)-CE(1,2)-CE(2,2))
      CPE(3,3)=D13*(DVA*CE(3,3)-CE(1,3)-CE(2,3))
C
C...   VECTOR   CM
C
      CM(1)=D13*(CE(1,1)+CE(1,2)+CE(1,3))
      CM(2)=D13*(CE(1,2)+CE(2,2)+CE(2,3))
      CM(3)=D13*(CE(1,3)+CE(2,3)+CE(3,3))
      RETURN
  300 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2005) NFE,TGT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6005) NFE,TGT
      STOP
C-----------------------------------------------------------------------
 2005 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE U PEL319'/
     1' TEMPERATURSKA FUNKCIJA BROJ =',I5/
     2' ARGUMENT TEMPERATURA =',1PD12.4)
C-----------------------------------------------------------------------
 6005 FORMAT(///' ARGUMENT IS OUT OF RANGE IN PEL319'/
     1' TEMPERATURE FUNCTION  =',I5/
     2' ARGUMENT TEMPERATURE  =',1PD12.4)
C-----------------------------------------------------------------------
      END
C======================================================================
      SUBROUTINE CEC3O(SHATC,ECR,CE,CPE,CM,GBC,CEDC,CXXC,CYYC,CXYC,CYXC,
     &                 DG,DXXC,DYYC,GAMAC,GAMDT,A2C,TEC,CHCM,CHCV)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICE CEC ( ELAST )
CE     ELASTO-CREEP  CEC MATRIX
C
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      DIMENSION ECR(*),CE(6,*),CPE(3,*),SHATC(*),CM(*),GBC(*)
      DIMENSION P(3,3),W(6),T(6),R(6),CMB(6),XEN(6,6),CP(6,6),CHCM(3,*),
     &          CHCV(3)
      EQUIVALENCE (P(1,1),XEN(1,1))
      EQUIVALENCE (R(1),CMB(1))
C
      ZERO  =0.D0
      ONE   =1.D0
      DVA   =2.D0
      PO    =0.5D0
      DVT   =DVA/3.
C
      CALL CLEAR(ELAST,36)
C
      DS12 = SHATC(1) - SHATC(2)
      DS13 = SHATC(1) - SHATC(3)
      DS23 = SHATC(2) - SHATC(3)
      AXX = ECR(1)*DS12 + DVA*ECR(2)*DS13 + ECR(3)*DS23
      AYY = DVA*ECR(3)*DS23 - ECR(1)*DS12 + ECR(2)*DS13
      DO 25 I=1,3
        I3=I+3
        P(1,I) = (CPE(1,I) + GAMDT*(CYYC*CPE(1,I) + CXYC*CPE(2,I)))/DG
        P(2,I) = (CPE(2,I) + GAMDT*(CXXC*CPE(2,I) + CYXC*CPE(1,I)))/DG
        P(3,I) = -P(1,I)-P(2,I)
        R(I3) = DVA*CE(I3,I3)/GBC(I)
        T(I3) = SHATC(I3)*(GBC(I)-ONE)/GAMAC/GBC(I)
C
        W(I) = AXX*P(1,I) + AYY*P(2,I)
        W(I3)= DVA*ECR(I3)*SHATC(I3)*R(I3)
   25 CONTINUE
      DGG = DT*(CXXC + CYYC + DVA*GAMDT*CEDC)
      R(1) = (DXXC*DT - DGG*SHATC(1))/DG
      R(2) = (DYYC*DT - DGG*SHATC(2))/DG
      R(3) = -R(1)-R(2)
      W0 = A2C*(AXX*R(1) + AYY*R(2) - DVA*(ECR(4)*SHATC(4)*T(4)+
     &     ECR(5)*SHATC(5)*T(5)+ECR(6)*SHATC(6)*T(6))) - DVT*TEC
      DUM  =  -A2C/W0
      DO 15 I=1,6
   15   W(I) = DUM*W(I)
C
      DO 40 I=1,3
        DO 20 J=1,6
          ELAST(I,J)=R(I)*W(J)
   20     IF (J.LE.3) ELAST(I,J)=P(I,J)+ELAST(I,J)
   40 CONTINUE
      DO 60 I=4,6
        DO 50 J=I,6
   50   ELAST(I,J)=-T(I)*W(J)
        ELAST(I,I)=ELAST(I,I)+R(I)
   60 CONTINUE
C
      AXX =  (ECR(1)+ECR(2))*CM(1)-ECR(1)*CM(2)-ECR(2)*CM(3)
      AYY = -ECR(1)*CM(1)+(ECR(1)+ECR(3))*CM(2)-ECR(3)*CM(3)
      AZZ = -ECR(2)*CM(1)-ECR(3)*CM(2)+(ECR(2)+ECR(3))*CM(3)
      DUM = AXX*SHATC(1)+AYY*SHATC(2)+AZZ*SHATC(3)
      DO 70 I=1,6
        PM     = AXX*ELAST(1,I)+AYY*ELAST(2,I)+AZZ*ELAST(3,I)
        QM     = DUM*DT*W(I)
        CMB(I) = -GAMDT*PM-QM
        IF (I.LE.3) CMB(I) = CM(I)+CMB(I)
   70 CONTINUE
C
      CALL CLEAR(XEN,36)
      XEN(1,1)= CHCM(1,1)*(ECR(1)+ECR(2))-CHCM(1,2)*ECR(1)-
     &          CHCM(1,3)*ECR(2)
      XEN(1,2)=-CHCM(1,1)*ECR(1)+CHCM(1,2)*(ECR(1)+ECR(3))-
     &          CHCM(1,3)*ECR(3)
      XEN(1,3)=-CHCM(1,1)*ECR(2)-CHCM(1,2)*ECR(3)+CHCM(1,3)*
     &         (ECR(2)+ECR(3))
      XEN(2,1)= CHCM(2,1)*(ECR(1)+ECR(2))-CHCM(2,2)*ECR(1)-
     &          CHCM(2,3)*ECR(2)
      XEN(2,2)=-CHCM(2,1)*ECR(1)+CHCM(2,2)*(ECR(1)+ECR(3))-
     &          CHCM(2,3)*ECR(3)
      XEN(2,3)=-CHCM(2,1)*ECR(2)-CHCM(2,2)*ECR(3)+CHCM(2,3)*
     &         (ECR(2)+ECR(3))
      XEN(3,1)= CHCM(3,1)*(ECR(1)+ECR(2))-CHCM(3,2)*ECR(1)-
     &          CHCM(3,3)*ECR(2)
      XEN(3,2)=-CHCM(3,1)*ECR(1)+CHCM(3,2)*(ECR(1)+ECR(3))-
     &          CHCM(3,3)*ECR(3)
      XEN(3,3)=-CHCM(3,1)*ECR(2)-CHCM(3,2)*ECR(3)+CHCM(3,3)*
     &         (ECR(2)+ECR(3))
      XEN(4,4)= CHCV(1)*ECR(4)
      XEN(5,5)= CHCV(2)*ECR(5)
      XEN(6,6)= CHCV(3)*ECR(6)
C
C... (A)  ,  T  DOBIJA NOVE VREDNOSTI
      T(1)=XEN(1,1)*SHATC(1)+XEN(1,2)*SHATC(2)+XEN(1,3)*SHATC(3)
      T(2)=XEN(2,1)*SHATC(1)+XEN(2,2)*SHATC(2)+XEN(2,3)*SHATC(3)
      T(3)=XEN(3,1)*SHATC(1)+XEN(3,2)*SHATC(2)+XEN(3,3)*SHATC(3)
      T(4)=XEN(4,4)*SHATC(4)
      T(5)=XEN(5,5)*SHATC(5)
      T(6)=XEN(6,6)*SHATC(6)
C... (B)
      DO 78 I=1,3
      DO 77 J=1,3
   77 XEN(I,J)=GAMDT*XEN(I,J)
      XEN(I,I)=XEN(I,I)+ONE
      I3=I+3
      XEN(I3,I3)=GAMDT*XEN(I3,I3)+ONE
   78 CONTINUE
C
      DO 85 I=1,6
      DO 85 J=I,6
       DUM=ZERO
        DO 83 K=1,6
   83   DUM=DUM+XEN(I,K)*ELAST(K,J)
       CP(I,J)=DUM+T(I)*DT*W(J)
   85 CONTINUE
      DO 87 I=4,6
      DO 87 J=I,6
        CP(I,J)=PO*CP(I,J)
   87 CONTINUE
      DO 88 I=1,6
      DO 88 J=I,6
        ELAST(I,J)=CP(I,J)
   88 CONTINUE
C
      DO 82 I=1,3
      DO 80 J=I,3
   80   ELAST(I,J)=ELAST(I,J)+CMB(J)
      DO 81 J=4,6
   81   ELAST(I,J)=PO*(ELAST(I,J)+CMB(J))
   82 CONTINUE
C
      DO 90 I=1,6
      DO 90 J=I,6
        ELAST(J,I)=ELAST(I,J)
   90 CONTINUE
      RETURN
      END
C======================================================================
      SUBROUTINE CEP3O(SHATP,EPL,CE,CPE,CM,GBP,CEDP,CXXP,CYYP,CXYP,CYXP,
     &                 DL,DXXP,DYYP,DLAM,TAUY,CHPM,CHPV,EP,AN1,DEFQP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICE CEP ( ELAST )
CE     ELASTO-PLASTIC  CEP MATRIX
C
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      DIMENSION EPL(*),CE(6,*),CPE(3,*),SHATP(*),CM(*),GBP(*),
     &          CHPM(3,*),CHPV(*)
      DIMENSION P(3,3),W(6),T(6),R(6),CMB(6),XEN(6,6),CP(6,6),
     &          EHPM(3,3),EHPV(3),AN1(*)
      EQUIVALENCE (P(1,1),XEN(1,1))
      EQUIVALENCE (R(1),CMB(1))
C
      KDIM  =6
      ZERO  =0.D0
      ONE   =1.D0
      DVA   =2.D0
      PO    =0.5D0
      DVT   =DVA/3.
C
      ELP = (1.5 - EP*DLAM)/TAUY
      CALL CLEAR(ELAST,36)
C
      CALL EHATP3(CHPM,CHPV,EHPM,EHPV,EPL,DEFQP,AN1,
     &            KDIM,C11P,C12P,C21P,C22P)
      DS12 = SHATP(1) - SHATP(2)
      DS13 = SHATP(1) - SHATP(3)
      DS23 = SHATP(2) - SHATP(3)
      AXX = EPL(1)*DS12 + DVA*EPL(2)*DS13 + EPL(3)*DS23
      AYY = DVA*EPL(3)*DS23 - EPL(1)*DS12 + EPL(2)*DS13
      DO 25 I=1,3
        I3=I+3
        P(1,I) = (CPE(1,I) + DLAM*(CYYP*CPE(1,I) + CXYP*CPE(2,I)))/DL
        P(2,I) = (CPE(2,I) + DLAM*(CXXP*CPE(2,I) + CYXP*CPE(1,I)))/DL
        P(3,I) = -P(1,I)-P(2,I)
        R(I3) = DVA*CE(I3,I3)/GBP(I)
        T(I3) = SHATP(I3)*(ELP*(CE(I3,I3)*DVA+CHPV(I))+DLAM*EHPV(I))
     &         *EPL(I3)/GBP(I)
C
        W(I) = AXX*P(1,I) + AYY*P(2,I)
        W(I3)= DVA*EPL(I3)*SHATP(I3)*R(I3)
   25 CONTINUE
      D11P = C22P*SHATP(1)+C12P*SHATP(2)
      D22P = C21P*SHATP(1)+C11P*SHATP(2)
      DLL = CXXP + CYYP + DVA*DLAM*CEDP
      DLP = DLAM*(C11P + C22P) + DLAM*DLAM*(C11P*CYYP+CXXP*C22P
     &     -C12P*CYXP-CXYP*C21P)
      R(1) = (ELP*DXXP+DLAM*D11P-(ELP*DLL+DLP)*SHATP(1))/DL
      R(2) = (ELP*DYYP+DLAM*D22P-(ELP*DLL+DLP)*SHATP(2))/DL
      R(3) = -R(1)-R(2)
      W0 = AXX*R(1)+AYY*R(2)-DVA*(EPL(4)*SHATP(4)*T(4)+
     &     EPL(5)*SHATP(5)*T(5)+EPL(6)*SHATP(6)*T(6))-DVT*EP*TAUY
      DO 15 I=1,6
   15 W(I) = -W(I)/W0
C
      DO 40 I=1,3
        DO 20 J=1,6
          ELAST(I,J)=R(I)*W(J)
   20     IF (J.LE.3) ELAST(I,J)=P(I,J)+ELAST(I,J)
   40 CONTINUE
      DO 60 I=4,6
        DO 50 J=I,6
   50   ELAST(I,J)=-T(I)*W(J)
        ELAST(I,I)=ELAST(I,I)+R(I)
   60 CONTINUE
C
      AXX =  (EPL(1)+EPL(2))*CM(1)-EPL(1)*CM(2)-EPL(2)*CM(3)
      AYY = -EPL(1)*CM(1)+(EPL(1)+EPL(3))*CM(2)-EPL(3)*CM(3)
      AZZ = -EPL(2)*CM(1)-EPL(3)*CM(2)+(EPL(2)+EPL(3))*CM(3)
      DUM  = AXX*SHATP(1)+AYY*SHATP(2)+AZZ*SHATP(3)
      DO 70 I=1,6
        PM     = AXX*ELAST(1,I)+AYY*ELAST(2,I)+AZZ*ELAST(3,I)
        QM     = DUM*W(I)*ELP
        CMB(I) = -DLAM*PM-QM
        IF (I.LE.3) CMB(I) = CM(I)+CMB(I)
   70 CONTINUE
C
      CALL CLEAR(XEN,36)
      XEN(1,1)= CHPM(1,1)*(EPL(1)+EPL(2))-CHPM(1,2)*EPL(1)-
     &          CHPM(1,3)*EPL(2)
      XEN(1,2)=-CHPM(1,1)*EPL(1)+CHPM(1,2)*(EPL(1)+EPL(3))-
     &          CHPM(1,3)*EPL(3)
      XEN(1,3)=-CHPM(1,1)*EPL(2)-CHPM(1,2)*EPL(3)+CHPM(1,3)*
     &         (EPL(2)+EPL(3))
      XEN(2,1)= CHPM(2,1)*(EPL(1)+EPL(2))-CHPM(2,2)*EPL(1)-
     &          CHPM(2,3)*EPL(2)
      XEN(2,2)=-CHPM(2,1)*EPL(1)+CHPM(2,2)*(EPL(1)+EPL(3))-
     &          CHPM(2,3)*EPL(3)
      XEN(2,3)=-CHPM(2,1)*EPL(2)-CHPM(2,2)*EPL(3)+CHPM(2,3)*
     &         (EPL(2)+EPL(3))
      XEN(3,1)= CHPM(3,1)*(EPL(1)+EPL(2))-CHPM(3,2)*EPL(1)-
     &          CHPM(3,3)*EPL(2)
      XEN(3,2)=-CHPM(3,1)*EPL(1)+CHPM(3,2)*(EPL(1)+EPL(3))-
     &          CHPM(3,3)*EPL(3)
      XEN(3,3)=-CHPM(3,1)*EPL(2)-CHPM(3,2)*EPL(3)+CHPM(3,3)*
     &         (EPL(2)+EPL(3))
      XEN(4,4)= CHPV(1)*EPL(4)
      XEN(5,5)= CHPV(2)*EPL(5)
      XEN(6,6)= CHPV(3)*EPL(6)
C
      CALL CLEAR(CP,36)
      CP(1,1)= (ELP*CHPM(1,1)+DLAM*EHPM(1,1))*(EPL(1)+EPL(2))-
     &         (ELP*CHPM(1,2)+DLAM*EHPM(1,2))*EPL(1)-
     &         (ELP*CHPM(1,3)+DLAM*EHPM(1,3))*EPL(2)
      CP(1,2)=-(ELP*CHPM(1,1)+DLAM*EHPM(1,1))*EPL(1)+
     &         (ELP*CHPM(1,2)+DLAM*EHPM(1,2))*(EPL(1)+EPL(3))-
     &         (ELP*CHPM(1,3)+DLAM*EHPM(1,3))*EPL(3)
      CP(1,3)=-(ELP*CHPM(1,1)+DLAM*EHPM(1,1))*EPL(2)-
     &         (ELP*CHPM(1,2)+DLAM*EHPM(1,2))*EPL(3)+
     &         (ELP*CHPM(1,3)+DLAM*EHPM(1,3))*(EPL(2)+EPL(3))
      CP(2,1)= (ELP*CHPM(2,1)+DLAM*EHPM(2,1))*(EPL(1)+EPL(2))-
     &         (ELP*CHPM(2,2)+DLAM*EHPM(2,2))*EPL(1)-
     &         (ELP*CHPM(2,3)+DLAM*EHPM(2,3))*EPL(2)
      CP(2,2)=-(ELP*CHPM(2,1)+DLAM*EHPM(2,1))*EPL(1)+
     &         (ELP*CHPM(2,2)+DLAM*EHPM(2,2))*(EPL(1)+EPL(3))-
     &         (ELP*CHPM(2,3)+DLAM*EHPM(2,3))*EPL(3)
      CP(2,3)=-(ELP*CHPM(2,1)+DLAM*EHPM(2,1))*EPL(2)-
     &         (ELP*CHPM(2,2)+DLAM*EHPM(2,2))*EPL(3)+
     &         (ELP*CHPM(2,3)+DLAM*EHPM(2,3))*(EPL(2)+EPL(3))
      CP(3,1)= (ELP*CHPM(3,1)+DLAM*EHPM(3,1))*(EPL(1)+EPL(2))-
     &         (ELP*CHPM(3,2)+DLAM*EHPM(3,2))*EPL(1)-
     &         (ELP*CHPM(3,3)+DLAM*EHPM(3,3))*EPL(2)
      CP(3,2)=-(ELP*CHPM(3,1)+DLAM*EHPM(3,1))*EPL(1)+
     &         (ELP*CHPM(3,2)+DLAM*EHPM(3,2))*(EPL(1)+EPL(3))-
     &         (ELP*CHPM(3,3)+DLAM*EHPM(3,3))*EPL(3)
      CP(3,3)=-(ELP*CHPM(3,1)+DLAM*EHPM(3,1))*EPL(2)-
     &         (ELP*CHPM(3,2)+DLAM*EHPM(3,2))*EPL(3)+
     &         (ELP*CHPM(3,3)+DLAM*EHPM(3,3))*(EPL(2)+EPL(3))
      CP(4,4)= (ELP*CHPV(1)+DLAM*EHPV(1))*EPL(4)
      CP(5,5)= (ELP*CHPV(2)+DLAM*EHPV(2))*EPL(5)
      CP(6,6)= (ELP*CHPV(3)+DLAM*EHPV(3))*EPL(6)
C
C... (A)  ,  T  DOBIJA NOVE VREDNOSTI
C
      T(1)=CP(1,1)*SHATP(1)+CP(1,2)*SHATP(2)+CP(1,3)*SHATP(3)
      T(2)=CP(2,1)*SHATP(1)+CP(2,2)*SHATP(2)+CP(2,3)*SHATP(3)
      T(3)=CP(3,1)*SHATP(1)+CP(3,2)*SHATP(2)+CP(3,3)*SHATP(3)
      T(4)=CP(4,4)*SHATP(4)
      T(5)=CP(5,5)*SHATP(5)
      T(6)=CP(6,6)*SHATP(6)
      CALL CLEAR(CP,36)
C... (B)
      DO 78 I=1,3
      DO 77 J=1,3
   77 XEN(I,J)=DLAM*XEN(I,J)
      XEN(I,I)=XEN(I,I)+ONE
      I3=I+3
      XEN(I3,I3)=DLAM*XEN(I3,I3)+ONE
   78 CONTINUE
C
      DO 85 I=1,6
      DO 85 J=I,6
       DUM=ZERO
        DO 83 K=1,6
   83   DUM=DUM+XEN(I,K)*ELAST(K,J)
       CP(I,J)=DUM+T(I)*W(J)
   85 CONTINUE
      DO 87 I=4,6
      DO 87 J=I,6
        CP(I,J)=PO*CP(I,J)
   87 CONTINUE
      DO 88 I=1,6
      DO 88 J=I,6
        ELAST(I,J)=CP(I,J)
   88 CONTINUE
C
      DO 82 I=1,3
      DO 80 J=I,3
   80   ELAST(I,J)=ELAST(I,J)+CMB(J)
      DO 81 J=4,6
   81   ELAST(I,J)=PO*(ELAST(I,J)+CMB(J))
   82 CONTINUE
C
      DO 90 I=1,6
      DO 90 J=I,6
        ELAST(J,I)=ELAST(I,J)
   90 CONTINUE
      RETURN
      END
C======================================================================
      SUBROUTINE EHATP3(CHPM,CHPV,EHPM,EHPV,EPL,DEFQP,AN1,
     &                  KDIM,C11P,C12P,C21P,C22P)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     IZVOD MATRICE CHATP
C
      DIMENSION CHPM(3,*),CHPV(*),EHPM(3,*),EHPV(*),EPL(*),XMX(6)
      DIMENSION AN1(*)
      DVA=2.D0
      DO 10 I=1,6
   10 XMX(I)=AN1(I)/DEFQP
      DO 15 I=1,3
        DO 15 J=1,3
   15     EHPM(I,J)=XMX(J)*CHPM(I,J)
      DO 20 I=1,KDIM-3
   20   EHPV(I)=XMX(I+3)*CHPV(I)
      XX1 = EPL(1)+DVA*EPL(2)
      XX2 = EPL(1)-EPL(3)
      XX3 = DVA*EPL(2)+EPL(3)
      C11P =  XX1*EHPM(1,1)-XX2*EHPM(1,2)-XX3*EHPM(1,3)
      C21P = -XX1*EHPM(2,1)+XX2*EHPM(2,2)+XX3*EHPM(2,3)
      XX1 = EPL(1)-EPL(2)
      XX2 = EPL(1)+DVA*EPL(3)
      XX3 = EPL(2)+DVA*EPL(3)
      C22P = -XX1*EHPM(2,1)+XX2*EHPM(2,2)-XX3*EHPM(2,3)
      C12P =  XX1*EHPM(1,1)-XX2*EHPM(1,2)+XX3*EHPM(1,3)
      RETURN
      END
