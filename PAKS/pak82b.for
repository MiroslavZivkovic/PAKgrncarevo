C=======================================================================
C
C=======================================================================
      SUBROUTINE BATHE4(TAU,SKE,FTDT,T,WTU,GKS,LM,MSL,NOP,DRGTM0,DEB,
     1                  TGT,LPLAS,LPLA1,ISNA,MTR,TTR,IND6,R,S,COR,GMT,
     1                  CORT,GNT,GERS,ALFE,HAEM,HINV,GEEK,FOT,DET0,TAD,
     1                  N45,LA,CEGE,ESILA,IPG,DEF,INTGL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM ELEMENT MATRIX FOR SHELL ELEMENT - BATHE
CS.   P R O G R A M
CS.      ZA FORMIRANJE MATRICA ELEMENATA LJUSKE - BATHE
C .
C .      IPODT.EQ.4; (4 CVORA)
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /IZLE4B/ H(9,3),GM(3,9),BLT(6,54),BE(9,54),ETP(6,6),UEL(54)
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /PLASTV/ LPLAVT,LPLAV1,LSIGMV
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /GRUPEE/ NGEL,NGENL,LGEOM,NGEOM,ITERM
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ANALIZ/ LINEAR,ITERGL,INDDIN
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /SOPSVR/ ISOPS,ISTYP,NSOPV,ISTSV,IPROV,IPROL
      COMMON /DUPLAP/ IDVA
      COMMON /ITERBR/ ITER
      COMMON /INDNAP/ NAPON
      COMMON /FILTER/ TOLNAP,TOLPOM
      COMMON /IKOVAR/ INDKOV
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /MATIZO/ E,V
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
      COMMON /RMIS3/ VMS(3,3),VMS1(3,3),RACGR(3,3),TBET,GRAD1R(3,3)
      COMMON /DRILLI/ EL14(4),EN14(3,4),IDRIL
      COMMON /TRANDN/ TSGD(6,6),TSGN(6,6)
C
      DIMENSION NOP(NE,*),SKE(*),LM(*),FTDT(*),TAU(N45,NGS12,NE,*),
     1          TAD(N45,NGS4,NE,*),TA(6),STRAIN(6),STRESS(6),ER0T(3,3),
     1          ALFE(LA,*),HAEM(LA,*),HINV(LA,LA,*),GEEK(LA,ND,*),
     1          DEF(N45,NGS12,NE,*)
      DIMENSION GKS(3,2,*),ESILA(ND,*),TBET(3,3),PRI1(3,3),FIER(3,3)
      DIMENSION DRGTM0(9,*),DEB(NE,*),BNL(9,54),ELAS(6,6),TSG2(6,6)
      DIMENSION BM(3,24),BB(3,24),BS(2,24),GRAD(3,3),TAK(6),TSS(6,6),
     1          TRLN(6,6),COR(9,*),CON(9,3),GMT(3,*),CORT(9,*),GNT(3,*),
     1          XJ0(3,3)
      DIMENSION GERS(6,*),CEGE(LA,*),POM(9),TS1(6,6),GRAD1(3,3),
     1          FOT(6,*),SGREEN(6),SKOV(6)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' BATHE4'
C
      PI=4.D0*DATAN(1.D0)
C     ISNN=2 - GRIN-LAGRANZEOVA DEFORMACIJA I PIOLA-KIRHOFOV NAPON
C     ISNN=3 - ALMANSIJEVA DEFORMACIJA I KOSIJEV NAPON
C     ISNN=4 - ROTIRANA GRIN-LAGR. DEFORM. I ROT. PIOLA-KIRHOFOV NAPON
      ISNN=3
C     INDIKATOR KOREKCIJE ZA MESOVITU INTERPOLACIJU
C     KOREK=0 - NEMA MESOVITE INTERPOLACIJE
C     KOREK=1 - MESOVITA INTERPOLACIJA
      KOREK=1
C     INDIKATOR ISKLJUCIVANJA SVIH TRANSFORMACIJA 
      IPRI=0
C     INDIKATOR KONTROLNE STAMPE
      IST=0
C      IF(NLM.EQ.1.AND.JG.EQ.1) IST=1
C      IF(IST.EQ.1) WRITE(3,9998) NLM,JG,ITER,ISKNP,IATYP
C 9998 FORMAT('NLM,JG,ITER,ISKNP,IATYP',5I5)
C
CS    JAKOBIJAN - XJJ, INVERTOVAN JAKOBIJAN - XJ
CE    JACOBIAN - XJJ, INVERSE JACOBIAN - XJ
C
      CALL JEDNA1(XJJ,XJ,9)  
      CALL MINV3(XJ,DET)
C
CS    MATRICA TRANSFORMACIJE - TRLN (KOVARIJANTNI - GLOBALNI DEKARTOV) 
CE    TRANSFORMATION MATRIX - TRLN (COVARIANT - GLOBAL CARTESIAN)
C
      CALL TRANSE(TRLN,XJ)
C      IF(NLM.EQ.1.AND.JG.EQ.1) CALL WRR(TRLN,36,'TRLN') 
C
CS    MATRICE BM, BB I BS U GAUS TACKI R, S I T U KOVARIJANTNOM SISTEMU
CS    FORMIRANJE MATRICE B LINEARNO - BLT
CE    MATRIX BM, BB I BS IN GAUSS POINT R, S I T IN COVARIANT SISTEM
CE    FORM LINEAR B MATRIX - BLT 
C
c     nova matrica B
c      CALL BETBEZ(NOP,GKS,R,S,T,MTR,COR)
      CALL BMBBB4(BM,BB,BS,R,S,T,GKS,COR,GMT)
C      CALL WRR6(BLT,6*ND,'BLTz') 
C      IF(NLM.EQ.1.AND.JG.EQ.1) CALL WRR6(BLT,6*ND,'BLTz') 
C
CS    TRANSFORMACIJA MATRICE - BLT (KOVARIJANTNI - GLOBALNI DEKARTOV) 
CE    TRANSFORM MATRIX - BLT (COVARIANT - GLOBAL CARTESIAN)
C
      CALL TRANS4(BLT,TRLN,ND)
C
      IF(IDRIL.EQ.1) CALL BDRIL8(H,BLT)
C
CS    TRANSFORMACIJA MATRICE - BLT ZA LOKALNI SISTEM CVORA
CE    TRANSFORM MATRIX - BLT FOR LOCAL NODAL SISTEM
C
      IF(IND6.GT.0) THEN
         ICD=6
         CALL TRAB(BLT,ICD,MTR,TTR,NCVE)
      ENDIF
C
CS    MATRICA TRANSFORM. DEFORMACIJA - TSG (GLOBALNI - LOKALNI DEKARTOV)
CE    STRAIN TRANSFORMATION MATRIX - TSG (GLOBAL - LOCAL CARTESIAN) 
C
C          IF(IST.EQ.1) CALL WRR3(XJJ,9,'XJJ ')
      CALL JEDNA1(XJ0,XJJ,9)
      CALL TRANAL(XJ0,TSG,0)
      CALL TRANSS(TSGN,XJ0)
      CALL JEDNA1(TSGD,TSG,36)
C  MATRICA KOSINUSA BETA IZ MAGISTARSKOG ZA TRASFORMACIJU TENZ. KOMP.
      CALL JEDNA1(TBET,XJJ,9)
C      IF(IST.EQ.1) CALL WRR(TBET,9,'TBET')
C
      IF(ISKNP.NE.1) THEN
C
C
CS       RACUNANJE DEFORMACIJA U GLOBALNOM DEKARTOVOM
CE       CALCULATE STRAINS IN GLOBAL CARTESIAN 
C
C
         CALL CLEAR(STRAIN,6) 
C
CS       LINEARNOST I M.N.O.
CE       LINEAR PART AND M.N.O.
C
         IF(IATYP.EQ.0.OR.IATYP.EQ.1)
     1   CALL MNOZI1(STRAIN,BLT,UEL,6,ND)
C
CS       GEOMETRIJSKA NELINEARNOST - UKUPNE DEFORMACIJE ZA T.L. I U.L.
CE       GEOMETRICAL NONLINEARITY - TOTAL STRAIN FOR T.L. AND U.L.
C
         IF(IATYP.EQ.2.OR.IATYP.EQ.3)
     1   CALL UKDEFK(COR,CON,GM,GMT,UEL,H,R,S,T,STRAIN,TRLN,TSS,IATYP)
C
C
         IF (NMODM.EQ.32.OR.NMODM.EQ.33.OR.NMODM.EQ.34) THEN
C
CS          KOORDINATE U TRENUTKU - 0
CE          COORDINATE IN TIME - 0
C
            II=0
            DO 14 I=1,NCVE
            DO 14 K=1,3
               II=II+1
               IF (IATYP.EQ.1) THEN 
                 CON(I,K)=COR(I,K)+UEL(II)
               ELSE             
                 CON(I,K)=COR(I,K)-UEL(II)
               ENDIF
C               CON(I,K)=COR(I,K)+UEL(II)
   14       CONTINUE
C
C           CALL WRR(COR,12,'COR ')
C           CALL WRR(CON,12,'CON ')
C           CALL WRR(UEL,ND,'UEL ')
C
C           ZBOT RACUNANJA VEKTORA GR U T+DT
CS          JAKOBIJEVA MATRICA U GAUSOVOJ TACKI U TRENUTKU - T+DT
CE          JACOBIAN MATRIX IN GAUSS POINT IN TIME - T+DT
C
               IF (IATYP.EQ.1) THEN 
                 CALL GRGSGT(CON,GMT,XJJ,H,T,4)
               ELSE             
                 CALL GRGSGT(COR,GMT,XJJ,H,T,4)
               ENDIF
C
              CALL JEDNA1(VMS,XJJ,9) 
C
CS          JAKOBIJEVA MATRICA U GAUSOVOJ TACKI U TRENUTKU - 0
CE          JACOBIAN MATRIX IN GAUSS POINT IN TIME - 0
C
               IF (IATYP.EQ.1) THEN 
                 CALL GRGSGT(COR,GMT,XJJ,H,T,4)
               ELSE             
                 CALL GRGSGT(CON,GMT,XJJ,H,T,4)
               ENDIF
C
              CALL JEDNA1(VMS1,XJJ,9) 
C
CS          INVERTOVAN JAKOBIJAN - XJJ
CE          INVERSE JACOBIAN - XJJ
C
            CALL MINV3(XJJ,DET)
C
CS          RACUNANJE GRADIJENTA DEFORMACIJE OD 0 DO T+DT
CE          CALCULATE DEFORMATION GRADIENT FROM 0 TO T+DT
C
C        WRITE(3,*) 'ROTACIJE GM'
C        WRITE(3,123) ((GM(I,J),J=1,3),I=1,3)
C        WRITE(3,*) 'ROTACIJE GMT'
C        WRITE(3,123) ((GMT(I,J),J=1,3),I=1,3)
C
               IF (IATYP.EQ.1) THEN 
                 CALL GRAD0T(XJJ,H,CON,COR,GM,GMT,T,GRAD,4)
               ELSE             
                 CALL GRAD0T(XJJ,H,COR,CON,GM,GMT,T,GRAD,4)
               ENDIF
C
C        WRITE(3,*) 'GRADIJENT PRE INVERZIJE'
C        WRITE(3,123) ((GRAD(I,J),J=1,3),I=1,3)
C  123   FORMAT(3E12.5)
C
            CALL JEDNA1(GRAD1R,GRAD,9)
C
CS          INVERTOVAN GRADIJENT - GRAD
CE          INVERSE GRADIENT - GRAD
C
            CALL MINV3(GRAD,DET)
            CALL JEDNA1(RACGR,GRAD,9)
C
	 ENDIF
C
CS       VELIKE DEFORMACIJE
CE       LARGE STRAIN
C
         IF(IATYP.EQ.4) THEN
C
CS          KOORDINATE U TRENUTKU - 0
CE          COORDINATE IN TIME - 0
C
            II=0
            DO 10 I=1,NCVE
            DO 10 K=1,3
               II=II+1
               CON(I,K)=COR(I,K)-UEL(II)
   10       CONTINUE
C
CS          RACUNANJE VELIKIH DEFORMACIJA U GAUSOVOJ TACKI (R,S,T)
CE          CALCULATE LARGE STRAIN IN GAUSS POINT (R,S,T)
C
            CALL JEDNA1(STRESS,TAU(1,JG,NLM,MSL),6)
C      IF(IST.EQ.1) CALL WRR(STRESS,6,'OLDB')
            CALL VELDEF(R,S,T,COR,CORT,CON,GM,GNT,GMT,STRESS,POM,
     1           TS1,GRAD1,SGREEN,FOT,DET0,ALFE(1,NLM),IALFA,LA,0,TBET)
            TA(1)=POM(1)
            TA(2)=POM(2)
            TA(3)=POM(3)
C            TA(3)=0.D0
            TA(4)=POM(4)
            TA(5)=POM(5)
            TA(6)=POM(6)
C
         IF(KOREK.EQ.1) THEN
C
CS          INTERP. FUNKCIJE ZA MESOVITU INTERPOLACIJU DEFORMACIJA
CE          INTERPOLATION FUNCTIONS FOR MIXED STRAIN INTERPOLATED
C
            HA=.5D0*(1.D0+S)
            HC=.5D0*(1.D0-S)
            HD=.5D0*(1.D0+R)
            HB=.5D0*(1.D0-R)
            NNXYZ=(NLM-1)*NGS4-1
            NGT4=(NGT-1)*4
            IND=2
            IF(NAPON.EQ.1.AND.NGR.EQ.NGAUSX.AND.NGS.EQ.NGAUSY) IND=1 
C
CS          RACUNANJE VELIKIH DEFORMACIJA U TACKI B(-1.D0,0.D0)
CE          CALCULATE LARGE STRAIN IN POINT B(-1.D0,0.D0)
C
            J4=NGT4+1
            CALL JEDNA1(STRESS,TAD(1,J4,NLM,MSL),6)
            CALL VELDEF(-1.D0,0.D0,T,COR,CORT,CON,GM,GNT,GMT,STRESS,POM,
     1           TSS,GRAD,SGREEN,FOT,DET0,ALFE(1,NLM),IALFA,LA,IND,TBET)
            IF(IND.EQ.1) THEN
C
CS             TRANSFORMACIJA DEFORMACIJA (ALMANSI - GREEN LAGRANGE)
CE             TRANSFORM STRAIN (ALMANSI - GREEN LAGRANGE) 
C
               IF(IPRI.EQ.1.AND.ISNN.EQ.2) CALL ALMGRL(GRAD,SGREEN,1)
C
CS             TRANSFORMACIJA DEFORMACIJA (GREEN - ROTIRANA GREEN)
CE             TRANSFORM STRAIN (GREEN  LAGRANGE - ROTI GREEN LAGRANGE) 
C
               IF(IPRI.EQ.1.AND.ISNN.EQ.4) CALL ROTGRL(GRAD,SGREEN,0)
C        PROVERI DA LI OVA TRANSFORMACIJA IDE ISPRED PREDHODNE DVE
CS             TRANSFORM. ALMANSI DEFORM. (GLOBALNI - LOKALNI DEKARTOV)
CE             TRANSFORM ALMANSI STRAIN (GLOBAL - LOCAL CARTESIAN) 
C
               CALL CLEAR(STRAIN,6) 
               CALL MNOZI1(STRAIN,TSS,SGREEN,6,6)
C       TERMICKE
C
CS             NAPONI ZA PLASTICAN MODEL
CE             STRESS FOR MATERIAL NONLINEARITY 
C
               NPROS=(NNXYZ+J4)*MODPRO(NMODM)*IDVA
               LPLVS=LPLAVT+NPROS     
               LPLV1=LPLAV1+NPROS
               IRAC=1
C               STRAIN(3)=0.D0
               CALL MODMA8(STRAIN,STRESS,NMODM,IRAC,LPLVS,LPLV1,TGT)
C
CS             PROMENA ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORM.
CE             UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
C
               LDEFT1=LPLV1+6*IDVA
               CALL BEE0TE(TAD(1,J4,NLM,MSL),STRESS,TSS,GRAD,A(LDEFT1),
     1                     ISNN)
            ENDIF
            EB=POM(5)
C
CS          RACUNANJE VELIKIH DEFORMACIJA U TACKI D(1.D0,0.D0)
CE          CALCULATE LARGE STRAIN IN POINT D(1.D0,0.D0)
C
            J4=NGT4+2
            CALL JEDNA1(STRESS,TAD(1,J4,NLM,MSL),6)
            CALL VELDEF(1.D0,0.D0,T,COR,CORT,CON,GM,GNT,GMT,STRESS,POM,
     1           TSS,GRAD,SGREEN,FOT,DET0,ALFE(1,NLM),IALFA,LA,IND,TBET)
            IF(IND.EQ.1) THEN
C
CS             TRANSFORMACIJA DEFORMACIJA (ALMANSI - GREEN LAGRANGE)
CE             TRANSFORM STRAIN (ALMANSI - GREEN LAGRANGE) 
C
               IF(IPRI.EQ.1.AND.ISNN.EQ.2) CALL ALMGRL(GRAD,SGREEN,1)
C
CS             TRANSFORMACIJA DEFORMACIJA (GREEN - ROTIRANA GREEN)
CE             TRANSFORM STRAIN (GREEN  LAGRANGE - ROTI GREEN LAGRANGE) 
C
               IF(IPRI.EQ.1.AND.ISNN.EQ.4) CALL ROTGRL(GRAD,SGREEN,0)
C
CS             TRANSFORM. ALMANSI DEFORM. (GLOBALNI - LOKALNI DEKARTOV)
CE             TRANSFORM ALMANSI STRAIN (GLOBAL - LOCAL CARTESIAN) 
C
               CALL CLEAR(STRAIN,6) 
               CALL MNOZI1(STRAIN,TSS,SGREEN,6,6)
C       TERMICKE
C
CS             NAPONI ZA PLASTICAN MODEL
CE             STRESS FOR MATERIAL NONLINEARITY 
C
               NPROS=(NNXYZ+J4)*MODPRO(NMODM)*IDVA
               LPLVS=LPLAVT+NPROS     
               LPLV1=LPLAV1+NPROS
               IRAC=1
C               STRAIN(3)=0.D0
               CALL MODMA8(STRAIN,STRESS,NMODM,IRAC,LPLVS,LPLV1,TGT)
C
CS             PROMENA ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORM.
CE             UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
C
               LDEFT1=LPLV1+6*IDVA
               CALL BEE0TE(TAD(1,J4,NLM,MSL),STRESS,TSS,GRAD,A(LDEFT1),
     1                     ISNN)
            ENDIF
            ED=POM(5)
            TA(5)=HB*EB+HD*ED 
C
CS          RACUNANJE VELIKIH DEFORMACIJA U TACKI A(0.D0,1.D0)
CE          CALCULATE LARGE STRAIN IN POINT A(0.D0,1.D0)
C
            J4=NGT4+3
            CALL JEDNA1(STRESS,TAD(1,J4,NLM,MSL),6)
            CALL VELDEF(0.D0,1.D0,T,COR,CORT,CON,GM,GNT,GMT,STRESS,POM,
     1           TSS,GRAD,SGREEN,FOT,DET0,ALFE(1,NLM),IALFA,LA,IND,TBET)
            IF(IND.EQ.1) THEN
C
CS             TRANSFORMACIJA DEFORMACIJA (ALMANSI - GREEN LAGRANGE)
CE             TRANSFORM STRAIN (ALMANSI - GREEN LAGRANGE) 
C
               IF(IPRI.EQ.1.AND.ISNN.EQ.2) CALL ALMGRL(GRAD,SGREEN,1)
C
CS             TRANSFORMACIJA DEFORMACIJA (GREEN - ROTIRANA GREEN)
CE             TRANSFORM STRAIN (GREEN  LAGRANGE - ROTI GREEN LAGRANGE) 
C
               IF(IPRI.EQ.1.AND.ISNN.EQ.4) CALL ROTGRL(GRAD,SGREEN,0)
C
CS             TRANSFORM. ALMANSI DEFORM. (GLOBALNI - LOKALNI DEKARTOV)
CE             TRANSFORM ALMANSI STRAIN (GLOBAL - LOCAL CARTESIAN) 
C
               CALL CLEAR(STRAIN,6) 
               CALL MNOZI1(STRAIN,TSS,SGREEN,6,6)
C       TERMICKE
C
CS             NAPONI ZA PLASTICAN MODEL
CE             STRESS FOR MATERIAL NONLINEARITY 
C
               NPROS=(NNXYZ+J4)*MODPRO(NMODM)*IDVA
               LPLVS=LPLAVT+NPROS     
               LPLV1=LPLAV1+NPROS
               IRAC=1
C               STRAIN(3)=0.D0
               CALL MODMA8(STRAIN,STRESS,NMODM,IRAC,LPLVS,LPLV1,TGT)
C
CS             PROMENA ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORM.
CE             UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
C
               LDEFT1=LPLV1+6*IDVA
               CALL BEE0TE(TAD(1,J4,NLM,MSL),STRESS,TSS,GRAD,A(LDEFT1),
     1                     ISNN)
            ENDIF
            EA=POM(6)
C
CS          RACUNANJE VELIKIH DEFORMACIJA U TACKI C(0.D0,-1.D0)
CE          CALCULATE LARGE STRAIN IN POINT C(0.D0,-1.D0)
C
            J4=NGT4+4
            CALL JEDNA1(STRESS,TAD(1,J4,NLM,MSL),6)
            CALL VELDEF(0.D0,-1.D0,T,COR,CORT,CON,GM,GNT,GMT,STRESS,POM,
     1           TSS,GRAD,SGREEN,FOT,DET0,ALFE(1,NLM),IALFA,LA,IND,TBET)
            IF(IND.EQ.1) THEN
C
CS             TRANSFORMACIJA DEFORMACIJA (ALMANSI - GREEN LAGRANGE)
CE             TRANSFORM STRAIN (ALMANSI - GREEN LAGRANGE) 
C
               IF(IPRI.EQ.1.AND.ISNN.EQ.2) CALL ALMGRL(GRAD,SGREEN,1)
C
CS             TRANSFORMACIJA DEFORMACIJA (GREEN - ROTIRANA GREEN)
CE             TRANSFORM STRAIN (GREEN  LAGRANGE - ROTI GREEN LAGRANGE) 
C
               IF(IPRI.EQ.1.AND.ISNN.EQ.4) CALL ROTGRL(GRAD,SGREEN,0)
C
CS             TRANSFORM. ALMANSI DEFORM. (GLOBALNI - LOKALNI DEKARTOV)
CE             TRANSFORM ALMANSI STRAIN (GLOBAL - LOCAL CARTESIAN) 
C
               CALL CLEAR(STRAIN,6) 
               CALL MNOZI1(STRAIN,TSS,SGREEN,6,6)
C       TERMICKE
C
CS             NAPONI ZA PLASTICAN MODEL
CE             STRESS FOR MATERIAL NONLINEARITY 
C
               NPROS=(NNXYZ+J4)*MODPRO(NMODM)*IDVA
               LPLVS=LPLAVT+NPROS     
               LPLV1=LPLAV1+NPROS
               IRAC=1
C               STRAIN(3)=0.D0
               CALL MODMA8(STRAIN,STRESS,NMODM,IRAC,LPLVS,LPLV1,TGT)
C
CS             PROMENA ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORM.
CE             UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
C
               LDEFT1=LPLV1+6*IDVA
               CALL BEE0TE(TAD(1,J4,NLM,MSL),STRESS,TSS,GRAD,A(LDEFT1),
     1                     ISNN)
            ENDIF
            EC=POM(6)
            TA(6)=HA*EA+HC*EC
C
            ENDIF
C
CS          TRANSFORMACIJA DEFORMACIJA (KOVARIJANTNI - ALMANSIJEV)
CE          TRANSFORM STRAIN (COVARIANT - ALMANSI) 
C
            CALL CLEAR(STRAIN,6) 
C           CALL MNOZI1(STRAIN,TRLN,TA,6,6)
C
CS          TRANSFORMACIJA DEFORMACIJA (KOVARIJANTNI - GRIN LAGRANZ)
CE          TRANSFORM STRAIN (COVARIANT - GREEN LAGRANGE) 
C
             CALL MNOZI1(STRAIN,TS1,TA,6,6)
             CALL JEDNA1(STRAIN,SGREEN,6)
C
CS          TRANSFORMACIJA DEFORMACIJA (GREEN LAGRANGE - ALMANSI)
CE          TRANSFORM STRAIN (GREEN  LAGRANGE - ALMANSI) 
C
            IF(IPRI.EQ.1)  CALL ALMGRL(GRAD1,STRAIN,0)
C
         ENDIF
C
CS       VELIKE DEFORMACIJE
CE       LARGE STRAIN
C
         IF(IATYP.EQ.5) THEN
C
CS          KOORDINATE U TRENUTKU - 0
CE          COORDINATE IN TIME - 0
C
            II=0
            DO 12 I=1,NCVE
            DO 12 K=1,3
               II=II+1
               CON(I,K)=COR(I,K)-UEL(II)
   12       CONTINUE
C           CALL WRR(COR,18,'COR ')
C           CALL WRR(CORT,18,'CORT')
C           CALL WRR(CON,18,'CON ')
C           CALL WRR(UEL,ND,'UEL ')
C
CS          JAKOBIJEVA MATRICA U GAUSOVOJ TACKI U TRENUTKU - 0
CE          JACOBIAN MATRIX IN GAUSS POINT IN TIME - 0
C
            CALL GRGSGT(CON,GMT,XJJ,H,T,4)
C      IF(IST.EQ.1) CALL WRR(XJJ,9,'XJJ0')
C
CS          INVERTOVAN JAKOBIJAN - XJJ
CE          INVERSE JACOBIAN - XJJ
C
            CALL MINV3(XJJ,DET)
C      IF(IST.EQ.1) CALL WRR(XJJ,9,'XJJI')
C
CS          RACUNANJE GRADIJENTA DEFORMACIJE OD 0 DO T+DT
CE          CALCULATE DEFORMATION GRADIENT FROM 0 TO T+DT
C
            CALL GRAD0T(XJJ,H,COR,CON,GM,GMT,T,GRAD,4)
C      IF(IST.EQ.1) CALL WRR(GRAD,9,'GRAD')
C PRIVREMENO
C            CALL MNOZM1(PRI1,TBET,GRAD,3,3,3)
C            CALL MNOZM3(FIER,PRI1,TBET,3,3,3)
C            CALL DETER3(FIER,DETJ)
C PRIVREMENO
C            CALL DETER3(GRAD,AJOT)
C            IF(AJOT.LT.0.D0) THEN
C               WRITE(3,*) 'NLM,JG',NLM,JG
C               STOP
C            ENDIF
C            TKOR=1.D0/EXP(1.D0/3.D0*DLOG(AJOT))
C            CALL JEDNAK(GRAD,GRAD,TKOR,9)
C      DET1=GRAD(3,3)*(GRAD(1,1)*GRAD(2,2)-GRAD(1,2)*GRAD(2,1))
C      WRITE(*,*) 'ATD',AJOT,TKOR,DETJ
C
CS          STARO - B U GLOBALNOM SISTERMU
CE          OLD - B
C
            CALL JEDNA1(XJJ,TAU(1,JG,NLM,MSL),9)
C      IF(IST.EQ.1) CALL WRR(XJJ,9,'STXP')
C
CS          FORMIRANJE MATRICE - XE U GLOBALNOM SISTEMU
CE          FORM MATRIX - XE
C
            CALL MNOZM1(XJ,GRAD,XJJ,3,3,3)
C      IF(IST.EQ.1) CALL WRR(XJ,9,'XE* ')
C
C TRANSFORMACIJA XE NA LOKALNI DEKARTOV SISTEM 
C
            CALL MNOZM1(PRI1,TBET,XJ,3,3,3)
            CALL MNOZM3(XJ,PRI1,TBET,3,3,3)
C
CS          FORMIRANJE MATRICE - CE U LOKALNOM DEKARTOVOM
CE          FORM MATRIX - CE
C
            CALL MNOZM2(XJJ,XJ,XJ,3,3,3)
C      IF(IST.EQ.1) CALL WRR(XJJ,9,'CE0T')
C
C      IF(IST.EQ.1) CALL WRR(XJJ,9,'CLOK')
            POM(1)=XJJ(1,1)
            POM(2)=XJJ(2,2)
            POM(4)=XJJ(3,3)
            POM(3)=XJJ(1,2)
            CALL GLAVN2(POM)
            IF(DABS(POM(4)).GT.1.D-10.AND.POM(4).LT.0.D0) STOP '4'
            IF(DABS(POM(5)).GT.1.D-10.AND.POM(5).LT.0.D0) STOP '5'
            IF(DABS(POM(6)).GT.1.D-10.AND.POM(6).LT.0.D0) STOP '6'
            POM(4)=DSQRT(DABS(POM(4)))
            POM(5)=DSQRT(DABS(POM(5)))
            POM(6)=DSQRT(DABS(POM(6)))
C      IF(IST.EQ.1) WRITE(3,*)'LAM13,TETA',(POM(I),I=4,7)
C
            CALL CLEAR(XJJ,9)
            XJJ(1,1)=1.D0
            XJJ(2,2)=1.D0
            XJJ(3,3)=1.D0
C MATRICA U U GLAVNIM PRAVCIMA
            IF(DABS(POM(5)).GT.1.D-10) XJJ(1,1)=1.D0/POM(5)
            IF(DABS(POM(6)).GT.1.D-10) XJJ(2,2)=1.D0/POM(6)
            IF(DABS(POM(4)).GT.1.D-10) XJJ(3,3)=1.D0/POM(4)
C      IF(IST.EQ.1) CALL WRR(XJJ,9,'U*T0')
C           FIER - TRANSPONOVANO
C            L1 M1
C            L2 M2
C TRANSFORMACIJA U LOKALNOM SISTEMU LJUSKE
            POM(7)=PI*POM(7)/180.D0
            CALL CLEAR(FIER,9)
            FIER(1,1)=DCOS(POM(7))
            FIER(2,1)=DSIN(POM(7))
            FIER(1,2)=-FIER(2,1)
            FIER(2,2)=FIER(1,1)
            FIER(3,3)=1.D0
C MATRICA U U LOKALNOM DEKARTOVOM
            CALL MNOZM1(ER0T,FIER,XJJ,3,3,3)
            CALL MNOZM3(XJJ,ER0T,FIER,3,3,3)
C      IF(IST.EQ.1) CALL WRR(FIER,9,'FIER')
C      IF(IST.EQ.1) CALL WRR(XJJ,9,'UE-1')
C
CS          FORMIRANJE MATRICE - R U LOKAL DEKART
CE          FORM MATRIX - R
C
            CALL MNOZM1(ER0T,XJ,XJJ,3,3,3)
C      IF(IST.EQ.1) CALL WRR(ER0T,9,'ER0T')
            IF(DABS(POM(5)).GT.1.D-10) DEF1=DLOG(DABS(POM(5)))
            IF(DABS(POM(6)).GT.1.D-10) DEF2=DLOG(DABS(POM(6)))
            IF(DABS(POM(4)).GT.1.D-10) DEF3=DLOG(DABS(POM(4)))
C      IF(IST.EQ.1) WRITE(3,*) 'DEF123',DEF1,DEF2,DEF3
C
               STRAIN(1)=DEF1
               STRAIN(2)=DEF2
               STRAIN(3)=DEF3
C
C        TRANSFORMACIJA NA GLOBALNI SISTEM
C
C
         ENDIF
C
CS       INKOMPATIBILNE DEFORMACIJE
CE       INCOMPATIBILE STRAIN
C
         IF(IALFA.GE.0) CALL MNOZI1(STRAIN,GERS,ALFE(1,NLM),6,LA)
C
CS       TRANSFORMACIJA DEFORMACIJA (GLOBALNI - LOKALNI DEKARTOV)
CE       TRANSFORM STRAIN (GLOBAL - LOCAL CARTESIAN) 
C
   
         CALL CLEAR(TA,6) 
         IF(IATYP.NE.5) CALL MNOZI1(TA,TSG,STRAIN,6,6)
         IF(IATYP.EQ.5) CALL JEDNA1(TA,STRAIN,6)
         TA(3)=0.D0
         CALL JEDNA1(STRAIN,TA,6)
C
CS       TERMICKE DEFORMACIJE   ETH=ALFA*(T-T0)
CE       THERMAL STRAINS
C
         IF(NMODM.EQ.3.OR.NMODM.EQ.4) THEN
            DTGT0=TGT-TEMP0
            STRAIN(1)=STRAIN(1)-ALFA(1)*DTGT0
            STRAIN(2)=STRAIN(2)-ALFA(2)*DTGT0
            IF(NAPON.EQ.1) STRAIN(3)=ALFA(3)*DTGT0
            STRAIN(4)=STRAIN(4)-ALFA(4)*DTGT0
         ENDIF
C
CS       TRANSFORMACIJA DEFORMACIJA (ALMANSI - GREEN LAGRANGE)
CE       TRANSFORM STRAIN (ALMANSI - GREEN LAGRANGE) 
C
         IF(IPRI.EQ.1.AND.ISNN.EQ.2) CALL ALMGRL(GRAD,STRAIN,1)
C
         IF(IPRI.EQ.1.AND.ISNN.EQ.4) THEN
C
CS          DETERMINANTA GRADIJENTA DEFORMACIJE OD T DO T+DT
CE          DETERMINANT DEFORMATION GRADIENT FROM T TO T+DT
C
C            CALL DETER3(GRAD1,DETG)
C
CS          KOREKCIJA ZA NAPON (ROTIRAN PIOLAKIRKHOFOV - KOSIJEV)
CE          CORECTION FOR STRESS (ROTI PIOLAKIRCHHOFF - CAUCHY)
C
C            DETG=1.D0/DETG
C            CALL JEDNAK(STRAIN,STRAIN,DETG,6)
C
CS          TRANSFORMACIJA DEFORMACIJA (GREEN - ROTIRANA GREEN)
CE          TRANSFORM STRAIN (GREEN  LAGRANGE - ROTI GREEN LAGRANGE) 
C
            CALL ROTGRL(GRAD1,STRAIN,0)
         ENDIF
C TRANSFORMACIJA DEFORMACIJA SA LOKALNOG DEKARTOVOG NA GLAVNE PRAVCE
C           IF(IATYP.EQ.5) THEN
C              XJJ(1,1)=STRAIN(1)
C              XJJ(2,2)=STRAIN(2)
C              XJJ(3,3)=STRAIN(4)
C              XJJ(2,1)=STRAIN(3)
C              XJJ(1,2)=XJJ(2,1)
C              CALL MNOZM2(PRI1,FIER,XJJ,3,3,3)
C              CALL MNOZM1(XJJ,PRI1,FIER,3,3,3)
C              STRAIN(1)=XJJ(1,1)
C              STRAIN(2)=XJJ(2,2)
C              STRAIN(4)=XJJ(3,3)
C              STRAIN(3)=XJJ(1,2)
C           ENDIF
C
CS       RACUNANJE NAPONA
CE       CALCULATE STRESS 
C
         CALL CLEAR(STRESS,6)
C
         IF(NMODM.LT.5) THEN
C
CS          MATERIJALNA LINEARNOST
CE          MATERIAL LINEAR
C
CS          KOSIJEVI NAPONI U GLOBAL. ILI LOKAL. DEKART. SISTEMU
CE          CAUCHY STRESS IN GLOBAL OR LOCAL CARTESIAN SYSTEM 
C
            CALL MNOZI1(STRESS,ETP,STRAIN,6,6)
C
CS          TRANSFORMACIJA NAPONA NA GLOBALNI SISTEM
CE          TRANSFORM STRESS TO GLOBAL COORDS.
C
            CALL CLEAR(TA,6) 
            CALL MNOZI2(TA,TSG,STRESS,6,6)
            IF(ISNA.EQ.2) CALL JEDNA1(STRESS,TA,6)
C
CS          CISCENJE NUMERICKIH GRESAKA ZA NAPONE
CE          CLEANING NUMERICAL ERRORS FOR STRESS
C
C           IF(IATYP.EQ.0) CALL CISTIN(STRESS,6)
C
            IF(IATYP.EQ.2) THEN
C
CS             ZA T.L. RACUNANJE GRADIJENTA DEFORMACIJE OD 0 DO T+DT
CE             FOR T.L. CALCULATE DEFORMATION GRADIENT FROM 0 TO T+DT
C
               CALL GRAD0T(XJ,H,CON,COR,GMT,GM,T,GRAD,4)
C
CS             DETERMINANTA GRADIJENTA DEFORMACIJE
CE             DETERMINANT DEFORMATION GRADIENT
C
               CALL DETER3(GRAD,DETG)
C
CS             TRANSFORMACIJA NAPONA (PIOLAKIRKHOFOV - KOSIJEV)
CE             TRANSFORM STRESS (PIOLAKIRCHHOFF - CAUCHY)
C
               DETG=1.D0/DETG
               CALL JEDNAK(TAK,TA,DETG,6)
               CALL JEDNA1(TA,TAK,6)
               CALL PIOKOS(GRAD,TAK)
C
CS             TRANSFORMACIJA DEFORMACIJA (GREEN - ROTIRANA GREEN)
CE             TRANSFORM STRAIN (GREEN  LAGRANGE - ROTI GREEN LAGRANGE) 
C
C               CALL ROTGRL(GRAD,STRAIN,0)
            ENDIF
C
            CALL JEDNA1(TAU(1,JG,NLM,MSL),STRESS,6)
C
            IF(NAPON.EQ.1) THEN
               IF(NMODM.EQ.1.OR.NMODM.EQ.3) THEN
                  STRAIN(3)=STRAIN(3)-V*(STRAIN(1)+STRAIN(2))/(1.-V)
               ENDIF
               IF(NMODM.EQ.2.OR.NMODM.EQ.4) THEN
                  DUM=(1.-VXY*VXY*EY/EX)
                  DUM1=(VZX*EX/EZ+VXY*VYZ)/DUM
                  DUM2=(VYZ+VXY*VZX*EY/EZ)/DUM
                  STRAIN(3)=STRAIN(3)-DUM1*STRAIN(1)-DUM2*STRAIN(2)
               ENDIF
            ENDIF
C
         ELSE
C
CS          NAPONI ZA PLASTICAN MODEL
CE          STRESS FOR MATERIAL NONLINEARITY 
C
C      IF(IST.EQ.1) CALL WRR(STRAIN,6,'STPL')
            IRAC=1
            CALL MODMA8(STRAIN,STRESS,NMODM,IRAC,LPLAS,LPLA1,TGT)
C      IF(IST.EQ.1) CALL WRR(STRESS,6,'TAPL')
C
CS          PROMENA ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORMACIJE
CE          UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
C
            IF(NAPON.EQ.1) THEN
               LDEFT1=LPLA1+6*IDVA
               IF(IATYP.EQ.4)
     1         CALL BEE0TE(TAU(1,JG,NLM,MSL),STRESS,TSG,GRAD1,A(LDEFT1),
     1                     ISNN)
C     IF(IST.EQ.1.AND.IATYP.EQ.4) CALL WRR(A(LDEFT1),6,'DEFE')
C     IF(IST.EQ.1.AND.IATYP.EQ.4)
C    1            CALL WRR(TAU(1,JG,NLM,MSL),6,'BEET')
               IF(IATYP.EQ.5)
     1 CALL XP8DT0(TAU(1,JG,NLM,MSL),STRESS,GRAD,TBET,A(LDEFT1),ISNN,
     1             FIER,ER0T)
C      IF(IST.EQ.1.AND.IATYP.EQ.5)CALL WRR(A(LDEFT1),4,'DEFE')
C      IF(IST.EQ.1.AND.IATYP.EQ.5)CALL WRR(TAU(1,JG,NLM,MSL),5,'BEET')
            ENDIF
            IF(IATYP.EQ.5) THEN
C              FIEL = R * FIER 
               CALL MNOZM1(XJ,ER0T,FIER,3,3,3)
C      IF(IST.EQ.1) CALL WRR(XJ,9,'TLEV')
               XJJ(1,1)=STRESS(1)
               XJJ(2,2)=STRESS(2)
               XJJ(3,3)=STRESS(3)
               XJJ(2,1)=STRESS(4)
               XJJ(1,2)=XJJ(2,1)
               XJJ(2,3)=STRESS(5)
               XJJ(3,2)=XJJ(2,3)
               XJJ(3,1)=STRESS(6)
               XJJ(1,3)=XJJ(3,1)
               CALL MNOZM1(GRAD,XJ,XJJ,3,3,3)
               CALL MNOZM3(XJJ,GRAD,XJ,3,3,3)
               STRESS(1)=XJJ(1,1)
               STRESS(2)=XJJ(2,2)
               STRESS(3)=XJJ(3,3)
               STRESS(4)=XJJ(1,2)
               STRESS(5)=XJJ(2,3)
               STRESS(6)=XJJ(1,3)
C      IF(IST.EQ.1) CALL WRR(STRESS,4,'TAXY')
C
      CALL TRANSE(TSG2,XJ)
C      IF(IST.EQ.1) CALL WRR(TSG2,36,'TSG2')
      DO 91 I=1,6
         DO 92 J=1,6
            STRAIN(J)=0.D0
         DO 92 K=1,6
   92       STRAIN(J)=STRAIN(J)+TSG2(K,I)*ETP(K,J)
      DO 91 L=I,6
         XP=0.D0
         DO 93 M=1,6
   93    XP=XP+STRAIN(M)*TSG2(M,L)
         ELAS(I,L)=XP
         ELAS(L,I)=ELAS(I,L)
   91 CONTINUE
         CALL JEDNA1(ETP,ELAS,36)
            ENDIF
C
CS          TRANSFORMACIJA NAPONA NA GLOBALNI SISTEM
CE          TRANSFORM STRESS TO GLOBAL COORDS.
C
            CALL CLEAR(TA,6) 
            CALL MNOZI2(TA,TSG,STRESS,6,6)
         ENDIF
C
C        DEFORMACIJE ZBOG KOREKCIJE DEBLJINE
C          CALL WRR(ETP,36,'ELAS')
         IF(NAPON.EQ.1.AND.NMODM.LT.5) THEN
            CALL JEDNA1(DEF(1,JG,NLM,MSL),STRAIN,6)
C            CALL WRR(STRAIN,6,'STRA')
         ENDIF
C
        IF(NGENL.GT.0.OR.(NZADP.GT.0.AND.ISKNP.EQ.2.AND.NGENL.EQ.0))THEN
C
CS          RACUNANJE UNUTRASNJIH SILA
CE          CALCULATE INTERNAL FORCES
C           r = BT * S 
C
            CALL INTEGF(FTDT,BLT,TA,LM,WTU,ND,6)
C            CALL WRR(FTDT,JEDN,'F82I')
C
         ENDIF
C
CS       INTEGRACIJA VEKTORA - h
CE       INTEGRATE VEKTOR - h
C        h = GT * S
C
         IF(NGENL.GT.0.AND.IALFA.GE.0) 
     +   CALL INTEV2(HAEM(1,NLM),GERS,TA,WTU,LA,6)
C
         IF(IPG.GT.0) THEN
            CALL JEDNAK(STRAIN,TA,WTU,6)
            CALL MNOZI2(ESILA(1,IPG),BLT,STRAIN,ND,6)
         ENDIF
C
      ENDIF
C
C
CS    INTEGRACIJA MATRICE KRUTOSTI ELEMENTA - SKE
CE    INTEGRATE ELEMENT STIFFNESS MATRIX - SKE
C
C
      IF(ISKNP.EQ.2) RETURN
C
CS    TRANSFORM. MATRICE ELAST. - ETP (LOKALNI - GLOBALNI DEKART.)
CE    TRANSFORM ELASTICITY MATRIX - ETP (LOCAL - GLOBAL CARTESIAN)
C
      CALL TRAETP(ETP,ELAST,TSG)
C
CS    INTEGRACIJA MATRICE KRUTOSTI ELEMENTA - SKE
CE    INTEGRATE ELEMENT STIFFNESS MATRIX - SKE
C     SKE = BT * C * B
C
      CALL INTEGK(SKE,BLT,ELAST,LM,WTU,ND,6)
C
CS    GEOMETRIJSKI NELINEARAN DEO MATRICE KRUTOSTI
CE    GEOMETRIC NONLINEAR PART OF STIFFNESS MATRIX   
C
      IF(IATYP.GT.1) THEN
      IF(INDKOV.EQ.0.OR.INDKOV.EQ.1)
     1CALL KNL8(SKE,H,NOP,LM,TA,T,WTU,BNL,GKS,ND,MTR,TTR,IND6)
      IF(INDKOV.EQ.-1) THEN
         CALL CLEAR(BE,81)
         CALL CLEAR(SKOV,6) 
C
CS       TRANSFORMACIJA NAPONA SA GLOBALNOG NA KONTRAVARIJANTNI SISTEM
CE       TRANSFORM STRESS FROM GLOBAL TO CONTRAVARIANT COORD. SYSTEM
C
         CALL MNOZI2(SKOV,TRLN,TA,6,6)
C         CALL WRR(SKOV,6,'SKOV')
         SKOV(3)=0.D0
         II=-3
         DO 39 I=1,3
            II=II+3
         DO 39 J=1,3
   39    BE(II+J,II+J)=SKOV(I)
         BE(1,4)=SKOV(4)
         BE(2,5)=SKOV(4)
         BE(3,6)=SKOV(4)
         BE(1,7)=SKOV(6)
         BE(2,8)=SKOV(6)
         BE(3,9)=SKOV(6)
         BE(4,7)=SKOV(5)
         BE(5,8)=SKOV(5)
         BE(6,9)=SKOV(5)
         DO 41 I=1,9
         DO 41 J=I,9
   41    BE(J,I)=BE(I,J)
C
         CALL INTEGK(SKE,BNL,BE,LM,WTU,ND,9)
      ENDIF
      ENDIF
C
      IF(IALFA.GE.0) THEN
C
CS       PROIZVOD MATRICA - GT * C
CE       MULTIPLY MATRIX - GT * C
C
         CALL MNOZM2(CEGE,GERS,ELAST,LA,6,6)
C
CS       INTEGRACIJA MATRICE - H
CE       INTEGRATE MATRIX - H
C        H = GT * C * G
C
         CALL INTEM1(HINV(1,1,NLM),CEGE,GERS,WTU,LA,LA,6)
C
CS       INTEGRACIJA MATRICE - GAMA
CE       INTEGRATE MATRIX - GAMA
C        GAMA = GT * C * B
C
         CALL INTEM1(GEEK(1,1,NLM),CEGE,BLT,WTU,LA,ND,6)
      ENDIF
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE BMBBB4(BM,BB,BS,R,S,T,GKS,COR,GMT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS    MATRICE BM, BB I BS U GAUS TACKI R I S
CS    JEDNACINE (59),(60),(81); (90),(91),(92); (96),(97),(98),(99)
C
      COMMON /IZLE4B/ H(9,3),GM(3,9),BLT(6,54),BE(9,54),ETP(6,6),UEL(54)
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /INDCEL/ IND3D
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
C
      DIMENSION BM(3,*),BB(3,*),BS(2,*),GKS(3,2,*),COR(9,*),GMT(3,*),
     1          CON(4,3),GN(3,4)
      DIMENSION XYZ(4,3),XYZR(4,3),XYZS(4,3),XYZGR(4,3),XYZGS(4,3)
      DIMENSION XYZBR(4,3),XYZBS(4,3),BB2(3,24)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' BMBBB4'
C
      IF(IATYP.EQ.2) THEN
         II=0
         DO 6 I=1,4
         DO 6 K=1,3
            II=II+1
            GN(K,I)=GMT(K,I)
            CON(I,K)=COR(I,K)+UEL(II)
    6    CONTINUE
      ELSE
         DO 5 I=1,4
         DO 5 K=1,3
            GN(K,I)=GM(K,I)
            CON(I,K)=COR(I,K)
    5    CONTINUE
      ENDIF
C
CS    JEDNACINE (59); (90); (96)
C
      HA=.5D0*(1.D0+S)
      HC=.5D0*(1.D0-S)
      HD=.5D0*(1.D0+R)
      HB=.5D0*(1.D0-R)
      DO 1 K=1,3
         XYZ(1,K)=0.D0
         XYZ(2,K)=0.D0
         XYZ(3,K)=0.D0
         XYZ(4,K)=0.D0
      DO 1 I=1,4
         XYZ(1,K)=XYZ(1,K)+H(I,2)*CON(I,K)
         XYZ(2,K)=XYZ(2,K)+H(I,3)*CON(I,K)
         XYZ(3,K)=XYZ(3,K)+H(I,2)*GN(K,I)
         XYZ(4,K)=XYZ(4,K)+H(I,3)*GN(K,I)
    1 CONTINUE
      DO 2 I=1,4
         XYZR(I,1)=0.D0
         XYZR(I,2)=0.D0
         XYZR(I,3)=0.D0
         XYZS(I,1)=0.D0
         XYZS(I,2)=0.D0
         XYZS(I,3)=0.D0
         XYZGR(I,1)=0.D0
         XYZGR(I,2)=0.D0
         XYZGR(I,3)=0.D0
         XYZGS(I,1)=0.D0
         XYZGS(I,2)=0.D0
         XYZGS(I,3)=0.D0
         XYZBR(I,1)=0.D0
         XYZBR(I,2)=0.D0
         XYZBR(I,3)=0.D0
         XYZBS(I,1)=0.D0
         XYZBS(I,2)=0.D0
         XYZBS(I,3)=0.D0
      DO 2 K=1,3
         XYZR(I,1)=XYZR(I,1)+GKS(K,1,I)*XYZ(1,K)
         XYZR(I,2)=XYZR(I,2)+GKS(K,2,I)*XYZ(1,K)
         XYZS(I,1)=XYZS(I,1)+GKS(K,1,I)*XYZ(2,K)
         XYZS(I,2)=XYZS(I,2)+GKS(K,2,I)*XYZ(2,K)
         XYZBR(I,1)=XYZBR(I,1)+GKS(K,1,I)*XYZ(3,K)
         XYZBR(I,2)=XYZBR(I,2)+GKS(K,2,I)*XYZ(3,K)
         XYZBS(I,1)=XYZBS(I,1)+GKS(K,1,I)*XYZ(4,K)
         XYZBS(I,2)=XYZBS(I,2)+GKS(K,2,I)*XYZ(4,K)
         IF(I.EQ.1) THEN
            XYZGR(I,1)=XYZGR(I,1)+GKS(K,1,I)*(CON(1,K)-CON(2,K))
            XYZGR(I,2)=XYZGR(I,2)+GKS(K,2,I)*(CON(1,K)-CON(2,K))
            XYZGS(I,1)=XYZGS(I,1)+GKS(K,1,I)*(CON(1,K)-CON(4,K))
            XYZGS(I,2)=XYZGS(I,2)+GKS(K,2,I)*(CON(1,K)-CON(4,K))
         ELSE IF(I.EQ.2) THEN
            XYZGR(I,1)=XYZGR(I,1)+GKS(K,1,I)*(CON(1,K)-CON(2,K))
            XYZGR(I,2)=XYZGR(I,2)+GKS(K,2,I)*(CON(1,K)-CON(2,K))
            XYZGS(I,1)=XYZGS(I,1)+GKS(K,1,I)*(CON(2,K)-CON(3,K))
            XYZGS(I,2)=XYZGS(I,2)+GKS(K,2,I)*(CON(2,K)-CON(3,K))
         ELSE IF(I.EQ.3) THEN
            XYZGR(I,1)=XYZGR(I,1)+GKS(K,1,I)*(CON(4,K)-CON(3,K))
            XYZGR(I,2)=XYZGR(I,2)+GKS(K,2,I)*(CON(4,K)-CON(3,K))
            XYZGS(I,1)=XYZGS(I,1)+GKS(K,1,I)*(CON(2,K)-CON(3,K))
            XYZGS(I,2)=XYZGS(I,2)+GKS(K,2,I)*(CON(2,K)-CON(3,K))
         ELSE
            XYZGR(I,1)=XYZGR(I,1)+GKS(K,1,I)*(CON(4,K)-CON(3,K))
            XYZGR(I,2)=XYZGR(I,2)+GKS(K,2,I)*(CON(4,K)-CON(3,K))
            XYZGS(I,1)=XYZGS(I,1)+GKS(K,1,I)*(CON(1,K)-CON(4,K))
            XYZGS(I,2)=XYZGS(I,2)+GKS(K,2,I)*(CON(1,K)-CON(4,K))
         ENDIF
    2 CONTINUE
C
      II=0
      DO 10 I=1,4
      DO 10 K=1,3
         II=II+1
         I12=II+12
         BM(1,II)=H(I,2)*XYZ(1,K)
         BM(2,II)=H(I,3)*XYZ(2,K)
         BM(3,II)=H(I,2)*XYZ(2,K)+H(I,3)*XYZ(1,K)
         BM(1,I12)=0.D0
         BM(2,I12)=0.D0
         BM(3,I12)=0.D0
         BB(1,II)=H(I,2)*XYZ(3,K)
         BB(2,II)=H(I,3)*XYZ(4,K)
         BB(3,II)=H(I,2)*XYZ(4,K)+H(I,3)*XYZ(3,K)
         BB(1,I12)=H(I,2)*XYZR(I,K)
         BB(2,I12)=H(I,3)*XYZS(I,K)
         BB(3,I12)=H(I,2)*XYZS(I,K)+H(I,3)*XYZR(I,K)
         BB2(1,II)=0.D0
         BB2(2,II)=0.D0
         BB2(3,II)=0.D0
         BB2(1,I12)=H(I,2)*XYZBR(I,K)
         BB2(2,I12)=H(I,3)*XYZBS(I,K)
         BB2(3,I12)=H(I,2)*XYZBS(I,K)+H(I,3)*XYZBR(I,K)
         IF(I.EQ.1) THEN
            BS(1,II) = .25D0*HA*(GN(K,1)+GN(K,2))
            BS(1,I12)= .25D0*HA*XYZGR(I,K)
            BS(2,II) = .25D0*HD*(GN(K,1)+GN(K,4))
            BS(2,I12)= .25D0*HD*XYZGS(I,K)
         ELSE IF(I.EQ.2) THEN
            BS(1,II) =-.25D0*HA*(GN(K,1)+GN(K,2))
            BS(1,I12)= .25D0*HA*XYZGR(I,K)
            BS(2,II) = .25D0*HB*(GN(K,2)+GN(K,3))
            BS(2,I12)= .25D0*HB*XYZGS(I,K)
         ELSE IF(I.EQ.3) THEN
            BS(1,II) =-.25D0*HC*(GN(K,3)+GN(K,4))
            BS(1,I12)= .25D0*HC*XYZGR(I,K)
            BS(2,II) =-.25D0*HB*(GN(K,2)+GN(K,3))
            BS(2,I12)= .25D0*HB*XYZGS(I,K)
         ELSE
            BS(1,II) = .25D0*HC*(GN(K,3)+GN(K,4))
            BS(1,I12)= .25D0*HC*XYZGR(I,K)
            BS(2,II) =-.25D0*HD*(GN(K,1)+GN(K,4))
            BS(2,I12)= .25D0*HD*XYZGS(I,K)
         ENDIF
C            if(nlm.eq.1.and.i.eq.1.and.jg.eq.1) then
C               write(3,*) 'nlm,i,jg',nlm,i,jg
C               write(3,*) 'r,s,t',r,s,t
C               call wrr3(gn,12,'gn  ')
C               write(3,*) 'bs',(bs(1,j),j=1,3)
C            endif
   10 CONTINUE
C
      DO 20 I=1,24
         BLT(1,I)=BM(1,I)+T*BB(1,I)+T*T*BB2(1,I)
         BLT(2,I)=BM(2,I)+T*BB(2,I)+T*T*BB2(2,I)
         BLT(3,I)=0.D0
         BLT(4,I)=BM(3,I)+T*BB(3,I)+T*T*BB2(3,I)
         BLT(5,I)=BS(2,I)
         BLT(6,I)=BS(1,I)
         IF(IND3D.NE.0) THEN
            BLT(5,I)=0.D0
            BLT(6,I)=0.D0
         ENDIF
         IF(IND3D.EQ.2) BLT(1,I)=0.D0
         IF(IND3D.EQ.2) BLT(2,I)=0.D0
   20 CONTINUE
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UKDEFK(COR,CON,GM,GMT,UEL,H,R,S,T,
     1                  STRAIN,TRLN,TSS,IATYP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO CALCULATE TOTAL STRAIN FOR T.L. AND U.L.
CS.   P R O G R A M
CS.      ZA RACUNANJE UKUPNIH DEFORMACIJA ZA T.L. I U.L.
C .
C ......................................................................
C
      DIMENSION COR(9,*),CON(9,3),GM(3,*),GMT(3,*),H(9,*),UEL(*),
     1          STRAIN(*),TRLN(6,*),TSS(6,*),STRAIK(6)
      DIMENSION XT(3,3),AT(2,3),BT(2,3),CT(2,3),DT(2,3),XJJ(3,3)
      DIMENSION X0(3,3),A0(2,3),B0(2,3),C0(2,3),D0(2,3)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UKDEFK'
C
CS    INTERPOLACIJSKE FUNKCIJE ZA MESOVITU INTERPOLACIJU DEFORMACIJA
CE    INTERPOLATION FUNCTIONS FOR MIXED STRAIN INTERPOLATED
      HA=.5D0*(1.D0+S)
      HC=.5D0*(1.D0-S)
      HD=.5D0*(1.D0+R)
      HB=.5D0*(1.D0-R)
C
      IF(IATYP.EQ.2) THEN
CS       ZA T.L. KOORDINATE U TRENUTKU - T+DT
CE       FOR T.L. COORDINATE IN TIME - T+DT
         II=0
         DO 6 I=1,4
         DO 6 K=1,3
            II=II+1
            CON(I,K)=COR(I,K)+UEL(II)
    6    CONTINUE
CS       KOVARIJANTNI BAZNI VEKTORI U KONFIGURACIJI - 0
CE       COVARIANT BASIS VECTORS IN CONFIGURATION - 0
         CALL IZVODI(COR,GM,X0,A0,B0,C0,D0,T,H)
CS       KOVARIJANTNI BAZNI VEKTORI U KONFIGURACIJI - T+DT
CE       COVARIANT BASIS VECTORS IN CONFIGURATION - T+DT
         CALL IZVODI(CON,GMT,XT,AT,BT,CT,DT,T,H)
         CALL JEDNA1(XJJ,XT,9)
CS       MATRICA TRANSF. DEFORMACIJA - TSS (GLOBALNI - LOKALNI DEKARTOV)
CE       STRAIN TRANSFORMATION MATRIX - TSS (GLOBAL - LOCAL CARTESIAN) 
         CALL TRANAL(XJJ,TSS,0)
      ELSE
CS       KOORDINATE U TRENUTKU - 0
CE       COORDINATE IN TIME - 0
         II=0
         DO 7 I=1,4
         DO 7 K=1,3
            II=II+1
            CON(I,K)=COR(I,K)-UEL(II)
    7    CONTINUE
CS       KOVARIJANTNI BAZNI VEKTORI U KONFIGURACIJI - 0
CE       COVARIANT BASIS VECTORS IN CONFIGURATION - 0
         CALL IZVODI(CON,GMT,X0,A0,B0,C0,D0,T,H)
CS       KOVARIJANTNI BAZNI VEKTORI U KONFIGURACIJI - T+DT
CE       COVARIANT BASIS VECTORS IN CONFIGURATION - T+DT
         CALL IZVODI(COR,GM,XT,AT,BT,CT,DT,T,H)
      ENDIF
C
CS    IZOPARAMETARSKE UKUPNE KOVARIJANTNE DEFORMACIJE U GAUSOVOJ TACKI
CE    ISOPARAMETRIC TOTAL COVARIANT STRAIN IN GAUS POINT 
      STRAIK(1)=.5D0*(XT(1,1)*XT(1,1)+XT(1,2)*XT(1,2)+XT(1,3)*XT(1,3)
     1               -X0(1,1)*X0(1,1)-X0(1,2)*X0(1,2)-X0(1,3)*X0(1,3))
      STRAIK(2)=.5D0*(XT(2,1)*XT(2,1)+XT(2,2)*XT(2,2)+XT(2,3)*XT(2,3)
     1               -X0(2,1)*X0(2,1)-X0(2,2)*X0(2,2)-X0(2,3)*X0(2,3))
C      STRAIK(3)=.5D0*(XT(3,1)*XT(3,1)+XT(3,2)*XT(3,2)+XT(3,3)*XT(3,3)
C     1               -X0(3,1)*X0(3,1)-X0(3,2)*X0(3,2)-X0(3,3)*X0(3,3))
      STRAIK(3)=0.D0
      STRAIK(4)=XT(1,1)*XT(2,1)+XT(1,2)*XT(2,2)+XT(1,3)*XT(2,3)
     1         -X0(1,1)*X0(2,1)-X0(1,2)*X0(2,2)-X0(1,3)*X0(2,3) 
CS    UKUPNE KOVARIJANTNE DEFORMACIJE NA SREDINAMA STRANICA ELEMENTA
CE    TOTAL COVARIANT STRAIN AT MIDDLE ELEMENT PAGE
      EA=AT(1,1)*AT(2,1)+AT(1,2)*AT(2,2)+AT(1,3)*AT(2,3)
     1  -A0(1,1)*A0(2,1)-A0(1,2)*A0(2,2)-A0(1,3)*A0(2,3) 
      EB=BT(1,1)*BT(2,1)+BT(1,2)*BT(2,2)+BT(1,3)*BT(2,3)
     1  -B0(1,1)*B0(2,1)-B0(1,2)*B0(2,2)-B0(1,3)*B0(2,3) 
      EC=CT(1,1)*CT(2,1)+CT(1,2)*CT(2,2)+CT(1,3)*CT(2,3)
     1  -C0(1,1)*C0(2,1)-C0(1,2)*C0(2,2)-C0(1,3)*C0(2,3) 
      ED=DT(1,1)*DT(2,1)+DT(1,2)*DT(2,2)+DT(1,3)*DT(2,3)
     1  -D0(1,1)*D0(2,1)-D0(1,2)*D0(2,2)-D0(1,3)*D0(2,3)
CS    MESOVITE UKUPNE KOVARIJANTNE DEFORMACIJE U GAUSOVOJ TACKI
CE    MIXED TOTAL COVARIANT STRAIN IN GAUSS POINT 
      STRAIK(5)=HB*EB+HD*ED
      STRAIK(6)=HA*EA+HC*EC
C
CS    TRANSFORMACIJA DEFORMACIJA (KOVARIJANTNE - GLOBALNI DEKARTOV)
CE    TRANSFORM STRAIN (COVARIANT - GLOBAL CARTESIAN) 
      CALL MNOZI1(STRAIN,TRLN,STRAIK,6,6)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE IZVODI(CO,GN,X,A,B,C,D,T,H)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R  O G R A M
CE.      TO CALCULATE DERIVATION CARTESIAN BY NATURAL COORDINATES
CS.   P R O G R A M
CS.      ZA RACUNANJE IZVODA DEKARTOVIH PO PRIRODNIM KOORDINATAMA
C .
C ......................................................................
C
      DIMENSION CO(9,*),GN(3,*),H(9,*)
      DIMENSION X(3,*),A(2,*),B(2,*),C(2,*),D(2,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' IZVODI'
C
CS    KOVARIJANTNI BAZNI VEKTORI - JAKOBIJEVA MATRICA U GAUSOVOJ TACKI
CE    COVARIANT BASIS VECTORS - JACOBIAN MATRIX IN GAUSS POINT
C
      CALL GRGSGT(CO,GN,X,H,T,4)
C
CS    KOVARIJANTNI BAZNI VEKTORI NA SREDINAMA STRANICA ELEMENTA
CE    COVARIANT BASIS VECTORS AT MIDDLE ELEMENT PAGE
C
      DO 20 J=1,3
         A(1,J)=.5D0*(CO(1,J)-CO(2,J)+T*(GN(J,1)-GN(J,2)))
         A(2,J)=.5D0*(GN(J,1)+GN(J,2))
         B(1,J)=.5D0*(CO(2,J)-CO(3,J)+T*(GN(J,2)-GN(J,3)))
         B(2,J)=.5D0*(GN(J,2)+GN(J,3))
         C(1,J)=.5D0*(CO(4,J)-CO(3,J)+T*(GN(J,4)-GN(J,3)))
         C(2,J)=.5D0*(GN(J,4)+GN(J,3))
         D(1,J)=.5D0*(CO(1,J)-CO(4,J)+T*(GN(J,1)-GN(J,4)))
         D(2,J)=.5D0*(GN(J,1)+GN(J,4))
   20 CONTINUE
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE BEE0TE(TAU,TA,TSG,GRAD,DEF,ISNN)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R  O G R A M
CE.      TO UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
CS.   P R O G R A M
CS.      ZA PROMENU ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORMACIJE
C .
C ......................................................................
C
      COMMON /MATIZO/ E,V
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
      COMMON /COEFSM/ COEF(3),ICOEF
C
      DIMENSION TAU(*),TSG(6,*),TA(*),GRAD(3,*),STRAIN(6),TAK(6),DEF(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' BEE0TE'
C
CS    TACNE ELASTICNE DEFORMACIJE U LOKALNOM DEKARTOVOM SISTEMU
CE    EXACT ELASTIC STRAIN IN LOCAL CARTESIAN SYSTEM
C
      IPRI=0
      IST=0     
      AE=2.D0*(1.D0+V)/E
      TAK(1)=(TA(1)-V*(TA(2)+TA(3)))/E
      TAK(2)=(TA(2)-V*(TA(1)+TA(3)))/E
      TAK(3)=(TA(3)-V*(TA(1)+TA(2)))/E
      TAK(4)=AE*TA(4)
      TAK(5)=AE*TA(5)/COEF(1)
      TAK(6)=AE*TA(6)/COEF(2)
      CALL JEDNA1(DEF,TAK,6)
C      IF(IST.EQ.1) CALL WRR(DEF,6,'DEF ')
C
CS    TRANSFORMACIJA DEFORMACIJA (LOKALNI - GLOBALNI DEKARTOV)
CE    TRANSFORM STRAIN (LOCAL - GLOBAL CARTESIAN) 
C     
      DO 50 I=1,6
         SIG=0.D0
         IF(I.LE.3) THEN
            DO 10 J=1,3
   10       SIG=SIG+TSG(J,I)*TAK(J)
            DO 20 J=4,6
   20       SIG=SIG+0.5D0*TSG(J,I)*TAK(J)
         ELSE
            DO 30 J=1,3
   30       SIG=SIG+2.0D0*TSG(J,I)*TAK(J)
            DO 40 J=4,6
   40       SIG=SIG+TSG(J,I)*TAK(J)
         ENDIF
         STRAIN(I)=SIG
   50 CONTINUE     
C      IF(IST.EQ.1) CALL WRR(STRAIN,6,'GLOB')
C
CS    TRANSFORMACIJA DEFORMACIJA (ALMANSI - GREEN LAGRANGE)
CE    TRANSFORM STRAIN (ALMANSI - GREEN LAGRANGE) 
C
      IF(IPRI.EQ.1.AND.ISNN.EQ.3) CALL ALMGRL(GRAD,STRAIN,1)
C      IF(IST.EQ.1) CALL WRR(STRAIN,6,'ALMG')
C
CS    TRANSFORMACIJA DEFORMACIJA (GREEN - ROTIRANA GREEN)
CE    TRANSFORM STRAIN (GREEN  LAGRANGE - ROTI GREEN LAGRANGE) 
C
      IF(IPRI.EQ.1.AND.ISNN.EQ.3.OR.ISNN.EQ.2)CALL ROTGRL(GRAD,STRAIN,0)
C      IF(IST.EQ.1) CALL WRR(STRAIN,6,'ROTG')
C
      TAU(1)=2.D0*STRAIN(1)+1.D0
      TAU(2)=2.D0*STRAIN(2)+1.D0
      TAU(3)=2.D0*STRAIN(3)+1.D0
      TAU(4)=STRAIN(4)
      TAU(5)=STRAIN(5)
      TAU(6)=STRAIN(6)
C      IF(IST.EQ.1) CALL WRR(TAU,6,'TAUB')
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTER4(H,R,S)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R  O G R A M
CE.      TO FORM INTERPOLATION FUNCTIONS AND DERIVATES
CS.   P R O G R A M
CS.      ZA FORMIRANJE INTERPOLACIJSKIH FUNKCIJA I NJIHOVIH IZVODA
C .
C ......................................................................
C
      DIMENSION H(9,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' INTER4'
C
      RP=1.+R
      RM=1.-R
      RK=1.-R*R
      SP=1.+S
      SM=1.-S
      SK=1.-S*S
      H(1,1)=0.25*RP*SP
      H(2,1)=0.25*RM*SP
      H(3,1)=0.25*RM*SM
      H(4,1)=0.25*RP*SM
      H(1,2)=0.25*SP
      H(2,2)=-0.25*SP
      H(3,2)=-0.25*SM
      H(4,2)=0.25*SM
      H(1,3)=0.25*RP
      H(2,3)=0.25*RM
      H(3,3)=-0.25*RM
      H(4,3)=-0.25*RP
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE VELDEF(R,S,T,COR,CORT,CON,GM,GNT,GMT,STRESS,POM,
     1                  TSS,GRAD,STRAIN,FOT,DET0,ALFE,IALFA,LA,IND,TBET)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R  O G R A M
CE.      TO CALCULATE LARGE STRAIN IN POINT (R,S,T)
CS.   P R O G R A M
CS.      ZA RACUNANJE VELIKIH DEFORMACIJA U TACKI (R,S,T)
C .
C ......................................................................
C
      COMMON /KOREKJ/ AJOT
C
      DIMENSION COR(9,*),CORT(9,*),CON(9,*),GM(3,*),GNT(3,*),GMT(3,*)
      DIMENSION POM(*),STRESS(*),XJ(3,3),HH(9,3),
     1          GRAD(3,*),STRAIN(*),TSS(6,*),ALFE(*),EKOR(6,6),GERS(6,6)
     1          ,FOT(6,*),TBET(3,3)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' VELDEF'
      IPRI=0
      IST=0
C
CS    INTERPOLACIJSKE FUNKCIJE I NJIHOVI IZVODI U TACKI (R,S)
CE    INTERPOLATED FUNCTIONS AND THEIR DERIVATES IN POINT (R,S)
C
      CALL INTER4(HH,R,S)
C
CS    JAKOBIJEVA MATRICA U TACKI (R,S) U TRENUTKU - T
CE    JACOBIAN MATRIX IN POINT (R,S) IN TIME - T
C
      CALL GRGSGT(CORT,GNT,XJ,HH,T,4)
C
CS    INVERTOVAN JAKOBIJAN - XJ
CE    INVERSE JACOBIAN - XJ
C
      CALL MINV3(XJ,DET)
C
CS    RACUNANJE GRADIJENTA DEFORMACIJE OD T DO T+DT
CE    CALCULATE DEFORMATION GRADIENT FROM T TO T+DT
C
      CALL GRAD0T(XJ,HH,COR,CORT,GM,GNT,T,GRAD,4)
C PRIVREMENO
C            CALL MNOZM1(POM1,TBET,GRAD,3,3,3)
C            CALL MNOZM3(FIER,POM1,TBET,3,3,3)
C            CALL DETER3(FIER,DET1)
C PRIVREMENO
C      IF(IST.EQ.1) CALL WRR(GRAD,9,'GRAD')
C      CALL DETER3(GRAD,DETJ)
C      IF(DETJ.LT.0.D0) THEN
C      WRITE(3,*) 'STOP - DETJ.LT.0.D0'
C      STOP
C      ENDIF
C      TKOR=1.D0/EXP(1.D0/3.D0*DLOG(DETJ))
C      CALL JEDNAK(GRAD,GRAD,TKOR,9)
C      GRAD(1,1)=GRAD(1,1)*TKOR
C      GRAD(2,2)=GRAD(2,2)*TKOR
C      GRAD(3,3)=GRAD(3,3)*TKOR
C      CALL DETER3(GRAD,DET1)
C      WRITE(3,*) 'DTD',DETJ,TKOR,DET1
C
CS    TRANSF. ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORMACIJE
CE    TRANSFORM. ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
C     B* = X * B * XT
C
      CALL PIOKOS(GRAD,STRESS)
C      IF(IST.EQ.1) CALL WRR(STRESS,6,'NEWB')
C
CS    PROBNE ELASTICNE DEFORMACIJE
CE    TRIAL ELASTIC STRAIN
C
      CALL UKDEFV(STRAIN,STRESS)
C      IF(IST.EQ.1) CALL WRR(STRAIN,6,'EPS*')
C
CS    JAKOBIJEVA MATRICA U GAUSOVOJ TACKI U TRENUTKU - 0
CE    JACOBIAN MATRIX IN GAUSS POINT IN TIME - 0
C
      CALL GRGSGT(CON,GMT,XJ,HH,T,4)
C
CS    MATRICA TRANSFORMACIJE - TSS (GREEN LAGRANGE - KOVARIJANTNI) 
CE    TRANSFORMATION MATRIX - TSS (GREEN LAGRANGE - COVARIANT)
C
      CALL TRANSE(TSS,XJ)
C
CS    INVERTOVAN JAKOBIJAN - XJ
CE    INVERSE JACOBIAN - XJ
C
      CALL MINV3(XJ,DET)
C
CS    RACUNANJE GRADIJENTA DEFORMACIJE OD 0 DO T+DT
CE    CALCULATE DEFORMATION GRADIENT FROM 0 TO T+DT
C
      CALL GRAD0T(XJ,HH,COR,CON,GM,GMT,T,GRAD,4)
      CALL DETER3(GRAD,AJOT)
C
CS    TRANSFORMACIJA DEFORMACIJA (ROTIRANA GREEN - GREEN)
CE    TRANSFORM STRAIN (ROTI GREEN LAGRANGE - GREEN  LAGRANGE) 
C
      IF(IPRI.EQ.1) CALL ROTGRL(GRAD,STRAIN,1)
C
CS    TRANSFORMACIJA DEFORMACIJA (GREEN LAGRANGE - KOVARIJANTNI)
CE    TRANSFORM STRAIN (GREEN LAGRANGE - COVARIANT) 
C
      CALL CLEAR(POM,6)
      CALL MNOZI1(POM,TSS,STRAIN,6,6)
CM      POM(3)=0.D0
C
CS    MATRICA TRANSFORMACIJE - TSS (KOVARIJANTNI - GREEN LAGRANGE) 
CE    TRANSFORMATION MATRIX - TSS (COVARIANT - GREEN LAGRANGE)
C
      IF(IND.EQ.0.OR.IND.EQ.1) CALL TRANSE(TSS,XJ)
C
      IF(IND.EQ.1) THEN
C
CS       TRANSFORMACIJA DEFORMACIJA (KOVARIJANTNI - GRIN LAGRANZ)
CE       TRANSFORM STRAIN (COVARIANT - GREEN LAGRANGE) 
C
         CALL CLEAR(STRAIN,6)
         CALL MNOZI1(STRAIN,TSS,POM,6,6)
C        ZA ISNN=2 I ISNN=4 TREBA DA TSS ZAVISI OD X0 A NE XTDT
C
C        P R O V E R I   V R E M E
CS       JAKOBIJEVA MATRICA U GAUSOVOJ TACKI U TRENUTKU - T+DT
CE       JACOBIAN MATRIX IN GAUSS POINT IN TIME - T+DT
C
         CALL GRGSGT(COR,GM,XJ,HH,T,4)
C
CS       DETERMINANTA JAKOBIJANA U TRENUTKU T+DT
CE       JACOBIAN DETERMINANT IN TIME T+DT
C
         CALL DETER3(XJ,DET)
C
CS       MATRICA TRANSFORM. ALMANSI DEFORM. - TSS (GLOBALNI - LOKALNI)
CE       ALMANSI STRAIN TRANSFORMATION MATRIX - TSS (GLOBAL - LOCAL) 
C
         CALL TRANAL(XJ,TSS,0)
C
CS       TRANSFORMACIJA DEFORMACIJA (GREEN LAGRANGE - ALMANSI)
CE       TRANSFORM STRAIN (GREEN  LAGRANGE - ALMANSI) 
C
         IF(IPRI.EQ.1) CALL ALMGRL(GRAD,STRAIN,0)
C
         IF(IALFA.GE.0) THEN
            DETT=DET0/DET
C
CS          FORMIRANJE MATRICE - E (KOVARIJANTNA)
CE          FORM MATRIX - E (COVARIANT)
C
            CALL CLEAR(EKOR,6*LA)
            IF(IALFA.NE.3) THEN
               EKOR(1,1)=R*DETT
               EKOR(2,2)=S*DETT
               EKOR(4,3)=R*DETT
               EKOR(4,4)=S*DETT
               IF(IALFA.EQ.2) THEN
                  EKOR(1,5)=R*S*DETT
                  EKOR(2,5)=-R*S*DETT
                  EKOR(4,5)=(R*R-S*S)*DETT
               ENDIF
            ENDIF
            IF(IALFA.EQ.3) THEN
               EKOR(1,1)=-R*XJ(1,1)*DETT
               EKOR(1,2)=-R*XJ(1,2)*DETT
               EKOR(1,3)=-R*XJ(1,3)*DETT
               EKOR(2,4)=-S*XJ(2,1)*DETT
               EKOR(2,5)=-S*XJ(2,2)*DETT
               EKOR(2,6)=-S*XJ(2,3)*DETT
               EKOR(4,1)=-R*XJ(2,1)*DETT
               EKOR(4,2)=-R*XJ(2,2)*DETT
               EKOR(4,3)=-R*XJ(2,3)*DETT
               EKOR(4,4)=-S*XJ(1,1)*DETT
               EKOR(4,5)=-S*XJ(1,2)*DETT
               EKOR(4,6)=-S*XJ(1,3)*DETT
               EKOR(5,4)=-S*XJ(3,1)*DETT
               EKOR(5,5)=-S*XJ(3,2)*DETT
               EKOR(5,6)=-S*XJ(3,3)*DETT
               EKOR(6,1)=-R*XJ(3,1)*DETT
               EKOR(6,2)=-R*XJ(3,2)*DETT
               EKOR(6,3)=-R*XJ(3,3)*DETT
            ENDIF
C
CS          FORMIRANJE MATRICE - G (GLOBALNI DEKARTOV)
CE          FORM MATRIX - G (GLOBAL CARTESIAN)
C
            CALL MNOZM1(GERS,FOT,EKOR,6,LA,6)
C
CS          INKOMPATIBILNE DEFORMACIJE
CE          INCOMPATIBILE STRAIN
C
            CALL MNOZI1(STRAIN,GERS,ALFE,6,LA)
         ENDIF
      ENDIF
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE XP8DT0(TAU,TA,GRAD,TBET,DEF,ISNN,FIER,ER0T)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R  O G R A M
CE.      TO UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
CS.   P R O G R A M
CS.      ZA PROMENU ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORMACIJE
C .
C ......................................................................
C
      COMMON /MATIZO/ E,V
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
      COMMON /COEFSM/ COEF(3),ICOEF
C
      DIMENSION TAU(*),TA(*),GRAD(3,*),TAK(6),DEF(*),TBET(3,3),
     1FIER(3,*),ER0T(3,*),XJ(3,3),POM(3,3),LJA(3),MJA(3) 
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' XP8DT0'
C
CS    TACNE ELASTICNE DEFORMACIJE U LOKALNOM DEKARTOVOM SISTEMU
CE    EXACT ELASTIC STRAIN IN LOCAL CARTESIAN SYSTEM
C     
      AE=2.D0*(1.D0+V)/E
      TAK(1)=(TA(1)-V*(TA(2)+TA(3)))/E
      TAK(2)=(TA(2)-V*(TA(1)+TA(3)))/E
      TAK(3)=(TA(3)-V*(TA(1)+TA(2)))/E
      TAK(4)=AE*TA(4)
      TAK(5)=AE*TA(5)/COEF(1)
      TAK(6)=AE*TA(6)/COEF(2)
      CALL JEDNA1(DEF,TAK,6)
      IST=0
C      IF(IST.EQ.1) CALL WRR(DEF,4,'DEF ')
C  NOVE LAMBDE
      ALAM1=EXP(TAK(1))
      ALAM2=EXP(TAK(2))
      ALAM3=EXP(TAK(3))
C      IF(IST.EQ.1) WRITE(3,*) 'ALAM123',ALAM1,ALAM2,ALAM3
C
            CALL CLEAR(XJ,9)
C MATRICA U U GLAVNIM PRAVCIMA
            XJ(1,1)=ALAM1
            XJ(2,2)=ALAM2
            XJ(3,3)=ALAM3
C TRANSFORMACIJA MATRICE U NA LOKALNI DEKARTOV
            CALL MNOZM1(POM,FIER,XJ,3,3,3)
            CALL MNOZM3(XJ,POM,FIER,3,3,3)
C      IF(IST.EQ.1) CALL WRR(XJ,9,'U0T ')
C MATRICA XE U LOKALNOM DEKARTOVOM
            CALL MNOZM1(POM,ER0T,XJ,3,3,3)
C      IF(IST.EQ.1) CALL WRR(POM,9,'XE0T')
C
C TRANSFORMACIJA XE NA GLOBALNI DEKARTOV SISTEM 
C
            CALL MNOZM2(XJ,TBET,POM,3,3,3)
            CALL MNOZM1(POM,XJ,TBET,3,3,3)
C INVERZNI GRADIJENT DEFORMACIJE U GLOBALNOM SISTEMU
            CALL MINV(GRAD,3,DET,LJA,MJA)
C      IF(IST.EQ.1) CALL WRR(GRAD,9,'XT0 ')
C INVERZNI PLASTICNI GRADIJENT DEFORMACIJE
            CALL MNOZM1(XJ,GRAD,POM,3,3,3)
C      IF(IST.EQ.1) CALL WRR(XJ,9,'XPT0')
C OVDE TREBA NESTO TRANSFORMISATI NA GLOBALNI DEKARTOV SADA JE U LOKALNOM
C           CALL JEDNA1(POM,XJ,9)
C            CALL MINV(POM,3,DET,LJA,MJA)
C      IF(IST.EQ.1) WRITE(3,*) 'DETP',DET
C
            CALL JEDNA1(TAU,XJ,9)
      RETURN
      END
C=======================================================================
      SUBROUTINE BETBEZ(NEL,GKS,R,S,T,MTR,COR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS    MATRICE BET (BE TRANSPONOVANO)
CE    MATRIX BET (BE TRANSPOSED)
C
      COMMON /IZLE4B/ H(9,3),GM(3,9),BLT(6,54),BE(9,54),ETP(6,6),UEL(54)
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /IKOVAR/ INDKOV
      COMMON /CUVAJN/ TAUCEN(6,5),INDSEL,NGAUSU
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /CDEBUG/ IDEBUG
      DIMENSION NEL(NE,*),GKS(3,2,*),MTR(*),RJ(2,3),COR(9,*)
	DIMENSION P(3),D(3),D1(3),D2(3)
C
      IF(IDEBUG.GT.0) PRINT *, ' BETBE8'
      JJ=-2
      JF=NCVE*3-2
C
      DO 40 I=1,NCVE
         JJ=JJ+3
         JF=JF+3
         IF(NEL(NLM,I).EQ.0) GO TO 40
         JJ1=JJ+1
         JJ2=JJ+2
         JF1=JF+1
         JF2=JF+2
C
         IF(INDKOV.GE.0) THEN
          STOP ' USO'
C
CS          DEO VEZAN ZA TRANSLACIJE
CE          TRANSLATION PART
C
C           D/DX
            BLT(1,JJ )=XJ(1,1)*H(I,2)+XJ(1,2)*H(I,3)
            BLT(1,JJ1)=0.D0
            BLT(1,JJ2)=0.D0
C           D/DY
            BLT(2,JJ )=0.D0
            BLT(2,JJ1)=XJ(2,1)*H(I,2)+XJ(2,2)*H(I,3)
            BLT(2,JJ2)=0.D0
C           D/DZ
            BLT(3,JJ )=0.D0
            BLT(3,JJ1)=0.D0
            BLT(3,JJ2)=XJ(3,1)*H(I,2)+XJ(3,2)*H(I,3)
C           D/DY , D/DX
            BLT(4,JJ )=BLT(2,JJ1)
            BLT(4,JJ1)=BLT(1,JJ)
            BLT(4,JJ2)=0.D0
C           D/DZ , D/DY
            BLT(5,JJ )=0.D0
            BLT(5,JJ1)=BLT(3,JJ2)
            BLT(5,JJ2)=BLT(2,JJ1)
C           D/DZ , D/DX
            BLT(6,JJ )=BLT(3,JJ2)
            BLT(6,JJ1)=0.D0
            BLT(6,JJ2)=BLT(1,JJ)
C
CS          ROTACIJE
CE          ROTATION PART
C
            G1=T*BLT(1,JJ) +XJ(1,3)*H(I,1)
            G2=T*BLT(2,JJ1)+XJ(2,3)*H(I,1) 
            G3=T*BLT(3,JJ2)+XJ(3,3)*H(I,1)
            BLT(1,JF )=GKS(1,1,I)*G1
            BLT(1,JF1)=GKS(1,2,I)*G1
            BLT(2,JF )=GKS(2,1,I)*G2
            BLT(2,JF1)=GKS(2,2,I)*G2
            BLT(3,JF )=GKS(3,1,I)*G3
            BLT(3,JF1)=GKS(3,2,I)*G3
            BLT(4,JF )=GKS(1,1,I)*G2+GKS(2,1,I)*G1
            BLT(4,JF1)=GKS(1,2,I)*G2+GKS(2,2,I)*G1
            BLT(5,JF )=GKS(2,1,I)*G3+GKS(3,1,I)*G2
            BLT(5,JF1)=GKS(2,2,I)*G3+GKS(3,2,I)*G2
            BLT(6,JF )=GKS(1,1,I)*G3+GKS(3,1,I)*G1
            BLT(6,JF1)=GKS(1,2,I)*G3+GKS(3,2,I)*G1
         ELSE
C
CS          DEO VEZAN ZA TRANSLACIJE
CE          TRANSLATION PART
C
C           D/DR
            BLT(1,JJ )=XJJ(1,1)*H(I,2)
            BLT(1,JJ1)=XJJ(1,2)*H(I,2)
            BLT(1,JJ2)=XJJ(1,3)*H(I,2)
C           D/DS
            BLT(2,JJ )=XJJ(2,1)*H(I,3)
            BLT(2,JJ1)=XJJ(2,2)*H(I,3)
            BLT(2,JJ2)=XJJ(2,3)*H(I,3)
C           D/DT
            BLT(3,JJ )=0.D0
            BLT(3,JJ1)=0.D0
            BLT(3,JJ2)=0.D0
C           D/DR , D/DS
            BLT(4,JJ )=XJJ(1,1)*H(I,3)+XJJ(2,1)*H(I,2)
            BLT(4,JJ1)=XJJ(1,2)*H(I,3)+XJJ(2,2)*H(I,2)
            BLT(4,JJ2)=XJJ(1,3)*H(I,3)+XJJ(2,3)*H(I,2)
C           D/DS , D/DT
            DO J=1,3
               P(J)=0.
               IF(I.EQ.1.OR.I.EQ.4)
     1         P(J)=(-1.)**(I+1)*0.125*(1.+R)*(GM(J,1)+GM(J,4))
               D(J)=0.
               IF(I.EQ.2.OR.I.EQ.3)
     1         D(J)=(-1.)**I*0.125*(1.-R)*(GM(J,2)+GM(J,3))
            END DO
            BLT(5,JJ )=P(1)+D(1)
            BLT(5,JJ1)=P(2)+D(2)
            BLT(5,JJ2)=P(3)+D(3)
C           D/DT , D/DR
            DO J=1,3
               P(J)=0.
               IF(I.EQ.1.OR.I.EQ.2)
     1         P(J)=(-1.)**(I+1)*0.125*(1.+S)*(GM(J,1)+GM(J,2))
               D(J)=0.
               IF(I.EQ.3.OR.I.EQ.4)
     1         D(J)=(-1.)**I*0.125*(1.-S)*(GM(J,3)+GM(J,4))
            END DO    
            BLT(6,JJ )=P(1)+D(1)
            BLT(6,JJ1)=P(2)+D(2)
            BLT(6,JJ2)=P(3)+D(3)
C            if(nlm.eq.1.and.i.eq.1.and.jg.eq.1) then
C               write(3,*) 'nlm,i,jg',nlm,i,jg
C               write(3,*) 'r,s,t',r,s,t
C               call wrr3(gm,12,'gm  ')
C               write(3,*) 'd',(d(j),j=1,3)
C               write(3,*) 'p',(p(j),j=1,3)
C               write(3,*) 'blt',(blt(6,j),j=1,3)
C            endif
C
CS          ROTACIJE
CE          ROTATION PART
C
            CALL CLEAR(RJ,6)
            DO 20 JC=1,3
            DO 20 JZ=1,3
               RJ(1,JC)=RJ(1,JC)+GKS(JZ,1,I)*XJJ(JC,JZ)
               RJ(2,JC)=RJ(2,JC)+GKS(JZ,2,I)*XJJ(JC,JZ)
   20       CONTINUE
C           D/DR
            BLT(1,JF )=T*H(I,2)*RJ(1,1)
            BLT(1,JF1)=T*H(I,2)*RJ(2,1)
C           D/DS
            BLT(2,JF )=T*H(I,3)*RJ(1,2)
            BLT(2,JF1)=T*H(I,3)*RJ(2,2)
C           D/DT
            BLT(3,JF )=0.D0
C           BLT(3,JF )=  H(I,1)*RJ(1,3)
            BLT(3,JF1)=0.D0
C           BLT(3,JF1)=  H(I,1)*RJ(2,3)
C           D/DR , D/DS
            BLT(4,JF )=T*H(I,3)*RJ(1,1)+T*H(I,2)*RJ(1,2)
            BLT(4,JF1)=T*H(I,3)*RJ(2,1)+T*H(I,2)*RJ(2,2)
C           D/DS , D/DT
            DO K=1,2
               D1(K)=0.
               D2(K)=0.
               P(K)=0.
               R1=0.5*(1.+R)
               R2=0.5*(1.-R)
               DO J=1,3
c                   P je nula zbog skalarnog proizvoda Vn*Vk koji su ortogonalni
c                  P(K)=P(K)+0.5*T*GM(J,I)*GKS(J,K,I)
                  IF(I.EQ.3.OR.I.EQ.4)P(K)=(-1.)*P(K)
                  IF(I.EQ.1.OR.I.EQ.4)
     1            D1(K)=D1(K)+
     1                  R1*(P(K)+0.25*GKS(J,K,I)*(COR(1,J)-COR(4,J)))
                  IF(I.EQ.2.OR.I.EQ.3)
     1            D2(K)=D2(K)-
     1                  R2*(P(K)-0.25*GKS(J,K,I)*(COR(2,J)-COR(3,J)))
               END DO
            END DO 
            BLT(5,JF )=D1(1)+D2(1)
            BLT(5,JF1)=D1(2)+D2(2)
C           D/DT , D/DR
            DO K=1,2
               D1(K)=0.
               D2(K)=0.
               P(K)=0.
               R1=0.5*(1.+S)
               R2=0.5*(1.-S)
               DO J=1,3
c                   P je nula zbog skalarnog proizvoda Vn*Vk koji su ortogonalni
c                   P(K)=P(K)+(-1.)**(I+1)*0.5*T*GM(J,I)*GKS(J,K,I)
                  IF(I.EQ.1.OR.I.EQ.2)
     1            D1(K)=D1(K)+
     1                  R1*(P(K)+0.25*GKS(J,K,I)*(COR(1,J)-COR(2,J)))
                  IF(I.EQ.3.OR.I.EQ.4)
     1            D2(K)=D2(K)+
     1                  R2*(P(K)-0.25*GKS(J,K,I)*(COR(3,J)-COR(4,J)))
               END DO
            END DO      
            BLT(6,JF )=D1(1)+D2(1)
            BLT(6,JF1)=D1(2)+D2(2)
C            if(nlm.eq.1.and.i.eq.1.and.jg.eq.1) then
C               write(3,*) 'r,s,t',r,s,t
C               call wrr3(gm,12,'gm  ')
C               write(3,*) 'd1',(d1(k),k=1,2)
C               write(3,*) 'd2',(d2(k),k=1,2)
C               write(3,*) 'r1',r1
C               write(3,*) 'cor',(cor(1,j),cor(2,j),j=1,3)
C               call wrr3(gks,24,'gks ')
C               write(3,*) 'r2',r2
C               write(3,*) 'p',(p(k),k=1,2)
C               write(3,*) 'blt',(blt(6,k),k=1,2)
C             endif
         ENDIF
C         IF(MTR(I).EQ.1)THEN
            DO 30 KZ=1,6
   30       BLT(KZ,JF2)=0.D0
C         ENDIF
   40 CONTINUE
      RETURN
      END
