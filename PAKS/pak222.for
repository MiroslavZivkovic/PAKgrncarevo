C======================================================================
C
C   SUBROUTINE K09EGL
C              READE
C              SISTTE
C              ELTE
C              BETBED
C              MATRTE
C              JACTEL
C              JACGAU
C              TRAEL
C              MEL01
C              MEL02
C              MEL03
C              MEL04
C              MEL05
C              FORMP2
C              FTDTRS
C              JACTP
C
C=======================================================================
      SUBROUTINE K29EGL
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     GLAVNI PROGRAM ZA RACUNANJE MATRICA ELEMENATA  2/D
CE     MAIN PROGRAM FOR CALCULATION OF ELEMENT MATRIX FOR  2/D 
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /ELEMAE/ MXAE,LAE,LMXAE,LHE,LBET,LBED,LRTHE,LSKE,LLM
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /DUPLAP/ IDVA
      COMMON /SRPSKI/ ISRPS
      COMMON /GEORGE/ TOLG,ALFAG,ICCGG
      COMMON /MIXEDM/ MIXED,IOPGS(6),NDS
      COMMON /CDEBUG/ IDEBUG 
      COMMON /dead/ lndead  
      COMMON /COMEFG/ RADIJ,NBASE,NCVP,NPEFG,NCVS,NS,LCORS,LNOC,LNOS
C
      IF(IDEBUG.GT.0) PRINT *, ' K09EGL'    
      LAU=LMAX
      CALL R2ADE(A(LAU)) 
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
      LAE=LMAX
      IF(IETYP.LE.2) THEN
         NEFG=4*NBASE*NBASE+NCVS*(12+4*NBASE+NCVS)
         MXAE = ND+(29+11*NCVE+ND*(ND+1)/2+nefg)*IDVA
         IF(IETYP.EQ.1) MXAE = MXAE + (7+ND)*IDVA
      ELSE
         MXAE = ND+(29+12*NCVE+15*NCVE*NCVE+ND*(ND+1)/2)*IDVA
      ENDIF
      IF(ICCGG.EQ.2) MXAE=MXAE+(ND+NDS)*(ND+NDS)*IDVA
      K4=3
      IF(IETYP.EQ.1) K4=4
      IF(MIXED.EQ.1) MXAE=MXAE+(NDS+2*K4*NDS+ND*NDS+NDS*(NDS+1)/2)*IDVA
      IF(IALFA.GE.0) THEN
         MXAE = MXAE + 39*IDVA
         IF(IETYP.EQ.1) MXAE = MXAE + 17*IDVA
      ENDIF
      LMAX = LAE + MXAE
      IF(LMAX.LT.MTOT) GO TO 70
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2009) LMAX,MTOT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6009) LMAX,MTOT
      STOP
C
C     FORMIRANJE MATRICE KRUTOSTI ELEMENATA I PAKOVANJE U SISTEM
C       
   70 CALL S2STTE(A(LAE),A(LAU))
C
      RETURN
C-----------------------------------------------------------------------
 2009 FORMAT(/1X,'NEDOVOLJNA DIMENZIJA U OSNOVNOM RADNOM VEKTORU A ZA UC
     1ITAVANJE ULAZNIH PODATAKA'/1X,'POTREBNA DIMENZIJA, LMAX=',I10/1X,'
     2RASPOLOZIVA DIMENZIJA, MTOT=',I10)
 6009 FORMAT(///' NOT ENOUGH SPACE IN WORKING VECTOR  A'
     1/' REQUESTED DIMENSION , LMAX=',I10
     2/' AVAILABLE DIMENSION , MTOT=',I10)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE R2ADE(AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     UPRAVLJACKI PROGRAM ZA UCITAVANJE ULAZNIH PODATAKA U AU
CE     MENAGEMENT ROUTINE FOR INPUT DATA IN    AU
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /UGAOVL/ TE(4,4)
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /ZAPISI/ LSTAZA(5)
      COMMON /SPANEL/ ISHEAR
      COMMON /PODTIP/ IPODT
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /CVSILE/ NSILA,LESILA
      COMMON /MIXEDM/ MIXED,IOPGS(6),NDS
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
      COMMON /CDEBUG/ IDEBUG
      COMMON /dead/ lndead
      COMMON /COMEFG/ RADIJ,NBASE,NCVP,NPEFG,NCVS,NS,LCORS,LNOC,LNOS
C
      DIMENSION AU(*)
      REAL AU
C
      IF(IDEBUG.GT.0) PRINT *, ' READE '
C
CS     CITANJE SKALARA IZ DIREKT ACCES FILE 
CE     READ SCALARS FROM A DIRECT ACCESS FILE
C
      LSTAZA(1)=LMAX8
      READ(IELEM,REC=LMAX8)
     1IETYP,NGAUSX,NGAUSY,BETA,NCVE,ITERME,ICORGT,LCEL,LELC,NMA,NMI,
     1MXAU,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,LLMEL,IPODT,ISHEAR,
     1ND,NGS12,MSLOJ,MXS,MSET,NSILA,LESILA,LCORS,LNOC,LNOS,
     1LNSLOJ,LMATSL,LDSLOJ,LBBET,INCOTX,INCOTY,INCOTZ,
     1LBET0,(CPP(J,1),J=1,3),IBB0,LALFE,LHAEM,LHINV,LGEEK,IALFA,
     1INDBTH,INDDTH,LTBTH,LTDTH,RADIJ,NBASE,NCVP
     1,NPEFG,NCVS,NS 
      LSTAZA(2)=LMAX8+1
      CALL READDD(AU(LNSLOJ),MXAU/IDVA,IELEM,LMAX8,LDUZI)
      LMAX=LAU+MXAU
      CALL DELJIV(LMAX,2,INDL) 
      IF(INDL.EQ.0) LMAX=LMAX+1
CS     PLASTICNOST
CE     PLASTICITY
      LPLAST=LMAX
      LPLAS1=LMAX
      LSIGMA=LMAX
      LCOR0 =LMAX
      LTEMGT=LMAX
      LCORGT=LMAX
      IF(IATYP.EQ.0) GO TO 10
      IF(NMODM.LE.4) GO TO 10
      NPROS=ne*NGS12*MXS*MODPR2( NMODM )*IDVA
      LPLAS1=LPLAST+NPROS
      LMAX=LPLAS1+NPROS
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      LSTAZA(3)=LMAX8+1
      CALL READDD(A(LPLAST),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      LSTAZA(4)=LMAX8+1
      CALL READDD(A(LPLAS1),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      IF(IATYP.GE.4) GO TO 10
      NPROS=0
      LSIGMA=LMAX
      IF(ITERME.EQ.1) GO TO 20
      IF(ICORGT.EQ.1) GO TO 30
      RETURN
C
   10 LSIGMA=LMAX
      N45=4
      NPROS=NE*NGS12*N45*MXS*IDVA
      LMAX=LSIGMA+NPROS
      LCOR0=LMAX
      IF(IATYP.GE.4) THEN
         NPRO1=NE*NCVE*3*IDVA
         LMAX=LCOR0+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
   20 LTEMGT=LMAX
      IF(ITERME.EQ.1) THEN
         NPRO1=NE*NGS12*MXS*IDVA
         LMAX=LTEMGT+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
   30 LCORGT=LMAX
      IF(ICORGT.EQ.1) THEN
         NPRO1=NE*NGS12*3*MXS*IDVA
         LMAX=LCORGT+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      LSTAZA(5)=LMAX8+1
      CALL READDD(A(LSIGMA),NPROS/IDVA,IELEM,LMAX8,LDUZI) 
      RETURN
      END
C======================================================================
      SUBROUTINE S2STTE(AE,AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     GLAVNI UPRAVLJACKI PROGRAM  ZA MATRICE ELEMENATA I SISTEMA
CE     MAIN MANAGEMENT  PROGRAM  FOR ELEMENT MATRIX
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /ELEMAE/ MXAE,LAE,LMXAE,LHE,LBET,LBED,LRTHE,LSKE,LLM
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /ZAPISI/ LSTAZA(5)
      COMMON /UPRIRI/ LUPRI
      COMMON /DUPLAP/ IDVA
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /UPDLAG/ LUL,LCORUL
      COMMON /PROBAS/ IILS
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /ITERBR/ ITER
      COMMON /INDKON/ IKONV
      COMMON /INDNAP/ NAPON
      COMMON /MATERM/ LMODEL,LGUSM
      COMMON /ZAPSIL/ UBXYZ(3,10),NVFUB(10),INDZS,LZAPS,LNPRZ
      COMMON /CVSILE/ NSILA,LESILA
      COMMON /OBNOVA/ IRUSI
      COMMON /RESTAR/ TSTART,IREST
      COMMON /GEORGE/ TOLG,ALFAG,ICCGG
      COMMON /MIXEDM/ MIXED,IOPGS(6),NDS
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
      COMMON /dead/ lndead 
      COMMON /COMEFG/ RADIJ,NBASE,NCVP,NPEFG,NCVS,NS,LCORS,LNOC,LNOS
C
      DIMENSION AE(*),AU(*)
      REAL AE,AU
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' SISTTE'
C
      LA=1
      IF(IALFA.EQ.1) LA=4
      IF(IALFA.EQ.2) LA=5
      IF(IALFA.EQ.3) LA=4
C
C     REPERI U VEKTORU ELEMENATA AE
C
      KK=3
      IF(IETYP.EQ.1) KK=4
      N45=4
      NCVE2=NCVs*2
      NWE=ND*(ND+1)/2
      LHE=1
      LBET=LHE+3*NCVE*IDVA
      LSKE=LBET+KK*NCVE2*IDVA
      LUEL=LSKE+NWE*IDVA
      LELAS=LUEL+ND*IDVA
      LTSG=LELAS+KK*KK*IDVA
      LCEGE=LTSG+KK*KK*IDVA
      LFOT=LCEGE+LA*KK*IDVA
      LEKOR=LFOT
      LGERS=LEKOR
      LLM=LGERS
      IF(IALFA.GE.0) THEN
         LEKOR=LFOT+KK*KK*IDVA
         LGERS=LEKOR+KK*LA*IDVA
         LLM=LGERS+KK*LA*IDVA
      ENDIF
      LSKEP=LLM
      LSKEP1=LSKEP
      NDUM=NBASE*NCVS*IDVA
      LPE=Llm
      LPN=LPE+NDUM
      LPX=LPN+NDUM
      LPY=LPX+NDUM
      LAA=LPY+NDUM
      NDUM=NBASE*NBASE*IDVA
      LAI=LAA+NDUM
      LAX=LAI+NDUM
      LAY=LAX+NDUM
      LWXY=LAY+NDUM
      LFXY=LWXY+3*NCVS*IDVA
      LLM=LFXY+3*NCVS*IDVA 
            LSKS=LLM
      LSKES=LSKS
      LHS=LSKS
      LQS=LSKS
      LPS=LSKS
      LSKS=LLM
      LSKES=LSKS
      LHS=LSKS
      LQS=LSKS
      LPS=LSKS
      MXAE1=Llm+ND
C
C     RACUNANJE MATRICE ELEMENATA I/ILI NAPONA
C                       
      KORD=LCORD  
      IF(IATYP.GE.3) KORD=LCORUL
      CALL E2TE(AE(LBET),AE(LSKE),AE(LUEL),AE(LLM),AU(LNEL),AU(LNMAT),
     1AU(LTHID),AE(LHE),A(KORD),A(LUPRI),A(LRTDT),A(LFTDT),A(LSIGMA),
     2AU(LISNA),AU(LIPGC),AU(LLMEL),AE(LSKEP),AE(LSKEP1),AE(LELAS),
     3AE(LFOT),AE(LEKOR),AE(LGERS),AU(LNSLOJ),AU(LMATSL),AU(LBBET),
     4AU(LDSLOJ),AU(LBET0),AU(LALFE),AU(LHAEM),AU(LHINV),AU(LGEEK),
     5NCVE2,IALFA,A(LCOR0),A(LTEMGT),A(LCORGT),A(LAU),AE(LTSG),N45,
     6A(LZAPS),A(LNPRZ),INDZS,A(LGUSM),LA,AE(LCEGE),AU(LESILA),
     7AE(LSKS),AE(LSKES),NDNDS,AE(LHS),AE(LQS),AE(LPS),a(lndead),
C     8au(ltdth),AU(LCORS),AU(LNOC),AU(LNOS),AE(LPE),AE(LPN),AE(LPX),
     8au(ltdth),A(KORD),AU(LNOC),AU(LNOS),AE(LPE),AE(LPN),AE(LPX),
     9ae(lPY),AE(LAA),AE(LAI),AE(LAX),AE(LAY),AE(LWXY),AE(LFXY)
     9 ,AU(LIPRC))
C
      IF((IALFA.GE.0.OR.NSILA.GT.0).AND.IILS.NE.-1) THEN
C
         LMA8=LSTAZA(2)-1
         CALL WRITDD(AU(LNSLOJ),MXAU/IDVA,IELEM,LMA8,LDUZI)
      ENDIF
      IF(IATYP.EQ.0) GO TO 10
      IF(NMODM.LE.4) GO TO 10
      IF(IILS.NE.-1) THEN
        NPROS=ne*NGS12*MXS*MODPR2( NMODM )*IDVA
        LMA8=LSTAZA(4)-1
        CALL WRITDD(A(LPLAS1),NPROS/IDVA,IELEM,LMA8,LDUZI)
        IF(IATYP.GE.4) GO TO 10
        NPROS=0
        IF(ITERME.EQ.1) GO TO 20
        IF(ICORGT.EQ.1) GO TO 30
      ENDIF
      RETURN
C
   10 NPROS=ne*NGS12*N45*MXS*IDVA
      IF(IATYP.GE.4) THEN
         NPRO1=NE*NCVE*3*IDVA
         NPROS=NPROS+NPRO1
         IF(NAPON.EQ.0.AND.ITER.GT.0) RETURN
      ENDIF
   20 IF(ITERME.EQ.1) THEN
         NPRO1=NE*NGS12*MXS*IDVA
         NPROS=NPROS+NPRO1
      ENDIF
   30 IF(ICORGT.EQ.1) THEN
         NPRO1=NE*NGS12*3*MXS*IDVA
         NPROS=NPROS+NPRO1
      ENDIF
      LMA8=LSTAZA(5)-1
      IF(IILS.NE.-1) 
     1CALL WRITDD(A(LSIGMA),NPROS/IDVA,IELEM,LMA8,LDUZI)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE E2TE(BLT,SKE,UEL,LM,NOP,NMAT,THID,HE,CORD,UPRI,RTDT,
     1                FTDT,TAU,ISNA,IPGC,LMEL,SKP,SKP1,ELAS,FOT,EKOR,
     1                GERS,NSLOJ,MATSL,BBET,DSLOJ,BET0,ALFE,HAEM,HINV,
     1                GEEK,NCVE2,IALFA,COR0,TEMGT,CORGT,AU,TSG2,N45,
     1                ZAPS,NPRZ,INDZS,GUSM,LA,CEGE,ESILA,
     1                SKS,SKES,NDNDS,HS,QS,PS,ndead,tdth,
     1                CORS,NOC,NOS,PE,
     1                PN,PX,PY,AA,AI,AX,AY,WXY,FXY,IPRC)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICA ELEMENATA I SISTEMA
CE     FORM ELEMENT MATRIX
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /UGAOVL/ TE(4,4)
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /GRUPEE/ NGEL,NGENL,LGEOM,NGEOM,ITERM
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /REPERM/ MREPER(4)
      COMMON /TEMPCV/ LTECV,ITEMP
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /ANALIZ/ LINEAR,ITERGL,INDDIN
      COMMON /MATIZO/ E,V
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /SPANEL/ ISHEAR
      COMMON /CDEBUG/ IDEBUG
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /SOPSVR/ ISOPS,ISTYP,NSOPV,ISTSV,IPROV,IPROL
      COMMON /DUPLAP/ IDVA
      COMMON /ITERBR/ ITER
      COMMON /INDKON/ IKONV
      COMMON /INDNAP/ NAPON
      COMMON /FILTER/ TOLNAP,TOLPOM
      COMMON /PRINCI/ PRINC(3)
      COMMON /KOREKJ/ AJOT
      COMMON /fier/ fier(3,3)
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /RMISIC/ VMS(3,3),VMS1(3,3),RACGR(3,3)
C
      COMMON /MPOINC/ MMP,NMPC,NEZAV,LCMPC,LMPC,NEZA1
      COMMON /PODTIP/ IPODT
      COMMON /GEORGE/ TOLG,ALFAG,ICCGG
      COMMON /MIXEDM/ MIXED,IOPGS(6),NDS
      COMMON /VELIKD/ DETG,QP(3,3),IGLPR
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
      COMMON /GRADIJ/ GRAD(3,3),GRAE(3,3),GRAP(3,3)
      COMMON /DEBLJG/ THICK,THICT,THIC0,NNSL
      COMMON /TRA2DN/ TSGD(4,4),TSGN(4,4),INTGL
      COMMON /DEFNAP/ NAPDEF
      COMMON /dead/ lndead  
      COMMON /COMEFG/ RADIJ,NBASE,NCVP,NPEFG,NCVS,NS,LCORS,LNOC,LNOS
C ARGENTINA
      COMMON /MMOD51/ TVOLE
C
      DIMENSION AU(*)
      REAL AU
C
      DIMENSION BLT(KK,*),SKE(*),UEL(*),LM(*),nop(NE,*),NMAT(*),ISNA(*),
     1       THID(NE,*),CORD(NP,*),HE(NCVE,*),IPGC(*),UPRI(*),ndead(ne),
     1          LMEL(ND,*),RTDT(*),FTDT(*),TAU(N45,NGS12,NE,*),
     1          TEMGT(NGS12,*),CORGT(3,NGS12,*),SKP(ND,*),SKP1(NDNDS,*),
     1          SKS(*),SKES(NDS,*),HS(KK,*),QS(*),PS(NDS,*),
     1          ELAS(KK,*),NSLOJ(*),MATSL(MSLOJ,*),BBET(MSLOJ,*),
     1          DSLOJ(MSLOJ,*),BET0(*),ESILA(ND,*),
     1          ZAPS(*),NPRZ(*),GUSM(50,*),AMASC(9),tdth(*),
     1          ALFE(LA,*),HAEM(LA,*),HINV(LA,LA,*),GEEK(LA,NCVE2,*)
      DIMENSION STRAIN(6),STRESS(8),TA(6),nlmm(700),hve(2,9)
      DIMENSION XG(55),WGT(55),NREF(11),XNC(15),WNC(15)
      DIMENSION XG5(5),YG5(5),WG5(5)
      DIMENSION TTE(2,3),CORDL(2,9),A12(3),A13(3),EN(3),Y(3),FTDTL(18),
     1          RTDTL(18),UPRIL(18),LMLAZ(527),
     1          COR(9,3),CORT(9,3),CON(9,3),COR0(NE,3,*),
     1          FOT(KK,*),EKOR(KK,*),GERS(KK,*),LJA(36),MJA(36),
     1          CEGE(LA,*),HAEML(5),TSG2(KK,*),tdddd(2,2)
C
      DIMENSION CRAC(2,9),GRAN(3,3),XJT(3,3),XJ0(3,3),ve(3) 
      DIMENSION CORS(NCVP,*),NOC(*),NOS(NS,*),WXY(3,*),FXY(3,*),
     1          PE(NBASE,*),PN(NBASE,*),PX(NBASE,*),PY(NBASE,*),
     1          AA(NBASE,*),AI(NBASE,*),AX(NBASE,*),AY(NBASE,*)
C
      DATA NREF/0,1,3,6,10,15,21,28,36,45,55/
      DATA WGT/            2.D0,               1.D0,               1.D0,
     1       .555555555555556D0, .888888888888889D0, .555555555555556D0,
     2       .347854845137454D0, .652145154862546D0, .652145154862546D0,
     3       .347854845137454D0, .236926885056189D0, .478628670499366D0,
     4       .568888888888889D0, .478628670499366D0, .236926885056189D0,
     5       .171324492379170D0, .360761573048139D0, .467913934572691D0,
     6       .467913934572691D0, .360761573048139D0, .171324492379170D0,
     7       .129484966168870D0, .279705391489277D0, .381830050505119D0,
     8       .417959183673469D0, .381830050505119D0, .279705391489277D0,
     7       .129484966168870D0, .101228536290376D0, .222381034453374D0,
     9       .313706645877887D0, .362683783378362D0, .362683783378362D0,
     1       .313706645877887D0, .222381034453374D0, .101228536290376D0,
     2       .081274388361574D0, .180648160694857D0, .260610696402935D0,
     3       .312347077040003D0, .330239355001260D0, .312347077040003D0,
     4       .260610696402935D0, .180648160694857D0, .081274388361574D0,
     5       .066671344308688D0, .149451349150581D0, .219086362515982D0,
     6       .269266719309996D0, .295524224714753D0, .295524224714753D0,
     7       .269266719309996D0, .219086362515982D0, .149451349150581D0,
     8       .066671344308688D0/
      DATA XG /            0.D0,-.577350269189626D0, .577350269189626D0,
     1      -.774596669241483D0,               0.D0, .774596669241483D0,
     2      -.861136311594053D0,-.339981043584856D0, .339981043584856D0,
     3       .861136311594053D0,-.906179845938664D0,-.538469310105683D0,
     4                     0.D0, .538469310105683D0, .906179845938664D0,
     5      -.932469514203152D0,-.661209386466265D0,-.238619186083197D0,
     6       .238619186083197D0, .661209386466265D0, .932469514203152D0,
     7      -.949107912342759D0,-.741531185599394D0,-.405845151377397D0,
     8                     0.D0, .405845151377397D0, .741531185599394D0,
     9       .949107912342759D0,-.960289856497536D0,-.796666477413627D0,
     9      -.525532409916329D0,-.183434642495650D0, .183434642495650D0,
     1       .525532409916329D0, .796666477413627D0, .960289856497536D0,
     2      -.968160239507626D0,-.836031107326636D0,-.613371432700590D0,
     3      -.324253423403809D0,               0.D0, .324253423403809D0,
     4       .613371432700590D0, .836031107326636D0, .968160239507626D0,
     5      -.973906528517172D0,-.865063366688985D0,-.679409568299024D0,
     6      -.433395394129247D0,-.148874338981631D0, .148874338981631D0,
     7       .433395394129247D0, .679409568299024D0, .865063366688985D0,
     8       .973906528517172D0/
C
      DATA WNC/            2.D0,               1.D0,               1.D0,
     1       .333333333333333D0,1.333333333333333D0, .333333333333333D0,
     2       .250000000000000D0, .750000000000000D0, .750000000000000D0,
     3       .250000000000000D0, .155555555555556D0, .711111111111111D0,
     4       .266666666666667D0, .711111111111111D0, .155555555555556D0/
C
      DATA XNC/            0.D0,              -1.D0,               1.D0,
     1                    -1.D0,               0.D0,               1.D0,
     2                    -1.D0,-.333333333333333D0, .333333333333333D0,
     3                     1.D0,              -1.D0,             -0.5D0,
     4                     0.D0,              0.5D0,               1.D0/
C
      DATA WG5/1.77777777777778D0,.555555555555556D0,.555555555555556D0,
     1         .555555555555556D0,.555555555555556D0/
      DATA XG5/            0.D0,-.774596669241483D0,-.774596669241483D0,
     1                           .774596669241483D0, .774596669241483D0/
      DATA YG5/            0.D0,-.774596669241483D0, .774596669241483D0,
     1                          -.774596669241483D0, .774596669241483D0/
C
      IF(IDEBUG.GT.0) PRINT *, ' ELTE  '
C
      PI=4.D0*DATAN(1.D0)
      NWE=ND*(ND+1)/2 
      nds=0
      ilede=0
      icpm1=0
      nld=4  
C
CS    FORMIRANJE LAZNOG LM KOJI ODGOVARA STEPENIMA SLOBODE
C
      DO 9 I=1,ND
         LMLAZ(I)=I
    9 CONTINUE
CS.....   MATRICA TRANSFORMISANJA KONSTITUITIVNIH RELACIJA LAMINATA
CE.....   FIBER ORIENTATION TRANSFORMATION MATRIX
C
      IF(MSET.EQ.0.AND.MODORT(NMODM).EQ.1.AND.IBB0.EQ.0)
     1   CALL MATRTE(TE,BETA)
C
CS            P E T L J A    P O    E L E M N T I M A
CE            L O O P    O V E R    E L E M E N T S
C
C     INDIKATOR ZA INTEGRACIJU: (0-U GL.PRAVCIMA; 1-U DEKARTOVOM) 
C     (ZA SADA ZBOG SABIRANJA IKOMPATIBILNIH DEFORMACIJA)
      INTGL=0   
      JGG=0
C     INDIKATOR ZA GLAVNE PRAVCE
      IGLPR=0
      IF(IATYP.EQ.5.OR.ILEDE.EQ.1.OR.ICPM1.EQ.2) IGLPR=1
C      
      ii=0
      GRZAP=0.D0
      GRMAS=0.D0
      DETGM=0.D0
      DETGP=0.D0    
      DO 10 NLM=1,NE  
C
CS       NASTAJANJE I NESTAJANJE ELEMENATA
CE       ELEMENT BIRTH AND DEATH OPTION
C
         IBD=0
         CALL DTHBTH(AU(LTBTH),au(ltdth),VREME,NLM,IBD)
          if(ibd.eq.1)GO TO 10
C
         NNXYZ=(NLM-1)*NGS12-1
C.....................
CS.....   MATRICA TRANSFORMISANJA KONSTITUITIVNIH RELACIJA LAMINATA
CE.....   FIBER ORIENTATION TRANSFORMATION MATRIX
      IF(MSET.EQ.0.AND.MODORT(NMODM).EQ.1.AND.IBB0.EQ.1) THEN
         BETA=BETA+BET0(NLM)
         CALL MATRTE(TE,BETA)
      ENDIF
C
         CALL CLEAR(STRAIN,6)
         CALL CLEAR(STRESS,6)
         CALL CLEAR(TA,6)
         CALL CLEAR(XJ0,9)
         CALL CLEAR(XJT,9)
         CALL CLEAR(XJJ,9)
         CALL CLEAR(XJ,9)
         CALL CLEAR(CORDL,18)
         CALL CLEAR(COR,27)
         CALL CLEAR(CORT,27)
         CALL CLEAR(CON,27)
         CALL CLEAR(TSG2,KK*KK)
         IF(IETYP.EQ.1) TSG2(4,4)=1.D0   
C
CS       VEKTOR  LM I VEKTOR LOKALNIH POMERANJA
CE       VECTOR  LM  AND  LOCALL DISPLACEMENTS
C
C                          
      DO 1222 I=1,NCVe
         II=NOp(NLM,I)
         IF(II.EQ.0) GO TO 1222
         DO 1223 J=1,3 
 1223    COR(I,J)=CORd(II,J)
 1222 CONTINUE
C
      IF(IATYP.GE.4) THEN
         DO 1224 I=1,NCVe 
         II=NOp(NLM,I)
         IF(II.EQ.0) GO TO 1224
         DO 1225 J=1,3
            IF(ITER.EQ.0) THEN
               COR0(NLM,J,I)=COR(I,J)
            ENDIF
            CORT(I,J)=COR0(NLM,J,i)
 1225    CONTINUE
 1224    CONTINUE
      ENDIF
C
      IF(ISKNP.NE.2) THEN
         CALL CLEAR(SKE,NWE)
         IF(MIXED.EQ.1) THEN
            NWS=NDS*(NDS+1)/2
            CALL CLEAR(SKS,NWS)
            CALL CLEAR(SKES,ND*NDS)
            CALL CLEAR(SKP1,NDNDS*NDNDS)
         ENDIF
      ENDIF
      IF(MIXED.EQ.1) CALL CLEAR(HS,KK*NDS)
      CALL CLEAR(AMASC,9)
      CALL CLEAR(BLT,KK*NCVE2)
      CALL CLEAR(HE,3*NCVE)
      IF(IETYP.EQ.3) THEN
         CALL CLEAR(SKP,ND*NCVE2)
         CALL CLEAR(SKP1,ND*ND)
      ENDIF
      IF(NGENL.GT.0) CALL CLEAR(FTDTL,18)
C
CS     FORMIRANJE MATRICE TRANSFORMACIJE
CE     FORM TRANSFORMATION MATRIX
C
      IF(IETYP.EQ.3) THEN
        I1=NOP(NLM,1)
        I2=NOP(NLM,2)
        I3=NOP(NLM,3)
        DO 620 I=1,3
          A12(I) = CORD(I2,I) - CORD(I1,I)
  620     A13(I) = CORD(I3,I) - CORD(I1,I)
C     VEKTOR NORMALE
        EN(1) = A12(2)*A13(3) - A12(3)*A13(2)
        EN(2) = A12(3)*A13(1) - A12(1)*A13(3)
        EN(3) = A12(1)*A13(2) - A12(2)*A13(1)
C     VEKTOR Y
        Y(1) = EN(2)*A12(3) - EN(3)*A12(2)
        Y(2) = EN(3)*A12(1) - EN(1)*A12(3)
        Y(3) = EN(1)*A12(2) - EN(2)*A12(1)
        YI = DSQRT(Y(1)*Y(1)+Y(2)*Y(2)+Y(3)*Y(3))
        A12I = DSQRT(A12(1)*A12(1)+A12(2)*A12(2)+A12(3)*A12(3))
        DO 640 I=1,3
          TTE(1,I) = A12(I)/A12I
  640     TTE(2,I) = Y(I)/YI
C     FORMIRANJE LOKALNIH KOORDINATA
         I1=NOP(NLM,1)
         CORDL(1,1)=0.0D0
         CORDL(2,1)=0.0D0
         DO 660 I=2,NCVE
            IN=NOP(NLM,I)
            IF(IN.EQ.0) GO TO 660
            DO 670 J=1,2
            DO 670 K =1,3
  670       CORDL(J,I) = CORDL(J,I) + TTE(J,K)*(CORs(IN,K) - CORs(I1,K))
  660    CONTINUE
      ELSE
         DO 600 I=1,NCVE
            II = NOP(NLM,I)
            IF(II.EQ.0) GO TO 600
            DO 610 J=1,2
  610       CORDL(J,I)=CORs(II,J)
  600    CONTINUE
      ENDIF
C
CS    FORMIRANJE LOKALNIH POMERANJA
C
         IF(MIXED.EQ.1) THEN
            DO 702 I=1,NDS
               QS(I)=0.D0
               I1=ND+I
               IF(LM(I1).EQ.0) GO TO 702
               J=LM(I1)
               QS(I)=RTDT(J)
  702       CONTINUE
         ENDIF
C
      R=0.0D0
      S=0.0D0
      IF(IALFA.GE.0) THEN
         IF(ISKNP.NE.1) THEN
C
CS          RACUNANJE IZRAZA - F * U + h
CE          CALCULATE EXPRESSION - F * U + h
C
            DO 180 I=1,LA
               HAEML(I)=0.D0
               DO 190 J=1,NCVE2
                  IF(NGENL.GT.0) THEN
                     HAEML(I)=HAEML(I)+GEEK(I,J,NLM)*UPRIL(J)
                  ELSE
                     HAEML(I)=HAEML(I)+GEEK(I,J,NLM)*RTDTL(J)
                  ENDIF
  190          CONTINUE
               IF(NGENL.GT.0) HAEML(I)=HAEML(I)+HAEM(I,NLM)
  180       CONTINUE
C
CS          RACUNANJE PARAMETARA - ALFA
CE          CALCULATE PARAMETERS - ALFA
C           ALFA = ALFA - (H**-1) * (F * U + h )
C
            IF(NGENL.EQ.0) CALL CLEAR(ALFE(1,NLM),LA)
            CALL INTEV1(ALFE(1,NLM),HINV(1,1,NLM),HAEML,-1.D0,LA,LA)
C
         ENDIF
C
CS       BRISANJE PROSTORA ZA MATRICE H, F, h, E
CS       CLEAR SPACE FOR MATRIX H, F, h, E
C
         IF(ISKNP.NE.2) CALL CLEAR(HINV(1,1,NLM),LA*LA)
         IF(ISKNP.NE.2) CALL CLEAR(GEEK(1,1,NLM),LA*NCVE2)
         IF(NGENL.GT.0) CALL CLEAR(HAEM(1,NLM),LA)
         CALL CLEAR(EKOR,KK*LA)
         CALL CLEAR(FOT,KK*KK)
C
CS       INTERPOLACIJSKE FUNKCIJE I JAKOBIJAN U TACKI R, S, T
CE       INTERPOLATED FUNCTIONS AND JACOBIAN MATRIX IN R,S,T POINT
         CALL JACTEL(NOP,CORDL,HE,R,S,0)
C        CALL WRR(CORDL,8,'COR0')
C
CS       INVERTOVAN JAKOBIJAN - XJ
CE       INVERSE JACOBIAN - XJ
C
         DET0=DET
C
CS       MATRICA TRANSFORMACIJE - FOT (KOVARIJANTNI - GLOBALNI DEKARTOV) 
CE       TRANSFORMATION MATRIX - FOT (COVARIANT - GLOBAL CARTESIAN)
C
C
         FOT(1,1)=XJ(1,1)*XJ(1,1)
         FOT(2,1)=XJ(2,1)*XJ(2,1)
         FOT(3,1)=2.D0*XJ(1,1)*XJ(2,1)
C
         FOT(1,2)=XJ(1,2)*XJ(1,2)
         FOT(2,2)=XJ(2,2)*XJ(2,2)
         FOT(3,2)=2.D0*XJ(1,2)*XJ(2,2)
C
         FOT(1,3)=XJ(1,1)*XJ(1,2)
         FOT(2,3)=XJ(2,1)*XJ(2,2)
         FOT(3,3)=XJ(1,1)*XJ(2,2)+XJ(1,2)*XJ(2,1)
C
         IF(IETYP.EQ.1) THEN
            FOT(4,4)=1.D0
            RSNAD=3.D0*(CORDL(1,1)+CORDL(1,2)+CORDL(1,3)+CORDL(1,4))
            RNAD=(CORDL(1,1)-CORDL(1,2)-CORDL(1,3)+CORDL(1,4))/RSNAD
            SNAD=(CORDL(1,1)+CORDL(1,2)-CORDL(1,3)-CORDL(1,4))/RSNAD
            RSNAD=(CORDL(1,1)-CORDL(1,2)+CORDL(1,3)-CORDL(1,4))/RSNAD/3.
         ENDIF
C
      ENDIF 
C
C
CS    P E T L J A    P O    S L O J E V I M A
CE    L O O P    O V E R    L A Y E R S
C
C     ZA VELIKE DEFORMACIJE (IATYP.GE.4)
C     ISNN=2 - GRIN-LAGRANZEOVA DEFORMACIJA I PIOLA-KIRHOFOV NAPON
C     ISNN=3 - ALMANSIJEVA DEFORMACIJA I KOSIJEV NAPON
C     ISNN=4 - ROTIRANA GRIN-LAGR. DEFORM. I ROT. PIOLA-KIRHOFOV NAPON
      ISNN=3
C     INDIKATOR ISKLJUCIVANJA SVIH TRANSFORMACIJA 
      IPRI=0
C     INDIKATOR KONTROLNE STAMPE
      IST=0
      IPG=IPGC(NLM)
      MAT=NMAT(NLM)
      GUST=GUSM(NMODM,MAT)
      THICK=THID(NLM,1)
      MST=MAT
      NNSL=1
      IF(MSET.GT.0) THEN
         NNSL=NSLOJ(MST)
         TTT=-1.D0
      ENDIF
C
         ZAPRE=0.D0
         AMASA=0.D0
      DO 25 MSL=1,NNSL
C
         DDD=1.D0
         IF(MSET.GT.0) THEN
            BETA=BBET(MSL,MST)
            IF(IBB0.EQ.1) BETA=BETA+BET0(NLM)
            IF(MODORT(NMODM).EQ.1) CALL MATRTE(TE,BETA)
            DDD =DSLOJ(MSL,MST)
            TTT =TTT+2.D0*DDD
            MAT =MATSL(MSL,MST)
         ENDIF   
C
         GO TO (  1,  2,999,999,999,999,999,999,999,999,
     1          999,999,999,999,999,999,999,999,999,999,
     2          999,999,999,999,999,999,999,999,999,999,
     3          999,999,999,999,999,999,999,999,999,999,
     4          999,999,999,999,999,999,999,999,999,999,
     5          999,999,999,999,999,999,999,999,999,999,
     6          999,999,999,999,999,999,999,999,999,999,
     7          999,999,999,999,999,999,999,999,999,999,
     8          999,999,999,999,999,999,999,999,999,999,
     9          999,999,999,999,999,999,999,999,999,999),NMODM
    1    LFUN=MREPER(1)
         CALL MEL01(A(LFUN))
         GO TO 999
    2    LFUN=MREPER(1)
         CALL MEL02(A(LFUN))
C
CS       PETLJA PO GAUSOVIM TACKAMA 
CE       LOOP OVER GAUSS POINTS
C
  999    tvole=0.
         jg=0.
C START ARGENTINA
C CALCULATION OF ELEMENT SURFACE
C END ARGENTINA
         IBTC=0 
         jg=0  
         DO 20 NGR=1,NGAUSX
            JGR=NREF(NGAUSX)+NGR
            IF(INCOTX.EQ.0) THEN
C              IF(NGAUSX.EQ.5)THEN
C                R=XG5(NGR)
C                S=YG5(NGR)
C                WR=WG5(NGR)
C                WS=1.D0
C                NGAUSY=1
C            ELSE
                R=XG(JGR)
                WR=WGT(JGR)
C              ENDIF
            ELSE
               R =XNC(JGR)
               WR=WNC(JGR)
            ENDIF
C               
         DO 20 NGS=1,NGAUSY
            JGR=NREF(NGAUSY)+NGS
            IF(INCOTY.EQ.0) THEN
C              IF(NGAUSX.NE.5)THEN
                S=XG(JGR)
                WS=WGT(JGR)
C              ENDIF
            ELSE
               S =XNC(JGR)
               WS=WNC(JGR)
            ENDIF
C          
          JGG=JGG+1
            JG=JG+1     
      IF(IST.EQ.1) WRITE(3,*)'NLM,NGR,NGS',NLM,NGR,NGS 
CS       VEKTOR  LM I VEKTOR LOKALNIH POMERANJA
CE       VECTOR  LM  AND  LOCALL DISPLACEMENTS  
      CALL IJEDN1(LM,LMEL(1,jgg),ND)
      DO 242 I=1,ND 
            UEL(I)=0.D0
            IF(NGENL.GT.0) UPRIL(I)=0.D0
            IF(LM(I).EQ.0) GO TO 242
            J=LM(I)
            UEL(I)=RTDT(J)
            IF(NGENL.GT.0) UPRIL(I)=UPRI(J)
  242    CONTINUE
         CALL JEDNA1(RTDTL,UEL,ND)
C
CS          INTERPOLACIJSKE FUNKCIJE I JAKOBIJAN U TACKI R, S, T
CE          INTERPOLATED FUNCTIONS AND JACOBIAN MATRIX IN R,S,T POINT
C         
         CALL JACTEL(NOP,CORDL,HE,R,S,0)
         IF(MIXED.EQ.1) THEN
            DO 701 I=1,NCVE
               I1=(I-1)*KK
            DO 701 J=1,KK
               IJ=J+I1
               HS(J,IJ)=HE(I,1)
  701       CONTINUE
         ENDIF
C
CS          TEMPERATURA, GLOBALNE KOORDINATE GAUSOVE TACKE
CE          TEMPERATURE AND GLOBAL COORDINATES OF GAUSS POINT
C
            IF(ICORGT.EQ.1.OR.ITERME.EQ.1.OR.IETYP.EQ.1)
     1      CALL JACGAU(NOP,CORDL,A(LTECV),HE,X1,CORGT(1,JG,NLM),TGT)
            IF(ITERME.EQ.1) TEMGT(JG,NLM)=TGT
C
            IF(IALFA.GE.0) THEN
               DETT=DET0/DET
C
CS             FORMIRANJE MATRICE - E (KOVARIJANTNA)
CE             FORM MATRIX - E (COVARIANT)
C
               IF(IETYP.EQ.1) THEN
                  EKOR(1,1)=R*DETT-RNAD
                  EKOR(2,2)=S*DETT-SNAD
                  EKOR(3,3)=R*DETT-RNAD
                  EKOR(3,4)=S*DETT-SNAD
                  EKOR(4,5)=R*S/X1
               ELSE
                  EKOR(1,1)=R*DETT
                  EKOR(2,2)=S*DETT
                  EKOR(3,3)=R*DETT
                  EKOR(3,4)=S*DETT
                  IF(IALFA.EQ.2) THEN
                     EKOR(1,5)=R*S*DETT
                     EKOR(2,5)=-R*S*DETT
                     EKOR(3,5)=(R*R-S*S)*DETT
                  ENDIF
               ENDIF
C
CS             FORMIRANJE MATRICE - G (GLOBALNI DEKARTOV)
CE             FORM MATRIX - G (GLOBAL CARTESIAN)
C
               CALL MNOZM1(GERS,FOT,EKOR,KK,LA,KK)
            ENDIF
C
CS          FORMIRANJE KONSTITUITIVNE MATRICE
CE          CONSTITUITIVE MATRIX
C
            GO TO ( 70, 70,  3,  4,  5,  5,  5,  5,  5,  5,
     1               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     2               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     3               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     4               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     5               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     6               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     7               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     8               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     9               5,  5,  5,  5,  5,  5,  5,  5,  5,  5),NMODM
    3       LFUN=MREPER(1)
            LNTA=MREPER(2)
            LTEM=MREPER(3)
            MATE=MREPER(4)
            CALL MEL03(A(LFUN),A(LNTA),A(LTEM),MATE,TGT)
            GO TO 70
    4       LFUN=MREPER(1)
            LNTA=MREPER(2)
            LTEM=MREPER(3)
            MATE=MREPER(4)
            CALL MEL04(A(LFUN),A(LNTA),A(LTEM),MATE,TGT)
            GO TO 70
    5       IBTC=IBTC+1
            IRAC=2
            NPROS=(NNXYZ+IBTC)*MODPR2( NMODM )*IDVA
            LPLAS=LPLAST+NPROS     
            LPLA1=LPLAS1+NPROS
            IF(IATYP.GE.4.AND.IETYP.NE.1.AND.IETYP.NE.2) THEN
               IT1=4
               IF(IPODT.EQ.1) IT1=3
               THIC0=0.D0
               DO 711 I=1,IT1
                  THIC0=THIC0+THID(NLM,I)*HE(I,1)
  711          CONTINUE
               IF(IPODT.EQ.0) THEN
                  IF(NOP(NLM,5).GT.0.AND.NCVE.GE.5)
     +            THIC0=THIC0+(THID(NLM,1)+THID(NLM,2))*HE(5,1)/2.D0
                  IF(NOP(NLM,6).GT.0.AND.NCVE.GE.6)
     +            THIC0=THIC0+(THID(NLM,2)+THID(NLM,3))*HE(6,1)/2.D0
                  IF(NOP(NLM,7).GT.0.AND.NCVE.GE.7)
     +            THIC0=THIC0+(THID(NLM,3)+THID(NLM,4))*HE(7,1)/2.D0
                  IF(NOP(NLM,8).GT.0.AND.NCVE.GE.8)
     +            THIC0=THIC0+(THID(NLM,1)+THID(NLM,4))*HE(8,1)/2.D0
                  IF(NOP(NLM,9).GT.0.AND.NCVE.EQ.9) THIC0=THIC0+HE(9,1)*
     +            (THID(NLM,1)+THID(NLM,2)+THID(NLM,3)+THID(NLM,4))/4.D0
               ENDIF
               IF(IPODT.EQ.1) THEN
                  IF(NOP(NLM,4).GT.0.AND.NCVE.GE.4)
     +            THIC0=THIC0+(THID(NLM,1)+THID(NLM,2))*HE(4,1)/2.D0
                  IF(NOP(NLM,5).GT.0.AND.NCVE.GE.5)
     +            THIC0=THIC0+(THID(NLM,2)+THID(NLM,3))*HE(5,1)/2.D0
                  IF(NOP(NLM,6).GT.0.AND.NCVE.GE.6)
     +            THIC0=THIC0+(THID(NLM,1)+THID(NLM,3))*HE(6,1)/2.D0
               ENDIF
               THICT=THIC0
               THICK=THIC0
            ENDIF 
            CALL MODMAT(STRAIN,TA,NMODM,IRAC,LPLAS,LPLA1,IBTC,TGT,lpla0)
   70       WT=WR*WS*DET
            WTU=WT*THICK*DDD
            IF(IETYP.EQ.1) WTU=X1*WT
            IF(IST.EQ.1) WRITE(3,*)'DET,THICK,WR,WS',DET,THICK,WR,WS
            IF(IST.EQ.1) WRITE(3,*)'WTU,DDD',WTU,DDD
            IF(ITER.EQ.0.AND.INDZS.GT.0)THEN
               WD=WTU*GUST
               ZAPRE=ZAPRE+WTU
               AMASA=AMASA+WD
               DO 149 I=1,NCVE
                  AMASC(I)=AMASC(I)+HE(I,1)*WD
  149          CONTINUE
            ELSE
               ZAPRE=ZAPRE+WTU
            ENDIF
C
CS          FORMIRANJE MATRICE BL0 LINEARNO
CE          FORM LINEAR BL0 MATRIX  
      XGD=CORGT(1,JG,NLM)
      YGD=CORGT(2,JG,NLM)
      NCVEG=NOC(JGG)
      ND=NCVEG*2
C
	 

      CALL JACEFG(NOS,Cord,FXY,WXY,PE,PN,PX,PY,AA,AI,AX,AY,
     1            XGD,YGD,NCVEG,JGG,NOP)
      if(ipgc(nlm).gt.0)then
        DO 612 I=1,NCVE
          HVE(1,I)=XJ(1,1)*HE(I,2)+XJ(1,2)*HE(I,3)
          HVE(2,I)=XJ(2,1)*HE(I,2)+XJ(2,2)*HE(I,3)
  612  CONTINUE           
          VE(1)=HE(3,1)+HE(4,1)
          VE1=1.0-VE(1)
          VE(2)=HVE(1,3)+HVE(1,4)
          VE(3)=HVE(2,3)+HVE(2,4)
C         KORIGOVANJE FUNKCIJA FXY I IZVODA SVIH CVOROVA
C
c          DO 611 I=1,NCVG
          DO 611 I=1,NCVEG
           FXY(1,I)=FXY(1,I)*VE(1)
           FXY(2,I)=FXY(2,I)*VE(1)+FXY(1,I)*VE(2)
           FXY(3,I)=FXY(3,I)*VE(1)+FXY(1,I)*VE(3)

C      KORIGOVANJE CVOROVA KONACNOG ELEMENTA
           DO 613 J = 1,NCVS
            JJ=NOS(NLM,J)
           IF(JJ.EQ.II) THEN
            FXY(1,I)=FXY(1,I) + HE(J,1)*VE1
            FXY(2,I)=FXY(2,I) - VE(2)*HE(J,1)+HVE(1,J)*VE1
            FXY(3,I)=FXY(3,I) - VE(3)*HE(J,1)+HVE(2,J)*VE1
           ENDIF
  613 CONTINUE    
  611 CONTINUE    
         ENDIF
C        
      CALL BETBEF(FXY,BLT,NOS,NCVEG,X1,IETYP,jg)
C
CS          KOREKCIJA ZA SMICUCI PANEL
CE          UPDATE FOR SHEARING PANEL
C
         IF(NMODM.LT.5) THEN
            IF(ISHEAR.EQ.1) THEN
               DO 71 I=1,2
               DO 71 J=1,2
   71          ELAST(I,J)=0.0D0
            ENDIF
            DO 80 I=1,KK
            DO 80 J=1,KK
   80       ELAS(I,J)=ELAST(I,J)
         ENDIF 
C
CS          FORMIRANJE MATRICE BL1 LINEARNO
CE          FORM LINEAR BL1 MATRIX
C
            IF(IATYP.EQ.2) CALL BETL12(BLT,NOp,LM,RTDTL,X1,STRAIN,0)
C
      IF(ISKNP.NE.1) THEN
C
CS       RACUNANJE DEFORMACIJA U GLOBALNOM DEKARTOVOM
CE       CALCULATE STRAINS IN GLOBAL CARTESIAN 
C          
C
         CALL CLEAR(STRAIN,6) 
C
CS       LINEARNOST I M.N.O.
CE       LINEAR PART AND M.N.O.
C
         IF(IATYP.EQ.0.OR.IATYP.EQ.1)
     1   CALL MNOZI1(STRAIN,BLT,RTDTL,KK,NCVE2)
C
CS       GEOMETRIJSKA NELINEARNOST - UKUPNE DEFORMACIJE ZA T.L. I U.L.
CE       GEOMETRICAL NONLINEARITY - TOTAL STRAIN FOR T.L. AND U.L.
C
         IF(IATYP.EQ.2) CALL BETL12(BLT,Nop,LM,RTDTL,X1,STRAIN,1)
         IF(IATYP.EQ.3) CALL STRUL2(BLT,Nop,LM,RTDTL,X1,STRAIN)
C
C     RACA - !!!!!!!!!!!!!!!!!!!!!!!
         IF (NMODM.EQ.31) THEN
C
CS          KOORDINATE U TRENUTKU - 0
CE          COORDINATE IN TIME - 0
C
            NK=2
            IF(IETYP.EQ.3) NK=3
            II=0
            DO 14 I=1,NCVE
            DO 14 K=1,NK
               II=II+1
               IF (IATYP.EQ.1) THEN 
                 CON(I,K)=COR(I,K)+UEL(II)
               ELSE 
                 CON(I,K)=COR(I,K)-UEL(II)
               ENDIF
   14       CONTINUE     
C
C
C           ZBOG RACUNANJA VEKTORA GR U T+DT
CS          JAKOBIJEVA MATRICA U GAUSOVOJ TACKI U TRENUTKU - T+DT
CE          JACOBIAN MATRIX IN GAUSS POINT IN TIME - T+DT
C
               IF (IATYP.EQ.1) THEN 
                 CALL GRGSG2(CON,XJJ,HE,NCVE)
               ELSE 
                 CALL GRGSG2(COR,XJJ,HE,NCVE)
               ENDIF
C
              CALL JEDNA1(VMS,XJJ,9) 
C
CS          JAKOBIJEVA MATRICA U GAUSOVOJ TACKI U TRENUTKU - 0
CE          JACOBIAN MATRIX IN GAUSS POINT IN TIME - 0
C
               IF (IATYP.EQ.1) THEN 
                 CALL GRGSG2(COR,XJJ,HE,NCVE)
               ELSE 
                 CALL GRGSG2(CON,XJJ,HE,NCVE)
               ENDIF   
C
              CALL JEDNA1(VMS1,XJJ,9) 
C
CS          INVERTOVAN JAKOBIJAN - XJJ
CE          INVERSE JACOBIAN - XJJ
C
            CALL MINV2(XJJ,DET)
C
CS          RACUNANJE GRADIJENTA DEFORMACIJE OD 0 DO T+DT
CE          CALCULATE DEFORMATION GRADIENT FROM 0 TO T+DT
C
               IF (IATYP.EQ.1) THEN 
                 CALL GRAD2T(XJJ,HE,CON,COR,GRAD,NCVE,IETYP)
               ELSE             
                 CALL GRAD2T(XJJ,HE,COR,CON,GRAD,NCVE,IETYP)
               ENDIF
C
            CALL JEDNA1(GRAD1R,GRAD,9)
            DLAMZ=GRAD(3,3)
C
CS          INVERTOVAN GRADIJENT - GRAD
CE          INVERSE GRADIENT - GRAD
C
            CALL MINV2(GRAD,DET)
            CALL JEDNA1(RACGR,GRAD,9)
            RACGR(3,3)=DLAMZ 
C
	 ENDIF   
C     RACA - !!!!!!!!!!!!!!!!!!!!!!!
C
CS       VELIKE DEFORMACIJE
CE       LARGE STRAIN
C
         IF(IATYP.GE.4) THEN
C
CS          STARO - Be, Cp**-1, Fp**-1
CE          OLD - B
C
            IF(ILEDE.EQ.0.AND.ICPM1.LE.1) THEN
               CALL JEDNA1(STRESS,TAU(1,JG,NLM,MSL),4)
               IF(IST.EQ.1) CALL WRR(STRESS,4,'BOLD')
            ENDIF
            IF(ILEDE.EQ.1.OR.(ILEDE.EQ.0.AND.ICPM1.EQ.2)) THEN 
               CALL JEDNA1(GRAP,TAU(1,JG,NLM,MSL),4)
               CALL MINV3(GRAP,DUM)
               IF(IST.EQ.1) CALL WRR(GRAP,4,'BOLD')
            ENDIF
C
CS          JAKOBIJEVA MATRICA U TACKI (R,S,T) U TRENUTKU - T,0
CE          JACOBIAN MATRIX IN POINT (R,S,T) IN TIME - T,0
C
CS          KOORDINATE U TRENUTKU - 0
CE          COORDINATE IN TIME - 0
            NK=2
            IF(IETYP.EQ.3) NK=3
            II=0
            DO 12 I=1,NCVE
            DO 12 K=1,NK
               II=II+1
               CON(I,K)=COR(I,K)-UEL(II)
   12       CONTINUE
CS          KOVARIJANTNI BAZNI VEKTORI U KONFIGURACIJI - XJT,XJ0
CE          COVARIANT BASIS VECTORS IN CONFIGURATION - XJT,XJ0
            CALL GRGSG2(CORT,XJT,HE,NCVE)
            CALL GRGSG2(CON,XJ0,HE,NCVE)  
C
CS          INVERTOVAN JAKOBIJAN - XJT,XJ0
CE          INVERSE JACOBIAN - XJT,XJ0
C             
            CALL MINV2(XJT,DUM)
            CALL MINV2(XJ0,DUM) 
C
CS          RACUNANJE GRADIJENTA DEFORMACIJE OD T DO T+DT
CE          CALCULATE DEFORMATION GRADIENT FROM T TO T+DT
C
            IF(ILEDE.EQ.0) THEN
               IF(ICPM1.EQ.0) THEN 
                  CALL GRAD2T(XJT,HE,COR,CORT,GRAD,NCVE,IETYP)
                  IF(IETYP.NE.1.AND.IETYP.NE.2) GRAD(3,3)=THICK/THICT
               ENDIF
               IF(ICPM1.GE.1) THEN
                  CALL GRAD2T(XJ0,HE,COR,CON,GRAD,NCVE,IETYP)
                  IF(IETYP.NE.1.AND.IETYP.NE.2) GRAD(3,3)=THICK/THIC0
               ENDIF
            ENDIF
            IF(ILEDE.EQ.1) THEN
               CALL GRAD2T(XJ0,HE,COR,CON,GRAD,NCVE,IETYP)
               IF(IETYP.NE.1.AND.IETYP.NE.2) GRAD(3,3)=THICK/THIC0
            ENDIF
            IF(IST.EQ.1) CALL WRR3(XJJ,9,'XJJ ')
            IF(IST.EQ.1) CALL WRR3(XJT,9,'XJT ')
            IF(IST.EQ.1) CALL WRR3(GRAD,9,'GRAD')
CS          RACUNANJE NORMIRANOG GRADIJENTA DEFORMACIJE OD T DO T+DT
               CALL JEDNA1(GRAN,GRAD,9)
            IF(IST.EQ.1) CALL WRR3(GRAN,9,'GRAN')
C
CS          RACUNANJE GRADIJENTA DEFORMACIJE OD 0 DO T+DT
CE          CALCULATE DEFORMATION GRADIENT FROM 0 TO T+DT
C
            CALL GRAD2T(XJ0,HE,COR,CON,GRAD,NCVs,IETYP)
            IF(IETYP.NE.1.AND.IETYP.NE.2) GRAD(3,3)=THICK/THIC0
         DETG=dabs(GRAD(3,3)*(GRAD(1,1)*GRAD(2,2)-GRAD(1,2)*GRAD(2,1)))
            IF(DETG.LT.1.D-15) STOP 'DETG.LE.0, PAK22.FOR'
            IF(IST.EQ.1) CALL WRR3(XJJ,9,'XJJ ')
            IF(IST.EQ.1) CALL WRR3(XJ0,9,'XJ0 ')
            IF(IST.EQ.1) CALL WRR3(GRAD,9,'GRAD')
            IF(IST.EQ.1) WRITE(3,*) 'DETG',DETG
C
CS          TRANSF. ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORMACIJE
CE          TRANSFORM. ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
C           Be* = Ft * Be * FtT  (ICPM1=0)
C           Be* = F * (Cp**-1) * FT  (ICPM1=1)
            IF(ILEDE.EQ.0.AND.ICPM1.LE.1) CALL PIOKOS(GRAN,STRESS)
CS          RACUNANJE ELASTICNOG GRADIJENTA DEFORMACIJE
CE          ELASTIC DEFORMATION GRADIENT
C           Fe = F * Fp**-1         Be = Fe * FeT
            IF(ILEDE.EQ.0.AND.ICPM1.EQ.2) THEN
C  GRAD ILI GRAN
               CALL MNOZM1(GRAE,GRAD,GRAP,3,3,3)
               CALL MNOZM3(GRAP,GRAE,GRAE,3,3,3)
               CALL TENVEK(GRAP,STRESS,1)
               CALL JEDNA1(XJ,GRAE,9)
            ENDIF 
C           Fe = F * Fp**-1         Ce = FeT * Fe
            IF(ILEDE.EQ.1) THEN
C  GRAD ILI GRAN
               CALL MNOZM1(GRAE,GRAD,GRAP,3,3,3)
               CALL MNOZM2(GRAP,GRAE,GRAE,3,3,3)
               CALL TENVEK(GRAP,STRESS,1)
               CALL JEDNA1(XJ,GRAE,9)
            ENDIF
C
C           GLAVNE VREDNOSTI I PRAVCI
C
            IF(IST.EQ.1) CALL WRR6(STRESS,6,'BECE')
            IF(IGLPR.EQ.1) THEN
               NAPDEF=1 
               CALL GLAVN(STRESS)
               NAPDEF=0
               CALL GLAPR3(STRESS,QP)
               CALL JEDNA1(FIER,QP,9)
               CALL GLASOR(PRINC,QP,0.D0,0.D0,1.D0,IMAX)
               IF(IST.EQ.1) CALL WRR3(PRINC,3,'PP  ') 
               IF(IST.EQ.1) CALL WRR3(QP,9,'QP  ') 
               CALL TRA2SE(TSGD,QP)
               CALL TRA2SS(TSGN,QP)
            ENDIF  
C
CS          PROBNE ELASTICNE DEFORMACIJE
CE          TRIAL ELASTIC STRAIN
C
            IF(IATYP.EQ.4) THEN
               IF(IGLPR.EQ.1) THEN
                  CALL CLEAR(STRESS,6)
                  STRESS(1)=PRINC(1)
                  STRESS(2)=PRINC(2)
                  STRESS(3)=PRINC(3)
               ENDIF
               CALL UKDEFV(STRAIN,STRESS)
            ENDIF
            IF(IATYP.EQ.5) THEN
C              GLAVNE VREDNOSTI
C              LAMBDA
               P1=DSQRT(PRINC(1))
               P2=DSQRT(PRINC(2))
               P3=DSQRT(PRINC(3))
               IF(IST.EQ.1) WRITE (3,*) 'L1,L2,L3',P1,P2,P3
               STRAIN(1)=DLOG(P1)
               STRAIN(2)=DLOG(P2)
               STRAIN(3)=DLOG(P3)
               IF(IST.EQ.1) CALL WRR3(STRAIN,6,'STLO')
            ENDIF
            IF(IGLPR.EQ.1) THEN
C              TRANSFORMACIJA DEFORMACIJA: GLAVNI PRAVCI - DEKARTOV SISTEM
               CALL DIJADS(QP,STRAIN)
               STRAIN(4)=2.D0*STRAIN(4)
            ENDIF
            IF(IST.EQ.1) CALL WRR3(STRAIN,6,'STDE')
            DUM=STRAIN(3)
            STRAIN(3)=STRAIN(4)
            STRAIN(4)=DUM
         ENDIF
C
CS       INKOMPATIBILNE DEFORMACIJE
CE       INCOMPATIBILE STRAIN
C        ovaj koncept ne valja za velike deformacije
         IF(IALFA.GE.0.AND.IATYP.LT.4)
     1   CALL MNOZI1(STRAIN,GERS,ALFE(1,NLM),KK,LA)
C
CS       TRANSFORMACIJA DEFORMACIJA (GLOBALNI DEKART - GLAVNI PRAVCI)
CE       TRANSFORM STRAIN (GLOBAL CARTESIAN - PRINCIPAL DIRECTIONS) 
C
C        ZA INTEGRACIJU U DEKARTOVOM SISTEMU (INTGL.EQ.1)
         IF(IATYP.GE.4.AND.IGLPR.EQ.1.AND.INTGL.EQ.0) THEN
C           Eg=Qd*Ed
            CALL CLEAR(TA,4) 
            CALL MNOZI1(TA,TSGD,STRAIN,4,4)
            CALL JEDNA1(STRAIN,TA,4)
         ENDIF
C
CS       TERMICKE DEFORMACIJE   ETH=ALFA*(T-T0)
CE       THERMAL STRAINS
C
         IF(NMODM.EQ.3.OR.NMODM.EQ.4) CALL MAMO34(STRAIN,TGT)
         IF(NMODM.EQ.3.OR.NMODM.EQ.4) DTGT0=TGT-TEMP0
         IF(IETYP.EQ.0.OR.IETYP.EQ.3) THEN
           IF(NMODM.EQ.1) STRAIN(4)=-(STRAIN(1)+STRAIN(2))*V/(1.D0-V)
           IF(NMODM.EQ.2)
     &     STRAIN(4)=-STRAIN(1)*(VZX*EX/EZ+VXY*VYZ)/(1.D0-VXY*VXY*EY/EX)
     &               -STRAIN(2)*(VYZ+VXY*VZX*EY/EZ)/(1.D0-VXY*VXY*EY/EX)
         ENDIF
         IF(IST.EQ.1) CALL WRR3(STRAIN,6,'STRA')
C
C
CS       RACUNANJE NAPONA
CE       CALCULATE STRESS 
C
C
         CALL CLEAR(TA,6) 
C
         IF(NMODM.LT.5) THEN
C
CS          MATERIJALNA LINEARNOST
CE          MATERIAL LINEAR
C
            CALL MNOZI1(TA,ELAS,STRAIN,KK,KK)
C
CS          RACUNANJE UNUTRASNJIH SILA
CE          CALCULATE INTERNAL FORCES
C           r = BT * S 
C
            IF(NZADP.GT.0.AND.ISKNP.EQ.2.AND.NGENL.EQ.0) THEN
               IF(IETYP.EQ.3) THEN
                  CALL INTEGF(FTDTL,BLT,TA,LMLAZ,WTU,NCVE2,3)
               ELSE
                  CALL INTEGF(FTDT,BLT,TA,LM,WTU,ND,KK)
                  IF(MIXED.EQ.1) THEN
                     CALL JEDNAK(STRESS,TA,-1.D0,KK)
                     CALL MNOZI1(STRESS,HS,QS,KK,NDS)
                     CALL INTEGF(FTDT,HS,STRESS,LM(ND+1),WTU,NDS,KK)
                  ENDIF
               ENDIF
            ENDIF
C
CS          CISCENJE NUMERICKIH GRESAKA ZA NAPONE
CE          CLEANING NUMERICAL ERRORS FOR STRESS
C
            CALL CISTIN(TA,KK)
C
            DO 21 I=1,4
               IF(IATYP.EQ.2) THEN
C
CS                KOSIJEVI NAPONI U GLOBAL. ILI LOKAL. DEKART. SISTEMU
CE                CAUCHY STRESS IN GLOBAL OR LOCAL CARTESIAN SYSTEM 
C
               ELSE
C
CS                KOSIJEVI NAPONI U GLOBAL. ILI LOKAL. DEKART. SISTEMU
CE                CAUCHY STRESS IN GLOBAL OR LOCAL CARTESIAN SYSTEM 
C
               ENDIF
               SIG=TA(I)
               IF(DABS(SIG).LT.TOLNAP) SIG=0.D0
               TAU(I,JG,NLM,MSL)=SIG
   21       CONTINUE 
C
CS          RACUNANJE NAPONA U PRAVCU DEBLJINE
C
            IF(IETYP.EQ.2) THEN
               IF(NMODM.EQ.1.OR.NMODM.EQ.3) THEN
                  TA(4)=(TA(1)+TA(2))*V
                  IF(ITERME.NE.0) TA(4)=TA(4)-E*ALFA(3)*DTGT0
               ENDIF
               IF(NMODM.EQ.2.OR.NMODM.EQ.4) THEN
                  TA(4)=(TA(1)*VZX+TA(2)*VYZ*EZ/EY)
                  IF(ITERME.NE.0) TA(4)=TA(4)-EZ*ALFA(3)*DTGT0
               ENDIF
               TAU(4,JG,NLM,MSL)=TA(4)
            ENDIF
         ELSE
C
CS          NAPONI ZA PLASTICAN MODEL
CE          STRESS FOR MATERIAL NONLINEARITY 
C
            IRAC=1
            CALL MODMAT(STRAIN,TA,NMODM,IRAC,LPLAS,LPLA1,IBTC,TGT,lpla0)
c      ----------------------------------------------------------------------
C J-INTEGRAL
C-----------------------------------------------------------------------     
      deter=0.
      X1=0.0D0
      X2=0.0D0
      DO 801 I=1,NCVE
         X1=X1+HE(I,1)*CORDL(1,I)
         X2=X2+HE(I,1)*CORDL(2,I) 
 801      CONTINUE
c      if(nlm.eq.7.or.nlm.eq.13.or.nlm.eq.12.or.nlm.eq.2)
c     1 write(3,*)nlm,ngr,ngs,x1,x2
cc      IF((NLM.EQ.3.or.nlm.eq.11).AND.NGR.
cc    1 EQ.2)THEN
cc              D1=XJ(2,2)*(XJ(2,2)*XJ(1,1)-XJ(2,1)*XJ(1,2))
cc             D2=XJ(2,1)*(XJ(2,1)*XJ(1,2)-XJ(2,2)*XJ(1,1))
cc     DN=DSQRT(D1*D1+D2*D2)
cc	     DN1=D1/DN
cc	     DN2=D2/DN
cc	     SEDEN=0.5*(TAU(1,JG,NLM,MSL)*strain(1)+TAU(3,JG,NLM,MSL)
cc     1*(arr+arr1)+TAU(2,JG,NLM,MSL)*STRAIN(2))
c      write(3,*)TAU(1,JG,NLM,MSL),strain(1) 
c      write(3,*)nlm,TAU(1,JG,NLM,MSL),STRAIN(1)
cc	     FIRST=SEDEN*XJ(2,2)
cc      FACT1=(TAU(1,JG,NLM,MSL)*DN1+TAU(3,JG,NLM,MSL)*DN2)*STRAIN(1)
cc      FACT2=(TAU(3,JG,NLM,MSL)*DN1+TAU(2,JG,NLM,MSL)*DN2)*arr1
cc            DBIAN=DSQRT(XJ(2,1)*XJ(2,1)+XJ(2,2)*XJ(2,2))
cc	  SECND=(FACT1+FACT2)*DBIAN
cc	cjj=(FIRST-SECND)*Ws 
c	if(nlm.eq.3.or.nlm.eq.8)cjj=0.788675*cjj 
c	write(3,*)nlm,ngr,ngs,cjj
cc	endif 
cc	if((NLM.EQ.8.or.NLM.EQ.14).AND.NGs.EQ.2)then 
cc	D1=XJ(1,2)*(XJ(2,2)*XJ(1,1)-XJ(2,1)*XJ(1,2))
cc             D2=XJ(1,1)*(XJ(2,1)*XJ(1,2)-XJ(2,2)*XJ(1,1))
cc	     DN=DSQRT(D1*D1+D2*D2)
cc	     DN1=D1/DN
cc	     DN2=D2/DN
C	     PRINT*,D1,D2
cc	     SEDEN=0.5*(TAU(1,JG,NLM,MSL)*STRAIN(1)+TAU(3,JG,NLM,MSL)
cc     1	*(arr+arr1)+TAU(2,JG,NLM,MSL)*STRAIN(2))
cc	     FIRST=SEDEN*XJ(1,2)
cc      FACT1=(TAU(1,JG,NLM,MSL)*DN1+TAU(3,JG,NLM,MSL)*DN2)*STRAIN(1)
cc      FACT2=(TAU(3,JG,NLM,MSL)*DN1+TAU(2,JG,NLM,MSL)*DN2)*arr1
cc                  DBIAN=DSQRT(XJ(1,1)*XJ(1,1)+XJ(1,2)*XJ(1,2))
cc	  SECND=(FACT1+FACT2)*DBIAN 
cc	 cjj=(FIRST-SECND)*WR
c	if(nlm.eq.3.or.nlm.eq.8)cjj=0.788675*cjj
c	write(3,*)nlm,ngr,ngs,cjj
cc	endif   
            IF(IST.EQ.1) CALL WRR3(STRAIN,6,'DEFL')
            IF(IST.EQ.1) CALL WRR3(TA,6,'STRL')
CS          TRANSFORMACIJA ELAST
            DO 81 I=1,KK
            DO 81 J=1,KK
   81       ELAS(I,J)=ELAST(I,J)
C
CS          PROMENA ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORMACIJE
CE          UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
C
C  OVO PROVERITI ????????????????????????????
            IF(NAPON.EQ.1.AND.IATYP.GE.4) THEN
               IF(ILEDE.EQ.0) THEN
                  IF(ICPM1.EQ.0) THEN
                     CALL JEDNA1(TAU(1,JG,NLM,MSL),STRAIN,4)
                  ENDIF
                  IF(ICPM1.EQ.1) THEN
CS                   TRANSF. ELAS. LEVOG KOSI - GRINOVOG TENZORA DEFOR.
CS                   U DESNI PLASTICNI INVERZNI
CE                   TRANSFORM. ELASTIC LEFT CAUCHY - GREEN DEFOR. TENS.
C                    CP**-1 = F**-1 * Be * F**-T
                     CALL MINV3(GRAN,DUM)
                     CALL PIOKOS(GRAN,STRAIN)
                     CALL JEDNA1(TAU(1,JG,NLM,MSL),STRAIN,4)
                  ENDIF
               ENDIF
               IF(ILEDE.EQ.1.OR.(ILEDE.EQ.0.AND.ICPM1.EQ.2)) THEN 
                  CALL JEDNA1(GRAD,TAU(1,JG,NLM,MSL),4)
                  P1=DEXP(STRAIN(1))
                  P2=DEXP(STRAIN(2))
                  P3=DEXP(STRAIN(3))
                  CALL DIJAD(GRAN,QP,QP,P1,P2,P3)
                  CALL MNOZM1(GRAP,GRAN,GRAD,3,3,3)
                  CALL JEDNA1(TAU(1,JG,NLM,MSL),GRAP,4)
                  NAPKO=0
                  IF(NAPKO.EQ.1) THEN
                     IF(IATYP.EQ.4.AND.ILEDE.EQ.1) THEN
                        CALL MINV3(GRAP,DETP)
                        IF(DETP.GT.DETGP) DETGP=DETP
                        CALL MNOZM1(GRAE,GRAD,GRAP,3,3,3)
CS                      TRANSF. PIOLA KIRKOFOV - KOSIJEV NAPON 
CE                      TRANSFORM. PIOLA KIRCKOF - CAUCHY STRESS
C                       s = F * S * FT
                        DUM=TA(3)
                        TA(3)=TA(4)
                        TA(4)=DUM
                        CALL PIOKOS(GRAE,TA)
                        DUM=TA(3)
                        TA(3)=TA(4)
                        TA(4)=DUM
                        CALL CEPMT(ELAST,CT,0)
C                       Cmnop = Fmi Fnj Fok Fpl Cijkl
                        CALL RRRRC(ELAST,CT,GRAE,1)
CS                      TRANSFORMACIJA ELAST
                        DO 82 I=1,KK
                        DO 82 J=1,KK
   82                   ELAS(I,J)=ELAST(I,J)
                     ENDIF
                  ENDIF
               ENDIF
               IF(IST.EQ.1) CALL WRR6(TAU(1,JG,NLM,MSL),4,'BNOV')
            ENDIF
C
         ENDIF
C
C                      
CS       RACUNANJE UNUTRASNJIH SILA
CE       CALCULATE INTERNAL FORCES 
C
C
         IF(NGENL.GT.0) THEN
C
CS          INTEGRACIJA VEKTORA - h
CE          INTEGRATE VEKTOR - h
C           h = GT * S       
C
            IF(IALFA.GE.0)
     1      CALL INTEV2(HAEM(1,NLM),GERS,TA,WTU,LA,KK)
C                                       
CS          RACUNANJE UNUTRASNJIH SILA
CE          CALCULATE INTERNAL FORCES
C           r = BT * S 
C
            IF(IETYP.EQ.3) THEN
               CALL INTEGF(FTDTL,BLT,TA,LMLAZ,WTU,NCVE2,3)
            ELSE
               CALL INTEGF(FTDT,BLT,TA,LM,WTU,ND,KK)
               IF(MIXED.EQ.1) THEN
                  CALL JEDNAK(STRESS,TA,-1.D0,KK)
                  CALL MNOZI1(STRESS,HS,QS,KK,NDS)
                  CALL INTEGF(FTDT,HS,STRESS,LM(ND+1),WTU,NDS,KK)
               ENDIF
            ENDIF
C
         ENDIF
C
         IF(IPG.GT.0) THEN
            CALL JEDNAK(STRAIN,TA,WTU,KK)
            CALL MNOZI2(ESILA(1,IPG),BLT,STRAIN,ND,KK)
         ENDIF
C
      ENDIF
C
C
CS    INTEGRACIJA MATRICE KRUTOSTI ELEMENTA - SKE
CE    INTEGRATE ELEMENT STIFFNESS MATRIX - SKE
C     SKE = BT * C * B
C
C
      IF(ISKNP.EQ.2) GO TO 20
                  IF(IST.EQ.1) CALL WRR6(ELAST,36,'ELAS')
                   NWE=ND*(ND+1)/2
      CALL CLEAR(SKE,NWE)
      IF(IETYP.EQ.3) THEN
         CALL INTEGK(SKE,BLT,ELAS,LMLAZ,WTU,NCVE2,3)
      ELSE
         CALL INTEGK(SKE,BLT,ELAS,LM,WTU,ND,KK)
      ENDIF
C
CS    GEOMETRIJSKI NELINEARAN DEO MATRICE KRUTOSTI
CE    GEOMETRIC NONLINEAR PART OF STIFFNESS MATRIX   
C
      IF(IATYP.GT.1) CALL KNL2(SKE,he,Nop,LM,X1,TA,WTU)
C
      IF(IALFA.GE.0) THEN
C
CS       PROIZVOD MATRICA - GT * C
CE       MULTIPLY MATRIX - GT * C
C
         CALL MNOZM2(CEGE,GERS,ELAS,LA,KK,KK)
C
CS       INTEGRACIJA MATRICE - H
CE       INTEGRATE MATRIX - H
C        H = GT * C * G
C
         CALL INTEM1(HINV(1,1,NLM),CEGE,GERS,WTU,LA,LA,KK)
C
CS       INTEGRACIJA MATRICE - GAMA
CE       INTEGRATE MATRIX - GAMA
C        GAMA = GT * C * B
C
         CALL INTEM1(GEEK(1,1,NLM),CEGE,BLT,WTU,LA,NCVE2,KK)
      ENDIF
C
         IF(MIXED.EQ.1) THEN
C
CS          INTEGRACIJA MATRICE - KSS
CE          INTEGRATE MATRIX - KSS
C           SKS = HST * HS
C
            CALL INTEGV(SKS,HS,LM(ND+1),WTU,NDS,KK)
C
CS          PROIZVOD MATRICA - HST * C
CE          MULTIPLY MATRIX - HST * C
C
            CALL MNOZM2(PS,HS,ELAS,NDS,KK,KK)
C
CS          INTEGRACIJA MATRICE - KSU
CE          INTEGRATE MATRIX - KSU
C           SKES = HST * C * BL
C
            CALL INTEM1(SKES,PS,BLT,WTU,NDS,ND,KK)
         ENDIF
C
CS-------------------------- KRAJ PETLJE PO GAUSOVIM TACKAMA --------
CE-------------------------- END  LOOP  OVER  GAUSS  POINTS  --------
C
C
         IF(IALFA.GE.0) THEN
C
CS          INVERTOVANJE MATRICE - H
CE          INVERSE MATRIX - H
C
            IF(ISKNP.NE.2) CALL MINV(HINV(1,1,NLM),LA,DET,LJA,MJA)
C
            IF(NGENL.GT.0) THEN
C
CS             RACUNANJE IZRAZA - (H**-1) * h
CE             CALCULATE EXPRESSION - (H**-1) * h
C
               CALL CLEAR(HAEML,LA)
               CALL MNOZI1(HAEML,HINV(1,1,NLM),HAEM(1,NLM),LA,LA)
C
CS             KOREKCIJA UNUTRASNJIH SILA
CE             CORECTION INTERNAL FORCES
C              r = r - FT * (H**-1) * h
C
               IF(IETYP.EQ.3) THEN
             CALL INTEGF(FTDTL,GEEK(1,1,NLM),HAEML,LMLAZ,-1.D0,NCVE2,LA)
               ELSE
                  CALL INTEGF(FTDT,GEEK(1,1,NLM),HAEML,LM,-1.D0,ND,LA)
               ENDIF
C
               IF(IPG.GT.0) 
     1         CALL MNOZ2I(ESILA(1,IPG),GEEK(1,1,NLM),HAEML,ND,LA)
C
            ENDIF
C
CS          KOREKCIJA MATRICE KRUTOSTI
CE          CORECTION STIFFNESS MATRIX
C           K = K - FT * (H**-1) * F
C
            IF(ISKNP.NE.2) THEN
               IF(IETYP.EQ.3) THEN
       CALL INTEGK(SKE,GEEK(1,1,NLM),HINV(1,1,NLM),LMLAZ,-1.D0,NCVE2,LA)
               ELSE
             CALL INTEGK(SKE,GEEK(1,1,NLM),HINV(1,1,NLM),LM,-1.D0,ND,LA)
               ENDIF
            ENDIF
C
         ENDIF
      IF(IETYP.EQ.3.AND.ISKNP.NE.2) THEN
         DO 370 I=1,NCVE
         DO 370 K=1,3
            IK=(I-1)*3+K
            IF(LM(IK).EQ.0) GO TO 370
            LL=LM(IK)
            DO 372 J =1,2
               MM=(I-1)*2+J
  372       FTDT(LL) = FTDT(LL) + TTE(J,K)*FTDTL(MM)
  370    CONTINUE
C
         IJ=0
         DO 480 I=1,NCVE*2
         DO 480 J=I,NCVE*2
            IJ=IJ+1
            SKP1(I,J)=SKE(IJ)
            SKP1(J,I)=SKP1(I,J)
  480    CONTINUE
         DO 800 N=1,NCVE
         DO 800 I=1,3
            II=3*(N-1)+I
         DO 800 J=1,NCVE*2
            SKP(II,J)=0.0D0
         DO 800 K=1,2
            MM=2*(N-1)+K
            SKP(II,J)=SKP(II,J)+TTE(K,I)*SKP1(J,MM)
  800    CONTINUE 
         DO 850 N=1,NCVE
         DO 850 I=1,3
            II=3*(N-1)+I
         DO 850 J1=1,NCVE
         DO 850 J2=1,3
            J=3*(J1-1)+J2
            SKP1(II,J)=0.0D0
         DO 850 K=1,2
            MM=2*(J1-1)+K
            SKP1(II,J)=SKP1(II,J)+TTE(K,J2)*SKP(II,MM)
  850    CONTINUE
         IJ=0
         DO 900 I=1,ND
         DO 900 J=I,ND
            IJ=IJ+1
            SKE(IJ)=SKP1(I,J)
  900    CONTINUE
      ENDIF  
C
CS       RASPOREDJIVANJE MATRICE KRUTOSTI (SKE)
CE       ASSEMBLE STIFFNESS MATRIX
C       
         IF(ICCGG.EQ.2) THEN
            IJ=0
            DO 481 I=1,NCVE*2
            DO 481 J=I,NCVE*2
               IJ=IJ+1
               SKP1(I,J)=SKE(IJ)
               SKP1(J,I)=SKP1(I,J)
  481       CONTINUE
            IF(MIXED.EQ.1) THEN
               IJ=0
               DO 482 I=1,NDS
               DO 482 J=I,NDS
                  IJ=IJ+1
                  I1=NCVE*2+I
                  J1=NCVE*2+J
                  SKP1(I1,J1)=SKS(IJ)
                  SKP1(J1,I1)=SKP1(I1,J1)
  482          CONTINUE
               DO 483 I=1,NDS
               DO 483 J=1,NCVE*2
                  I1=NCVE*2+I
                  SKP1(I1,J)=-SKES(I,J)
                  SKP1(J,I1)=SKP1(I1,J)
  483          CONTINUE
            ENDIF  
            IF(ISKNP.NE.2) CALL SPAKUJ(A(LSK),A(LMAXA),SKP1,LM,ND)
         ELSE
	WRITE(3,*)'NLM',NLM
	CALL IWRR(LM,ND,'LM  ')
      CALL WRR(SKE,ND,'SKE ')
            IF(ISKNP.NE.2) CALL SPAKUJ(A(LSK),A(LMAXA),SKE,LM,ND)
         ENDIF 
  20      continue
  25     continue 
C
C        RASPOREDJIVANJE KONCENTRISANIH MATRICE MASA AMASC U VEKTOR ZAPS
         IF(ITER.EQ.0.AND.INDZS.GT.0)THEN
            II=3
            IF(IETYP.LE.2) II=2
            IK=0
            DO 500 I=1,NCVE
            DO 500 K=1,II
               IK=IK+1
               NJ=LM(IK)
               IF(NJ.GT.0) THEN
                  NPRNJ=NPRZ(NJ)
                  IF(NPRNJ.GT.0.AND.NPRNJ.NE.K) STOP 'NPRNJ'
                  NPRZ(NJ)=K
                  ZAPS(NJ)=ZAPS(NJ)+AMASC(I)
               ENDIF
  500       CONTINUE
         ENDIF
         IF(ITER.EQ.0.AND.INDZS.GT.0)THEN
            GRZAP=GRZAP+ZAPRE
            GRMAS=GRMAS+AMASA
         ELSE
            GRZAP=GRZAP+ZAPRE
         ENDIF
   10 CONTINUE
      IF(ITER.EQ.0.AND.INDZS.GT.0)THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NGE,GRZAP,NGE,GRMAS
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NGE,GRZAP,NGE,GRMAS
      ELSE
      WRITE(3,*) 'NGE,GRZAP,ITER',NGE,GRZAP,ITER
      ENDIF
      RETURN
C-----------------------------------------------------------------------
 2000 FORMAT(///
     111X,'GRUPA ELEMENATA',I5,' ZAPREMINA =',1PD12.5/
     111X,'GRUPA ELEMENATA',I5,'      MASA =',1PD12.5)
C-----------------------------------------------------------------------
 6000 FORMAT(///
     111X,'ELEMENT GROUP',I5,' VOLUME =',1PD12.5/
     111X,'ELEMENT GROUP',I5,'   MASS =',1PD12.5)
C-----------------------------------------------------------------------
      END
C======================================================================
C
C=======================================================================
C======================================================================= 
      SUBROUTINE JACEFG(NOS,CORD,HEFG,WT,P,PW,PR,PY,A,AM1,AX,AY,
     1           XG,YG,NCVEG,JGG,NEL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE INTERPOLACIONIH   F-JA  I  JAKOBIJANA
CE     FORM INTERPOLATION FUNCTION AND JACOBIAN MATRIX
C
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /CDEBUG/ IDEBUG
      COMMON /COMEFG/ RADIJ,NBASE,NCVP,NPEFG,NCVS,NS,LCORS,LNOC,LNOS
C
      DIMENSION NOS(NS,*),CORD(NP,*),HEFG(3,NCVEG),WT(3,*),
     1          A(NBASE,*),AM1(NBASE,*),AX(NBASE,*),AY(NBASE,*),
     2          P(NCVEG,*),PW(NCVEG,*),PR(NBASE,*),PY(NCVEG,*),
     3          PV(3,10),LJA(36),MJA(36)
C
      DIMENSION DA1(NBASE,NBASE),DA2(NBASE,NBASE),DAM11(NBASE,NBASE),
     1          DAM12(NBASE,NBASE),CI(100),C(100)            
C
      IF(IDEBUG.GT.0) PRINT *, ' JACEFG'
C
C     FORMIRANJE MATRICE P(N,M)
C
      N=NCVEG
      M=NBASE
C      NN=NOS(JGG,1)
C
C    KOEFICIJENT ALFA SE RAZLIKUJE OD AUTORA DO AUTORA  
C     
      ALF=0.4
      DO 23 II=1,N
     	   CI(II)=0.0
C
         NN1=NOS(JGG,II)
         X1=CORD(NN1,1)
         Y1=CORD(NN1,2)
C
      DO 23 JJ=1,N
         IF(II.NE.JJ)THEN 
            NN2=NOS(JGG,JJ)
            X2=CORD(NN2,1)
            Y2=CORD(NN2,2)
C
            DX=X2-X1
            DY=Y2-Y1
            RASTOJ=DSQRT(DX*DX+DY*DY)
            IF(RASTOJ.GT.CI(II))CI(II)=RASTOJ
         ENDIF
   23 CONTINUE
C
      DO 25 II=1,N
         C(II)=ALF*CI(II)
   25 CONTINUE
C
      DO 10 I=1,N
         NN=NOS(JGG,I)
         X=CORD(NN,1)
         Y=CORD(NN,2)
         CALL PVECT(X,Y,PV,M)
         DO 20 J=1,M
            P(I,J)=PV(1,J)
   20    CONTINUE
   10 CONTINUE
C
C      TEZINSKE FUNKCIJE
C
      CALL TEZFUN(CORD,NOS,WT,XG,YG,JGG,N,C,NEL,NE,NLM)
C
C     MATRICA P*W
C       
       DO 30 I=1,N
       DO 30 J=1,M
       PW(I,J)=P(I,J)*WT(1,I)
   30  CONTINUE
C
C       MATRICA A PT*PW
C
        CALL MNOZM2(A,P,PW,M,M,N)
        CALL JEDNA1(AM1,A,M*M)
C       INVERZNA MATRICA AM1
        CALL MINV(AM1,M,DD,LJA,MJA)
        CALL PVECT(XG,YG,PV,M)
C
C      IZVODI MATRICE A, MATRICA DA1 PO X, DA2 PO Y
C
      DO 80 iSS=1,M
      DO 80 MM=1,M
         DA1(iSS,MM)=0
         DA2(iSS,MM)=0
      DO 80 II=1,N
         DA1(iSS,MM)=DA1(iSS,MM)+P(II,iSS)*WT(2,II)*P(II,MM)
         DA2(iSS,MM)=DA2(iSS,MM)+P(II,iSS)*WT(3,II)*P(II,MM)
   80 CONTINUE
C   
C      IZVODI MATRICE AM1, MATRICA DAM11 PO X, DAM12 PO Y   
C
      DO 82 iSS=1,M
      DO 82 iRR=1,M
         DAM11(iSS,iRR)=0
         DAM12(iSS,iRR)=0
      DO 82 MM=1,M
      DO 82 JJ=1,M
        DAM11(iSS,iRR)=DAM11(iSS,iRR)-AM1(iSS,MM)*DA1(MM,JJ)*AM1(JJ,iRR)
        DAM12(iSS,iRR)=DAM12(iSS,iRR)-AM1(iSS,MM)*DA2(MM,JJ)*AM1(JJ,iRR)
   82	CONTINUE 
C
C      INTERPOLACIONE FUNKCIJE (XG,YG) I NJIHOVI IZVODI
C
      DO 40 II=1,N
       HEFG(1,II)=0.0D0
       HEFG(2,II)=0.0D0
       HEFG(3,II)=0.0D0
      DO 40 JJ=1,M
      DO 40 MM=1,M
         HEFG(1,II)=HEFG(1,II)+PV(1,MM)*AM1(MM,JJ)*P(II,JJ)*WT(1,II)

         HEFG(2,II)=HEFG(2,II)+PV(2,MM)*AM1(MM,JJ)*P(II,JJ)*WT(1,II)
     1                      +PV(1,MM)*DAM11(MM,JJ)*P(II,JJ)*WT(1,II)
     1                        +PV(1,MM)*AM1(MM,JJ)*P(II,JJ)*WT(2,II)

         HEFG(3,II)=HEFG(3,II)+PV(3,MM)*AM1(MM,JJ)*P(II,JJ)*WT(1,II)
     1                      +PV(1,MM)*DAM12(MM,JJ)*P(II,JJ)*WT(1,II)
     1                        +PV(1,MM)*AM1(MM,JJ)*P(II,JJ)*WT(3,II)
   40 CONTINUE 
C
C     KONTROLNA STAMPA
C       if(jgg.eq.1)then
C       call wrr3(hefg,3*N,'hefg')
C       call wrr3(PV,3*M,'PV  ')
C       call wrr3(AM1,M*M,'AM1 ')
C       call wrr3(WT,3*N,'WT  ')
C       call wrr3(P,N*M,'P   ')
C       endif 
C
         RETURN
         END
C=======================================================================
C	     
C=======================================================================
      SUBROUTINE PVECT(X,Y,P,M)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      COMMON /CDEBUG/ IDEBUG
C
       DIMENSION P(3,*)
C
      IF(IDEBUG.GT.0) PRINT *, ' PVECT'
C
CS     FORMIRANJE BAZNIH  F-JA
C
C
C     KUBNA  BAZA
C
       P(1,1)=1.0D0
       P(1,2)=X
       P(1,3)=Y
C
       P(2,1)=0.0D0
       P(2,2)=1.0D0
       P(2,3)=0.0D0
C
       P(3,1)=0.0D0
       P(3,2)=0.0D0
       P(3,3)=1.0D0
       IF(M.EQ.3) RETURN 
C
       X2=X*X
       Y2=Y*Y
       XY=X*Y
       P(1,4)=X2
       P(1,5)=XY
       P(1,6)=Y2
C
       P(2,4)=2.0D0*X
       P(2,5)=Y
       P(2,6)=0.0D0
C
       P(3,4)=0.0D0
       P(3,5)=X
       P(3,6)=2.0D0*Y
       IF(M.EQ.6) RETURN
C
       P(1,7)=X2*X
       P(1,8)=X2*Y
       P(1,9)=X*Y2
       P(1,10)=Y2*Y
C
       P(2,7)=3.0D0*X2
       P(2,8)=2.0D0*XY
       P(2,9)=Y2
       P(2,10)=0.0D0
C
       P(3,7)=0.0D0
       P(3,8)=X2
       P(3,9)=2.0D0*XY
       P(3,10)=3.0D0*Y2
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE TEZFUN(CORD,NOS,WT,X,Y,JGG,N,C,NEL,NE,NLM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /COMEFG/ RADIJ,NBASE,NCVP,NPEFG,NCVS,NS,LCORS,LNOC,LNOS
      COMMON /CDEBUG/ IDEBUG
      COMMON /MESLESS/ IGBM,ndif,idif(50),NKI,IKI(10)
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP 

C
      DIMENSION CORD(NP,*),NOS(NS,*),WT(3,*),NEL(NE,*),C(*),EDM1(100),
     1          EDM(100)
C
      IF(IDEBUG.GT.0) PRINT *, ' TEZFUN'
C
C     TEZINSKE FUNKCIJE
C
C     VARIJANTA OBLIKA TEZINSKE FUNKCIJE JE ODREDJENA PROMENLJIVOM IVARIJ
C     IVARIJ = 0 POLINOMINALNI OBLIK TEZINSKE FUNKCIJE
C     IVARIJ = 1 EKSPONENCIJALNI OBLIK TEZINSKE FUNKCIJE
C
      IVARIJ=1
      DIJMAX=0.0
C
      K1=NEL(NLM,1)
	K3=NEL(NLM,3)
	DX=CORD(K1,1)-CORD(K3,1)
	DY=CORD(K1,2)-CORD(K3,2)
	DIJ=DSQRT(DX*DX+DY*DY)
	IF(DIJ.GT.DIJMAX)DIJMAX=DIJ
C
	K1=NEL(NLM,1)
	K3=NEL(NLM,3)
	DX=CORD(K1,1)-CORD(K3,1)
	DY=CORD(K1,2)-CORD(K3,2)
	DIJ=DSQRT(DX*DX+DY*DY)
	IF(DIJ.GT.DIJMAX)DIJMAX=DIJ
C
      DMAX=DIJMAX
C
      DMAX2=DMAX*DMAX
C
      DO 10 I=1,N
      C2=C(I)*C(I)
C
      EDM(I)=DEXP(-DMAX2/C2)
      EDM1(I)=1.0-EDM(I)
C
       NN=NOS(JGG,I)
C     KONTROLNA STAMPA
C	 if(jgg.eq.1)then
C	WRITE(3,*)'NN,I,X,Y ',NN,I,X,Y
C      ENDIF
       IF(ndif.eq.0)go to 348
        do 11 ii=1,ndif
         IF(NN.ne.IDIF(II))go to 348
391        ctc1=CORD(idif(ii),1)
           ctc2=CORD(idif(ii),2)
C
       DXc=X-ctc1
       DYc=Y-ctc2
       DI2c=DXc*DXc+DYc*DYc
       DX=X-CORD(NN,1)
       DY=Y-CORD(NN,2)
       DI2=DX*DX+DY*DY
       DXc1=CORD(nn,1)-ctc1
       DYc1=CORD(nn,2)-ctc2
       DI2c1=DXc1*DXc1+DYc1*DYc1
       s0=dsqrt(di2)
       s2=dsqrt(di2c)
       s1=dsqrt(di2c1)
       DII=((s1+s2)/(s0))*(s1+s2)
	 DII2=DII*DII
       EDI=DEXP(-DII2/c2)
       EC2=2.0*EDI/c2
C
       WT(1,I)=(EDI-EDM(I))/EDM1(I) 
       DIDX = 2*((s1+s2)/(s0))*((X-ctc1)/(s2))-((s1+s2)/(s0))**2*
     1   ((-X+CORD(nn,1))/(s0)) 
       DIDY = 2*((s1+s2)/(s0))*((y-ctc2)/(s2))-((s1+s2)/(s0))**2*
     1   ((-y+CORD(nn,2))/(s0))
        WT(2,I)=-EC2*DIDX*DII/EDM1(I)
        WT(3,I)=-EC2*DIDY*DII/EDM1(I)
11	continue
        go to 10
348    DX=X-CORD(NN,1)
       DY=Y-CORD(NN,2)
       DI2=DX*DX+DY*DY
	 DI=DSQRT(DI2)
       EDI=DEXP(-DI2/c2)
       EC2=2.0*EDI/c2
C
      IF(IVARIJ.EQ.0)THEN
        IF(DI.LE.DMAX)THEN
          WT(1,I)=1-(6*(DI/DMAX)**2)+(8*(DI/DMAX)**3)-(3*(DI/DMAX)**4)
          WT(2,I)=1-(12/DMAX2)*(-1+2*(DI/DMAX)-(DI/DMAX)**2)*DX
          WT(3,I)=1-(12/DMAX2)*(-1+2*(DI/DMAX)-(DI/DMAX)**2)*DY
	  ELSE
C     KONTROLNA STAMPA
C	 if(jgg.eq.1)then
C	WRITE(3,*)'DI,DMAX',DI,DMAX
C      ENDIF        
CV          WT(1,I)=0         
CV          WT(2,I)=0
CV          WT(3,I)=0
        ENDIF
      ELSE
 	  IF(DI.LE.DMAX)THEN
          WT(1,I)=(EDI-EDM(I))/EDM1(I)         
          WT(2,I)=-EC2*DX/EDM1(I)
          WT(3,I)=-EC2*DY/EDM1(I)
        ELSE 
C     KONTROLNA STAMPA
C	 if(jgg.eq.1)then
C	WRITE(3,*)'DI,DMAX',NN,I,X,Y
C      ENDIF
C 
CV          WT(1,I)=0         
CV          WT(2,I)=0
CV          WT(3,I)=0
	  ENDIF
	ENDIF

   10 CONTINUE
C        KONTROLNA STAMPA
C       if(jgg.eq.1)then
C       call wrr3(WT,3*N,'WT0 ')
C       endif 

      RETURN
      END  
C======================================================================
      SUBROUTINE BETBEF(H,BLT,NOS,NCVE,X1,IETYP,jg)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     MATRICE BLT (BE TRANSPONOVANO)
CE     MATRIX  BLT ( B TRANSPOSED )
C
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /COMEFG/ RADIJ,NBASE,NCVP,NPEFG,NCVS,NS,LCORS,LNOC,LNOS
      DIMENSION H(3,*),BLT(KK,*),NOs(NS,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' BETBEF'
C      CALL IWRR(NOP,NS*ND,'NOSB')
      JJ=-1  
      DO 40 I=1,NCVS
      JJ=JJ+2
      IF(NOS(NLM,I).EQ.0) GO TO 40
      BLT(1,JJ)=H(2,I)
      BLT(3,JJ)=H(3,I)
      BLT(2,JJ+1)=BLT(3,JJ)
      BLT(3,JJ+1)=BLT(1,JJ)
      IF(IETYP.NE.1) GO TO 40
      IF(X1.GT.1.0D-8) GO TO 30
      BLT(4,JJ)=BLT(1,JJ)
      GO TO 40
   30 BLT(4,JJ)=H(I,1)/X1
   40 CONTINUE
      RETURN
      END
