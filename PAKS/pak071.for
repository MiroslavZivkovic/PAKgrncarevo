C=======================================================================
C
C=======================================================================
      SUBROUTINE TROUGO(SK,SKG,MAXA,NCV,NWP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION SK(*),SKG(*),MAXA(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' TROUGO'
      IJ=0
      DO 10 I=1,NCV
      DO 10 J=I,NCV
         IJ=IJ+1
         JED=MAXA(J)+J-I
         JED1=MAXA(J+1)
         IF(JED.LT.JED1) THEN
            SKG(IJ)=SK(JED-NWP)
         ELSE
            SKG(IJ)=0.0D0
         ENDIF
   10 CONTINUE
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE SPAKUD(RTDT,RTG,LM,JED)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION RTDT(*),RTG(*),LM(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' SPAKUD'
      DO 10 I=1,JED
         JED1=LM(I)
         RTDT(JED1)=RTDT(JED1)+RTG(I)
   10 CONTINUE
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE SPAKUU(RTDT,RTG,LM,JED)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      DIMENSION RTDT(*),RTG(*),LM(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' SPAKUU'
      DO 10 I=1,JED
         JED1=LM(I)
         RTG(I)=RTDT(JED1)
   10 CONTINUE
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE LEVSTR(NPODS)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO FORM LINEAR EFFECTIVE SYSTEM STIFFNESS MATRIX
CS.    P R O G R A M
CS.        ZA FORMIRANJE LINEARNE MATRICE LEVE STRANE
C .
C .        KE = K + A0*M + A1*C
C .
CE.    M A T R I C E S
CE.       KE - LINEAR EFFECTIVE SYSTEM STIFFNESS MATRIX
CE     L*D*LT- FACTORIZED EFFECTIVE SYSTEM STIFFNESS MATRIX
CE.        K - LINEAR SYSTEM STIFFNESS MATRIX
CE.        M - SYSTEM MASS MATRIX
CE.        C - SYSTEM DAMP MATRIX
CS.    M A T R I C E
CS.       KE - LINEARNA EFEKTIVNA MATRICA KRUTOSTI NA JEDINICI - 7
CS.    L*D*LT- FAKTORIZOVANA EFEKTIVNA MATRICA KRUTOSTI NA JEDINICI - 10
CS.        K - LINEARNA MATRICA KRUTOSTI NA JEDINICI - 4
CS.        M - MATRICA MASA NA JEDINICI - 11
CS.        C - MATRICA PRIGUSENJA NA JEDINICI - 11
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /GRUPEE/ NGEL,NGENL,LGEOM,NGEOM,ITERM
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /DINAMI/ IMASS,IDAMP,PIP,DIP,MDVI
      COMMON /EDPCON/ A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10
      COMMON /DUPLAP/ IDVA
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /BLOCKS/ NBMAX,IBLK,NBLOCK,LMNQ,LICPL,LLREC,KC,LR
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /RESTAR/ TSTART,IREST
      COMMON /SKDISK/ ISKDSK
      COMMON /MPOINC/ MMP,NMPC,NEZAV,LCMPC,LMPC,NEZA1
      COMMON /SCRATC/ ISCRC
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /CDEBUG/ IDEBUG
      COMMON /DRAKCE/ IDRAKCE,NELUK,NZERO,NEED1,NEED2,NEED3,NNZERO
     1                ,IROWS,LAILU,LUCG,LVCG,LWCG,LPCG,LRCG
      COMMON /GEORGE/ TOLG,ALFAG,ICCGG
      COMMON /NEWMARK/ ALFAM,BETAK,DAMPC,NEWACC
      INCLUDE 'mpif.h'
      integer myid, ierr
      DIMENSION NPODS(JPS1,*)
C
      if(jedn.le.30) CALL WRR6(A(LSK),NWK,'SKul')
      CALL MPI_COMM_RANK(MPI_COMM_WORLD,myid,ierr)
      IF (myid.ne.0) goto 30
      IF(IDEBUG.GT.0) PRINT *, ' LEVSTR'
      IF(NDIN.EQ.0) GO TO 5
      IF(MDVI.EQ.3) GO TO 9
C
CE    READ LINEAR MATRIX K
CS    UCITAVANJE LINEARNE MATRICE K
C
C    5 IF(NGEL.EQ.0) GO TO 10
    5 IF(NGEL.EQ.0) GO TO 9
      IF(KOR.GT.1) THEN
         NUL=NWK
         IF(NBLOCK.GT.1) NUL=KC
         CALL CLEARB(A(LSK),A(LMAXA),A(LMNQ),A(LLREC)
     1                  ,NBLOCK,LR,IBLK,NUL)
         OPEN (ISCRC,FILE='ZSKLIN',FORM='UNFORMATTED',
     1            STATUS='UNKNOWN')
         REWIND ISCRC
         LLM =LRAD
         LSKE=LLM+100
         if (IABS(ICCGG).EQ.1) then
           if (iccgg.eq.1) then
             CALL ISPAK(A(LSK),A(IROWS),A(LMAXA),A(LSKE),A(LLM),ND,1,
     &               A(LMNQ),A(LLREC),NBLOCK,LR,IBLK,A(LCMPC),A(LMPC))
           else
             CALL ISPAKG(A(LSK),A(IROWS),A(LMAXA),A(LSKE),A(LLM),ND,1,
     &               A(LMNQ),A(LLREC),NBLOCK,LR,IBLK,A(LCMPC),A(LMPC))
           endif
         else
           CALL SPAKUA(A(LSK),A(LMAXA),A(LSKE),A(LLM),ND,1,
     &              A(LMNQ),A(LLREC),NBLOCK,LR,IBLK,A(LCMPC),A(LMPC))
         endif
c         CALL SPAKUA(A(LSK),A(LMAXA),A(LSKE),A(LLM),ND,1,
c     &              A(LMNQ),A(LLREC),NBLOCK,LR,IBLK,A(LCMPC),A(LMPC))
         CLOSE (ISCRC,STATUS='KEEP')
      ENDIF
cc      CALL RSTAZK(NPODS,LSK,35)
      if(jedn.le.30) CALL WRR6(A(LSK),NWK,'K07U')
        CALL RSTAZK(NPODS,LSK,35)
      if(jedn.le.30) CALL WRR6(A(LSK),NWK,'K07R')
      GO TO 10
    9 NUL=NWK
      IF(NBLOCK.GT.1) NUL=KC
      CALL CLEARB(A(LSK),A(LMAXA),A(LMNQ),A(LLREC)
     1                  ,NBLOCK,LR,IBLK,NUL)
C
CE    READ LINEAR MATRIX M FROM DISK
CS    UCITAVANJE LINEARNE MATRICE M SA DISKA
C
   10 IF(NDIN.EQ.0) GO TO 30
      NWM=NWK
      NWD=NWK
      IF(IMASS.EQ.2) NWM=JEDN
      IF(IDAMP.EQ.2) NWD=JEDN
      LSKP=LSK+NWK*IDVA
CZILE      IF(IREST.EQ.1.AND.METOD.EQ.-1) RETURN
      write(3,*) 'iskdsk,alfam,betak', iskdsk,alfam,betak
      IF(IMASS.EQ.1) CALL RSTAZK(NPODS,LSKP,54)
      IF(IMASS.EQ.2) CALL RSTAZ(NPODS,LSKP,54)
        if(jedn.le.30) CALL WRR6(A(LSK),NWK,'SKLS')
        if(jedn.le.30) CALL WRR6(A(LSKP),NWM,'MASA')
      IF(IDAMP.EQ.3) THEN
         A0M=A0+A1*ALFAM
         A0K=1.D0+A1*BETAK
         IF(IMASS.EQ.1) CALL ZBIRAB(A(LSK),A(LSKP),A0K,A0M,NWK)
         IF(IMASS.EQ.2) CALL ZBIRKD(A(LSK),A(LSKP),A0K,A0M,NWM,A(LMAXA))
      ELSE
         IF(IMASS.EQ.1) CALL ZBIRM(A(LSK),A(LSKP),A0,NWK)
         IF(IMASS.EQ.2) CALL ZBIRKM(A(LSK),A(LSKP),A0,NWM,A(LMAXA))
      ENDIF
C
CE    READ LINEAR MATRIX C FROM DISK
CS    UCITAVANJE LINEARNE MATRICE C SA DISKA
C
      IF(IDAMP.EQ.0) GO TO 20
      IF(IDAMP.EQ.1) CALL RSTAZK(NPODS,LSKP,56)
      IF(IDAMP.EQ.2) CALL RSTAZ(NPODS,LSKP,56)
      if(idamp.ne.3.and.jedn.le.30) CALL WRR6(A(LSKP),NWD,'D07R')
      IF(IDAMP.EQ.1) CALL ZBIRM(A(LSK),A(LSKP),A1,NWD)
      IF(IDAMP.EQ.2) CALL ZBIRKM(A(LSK),A(LSKP),A1,NWD,A(LMAXA))
C
CE    STORE LINEAR EFFECTIVE MTRIX ON UNIT 7: KE = K + A0*M + A1*C
CS    ZAPISIVANJE LINEARNE EFEKTIVNE MATRICE : KE = K + A0*M + A1*C
C
   20 CALL WSTAZK(NPODS,LSK,58)
      write(3,*) 'a0,a1',a0,a1
      if(jedn.le.30) CALL WRR6(A(LSK),NWK,'ZBIR')
c za proveru
c	LDUM=1000001
c      IF(IMASS.NE.2) CALL RSTAZK(NPODS,LDUM,54)
c      CALL RSTAZK(NPODS,LDUM,54)
c      CALL WRR6(A(LDUM),NWK,'M   ')
c      IF(IMASS.NE.2) CALL RSTAZK(NPODS,LDUM,58)
c      CALL RSTAZK(NPODS,LDUM,58)
c      CALL WRR6(A(LDUM),NWK,'ME  ')

CSKDISK      LMAX=LSKP
   30 CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
      CALL MPI_BCAST(NGENL,1,MPI_INTEGER,0,MPI_COMM_WORLD,ierr)
      CALL MPI_BCAST(NZADP,1,MPI_INTEGER,0,MPI_COMM_WORLD,ierr)
      IF(NGENL.GT.0.OR.NZADP.GT.0) RETURN
CZILE      IF(IREST.EQ.1.AND.METOD.EQ.-1) RETURN

C
CE    FACTORIZATION OF LINEAR EFFECTIVE SYSTEM STIFFNESS MATRIX - KE
CE    TRIANGULAR FORM: KE = L*D*LT
CS    FAKTORIZACIJA LINEARNE EFEKTIVNE MATRICE: KE = K + A0*M + A1*C
CS    SVODJENJE NA TROUGAONI OBLIK: KE = L*D*LT
C
      CALL RESEN(A(LSK),A(LRTDT),A(LMAXA),JEDN,1)
      IF (myid.eq.0) THEN
C
CE       STORE TRIANGULARIZE MATRIX ON UNIT 10 : KE = L*D*LT
CS       ZAPISIVANJE TROUGAONIZOVANE MATRICE NA 10 : KE = L*D*LT
C
C        IF(METOD.EQ.-1) ISKDSK=1
         CALL WSTAZK(NPODS,LSK,60)
C        ISKDSK=0
         IF(METOD.EQ.-1.AND.NBLOCK.EQ.1) CALL WRITED(A(LSK),NWK,ILDLT)
      ENDIF
      CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE DESNAL(NPODS,KOJPAK)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM LINEAR PART OF LOAD VECTOR
CS.   P R O G R A M
CS.      ZA FORMIRANJE KONSTANTNOG DELA VEKTORA OPTERECENJA
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ANALIZ/ LINEAR,ITERGL,INDDIN
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /GRUPEE/ NGEL,NGENL,LGEOM,NGEOM,ITERM
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /ZAPSIL/ UBXYZ(3,10),NVFUB(10),INDZS,LZAPS,LNPRZ
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /POSTPR/ LNDTPR,LNDTGR,NBLPR,NBLGR,INDPR,INDGR
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /TEMPCV/ LTECV,ITEMP
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /MASINA/ INDPC,ICRTA
      COMMON /DUPLAP/ IDVA
      COMMON /CERIND/ ICERNE,ICERNM
      COMMON /STAMKO/ ISTKO,NCVPR,LNCVP,LNCVZ,
     +                ISTEM,ISTVN,ISTSI,ISTDE,ISTNA
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /ITERBR/ ITER
      COMMON /FVREME/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON /SRPSKI/ ISRPS
      COMMON /CDEBUG/ IDEBUG
      DIMENSION NPODS(JPS1,*)
C
      IF(IDEBUG.GT.0) PRINT *, ' DESNAL'
C
CE    SET DISK ON ZERO
CS    POSTAVLJANJE DISKA  NA NULU
C
      CALL NULDIS(NPODS)
C
CE    READ VECTOR OF CONCENTRATED VOLUME FORCES AT TIME T+DT
CS    UCITAVANJE VEKTORA KONCENTRISANIH ZAPREMINSKIH SILA U TRENUTKU T+DT
C  ZA INSTITUT CERNE!!
C
      IF(ICERNE.GT.0.AND.ICERNM.EQ.0) THEN
         NDTC=NDT-ICERNE
         IF(KOR.GT.NDTC) CALL READD(A(LRTDT),JEDN,ISILE)     
      ENDIF
      IF(ICERNE.GT.0.AND.ICERNM.GT.0) THEN
         CALL TABF(A(LTABFT),A(LNTFT),ICERNM,NTABFT,VREME,FT,NTMX,IND)
        WRITE(*,*) 'FT',FT
         IF(IND.GT.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) ICERNM,VREME
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) ICERNM,VREME
            STOP
         ENDIF
         REWIND ISILE
         CALL READD(A(LRTDT),JEDN,ISILE)     
         CALL JEDNAK(A(LRTDT),A(LRTDT),FT,JEDN)
      ENDIF
C
CE    CONCENTRATED FORCES OF FLUID-STRUCTURE INTERACTION AT TIME T+DT
CS    KONCENTRISANE SILA OD INTERAKCIJE FLUID-STRUKTRUA U TRENUTKU T+DT
C     VAZI ZA KRVNE SUDOVE, NE ZA CERNI
C
      IF(KOJPAK.EQ.3) THEN
         CALL FSINT(A(LID),A(LRTDT),A(LELCV),NPI,ICVEL)
      IF(NBLGR.GE.0.AND.ITER.EQ.0.AND.ISTSI.NE.-1.AND.NZADP.EQ.0)
     1CALL STAGP1(A(LRTDT),A(LID),A(LCVEL),ICVEL,NP,IGRAF,44,
     +            A(LNCVP),NCVPR)
      ENDIF
C      
      IF(ICERNE.GT.0.OR.KOJPAK.EQ.3) THEN
         IF(NBLGR.GE.0.AND.ITER.EQ.0.AND.ISTSI.NE.-1) THEN
            CALL STAGP1(A(LRTDT),A(LID),A(LCVEL),ICVEL,NP,IGRAF,44,
     +                  A(LNCVP),NCVPR)
C     FILTRATION FORCE      
            CALL STAU09(A(LRTDT),A(LID),A(LCVEL),ICVEL,NP,49,61,
     +                  A(LNCVP),NCVPR)
	   ENDIF
      ENDIF
C
CE    FORM VECTOR OF CONCENTRATED FORCES AT TIME T+DT
CS    FORMIRANJE VEKTORA KONCENTRISANIH SILA U TRENUTKU T+DT
C
      IF(NCF.NE.0) THEN
         LMAX13=NPODS(JPBR,34)-1
         CALL FORMSS
         IF(NBLGR.GE.0.AND.ITER.EQ.0.AND.KOR.EQ.1)
     1   CALL STAGKS(A(LRTDT),A(LID),A(LCVEL),ICVEL,NP,IGRAF,
     +               A(LNCVP),NCVPR)
C         IF(NBLGR.GE.0.AND.ITER.EQ.0.AND.KOR.EQ.1)
C     1   CALL STAU09(A(LRTDT),A(LID),A(LCVEL),ICVEL,NP,49,41,
C     +               A(LNCVP),NCVPR)
      ENDIF
C
CE    FORM VECTOR OF NODAL PRESSURES AT TIME T+DT FOR THIN WALLED BEAM
CS    FORMIRANJE VEKTORA CVORNIH PRITISAKA U TRENUTKU T+DT
C
      IF(NPGR.GT.0) THEN 
         LMAX13=NPODS(JPBR,89)-1
         CALL FORMCP
      ENDIF
C
CE    FORM VECTOR OF NODAL TEMPERATURES AT TIME T+DT
CS    FORMIRANJE VEKTORA CVORNIH TEMPERATURA U TRENUTKU T+DT
C
      IF(NTEMP.GT.0) THEN 
         LMAX13=NPODS(JPBR,62)-1
         CALL FORMCT
      ENDIF
      IF(NTEMP.LT.0) CALL DISKCT(A(LTECV),A(LELCV),NPI,NPA,ICVEL)
      IF(NBLGR.GE.0.AND.NTEMP.NE.0.AND.ISTEM.NE.-1)
     1 CALL STAGTE(A(LTECV),A(LCVEL),ICVEL,NP,IGRAF,A(LNCVP),NCVPR)
      IF(NBLGR.GE.0.AND.NTEMP.NE.0.AND.ISTEM.NE.-1)
     1 CALL STAUTE(A(LTECV),A(LCVEL),ICVEL,NP,49,31,A(LNCVP),NCVPR)
C
CE    FORM VECTOR OF GEOMETRICAL LINEAR PRESSURES AT TIME T+DT
CS    FORMIRA. VEKTORA PRITISAKA GEOMETRIJSKI LINEARNIH U TRENUTKU T+DT
C
      IF(NGEOM.EQ.0.OR.METOD.GT.5) CALL OPTLIN(NPODS)
C
      CALL WSTAZ(NPODS,LRTDT,38)
C
CE    FORM EFFECTIVE VECTOR OF RIGHT-HAND-SIDE FOR DYNAMICS
CS    FORMIRANJE EFEKTIVNOG VEKTORA DESNE STRANE USLED DINAMIKE
C     RTDTEF=RTDT+RTDTM+RTDTC
C
C         CALL WRR(A(LRTDT),JEDN,'RPRF')
      IF(NDIN.NE.0.AND.ITERGL.EQ.0) CALL FORMEF
C-----------------------------------------------------------------------
 2000 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     1' VREMENSKA FUNKCIJA BROJ =',I5/
     2' ARGUMENT VREME =',1PD12.4)
C-----------------------------------------------------------------------
 6000 FORMAT(///' ARGUMENT IS OUT OF PRESCRIBED CURVE RANGE'/
     1' TIME FUNCTION NO. =',I5/
     2' ARGUMENT TIME  =',1PD12.4)
C-----------------------------------------------------------------------
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE UKUPNA
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM VECTOR OF TOTAL DISPLACEMENTS
CS.   P R O G R A M
CS.      ZA FORMIRANJE UKUPNIH POMERANJA
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /PROBAS/ IILS
      COMMON /GREDE4/ IPRIR,INDGR4
      COMMON /UPRIRI/ LUPRI
      COMMON /GRUPER/ LIGRUP
      COMMON /KONTKT/ ICONT,NEQC,NEQ,NWKC,LMAXAC,LRCTDT
      COMMON /JCERNI/ LKOLKO,ICERNI
      COMMON /ITERBR/ ITER
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /CDEBUG/ IDEBUG
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ODUZPOM/ KODUZ
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
C
      IF(IDEBUG.GT.0) PRINT *, ' UKUPNA'
      IILS=0
CE    INCREMENT OF DISPLACEMENTS
CS    PRIRASTAJ POMERANJA
      CALL JEDNA1(A(LUPRI),A(LRTDT),JEDN)
CE    AZURIRANJE KONTAKTNIH SILA
CS    ARANGE CONTACT FORCES
      IF(ICONT.NE.0) CALL CONCOR(A(LIGRUP),9)
CE    ROTATION OF UNIT NODAL VECTORS FOR SHELL AND BEAM ELEMENTS
CS    ROTIRANJE JEDINICNIH VEKTORA CVOROVA
      IF(JPS.GT.1.AND.JPBR.EQ.JPS1) THEN
      ELSE
         CALL ROTDRV(1)
         CALL REWDRV
      ENDIF
CE    READ PREVIOUS INCREMENTS OF DISPLACEMENTS
CS    CITANJE PRETHODNOG PRIRASTAJA POMERANJA
      IF(ICERNI.EQ.1) THEN
         CALL RSTAZ(A(LIPODS),LRTDT,47)
C        STAMPANJE CVOROVA KOJI DIVERGIRAJU
         IF(ITER.GT.0.AND.KONVE.EQ.1)
     +   CALL DIVCGR(A(LUPRI),A(LRTDT),A(LKOLKO),A(LID),ITER) 
      ENDIF
CE    STORE INCREMENTS OF DISPLACEMENTS
CS    CUVANJE PRIRASTAJA POMERANJA
      CALL WSTAZ(A(LIPODS),LUPRI,47)
CE    READ TOTAL DISPLACEMENTS IN TIME (T)
CS    UKUPNA POMERANJA U TRENUTKU (T)
      CALL RSTAZ(A(LIPODS),LRTDT,52)
CE    TOTAL DISPLACEMENTS IN TIME (T+DT),
CE    (ADD DISPLACEMENT INCREMENTS FOR CURRENT ITERATION)
CS    UKUPNA POMERANJA U TRENUTKU (T+DT)
      CALL ZBIRM1(A(LRTDT),A(LUPRI),JEDN)
CE    STORE TOTAL DISPLACEMENTS AT TIME (T+DT)
CS    ZAPISIVANJE POMERANJA NA DISK
      CALL WSTAZ(A(LIPODS),LRTDT,52)
CR
CR    ZAPISIVANJE POMERANJA ZA ODUZIMANJE
      IF (KOR.EQ.KODUZ) THEN
        CALL WSTAZ(A(LIPODS),LRTDT,92)
      ENDIF
C....  KOREKCIJA KOORDINATA ZA U.L.
C      IF(LUL.EQ.1)
C     1 CALL ULCOR(A(LCORUL),A(LCORD),A(LRTDT),A(LID),NP)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE NULDIS(NPODS)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      SET DISKS ON ZERO
CS.   P R O G R A M
CS.      POSTAVLJANJE DISKOVA NA NULU
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DINAMI/ IMASS,IDAMP,PIP,DIP,MDVI
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /SOPSVR/ ISOPS,ISTYP,NSOPV,ISTSV,IPROV,IPROL
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /DUPLAP/ IDVA
      COMMON /ITERBR/ ITER
      COMMON /GREDE4/ IPRIR,INDGR4
      COMMON /UPRIRI/ LUPRI
      COMMON /NELINE/ NGENN
      COMMON /CDEBUG/ IDEBUG
      DIMENSION NPODS(JPS1,*)
C
      IF(IDEBUG.GT.0) PRINT *, ' NULDIS'
      CALL CLEAR(A(LRTDT),JEDN)
      CALL CLEAR(A(LUPRI),JEDN)
C      IF(NGENN.GT.0) CALL CLEAR(A(LUPRI),JEDN)
      IF(ISOPS.GT.0) GO TO 15
      IF(NDIN.EQ.0) GO TO 10
      IF(MDVI.NE.1) GO TO 10
   15 CALL WSTAZ(NPODS,LRTDT,53)
   10 CALL WSTAZ(NPODS,LRTDT,38)
      IF(INDGR4.EQ.1.AND.KOR.EQ.1.AND.ITER.EQ.0) THEN
         CALL WSTAZ(NPODS,LRTDT,45)
         CALL WSTAZ(NPODS,LRTDT,47)
      ENDIF
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE OPTLIN(NPODS)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM VECTOR OF GEOMETRY LINEAR PRESSURES AT TIME T+DT
CS.   P R O G R A M
CS.      FORM. VEKTORA PRITISAKA GEOMETRIJSKI LINEARNIH U TRENUTKU T+DT
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /CDEBUG/ IDEBUG
      DIMENSION NPODS(JPS1,*)
C
      IF(IDEBUG.GT.0) PRINT *, ' OPTLIN'
C
CE    FORM VECTOR OF PRESSURE OF 2/D ELEMENAT AT TIME T+DT
CS    FORMIRANJE VEKTORA PRITISKA  2/D ELEMENATA  U TRENUTKU T+DT
C
      IF(NPP2.NE.0) THEN 
         LMAX13=NPODS(JPBR,63)-1
         CALL FORMP2
      ENDIF
C
CE    FORM VECTOR OF PRESSURE OF 3/D ELEMENAT AT TIME T+DT
CS    FORMIRANJE VEKTORA PRITISKA  3/D ELEMENATA  U TRENUTKU T+DT
C
      IF(NPP3.NE.0) THEN
         LMAX13=NPODS(JPBR,64)-1
         CALL FORMP3
      ENDIF
C
CE    FORM VECTOR OF PRESSURE OF AXISYMMETRIC SHELL ELEMENAT
CS    FORMIRANJE VEKTORA PRITISKA  OSNOSIM. LJUSKE U TRENUTKU T+DT
C
      IF(NPLJ.NE.0) THEN 
         LMAX13=NPODS(JPBR,65)-1
         CALL FORMP7
      ENDIF
C
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE FORMSS
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM VECTOR OF CONCENTRATED FORCE AT TIME T+DT
CS.   P R O G R A M
CS.      ZA FORMIRANJE VEKTORA KONCENTRISANIH SILA U TRENUTKU T+DT
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DUPLAP/ IDVA
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /SOPSVR/ ISOPS,ISTYP,NSOPV,ISTSV,IPROV,IPROL
      COMMON /DINAMI/ IMASS,IDAMP,PIP,DIP,MDVI
      COMMON /EITEST/ VRKAS,FREKV,AMPLI
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' FORMSS'
      IF(NCF) 10,20,30
   10 CALL SILAAN(A(LRTDT),VREME,VRKAS,FREKV,AMPLI)
      CALL WSTAZ(A(LIPODS),LRTDT,38)
      IF(NDIN.EQ.0) RETURN
      IF(MDVI.NE.1) RETURN
      VREM=VREME-DT
      CALL SILAAN(A(LRTDT),VREM,VRKAS,FREKV,AMPLI)
      CALL WSTAZ(A(LIPODS),LRTDT,53)
      RETURN
C
   30 LFFUG = LRAD
      NCF2=2*NCF
      LNFUG = LFFUG + NCF2*IDVA
      LNFUJ = LNFUG + NCF
      LMAX  = LNFUJ + NCF
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      NPRO=LMAX-LRAD
      CALL DELJIV(NPRO,2,INDL)
      IF(INDL.EQ.1) NPRO=NPRO+1
C
      CALL READDD(A(LFFUG),NPRO/IDVA,IPODS,LMAX13,LDUZI)
      CALL FTDTRC(A(LRTDT),A(LNFUJ),A(LNFUG),A(LFFUG),VREME,NCF)
      IF(ISOPS.GT.0.AND.KOR.GT.1) GO TO 15
      IF(NDIN.EQ.0) RETURN
      IF(MDVI.NE.1) RETURN
   15 VREM = VREME-DT
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
      LPOMS=LMAX
      LMAX = LPOMS+JEDN*IDVA
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      CALL RSTAZ(A(LIPODS),LPOMS,53)
      CALL FTDTRC(A(LRTDT),A(LNFUJ),A(LNFUG),A(LFFUG),VREME,NCF)
      CALL FTDTRC(A(LPOMS),A(LNFUJ),A(LNFUG),A(LFFUG),VREM,NCF)
      CALL WSTAZ(A(LIPODS),LPOMS,53)
   20 RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE FTDTRC(RTDT,NFUJ,NFUG,FFUG,VREME,NCF)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO CALCULATE CONCENTRATED FORCES IN NODES AT TIME TDT
CS.   P R O G R A M
CS.      ZA RACUNANJE KONCENTRISANIH SILA U CVOROVIMA U TDT
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /FVREME/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /CDEBUG/ IDEBUG
      DIMENSION RTDT(*),NFUJ(*),NFUG(*),FFUG(NCF,*)
C
      IF(IDEBUG.GT.0) PRINT *, ' FTDTRC'
C
C      IF(NCF.LT.25) WRITE(IZLAZ,*) 'NJ,NF,RTDT(NJ),FAK,FT,VREM,FPOM'
      DO 10 I=1,NCF
         NJ = NFUJ(I)
         IF(NJ.EQ.0) GO TO 10
         NF = NFUG(I)
         FAK = FFUG(I,1)
         FPOM= FFUG(I,2)
         VREM=VREME-FPOM
C PROVERITI DA LI TREBA UKLJUCITI I VREM=0 ?
         IF(VREM.LT.1.D-10) GO TO 10
         CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREM,FT,NTMX,IND)
         IF(IND.GT.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NF,VREME
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NF,VREME
            STOP
         ENDIF
         RTDT(NJ) = RTDT(NJ)+FAK*FT
C         IF(NCF.LT.25) WRITE(IZLAZ,5000) NJ,NF,RTDT(NJ),FAK,FT,VREM,FPOM
   10 CONTINUE
      RETURN
C 5000 FORMAT(2I5,5(1PD12.5))
C-----------------------------------------------------------------------
 2000 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     1' VREMENSKA FUNKCIJA BROJ =',I5/
     2' ARGUMENT VREME =',1PD12.4)
C-----------------------------------------------------------------------
 6000 FORMAT(///' ARGUMENT IS OUT OF PRESCRIBED CURVE RANGE'/
     1' TIME FUNCTION NO. =',I5/
     2' ARGUMENT TIME  =',1PD12.4)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE FORMCT
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM POINTERS OF NODAL TEMPERATURE
CS.   P R O G R A M
CS.      ZA FORMIRANJE REPERA ZA CVORNE TEMPERATURE
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DUPLAP/ IDVA
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /TEMPCV/ LTECV,ITEMP
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' FORMCT'
      LFFUG = LRAD
      LNFUG = LFFUG + NTEMP*IDVA
      LNFUJ = LNFUG + NTEMP
      LMAX  = LNFUJ + NTEMP
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      NPRO=LMAX-LRAD
      CALL DELJIV(NPRO,2,INDL)
      IF(INDL.EQ.1) NPRO=NPRO+1
C
      CALL READDD(A(LFFUG),NPRO/IDVA,IPODS,LMAX13,LDUZI)
      CALL CLEAR(A(LTECV),NP)
      CALL FTDTCT(A(LTECV),A(LNFUJ),A(LNFUG),A(LFFUG),VREME,NTEMP)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE DISKCT(TEMP,NELCV,NPI,NPA,ICVEL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO READING VECTORS OF NODAL TEMPERATURE AT TIME T+DT
CS.   P R O G R A M
CS.      ZA UCITAVANJE VEKTORA CVORNIH TEMPERATURA U TRENUTKU T+DT
C .
C ......................................................................
C
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /TEMPCV/ LTECV,ITEMP
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /CDEBUG/ IDEBUG
      COMMON /SRPSKI/ ISRPS
      COMMON /DJERDAP/ IDJERDAP
      COMMON /MODELT/ TEMPC0,ALFAC,INDTEM
      DIMENSION TEMP(*),NELCV(*)     
C
      IF(IDEBUG.GT.0) PRINT *, ' DISKCT'
      IF (IDJERDAP.EQ.0) THEN
      OPEN(ITEMP,FILE='ZITEMP',STATUS='UNKNOWN',FORM='UNFORMATTED',
     1 ACCESS='SEQUENTIAL')
      REWIND ITEMP
      READ(ITEMP) NZAP
      DO 10 I=1,NZAP
         READ(ITEMP,END=100,ERR=200) VREM,(TEMP(J),J=1,NP)
         VRE=VREM-VREME
         IF(DABS(VRE).LT.1.0D-05) THEN 
            CLOSE(ITEMP,STATUS='KEEP')
            RETURN
         ENDIF
   10 CONTINUE
      ELSE
         DO I=1,NP
            TEMP(I)=TEMPC0
         ENDDO
         IF(KOR.EQ.NDT) THEN
      OPEN(ITEMP,FILE='ZITEMP',STATUS='UNKNOWN',FORM='FORMATTED',
     1 ACCESS='SEQUENTIAL')
	    NPT3D1=NP
            READ(ITEMP,1011) NPT3D1
	    DO 20 II=1,NPT3D1
C     MORA SVAKA LAMELA DA IMA PREKO 100000 CVOROVA !!! OPASNO
C           if(np.gt.99999) then
	           READ(ITEMP,1011) NN,TEMP1
C	         else   
C              READ(ITEMP,1010) NN,TEMP1
C           endif
               IF(ICVEL.EQ.0) THEN
                  NI=NN
                  IF(NN.LE.0.OR.NN.GT.NP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200) NN
                     STOP ' PROGRAM STOP - PAK071 - DISKCT'
                  ENDIF
               ELSE
                  N=NN-NPI+1
                  NI=NELCV(N)
                  IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200) NN
                     STOP ' PROGRAM STOP - PAK071 - DISKCT'
                  ENDIF
               ENDIF
C
               TEMP(NI)=TEMP1
  20        CONTINUE
         ENDIF
C  
        RETURN
      ENDIF     
C
  100 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) ITEMP,VREME
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) ITEMP,VREME
      STOP
C
  200 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) ITEMP,VREME
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) ITEMP,VREME
      STOP
C
 1010   FORMAT(I5,3E13.5)
 1011   FORMAT(I10,3E13.5)
C-----------------------------------------------------------------------
 2000 FORMAT(//' NA JEDINICI ITEMP =',I5,' NEMA ZAPISANIH TEMPERATURA U
     1VREMENSKOM TRENUTKU VREME =',1PD12.5)
 2100 FORMAT(//' NA JEDINICI ITEMP =',I5,' DOSLO JE DO GRESKE PRI CITANJ
     1U U VREMENSKOM TRENUTKU VREME =',1PD12.5)
 2200 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O SILAMA'/
     1' CVOR',I10,' NE POSTOJI'//' PROGRAM STOP - PAK071 - DISKCT'//)
C-----------------------------------------------------------------------
 6000 FORMAT(//' NA JEDINICI ITEMP =',I5,' NEMA ZAPISANIH TEMPERATURA U
     1VREMENSKOM TRENUTKU VREME =',1PD12.5)
 6100 FORMAT(//' ON UNIT =',I5,' READ ERROR AT TIME =',1PD12.5)
 6200 FORMAT(//' ERROR IN INPUT DATA ABOUT TEMPERATURE'/
     1' NODE',I10,' NOT EXIST'//' PROGRAM STOP - PAK071 - DISKCT'//)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE FTDTCT(TEMP,NFUJ,NFUG,FFUG,VREME,NTEMP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO CALCULATE NODAL TEMPERATURES AT TIME T+DT
CS.   P R O G R A M
CS.      ZA RACUNANJE CVORNIH TEMPERATURA U TRENUTKU T+DT
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /FVREME/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /CDEBUG/ IDEBUG
      DIMENSION TEMP(*),NFUJ(*),NFUG(*),FFUG(*)
C
      IF(IDEBUG.GT.0) PRINT *, ' FTDTCT'
C
      DO 10 I=1,NTEMP
         NJ = NFUJ(I)
         IF(NJ.EQ.0) GO TO 10
         NF = NFUG(I)
         FAK = FFUG(I)
         CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
         IF(IND.GT.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NF,VREME
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NF,VREME
            STOP
         ENDIF
         TEMP(NJ) = TEMP(NJ)+FAK*FT
   10 CONTINUE
      RETURN
C-----------------------------------------------------------------------
 2000 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     1' VREMENSKA FUNKCIJA BROJ =',I5/
     2' ARGUMENT VREME =',1PD12.4)
C-----------------------------------------------------------------------
 6000 FORMAT(///' ARGUMENT IS OUT OF PRESCRIBED CURVE RANGE'/
     1' TIME FUNCTION NO. =',I5/
     2' ARGUMENT TIME  =',1PD12.4)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE ZADATD(NPODS,I01)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM POINTERS OF PRESCRIBED DISPLACEMENTS
CS.   P R O G R A M
CS.      ZA FORMIRANJE REPERA ZA ZADATA POMERANJA
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DUPLAP/ IDVA
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      DIMENSION NPODS(JPS1,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' FORMCT'
      LMAX13=NPODS(JPBR,36)-1
      LZADFM = LRAD
      LNZADF = LZADFM + NZADP*IDVA
      LNZADJ = LNZADF + NZADP
      LMAX   = LNZADJ + NZADP
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      NPRO=LMAX-LRAD
      CALL DELJIV(NPRO,2,INDL)
      IF(INDL.EQ.1) NPRO=NPRO+1
C
      CALL READDD(A(LZADFM),NPRO/IDVA,IPODS,LMAX13,LDUZI)
      CALL ZADDES(A(LRTDT),A(LNZADJ),A(LNZADF),A(LZADFM),VREME,DT,NZADP,
     1            KOR,I01)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE ZADDES(RTDT,NZADJ,NZADF,ZADFM,VREME,DT,NZADP,KOR,I01)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.     TO CALCULATE PRESCRIBED DISPLACEMENTS AT TIME T+DT
CS.   P R O G R A M
CS.     ZA RACUNANJE ZADATIH POMERANJA U TRENUTKU T+DT
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /FVREME/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /KAKVZP/ INDVZP
      COMMON /CDEBUG/ IDEBUG
      DIMENSION RTDT(*),NZADJ(*),NZADF(*),ZADFM(*)
C
      IF(IDEBUG.GT.0) PRINT *, ' ZADDES'
      VBR=1.0D35
      VREM=VREME-DT
      DO 10 I=1,NZADP
         NJ=NZADJ(I)
         IF(NJ.EQ.0) GO TO 10
         NF = NZADF(I)
         FAK = ZADFM(I)
         CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
C... KOREKCIJA ZA SVODJENJE NA PRIRASTAJ ZADATOG POMERANJA
         IF(KOR.GT.1.AND.INDVZP.EQ.-1) THEN         
           CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREM,FTT,NTMX,IND)
           FT=FT-FTT
         ENDIF
         IF(IND.GT.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NF,VREME
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NF,VREME
            STOP
         ENDIF
         IF(I01.EQ.0) RTDT(NJ) = 0.D0
         IF(I01.EQ.1) RTDT(NJ) = RTDT(NJ)+FAK*FT*VBR
         IF(I01.EQ.2) RTDT(NJ) = RTDT(NJ)+FAK*FT
   10 CONTINUE
      RETURN
C-----------------------------------------------------------------------
 2000 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     1' VREMENSKA FUNKCIJA BROJ =',I5/
     2' ARGUMENT VREME =',1PD12.4)
C-----------------------------------------------------------------------
 6000 FORMAT(///' ARGUMENT IS OUT OF PRESCRIBED CURVE RANGE'/
     1' TIME FUNCTION NO. =',I5/
     2' ARGUMENT TIME  =',1PD12.4)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTNMK(IGRUP,NPODS)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      LOOP OVER NONLINEAR GROUPS OF ELEMENTS TO INTEGRATE NONLINEAR
CE.      SYSTEM STIFFNESS MATRIX KNL
CE.   P R O G R A M
CS.      PETLJA PO GRUPAMA ELEMENATA RADI INTEGRACIJE NELINEARNE
CS.      MATRICE KNL
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /GRUPEE/ NGEL,NGENL,LGEOM,NGEOM,ITERM
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /MATERM/ LMODEL,LGUSM
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BLOCKS/ NBMAX,IBLK,NBLOCK,LMNQ,LICPL,LLREC,KC,LR
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /ECLANM/ AMAXK,AMINK,AMAXF,AMINF
      COMMON /UPDLAG/ LUL,LCORUL
      COMMON /DUPLAP/ IDVA
      COMMON /ITERBR/ ITER
      COMMON /RESTAR/ TSTART,IREST
      COMMON /SOPSVR/ ISOPS,ISTYP,NSOPV,ISTSV,IPROV,IPROL
      COMMON /DIREKT/ LSTAZZ(9),LDRV0,LDRV1,LDRV,IDIREK
      COMMON /MPOINC/ MMP,NMPC,NEZAV,LCMPC,LMPC,NEZA1
      COMMON /SCRATC/ ISCRC
      COMMON /SKDISK/ ISKDSK
      COMMON /CDEBUG/ IDEBUG
      INCLUDE 'mpif.h'
      integer ierr, myid
      DIMENSION IGRUP(NGELEM,*),NPODS(JPS1,*)
C
CE    READING OF EFFECTIVE LINEAR MATRIX FROM DISK: KEL = K+A0*M+A1*C
CE    FORM TOTAL EFFECTIVE LEFT-HAND-SIDE MATRIX: KEF = KEL + KNL
CS    UCITAVANJE EFEKTIVNE LINEARNE MATRICE SA DISKA: KEL = K+A0*M+A1*C
CS    UKUPNA EFEKTIVNA MATRICA LEVE STRANE : KEF = KEL + KNL
C
      CALL MPI_COMM_RANK(MPI_COMM_WORLD,myid,ierr)
      IF (myid.ne.0) goto 51
      IF(IDEBUG.GT.0) PRINT *, ' INTNMK'
      NUL=NWK
      IF(NBLOCK.GT.1) NUL=KC
C
51    CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
      CALL MPI_BCAST(METOD,1,MPI_INTEGER,0,MPI_COMM_WORLD,ierr)
      CALL MPI_BCAST(NZADP,1,MPI_INTEGER,0,MPI_COMM_WORLD,ierr)
      CALL MPI_BCAST(KOR,1,MPI_INTEGER,0,MPI_COMM_WORLD,ierr)
      CALL MPI_BCAST(NDIN,1,MPI_INTEGER,0,MPI_COMM_WORLD,ierr)
      CALL MPI_BCAST(NGEL,1,MPI_INTEGER,0,MPI_COMM_WORLD,ierr)
      IF(METOD.LT.0.AND.KOR.GT.1.AND.NZADP.EQ.0) GO TO 5
C     CALL WRR6(A(LSK),NWK,'SLEU')
      IF(NGEL.EQ.0.AND.NDIN.EQ.0) GO TO 10
CSKDISK      LMA=58
CSKDISK      IF(NDIN.EQ.0) LMA=35
CSKDISK      IF(NGENL.EQ.0.AND.NZADP.EQ.0) LMA=60
CSKDISK      GO TO 6
CSKDISK    5 LMA=60
CSKDISK    6 CALL RSTAZK(NPODS,LSK,LMA)
5     CONTINUE
C
      IF(NGENL.EQ.0.AND.NZADP.EQ.0) RETURN
      IF(NGENL.EQ.0.AND.NZADP.GT.0.and.kor.gt.1) return
      IF(NGENL.EQ.0.AND.NZADP.GT.0) GO TO 110
      if (myid.ne.0) goto 30
CZILESK
      IF(IPROL.GT.0) GO TO 10
CZILESK
      GO TO 20
   10 if (myid.ne.0) goto 30
      CALL CLEARB(A(LSK),A(LMAXA),A(LMNQ),A(LLREC),NBLOCK,LR,IBLK,NUL)
C      CALL WRR6(A(LSK),NWK,'SLEI')
   20 CALL CLEAR(A(LFTDT),JEDN)
CZILESK
      IF(IPROL.EQ.2) THEN
         CALL RSTAZ(NPODS,LRTDT,87)
         NPROS=NP*3
         LMAX13=NPODS(JPBR,88)-1
         CALL READDD(A(LDRV),2*NPROS,IPODS,LMAX13,LDUZI)
      ELSE
CE         READING DISPLACEMENTS FROM BEFORE ITERATION
CS         UCITAVANJE POMERANJA SA KRAJA PRETHODNE ITERACIJE
         CALL RSTAZ(NPODS,LRTDT,52)
CE         READING UNITS VECTORS OF NODES FROM BEFORE ITERATION
CS         UCITAVANJE JEDINICNIH VEKTORA CVOROVA SA KRAJA PRETHODNE ITERACIJE
         CALL REWDRV
      ENDIF
CZILESK
CE    UPDATE OF COORDINATES FOR U.L.
CS    KOREKCIJA KOORDINATA ZA U.L.
      IF(LUL.EQ.1)
     1CALL ULCOR(A(LCORUL),A(LCORD),A(LRTDT),A(LID),NP)
C      write(3,*) 'iporl',iprol
C      call wrr6(a(lcord),np*3,'cord')
C      call wrr6(a(lcorul),np*3,'coru')
      IF(NBLOCK.GT.1.AND.(KOR.EQ.1.OR.METOD.NE.-1))THEN
           OPEN (ISCRC,FILE='ZSKNEL',FORM='UNFORMATTED'
     1            ,STATUS='UNKNOWN')
           REWIND ISCRC
      ENDIF
C
C      CALL WRR6(A(LSK),NWK,'SLE0')
CE    LOOP OVER NONLINEAR ELEMENT GROUPS
      DO 100 NGE = 1,NGELEM
           NETIP = IGRUP(NGE,1)
           NE    = IGRUP(NGE,2)
           IATYP = IGRUP(NGE,3)
           NMODM = IGRUP(NGE,4)
           LMAX8 = IGRUP(NGE,5)
C
CE         CALCULATE OF INTERNAL FORCES AND NONLINEAR STIFFNESS MATRIX
CS         RACUNANJE UNUTRASNJIH SILA I NELINEARNE MATRICE KRUTOSTI
C
           ISKNP=0
           IF(IATYP.EQ.0) ISKNP=2
           IF(METOD.LT.0.AND.KOR.GT.1) ISKNP=2
C          WRITE(3,*) 'ISKNP,METOD',ISKNP,METOD
CE         READ DATA ABOUT MATERIALS 
           CALL UCITAM(A(LMODEL),NMODM)
           LMAX=LRAD
C
CE         CALCULATE INTERNAL FORCES, NONLINEAR PART OF STIFFNESS MATRIX
CE         AND ADD TO GLOBAL SYSTEM MATRIX
C
           CALL ELEME(NETIP,2)
C
  100  CONTINUE
C        CALL WRR6(A(LFTDT),JEDN,'FLEV')
C        CALL WRR6(A(LRTDT),JEDN,'RLEV')
C        CALL WRR6(A(LSK),NWK,'SLEV')
       IF(NBLOCK.GT.1.AND.(KOR.EQ.1.OR.METOD.NE.-1))THEN
            LLM =LRAD
            LSKE=LLM+100
            CALL SPAKUA(A(LSK),A(LMAXA),A(LSKE),A(LLM),ND,0,
     &               A(LMNQ),A(LLREC),NBLOCK,LR,IBLK,A(LCMPC),A(LMPC))
            CLOSE (ISCRC,STATUS='KEEP')
       ENDIF
C
CZILESK
30     CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
       CALL MPI_BCAST(IPROL,1,MPI_INTEGER,0,MPI_COMM_WORLD,ierr)
       CALL MPI_BCAST(METOD,1,MPI_INTEGER,0,MPI_COMM_WORLD,ierr)
       CALL MPI_BCAST(kor,1,MPI_INTEGER,0,MPI_COMM_WORLD,ierr)
       CALL MPI_BCAST(NZADP,1,MPI_INTEGER,0,MPI_COMM_WORLD,ierr)
       IF(IPROL.EQ.0.AND.METOD.LT.0.AND.KOR.GT.1
     1.AND.NZADP.EQ.0) RETURN
C
110    IF (myid.ne.0) goto 40
       IF(NZADP.GT.0) THEN
            LMAX13=NPODS(JPBR,36)-1
            CALL ZADATL
       ENDIF
C
CE    FACTORIZE OF TOTAL EFFECTIVE STIFFNESS MATRIX FOR NONLINEAR 
CE    ANALYSIS: KEF = L*D*LT
CS    FAKTORIZACIJA UKUPNE EFEKTIVNE MATRICE SISTEMA: KEF = L*D*LT
C
40    CALL MPI_BARRIER(MPI_COMM_WORLD,ierr)
      CALL MPI_BCAST(IPROL,1,MPI_INTEGER,0,MPI_COMM_WORLD,ierr)
      IF(IPROL.EQ.0) THEN
         CALL RESEN(A(LSK),A(LRTDT),A(LMAXA),JEDN,1)
         IF (myid.eq.0) THEN
C           IF(KOR.EQ.1.AND.ITER.EQ.0.AND.METOD.EQ.-1) ISKDSK=1
            CALL WSTAZK(NPODS,LSK,60)
C           ISKDSK=0
            IF(KOR.EQ.1.AND.ITER.EQ.0.AND.METOD.EQ.-1.AND.NBLOCK.EQ.1) 
     +      CALL WRITED(A(LSK),NWK,ILDLT)
         ENDIF
      ENDIF
C
CE--------    FOR IPROL.GT.0 ---> EIGEN VALUE
CS--------    ZA IPROL.GT.0 ---> SOPSTVENE VREDNOSTI
C
CE    NONLINEAR STIFFNESS MATRIX IN TIME = TSTART +DT = T
CS    NELINEARNA MATRICA KRUTOSTI U TRENUTKU VREME = TSTART + DT = T
C
      IF (myid.eq.0) THEN
         IF(IPROL.EQ.1) THEN
            CALL WSTAZK(NPODS,LSK,35)
         ENDIF
C
CE       NONLINEAR STIFFNESS MATRIX IN TIME = TSTART = T - DT
CS       NELINEARNA MATRICA KRUTOSTI U TRENUTKU VREME = TSTART = T - DT
C
C         IF(NDIN.EQ.0.AND.ISOPS.GT.0.AND.ITER.EQ.0.AND.KOR.EQ.NDT) THEN
         IF(IPROL.EQ.2) THEN
            CALL WSTAZK(NPODS,LSK,54)
         ENDIF
      ENDIF
CZILESK
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE DESSTR(NPODS)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM TOTAL VECTOR OF RIGHT SIDE
CE.   P R O G R A M
CS.     ZA FORMIRANJE KONACNOG VEKTORA DESNE STRANE:
CS.     MEHANICKE+TERMICKE SILE
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /ANALIZ/ LINEAR,ITERGL,INDDIN
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /GRUPEE/ NGEL,NGENL,LGEOM,NGEOM,ITERM
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /POSTPR/ LNDTPR,LNDTGR,NBLPR,NBLGR,INDPR,INDGR
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /ITERBR/ ITER
      COMMON /GREDE4/ IPRIR,INDGR4
      COMMON /KONTKT/ ICONT,NEQC,NEQ,NWKC,LMAXAC,LRCTDT
      COMMON /ZAPSIL/ UBXYZ(3,10),NVFUB(10),INDZS,LZAPS,LNPRZ
      COMMON /STAMKO/ ISTKO,NCVPR,LNCVP,LNCVZ,
     +                ISTEM,ISTVN,ISTSI,ISTDE,ISTNA
      COMMON /CDEBUG/ IDEBUG
      DIMENSION NPODS(JPS1,*)
C
      IF(IDEBUG.GT.0) PRINT *, ' DESSTR'
C
CE    READING OF RIGHT-HAND-SIDE VECTOR OF MECHANICAL LOADS, RTDT
CS    UCITAVANJE VEKTORA DESNE STRANE SA DISKA 2 MEHANICKE SILE, RTDT
C
CR    Citanje spoljasnjih sila sa staze 38
      CALL RSTAZ(NPODS,LRTDT,38)
C
CE    FORM VECTOR OF GEOMETRICAL NONLINEAR PRESSURE LOADING IN (T+DT)
CS    FORMIR. VEKTORA PRITISAKA GEOMETRIJSKI NELINEARNIH U TRENUTKU T+DT
C
      IF(NGEOM.NE.0) CALL OPTLIN(NPODS)
C
CS    DODAVANJE ZAPREMINSKIH SILA
CE    ADD BODY FORCES
C
C         CALL WRR(A(LRTDT),JEDN,'RPRZ')
      IF(INDZS.GT.0) CALL SABZAP(A(LRTDT),A(LZAPS),A(LNPRZ),JEDN)
C         CALL WRR(A(LRTDT),JEDN,'RIZZ')
C
      IF(NBLGR.GE.0.AND.ITER.EQ.0.AND.ISTSI.NE.-1.AND.NZADP.EQ.0)
     1CALL STAGP1(A(LRTDT),A(LID),A(LCVEL),ICVEL,NP,IGRAF,4,
     +            A(LNCVP),NCVPR)
      IF(NBLGR.GE.0.AND.ITER.EQ.0.AND.ISTSI.NE.-1)
     1CALL STAU09(A(LRTDT),A(LID),A(LCVEL),ICVEL,NP,49,41,
     +            A(LNCVP),NCVPR)
C    1CALL STAGKS(A(LRTDT),A(LID),A(LCVEL),ICVEL,NP,IGRAF,
C    +            A(LNCVP),NCVPR)
C
CE    FORM EFFECTIVE VECTOR OF RIGHT-HAND-SIDE FOR DYNAMICS
C
      IF(NDIN.NE.0.AND.ITERGL.GT.0) CALL FORMEF
C
CE    DIFFERENCE BETWEEN EXTERNAL AND INTERNALL FORCES: RTDT=RTDT-FTDT
CS    RAZLIKA SPOLJASNJIH I UNUTRASNJIH SILA: RTDT=RTDT-FTDT
C
CR    Zapisivanje unutrasnjih sila
      CALL WSTAZ(NPODS,LFTDT,45)
C         CALL WRR(A(LRTDT),JEDN,'RPRR')
C         CALL WRR(A(LFTDT),JEDN,'FPRR')
C
CR    Razlika spoljasnjih i unutrasnjih sila
      CALL ZBIRMM(A(LRTDT),A(LFTDT),JEDN)
C         CALL WRR(A(LRTDT),JEDN,'RPOR')
      IF(NGENL.EQ.0) GO TO 10
CE    ADD CONTACT FORCES
      IF(ICONT.NE.0)THEN
         CALL ZBIRM1(A(LRTDT),A(LRCTDT),JEDN)
         CALL CLEAR(A(LRCTDT),JEDN)
      ENDIF
      CALL JEDNA1(A(LFTDT),A(LRTDT),JEDN)
C
CE    PUT ON RIGHT-HAND-SIDE PRODUCT OF LARGE NUMBER AND PRESCRIBED
CE    DISPLACEMENT
CS    POSTAVLJANJE NA DESNOJ STRANI PROIZVODA VELIKOG BROJA I
CS    ZADATOG POMERANJA
C
   10 IF(NZADP.GT.0) CALL ZADATD(NPODS,0)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE INTNAP(IGRUP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      LOOP OVER GROUP OF ELEMENTS TO CALCULATE STRESSES IN 
CE.      INTEGRATION POINTS FOR LINEAR ANALYSIS
CE.      FOR NONLINEAR ANALYSIS THIS ROUTINE IS CALLED WHEN CONVERGENCE
CE.      IS ACHIEVED
CS.   P R O G R A M
CS.      PETLJA PO GRUPAMA ELEMENATA RADI RACUNANJA NAPONA
CS.      U GAUSOVIM TACKAMA
CS.      ZA STAMPANJE NAPONA U GAUS TACKAMA
CS.      ZA RACUNANJE UNUTRASNJIH SILA  FTDT
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /MATERM/ LMODEL,LGUSM
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BLOCKS/ NBMAX,IBLK,NBLOCK,LMNQ,LICPL,LLREC,KC,LR
      COMMON /SCRATC/ ISCRC
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /UPDLAG/ LUL,LCORUL
      COMMON /CDEBUG/ IDEBUG
      DIMENSION IGRUP(NGELEM,*)
C
CE    CALCULATE OF ELASTICITY STRESS
CS    RACUNANJE NAPONA ELASTICNOSTI
C
      IF(IDEBUG.GT.0) PRINT *, ' INTNAP'
      CALL CLEAR(A(LFTDT),JEDN)
C
      ISKNP=2
CZILE
C OVO TREBA DA JE UKLJUCENO AKO SE POSLE KONVERGENCIJE KORIGUJU POMERANJA
C....  KOREKCIJA KOORDINATA ZA U.L.
      IF(LUL.EQ.1)
     1CALL ULCOR(A(LCORUL),A(LCORD),A(LRTDT),A(LID),NP)
CZILE
      IF(NBLOCK.GT.1) THEN
         OPEN (ISCRC,FILE='ZSCRCH',FORM='UNFORMATTED',STATUS='UNKNOWN')
         REWIND ISCRC
      ENDIF
C
CE    LOOP OVER ELEMENT GROUPS
      DO 380 NGE = 1,NGELEM
         NETIP = IGRUP(NGE,1)
         NE =    IGRUP(NGE,2)
         IATYP = IGRUP(NGE,3)
         NMODM = IGRUP(NGE,4)
         LMAX8 = IGRUP(NGE,5)
CE       READ DATA ABOUT MATERIALS 
         CALL UCITAM(A(LMODEL),NMODM)
         LMAX=LRAD
C
CE       STRESS CALCULATION AT INTEGRATION POINTS OF ELEMENTS
         CALL ELEME(NETIP,3)
C
  380 CONTINUE
      IF(NBLOCK.GT.1) CLOSE (ISCRC,STATUS='KEEP')
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE BACKUP(IND)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CE    R  E  S  T  A  R  T      C  O  N  T  R  O  L
CE          IND=1    PREPEAR FOR RESTART
CE          IND=2    RESTART JOB
C
      CHARACTER*50    FIULAZ,FIZLAZ,FIGRAF,FIELEM,FIPODS,FIFILE,FMODES,
     1                FITEMP,FIBLOK,FIBACK
      include 'paka.inc'
      
      COMMON /PAKJED/ FIULAZ,FIZLAZ,FIGRAF,FIELEM,FIPODS,FIFILE,FMODES,
     1                FITEMP,FIBLOK,FIBACK
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /GRUPEE/ NGEL,NGENL,LGEOM,NGEOM,ITERM
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /DIREKT/ LSTAZZ(9),LDRV0,LDRV1,LDRV,IDIREK
      COMMON /UPDLAG/ LUL,LCORUL
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /RESTAR/ TSTART,IREST
      COMMON /restap/ irestp,lplas0,lstaz0
      COMMON /DUPLAP/ IDVA
      COMMON /MASINA/ INDPC,ICRTA
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /AUTSTP/ DTUK,ALFG,DELS,IAUTO,ITEOPT,KPNOD,KPDIR,KEQ
      COMMON /AUTST1/ TLAM,DLAM,TLAM0,TLAM00,TW,W00,DTUNR2,UNORM2,
     1                IWORK,ITE0
      COMMON /AUTST2/ PARAM(5)
      COMMON /DIM   / N9,N10,N11,N12,MAXUP
      COMMON /KONTKT/ ICONT,NEQC,NEQ,NWKC,LMAXAC,LRCTDT
      COMMON /EDPCON/ A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10
      COMMON /UPRIRI/ LUPRI
      COMMON /NELINE/ NGENN
      COMMON /ECLANM/ AMAXK,AMINK,AMAXF,AMINF
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /OBNOVA/ IRUSI
      COMMON /MPOINC/ MMP,NMPC,NEZAV,LCMPC,LMPC,NEZA1
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' BACKUP'
      IBACK=40
c puca u debug
      IF(IRESTp.NE.1) THEN
         OPEN(IBACK,FILE=FIBACK,STATUS='UNKNOWN',FORM='UNFORMATTED',
     1                          ACCESS='SEQUENTIAL')
         CLOSE (IBACK,STATUS='DELETE')
      ENDIF
      OPEN(IBACK,FILE=FIBACK,STATUS='UNKNOWN',FORM='UNFORMATTED',
     1                       ACCESS='SEQUENTIAL')
      REWIND IBACK
      NPROS=NP*3
      IF(IND.EQ.1) THEN
         IREST=0
         REWIND IBACK
         IF(METOD.GT.5) THEN
            WRITE(IBACK) DTUK,ALFG,DELS,IAUTO,ITEOPT,KPNOD,KPDIR,KEQ,
     1                   TLAM,DLAM,TLAM0,TLAM00,TW,W00,DTUNR2,UNORM2,
     1                   IWORK,ITE0,PARAM,DT,KOR
            CALL RSTAZ(A(LIPODS),N10,38)
            CALL WRITED(A(N10),JEDN,IBACK)     
         ELSE
            WRITE(IBACK) VREME,AMAXK,AMINK,AMAXF,AMINF,METOD
         ENDIF
c        brisanje pomeranja samo posle prvog pustanja
         IF(IRUSI.EQ.1.AND.IRESTP.EQ.0.AND.KOR.EQ.NDT)THEN
           CALL CLEAR(A(LRTDT),JEDN)
           CALL CLEAR(A(LUPRI),JEDN)
           IF(LUL.EQ.1) CALL JEDNA1(A(LCORUL),A(LCORD),NPROS)
         ENDIF
         CALL WRITED (A(LRTDT),JEDN,IBACK)     
         IF(NGENN.GT.0) CALL WRITED (A(LUPRI),JEDN,IBACK)     
         IF(LUL.EQ.1) CALL WRITED (A(LCORUL),NPROS,IBACK)     
         IF(IDIREK.EQ.-1) THEN
            CALL WRITED (A(LDRV ),NPROS,IBACK)     
            CALL WRITED (A(LDRV1),NPROS,IBACK)     
         ENDIF
C... DYNAMICS
         IF(NDIN.GT.0)THEN
            WRITE(IBACK) A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10
            IF(ICONT.GT.0) JEDN=NEQ 
            CALL WRITED (A(LRTDT),JEDN,IBACK)     
            CALL RSTAZ  (A(LIPODS),LRAD,55)
            CALL WRITED (A(LRAD),JEDN,IBACK)     
            CALL RSTAZ  (A(LIPODS),LRAD,57)
            CALL WRITED (A(LRAD),JEDN,IBACK)     
            IF(ICONT.GT.0) JEDN=NEQ+NEQC
         ENDIF
         IF(MMP.GT.0) CALL WRITED(A(LCMPC),MMP*NEZAV,IBACK)
      ENDIF
C
C     RESTART
C
      IF(IND.EQ.2) THEN
         REWIND IBACK
         IF(METOD.GT.5) THEN
            READ (IBACK) DTUK,ALFG,DELS,IAUTO,ITEOPT,KPNOD,KPDIR,KEQ,
     1                   TLAM,DLAM,TLAM0,TLAM00,TW,W00,DTUNR2,UNORM2,
     1                   IWORK,ITE0,PARAM,DT,KKOR
            FLK=FLOAT(KKOR)
            TSTART=DT*FLK
            CALL READD(A(N10),JEDN,IBACK)     
            CALL WSTAZ(A(LIPODS),N10,38)
         ELSE
            READ (IBACK) TSTART,AMAXK,AMINK,AMAXF,AMINF,METO
            IF(METOD.EQ.-1.AND.METOD.NE.METO) STOP
     +                'PROGRAM STOP - BACKUP - PAK071 - (METOD.NE.METO)'
         ENDIF
         CALL READD (A(LRTDT),JEDN,IBACK)     
         IF(NGENN.GT.0) CALL READD (A(LUPRI),JEDN,IBACK)     
         IF(LUL.EQ.1) CALL READD (A(LCORUL),NPROS,IBACK)     
         IF(IDIREK.EQ.-1) THEN
            CALL READD (A(LDRV ),NPROS,IBACK)     
            CALL READD (A(LDRV1),NPROS,IBACK)     
         ENDIF
CE       STORE DISPLACEMENTS ON DISK
CS       ZAPISIVANJE POMERANJA NA DISK
         CALL WSTAZ(A(LIPODS),LRTDT,52)
C
C.....   ZAPIS  VN(TAU) I  V1(TAU)
C        TAU = REFERENTNI TRENUTAK KADA SE FORMIRA MATR. KRUTOSTI
C
         IF(IDIREK.EQ.-1) THEN
            LMA13=LSTAZZ(1)
            CALL WRITDD(A(LDRV), NPROS,IPODS,LMA13,LDUZI)
            LMA13=LSTAZZ(2)
            CALL WRITDD(A(LDRV1),NPROS,IPODS,LMA13,LDUZI)
            IF(NGENL.GT.0) THEN
               LMA13=LSTAZZ(3)
               CALL WRITDD(A(LDRV), NPROS,IPODS,LMA13,LDUZI)
               LMA13=LSTAZZ(4)
               CALL WRITDD(A(LDRV1),NPROS,IPODS,LMA13,LDUZI)
            ENDIF
         ENDIF
C... DYNAMICS
         IF(NDIN.GT.0)THEN
            READ(IBACK) A0,A1,A2,A3,A4,A5,A6,A7,A8,A9,A10
            IF(ICONT.GT.0) JEDN=NEQ
            CALL READD (A(LRAD),JEDN,IBACK)     
            CALL WSTAZ(A(LIPODS),LRAD,59)
            CALL READD (A(LRAD),JEDN,IBACK)     
            CALL WSTAZ(A(LIPODS),LRAD,55)
            CALL READD (A(LRAD),JEDN,IBACK)     
            CALL WSTAZ(A(LIPODS),LRAD,57)
            IF(ICONT.GT.0) JEDN=NEQ+NEQC
         ENDIF
         IF(MMP.GT.0) CALL READD(A(LCMPC),MMP*NEZAV,IBACK)
      ENDIF
      CLOSE (IBACK,STATUS='KEEP')
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE IPRF(RTDT,DUM,ID,IDIM,SCIM,NELCV,NPI,ICVEL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CE    I M P O S E   I N I T I A L   I M P E R F E C T I O N
CS    INICIJALNA IMPERFEKCIJA - UPOTREBA SOPSTVENIH VEKTORA
C
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /IMPERF/ NMODS,LIDIM,LSCIM,MODES
      COMMON /KONTKT/ ICONT,NEQC,NEQ,NWKC,LMAXAC,LRCTDT
      DIMENSION RTDT(*),DUM(*),ID(NP,*),IDIM(NMODS,*),SCIM(*),NELCV(*)
C
      CALL MODEOP(MODES)
      REWIND MODES
C
      KK=0
      DO 50 IM=1,NMODS
        MOD=IDIM(IM,1)
        NOD=IDIM(IM,2)
        NSS=IDIM(IM,3)
        KPNN=NOD
        IF(ICVEL.NE.0)KPNN=NELCV(NOD-NPI+1)
        JD =ID(KPNN,NSS)
        IF(JD.LE.0)THEN  
          WRITE(IZLAZ,2000)NSS,NOD
          STOP'  IPRF - PAK07'
        ENDIF
C
   10   READ(MODES,ERR=60,END=60)EIG,(DUM(I),I=1,NEQ)
        KK=KK+1
        IF(KK.NE.MOD)GO TO 10
C....  KOREKCIJA POLJA POMERANJA
        SCAL=0.D0
        IF(DABS(DUM(JD)).GT.1.D-10) SCAL=SCIM(IM)/DUM(JD)
C        DO 20 I=1,NEQ
         DO 20 J=1,NP
         DO 20 K=1,3
            I=ID(J,K)
            IF(I.GT.0) RTDT(I)=RTDT(I)+SCAL*DUM(I)
   20    CONTINUE        
   50 CONTINUE        
      RETURN
C
   60 WRITE(IZLAZ,2010)
      STOP'  IPRF - PAK07'
C
 2000 FORMAT(///' ZA STEPEN SLOBODE',I5,'  CVORA',I5,'  POSTOJI OGRANICE
     1NJE'//' INICIJALNA IMPERFEKCIJA'/' DEFINISATI AMPLITUDU',
     2' POMERANJE  ZA DRUGI STEPEN SLOBODE')
 2010 FORMAT(///' GRESKA PRI UCITAVANJU MODOVA SA DISKA'
     1//' DATOTEKA NIJE PRETHODNO FORMIRANA ILI NEMA DOVOLJNO MODOVA'/)
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE FORMP2
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE VEKTORA PRITISKA  2/D ELEMENATA  U TRENUTKU T+DT
CE     FORMING OF  2/D  PRESSURE LOADING
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DUPLAP/ IDVA
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /DINAMI/ IMASS,IDAMP,PIP,DIP,MDVI
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /ITERBR/ ITER
      COMMON /SOPSVR/ ISOPS,ISTYP,NSOPV,ISTSV,IPROV,IPROL
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /UPDLAG/ LUL,LCORUL
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /PRIT2D/ LFAKP,LTHICV,LITIPE,LNFUN,LIPRAV,LNODPR,ISRBA
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' FORMP2'
      IF(ISRBA.EQ.1) GO TO 10
      LFAKP = LRAD
      LTHICV = LFAKP + NPP2*2*IDVA
      LITIPE = LTHICV + NPP2*IDVA
      LNFUN = LITIPE + NPP2
      LIPRAV = LNFUN + NPP2
      LNODPR = LIPRAV + NPP2
      LMAX = LNODPR + NPP2*3
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      CALL READDD(A(LFAKP),NPP2*3,IPODS,LMAX13,LDUZI)
      CALL IREADD(A(LITIPE),NPP2*6,IPODS,LMAX13,LDUZI)
C
   10 KORD=LCORD
      IF(IATYP.GE.3) KORD=LCORUL
      CALL FTDTRS(A(LRTDT),A(LITIPE),A(LNFUN),A(LIPRAV),A(LFAKP),
     1A(LTHICV),A(LNODPR),A(KORD),A(LID),NPP2,VREME)
      IF(ISOPS.GT.0.AND.ITER.EQ.0) GO TO 15
      IF(NDIN.EQ.0) RETURN
      IF(MDVI.NE.1) RETURN
   15 VREM = VREME-DT
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
      LPOMS=LMAX
      LMAX = LPOMS+JEDN*IDVA
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      CALL RSTAZ(A(LIPODS),LPOMS,53)
      CALL FTDTRS(A(LPOMS),A(LITIPE),A(LNFUN),A(LIPRAV),A(LFAKP),
     1A(LTHICV),A(LNODPR),A(KORD),A(LID),NPP2,VREM)
      CALL WSTAZ(A(LIPODS),LPOMS,53)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE FTDTRS(RTDT,ITIPE,NFUN,IPRAV,FAKP,THICV,NODPR,CORD,ID,
     1                  NPP,VREME)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     INTEGRALJENJE PRITISAKA NA POVRSINI
CE     INTEGRATION OF SURFACE 2/D PRESSURE
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /FVREME/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /CDEBUG/ IDEBUG
      DIMENSION ITIPE(*),NFUN(*),IPRAV(*),FAKP(NPP,*),THICV(*),
     1NODPR(NPP,*),RTDT(*),CORD(NP,*),ID(NP,*),H(3,2)
      DIMENSION XG(55),WGT(55),NREF(11)
      DATA NREF/0,1,3,6,10,15,21,28,36,45,55/
      DATA WGT/            2.D0,               1.D0,               1.D0,
     1       .555555555555556D0, .888888888888889D0, .555555555555556D0,
     2       .347854845137454D0, .652145154862546D0, .652145154862546D0,
     3       .347854845137454D0, .236926885056189D0, .478628670499366D0,
     4       .568888888888889D0, .478628670499366D0, .236926885056189D0,
     5       .171324492379170D0, .360761573048139D0, .467913934572691D0,
     6       .467913934572691D0, .360761573048139D0, .171324492379170D0,
     7       .129484966168870D0, .279705391489277D0, .381830050505119D0,
     8       .417959183673469D0, .381830050505119D0, .279705391489277D0,
     9       .129484966168870D0, .101228536290376D0, .222381034453374D0,
     9       .313706645877887D0, .362683783378362D0, .362683783378362D0,
     1       .313706645877887D0, .222381034453374D0, .101228536290376D0,
     2       .081274388361574D0, .180648160694857D0, .260610696402935D0,
     3       .312347077040003D0, .330239355001260D0, .312347077040003D0,
     4       .260610696402935D0, .180648160694857D0, .081274388361574D0,
     5       .066671344308688D0, .149451349150581D0, .219086362515982D0,
     6       .269266719309996D0, .295524224714753D0, .295524224714753D0,
     7       .269266719309996D0, .219086362515982D0, .149451349150581D0,
     8       .066671344308688D0/
      DATA XG /            0.D0,-.577350269189626D0, .577350269189626D0,
     1      -.774596669241483D0,               0.D0, .774596669241483D0,
     2      -.861136311594053D0,-.339981043584856D0, .339981043584856D0,
     3       .861136311594053D0,-.906179845938664D0,-.538469310105683D0,
     4                     0.D0, .538469310105683D0, .906179845938664D0,
     5      -.932469514203152D0,-.661209386466265D0,-.238619186083197D0,
     6       .238619186083197D0, .661209386466265D0, .932469514203152D0,
     7      -.949107912342759D0,-.741531185599394D0,-.405845151377397D0,
     8                     0.D0, .405845151377397D0, .741531185599394D0,
     9       .949107912342759D0,-.960289856497536D0,-.796666477413627D0,
     9      -.525532409916329D0,-.183434642495650D0, .183434642495650D0,
     1       .525532409916329D0, .796666477413627D0, .960289856497536D0,
     2      -.968160239507626D0,-.836031107326636D0,-.613371432700590D0,
     3      -.324253423403809D0,               0.D0, .324253423403809D0,
     4       .613371432700590D0, .836031107326636D0, .968160239507626D0,
     5      -.973906528517172D0,-.865063366688985D0,-.679409568299024D0,
     6      -.433395394129247D0,-.148874338981631D0, .148874338981631D0,
     7       .433395394129247D0, .679409568299024D0, .865063366688985D0,
     8       .973906528517172D0/
C
      IF(IDEBUG.GT.0) PRINT *, ' FTDTRS'
      ONE=1.D0
      DO 10 II=1,NPP
         IETYP = 0
         IF(ITIPE(II).EQ.1) IETYP = 1
         NF = NFUN(II)
         IPR = IPRAV(II)
         P1 = FAKP(II,1)
         P2 = FAKP(II,2)
         THIC = THICV(II)
         CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
         IF(IND.GT.0) GO TO 20
         CALL JACTP(ONE,H,DET,CORD,NODPR,P1,P2,P1U,P1V,P2U,P2V,
     1              PU,PV,PQ,II,NPP,CINA,CINB,0)
         IF(IPR.EQ.-1) THEN
            P1U = P1*FT*CINB
            P1V = P1*FT*CINA
         ELSE
            P1U = P1*FT*CINA
            P1V =-P1*FT*CINB
         ENDIF
         CALL JACTP(-ONE,H,DET,CORD,NODPR,P1,P2,P1U,P1V,P2U,P2V,
     1              PU,PV,PQ,II,NPP,CINA,CINB,0)
         IF(IPR.EQ.-1) THEN
            P2U = P2*FT*CINB
            P2V = P2*FT*CINA
         ELSE
            P2U = P2*FT*CINA
            P2V =-P2*FT*CINB
         ENDIF
         IF(IPR.EQ.-1) IPR=0
         DO 100 NGX = 1,2
            JR = NREF(2)+NGX
            R = XG(JR)
            WT = WGT(JR)
            CALL JACTP(R,H,DET,CORD,NODPR,P1,P2,P1U,P1V,P2U,P2V,
     1                 PU,PV,PQ,II,NPP,CINA,CINB,1)
            RAD = THIC
            IF(IETYP.NE.1) GO TO 30
            RAD = 0.
            DO 40 I=1,3
               NC = NODPR(II,I)
               IF(NC.EQ.0) GO TO  40
               RAD = RAD + H(I,1)*CORD(NC,1)
   40       CONTINUE
   30       WDT = WT*RAD*DET
            IF(IPR.EQ.1.OR.IPR.EQ.0) THEN
               DO 50 I=1,3
                  NC = NODPR(II,I)
                  IF(NC.EQ.0) GO TO  50
                  NJ = ID(NC,1)
                  IF(NJ.EQ.0) GO TO  50
                  IF(IPR.EQ.0) RTDT(NJ) = RTDT(NJ) + H(I,1)*PU*WDT
                  IF(IPR.EQ.1) RTDT(NJ) = RTDT(NJ) + H(I,1)*PQ*FT*WDT
   50          CONTINUE
            ENDIF
            IF(IPR.EQ.2.OR.IPR.EQ.0) THEN 
               DO 60 I=1,3
                  NC = NODPR(II,I)
                  IF(NC.EQ.0) GO TO 60
                  NJ = ID(NC,2)
                  IF(NJ.EQ.0) GO TO  60
                  IF(IPR.EQ.0) RTDT(NJ) = RTDT(NJ) + H(I,1)*PV*WDT
                  IF(IPR.EQ.2) RTDT(NJ) = RTDT(NJ) + H(I,1)*PQ*FT*WDT
   60          CONTINUE
            ENDIF
            IF(IPR.EQ.3) THEN
               DO 70 I=1,3
                  NC = NODPR(II,I)
                  IF(NC.EQ.0) GO TO 70
                  NJ = ID(NC,3)
                  IF(NJ.EQ.0) GO TO  70
                  RTDT(NJ) = RTDT(NJ) + H(I,1)*PQ*FT*WDT
   70          CONTINUE
            ENDIF
  100    CONTINUE
   10 CONTINUE
      RETURN
C
   20 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NF,VREME
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NF,VREME
      STOP
C-----------------------------------------------------------------------
 2000 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     1' VREMENSKA FUNKCIJA BROJ =',I5/
     2' ARGUMENT VREME =',1PD12.4)
 6000 FORMAT(///' ARGUMENT IS OUT OF RANGE'/
     1' TEMPERATURE FUNCTION  =',I5/
     2' ARGUMENT TEMPERATURE  =',D12.4)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE JACTP(R,H,DET,CORD,NODPR,P1,P2,P1U,P1V,P2U,P2V,
     1                 PU,PV,PQ,II,NPP,CINA,CINB,IND)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     POVRSINSKI JAKOBIJAN NA GRANICI 2/D ELEMENTA
CE     SURFACE JACOBIAN FOR 2/D
C
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      DIMENSION NODPR(NPP,*),CORD(NP,*),H(3,*),XJ(3)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' JACTP '
      RP=1.D0+R
      RM=1.D0-R
      RR=1.D0-R*R
      DO 10 I=1,3
         H(I,1)=0.D0
         H(I,2)=0.D0
   10 CONTINUE
      H(1,1)=.5D0*RP
      H(2,1)=.5D0*RM
      H(1,2)=.5D0
      H(2,2)=-.5D0
      IF(IND.EQ.0) GO TO 45
      PU=H(1,1)*P1U+H(2,1)*P2U
      PV=H(1,1)*P1V+H(2,1)*P2V
      PQ=H(1,1)*P1+H(2,1)*P2
   45 N3 = NODPR(II,3)
      IF(N3.EQ.0) GO TO 50
      H(3,1)=RR
      H(3,2)=-2.D0*R
      DO  20 I=1,2
         H(I,1)=H(I,1)-.5D0*H(3,1)
         H(I,2)=H(I,2)-.5D0*H(3,2)
   20 CONTINUE
   50 DO 60 J=1,3
         XJ(J)=0.D0
      DO 60 I=1,3
         NC = NODPR(II,I)
         IF(NC.EQ.0) GO TO 60
         XJ(J)=XJ(J)+H(I,2)*CORD(NC,J)
   60 CONTINUE
      DET = DSQRT(XJ(1)*XJ(1)+XJ(2)*XJ(2)+XJ(3)*XJ(3))
      IF(DET.GT.1.0D-10) GO TO 70
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) II,DET
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) II,DET
      STOP ' PROGRAM STOP - PAK071 - JACTP'
   70 IF(IND.EQ.1) RETURN
      CINA=XJ(2)/DET
      CINB=XJ(1)/DET
      RETURN
C-----------------------------------------------------------------------
 2000 FORMAT(/' ','DETERMINANTA JAKOBIJANA MANJA OD NULE'/
     1' ','2-D PRITISAK BROJ =',I10/' ','DETERMINANTA =',1PD12.5)
 6000 FORMAT(/' ','ZERO OR NEGATIVE DETERMINANTE'/
     1' ','2-D PRESSURE NUMBER =',I10/' ','DETERMINANT =',1PD12.5)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE FORMP3
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     FORMIRANJE VEKTORA PRITISKA  3/D ELEMENATA  U TRENUTKU T+DT
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DUPLAP/ IDVA
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /DINAMI/ IMASS,IDAMP,PIP,DIP,MDVI
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /ITERBR/ ITER
      COMMON /SOPSVR/ ISOPS,ISTYP,NSOPV,ISTSV,IPROV,IPROL
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /UPDLAG/ LUL,LCORUL
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' FORMP3 '
C
      LFAKP = LRAD
      LNFUN  = LFAKP + NPP3*4*IDVA
      LIPRAV = LNFUN + NPP3
      LNODPR = LIPRAV + NPP3
      LMAX = LNODPR + NPP3*9
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      CALL READDD(A(LFAKP),NPP3*4,IPODS,LMAX13,LDUZI)
      CALL IREADD(A(LNFUN),NPP3*11,IPODS,LMAX13,LDUZI)
C
      KORD=LCORD
      IF(IATYP.GE.3) KORD=LCORUL
      CALL FTDTR3(A(LRTDT),A(LNFUN),A(LIPRAV),A(LFAKP),
     1A(LNODPR),A(KORD),A(LID),NPP3,VREME)
      IF(ISOPS.GT.0.AND.ITER.EQ.0) GO TO 15
      IF(NDIN.EQ.0) RETURN
      IF(MDVI.NE.1) RETURN
   15 VREM = VREME-DT
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
      LPOMS=LMAX
      LMAX = LPOMS+JEDN*IDVA
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      CALL RSTAZ(A(LIPODS),LPOMS,53)
      CALL FTDTR3(A(LPOMS),A(LNFUN),A(LIPRAV),A(LFAKP),
     1A(LNODPR),A(KORD),A(LID),NPP3,VREM)
      CALL WSTAZ(A(LIPODS),LPOMS,53)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE FTDTR3(RTDT,NFUN,IPRAV,FAKP,NODPR,CORD,ID,NPP,VREME)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     INTEGRALJENJE PRITISAKA NA POVRSINI
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /FVREME/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /CDEBUG/ IDEBUG
C
      DIMENSION NFUN(*),IPRAV(*),FAKP(NPP,*),
     1NODPR(NPP,*),RTDT(*),CORD(NP,*),ID(NP,*),H(9,3)
      DIMENSION XG(15),WGT(15),NREF(6)
C
      DATA NREF/0,1,3,6,10,15/
C
      DATA WGT/            2.D0,               1.D0,               1.D0,
     1       .555555555555556D0, .888888888888889D0, .555555555555556D0,
     2       .347854845137454D0, .652145154862546D0, .652145154862546D0,
     3       .347854845137454D0, .236926885056189D0, .478628670499366D0,
     4       .568888888888889D0, .478628670499366D0, .236926885056189D0/
C
      DATA XG /            0.D0,-.577350269189626D0, .577350269189626D0,
     1      -.774596669241483D0,               0.D0, .774596669241483D0,
     2      -.861136311594053D0,-.339981043584856D0, .339981043584856D0,
     3       .861136311594053D0,-.906179845938664D0,-.538469310105683D0,
     4                     0.D0, .538469310105683D0, .906179845938664D0/
C
      IF(IDEBUG.GT.0) PRINT *, ' FTDTR3' 
      ZERO=0.
      ONE=1.D0
      ENE=0.95D0
C
      NCNP=0
      DO 10 II=1,NPP
         IF(NODPR(II,8).EQ.0.AND.NODPR(II,4).EQ.0) NCNP=3
         IF(NODPR(II,8).EQ.0.AND.NODPR(II,7).NE.0) NCNP=6
       IF(NCNP.EQ.3.OR.NCNP.EQ.6)THEN
         NF = NFUN(II)
         IPR = IPRAV(II)
         P1 = FAKP(II,1)
         P2 = FAKP(II,2)
         P3 = FAKP(II,3)
         CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
         IF(IND.GT.0) GO TO 20
         CALL JACTP33(ZERO,ZERO,H,CORD,NODPR,P1,P2,P3,
     1               P1U,P1V,P1W,P2U,P2V,P2W,P3U,P3V,P3W,
     1               PU,PV,PW,PQ,II,NPP,CINA,CINB,CING,0)
         P1U =-P1*FT*CINA
         P1V = P1*FT*CINB
         P1W =-P1*FT*CING
         CALL JACTP33(ONE,ZERO,H,CORD,NODPR,P1,P2,P3,
     1               P1U,P1V,P1W,P2U,P2V,P2W,P3U,P3V,P3W,
     1               PU,PV,PW,PQ,II,NPP,CINA,CINB,CING,0)
         P2U =-P2*FT*CINA
         P2V = P2*FT*CINB
         P2W =-P2*FT*CING
         CALL JACTP33(ZERO,ONE,H,CORD,NODPR,P1,P2,P3,
     1               P1U,P1V,P1W,P2U,P2V,P2W,P3U,P3V,P3W,
     1               PU,PV,PW,PQ,II,NPP,CINA,CINB,CING,0)
         P3U =-P3*FT*CINA
         P3V = P3*FT*CINB
         P3W =-P3*FT*CING
         DO 101 NGXT = 1,3
             IF(NGXT.EQ.1) THEN
                 R=1./6
                 S=1./6
                 WT=1./3
             ENDIF
             IF(NGXT.EQ.2) THEN
                 R=2./3
                 S=1./6
                 WT=1./3
             ENDIF
             IF(NGXT.EQ.3) THEN
                 R=1./6
                 S=2./3
                 WT=1./3
             ENDIF
            CALL JACTP33(R,S,H,CORD,NODPR,P1,P2,P3,
     1                  P1U,P1V,P1W,P2U,P2V,P2W,P3U,P3V,P3W,
     1                  PU,PV,PW,PQ,II,NPP,CINA,CINB,CING,1)
            WDT = WT*DET/2
            IF(IPR.EQ.1.OR.IPR.EQ.0) THEN
               DO 51 I=1,7
                  NC = NODPR(II,I)
                  IF(NC.EQ.0) GO TO  51
                  NJ = ID(NC,1)
                  IF(NJ.EQ.0) GO TO  51
                  IF(IPR.EQ.0) RTDT(NJ) = RTDT(NJ) + H(I,1)*PU*WDT
c                 Rakic (za tunel)
c                 Ukupan pritisak u X pravcu
                  IF(IPR.EQ.1) RTDT(NJ) = RTDT(NJ) + H(I,1)*PQ*FT*WDT
c                 Projekcija pritska u X pravcu
C                  IF(IPR.EQ.1) RTDT(NJ) = RTDT(NJ) + H(I,1)*PU*WDT
   51          CONTINUE
            ENDIF
            IF(IPR.EQ.2.OR.IPR.EQ.0) THEN
               DO 61 I=1,7
                  NC = NODPR(II,I)
                  IF(NC.EQ.0) GO TO 61
                  NJ = ID(NC,2)
                  IF(NJ.EQ.0) GO TO  61
                  IF(IPR.EQ.0) RTDT(NJ) = RTDT(NJ) + H(I,1)*PV*WDT
c                 Rakic (za tunel)
                  IF(IPR.EQ.2) RTDT(NJ) = RTDT(NJ) + H(I,1)*PQ*FT*WDT
C                  IF(IPR.EQ.2) RTDT(NJ) = RTDT(NJ) + H(I,1)*PV*WDT
   61          CONTINUE
            ENDIF
            IF(IPR.EQ.3.OR.IPR.EQ.0) THEN
               DO 71 I=1,7
                  NC = NODPR(II,I)
                  IF(NC.EQ.0) GO TO 71
                  NJ = ID(NC,3)
                  IF(NJ.EQ.0) GO TO  71
                  IF(IPR.EQ.0) RTDT(NJ) = RTDT(NJ) + H(I,1)*PW*WDT
c                 Rakic (za tunel)
                  IF(IPR.EQ.3) RTDT(NJ) = RTDT(NJ) + H(I,1)*PQ*FT*WDT
C                  IF(IPR.EQ.3) RTDT(NJ) = RTDT(NJ) + H(I,1)*PW*WDT
   71          CONTINUE
            ENDIF
  101    CONTINUE
       ELSE
         NF = NFUN(II)
         IPR = IPRAV(II)
         P1 = FAKP(II,1)
         P2 = FAKP(II,2)
         P3 = FAKP(II,3)
         P4 = FAKP(II,4)
         CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
         IF(IND.GT.0) GO TO 20
         CALL JACTP3(ONE,ONE,H,CORD,NODPR,P1,P2,P3,P4,
     1               P1U,P1V,P1W,P2U,P2V,P2W,P3U,P3V,P3W,P4U,P4V,P4W,
     1               PU,PV,PW,PQ,II,NPP,CINA,CINB,CING,0)
         P1U =-P1*FT*CINA
         P1V = P1*FT*CINB
         P1W =-P1*FT*CING
         CALL JACTP3(-ONE,ONE,H,CORD,NODPR,P1,P2,P3,P4,
     1               P1U,P1V,P1W,P2U,P2V,P2W,P3U,P3V,P3W,P4U,P4V,P4W,
     1               PU,PV,PW,PQ,II,NPP,CINA,CINB,CING,0)
         P2U =-P2*FT*CINA
         P2V = P2*FT*CINB
         P2W =-P2*FT*CING
         DUM = ONE
         IF(NODPR(II,3).EQ.NODPR(II,4)) DUM=ENE
         CALL JACTP3(-DUM,-DUM,H,CORD,NODPR,P1,P2,P3,P4,
     1               P1U,P1V,P1W,P2U,P2V,P2W,P3U,P3V,P3W,P4U,P4V,P4W,
     1               PU,PV,PW,PQ,II,NPP,CINA,CINB,CING,0)
         P3U =-P3*FT*CINA
         P3V = P3*FT*CINB
         P3W =-P3*FT*CING
         CALL JACTP3(DUM,-DUM,H,CORD,NODPR,P1,P2,P3,P4,
     1               P1U,P1V,P1W,P2U,P2V,P2W,P3U,P3V,P3W,P4U,P4V,P4W,
     1               PU,PV,PW,PQ,II,NPP,CINA,CINB,CING,0)
         P4U =-P4*FT*CINA
         P4V = P4*FT*CINB
         P4W =-P4*FT*CING
         DO 100 NGX = 1,2
            JR = NREF(2)+NGX
            R = XG(JR)
         DO 100 NGY = 1,2
            JS = NREF(2)+NGY
            S = XG(JS)
            WT = WGT(JR)*WGT(JS)
            CALL JACTP3(R,S,H,CORD,NODPR,P1,P2,P3,P4,
     1                  P1U,P1V,P1W,P2U,P2V,P2W,P3U,P3V,P3W,P4U,P4V,P4W,
     1                  PU,PV,PW,PQ,II,NPP,CINA,CINB,CING,1)
            WDT = WT*DET
            IF(IPR.EQ.1.OR.IPR.EQ.0) THEN
               DO 50 I=1,9
                  NC = NODPR(II,I)
                  IF(NC.EQ.0) GO TO  50
                  NJ = ID(NC,1)
                  IF(NJ.EQ.0) GO TO  50
                  IF(IPR.EQ.0) RTDT(NJ) = RTDT(NJ) + H(I,1)*PU*WDT
c                 Rakic (za tunel)
c                 Ukupan pritisak u X pravcu
                  IF(IPR.EQ.1) RTDT(NJ) = RTDT(NJ) + H(I,1)*PQ*FT*WDT
c                 Projekcija pritska u X pravcu
c                  IF(IPR.EQ.1) RTDT(NJ) = RTDT(NJ) + H(I,1)*PU*WDT
   50          CONTINUE
            ENDIF
            IF(IPR.EQ.2.OR.IPR.EQ.0) THEN
               DO 60 I=1,9
                  NC = NODPR(II,I)
                  IF(NC.EQ.0) GO TO 60
                  NJ = ID(NC,2)
                  IF(NJ.EQ.0) GO TO  60
                  IF(IPR.EQ.0) RTDT(NJ) = RTDT(NJ) + H(I,1)*PV*WDT
c                 Rakic (za tunel)
                  IF(IPR.EQ.2) RTDT(NJ) = RTDT(NJ) + H(I,1)*PQ*FT*WDT
c                  IF(IPR.EQ.2) RTDT(NJ) = RTDT(NJ) + H(I,1)*PV*WDT
   60          CONTINUE
            ENDIF
            IF(IPR.EQ.3.OR.IPR.EQ.0) THEN
               DO 70 I=1,9
                  NC = NODPR(II,I)
                  IF(NC.EQ.0) GO TO 70
                  NJ = ID(NC,3)
                  IF(NJ.EQ.0) GO TO  70
                  IF(IPR.EQ.0) RTDT(NJ) = RTDT(NJ) + H(I,1)*PW*WDT
c                 Rakic (za tunel)
                  IF(IPR.EQ.3) RTDT(NJ) = RTDT(NJ) + H(I,1)*PQ*FT*WDT
c                  IF(IPR.EQ.3) RTDT(NJ) = RTDT(NJ) + H(I,1)*PW*WDT
   70          CONTINUE
            ENDIF
  100    CONTINUE
      ENDIF
   10 CONTINUE
      RETURN
C
   20 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NF,VREME
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NF,VREME
      STOP
C-----------------------------------------------------------------------
 2000 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     1' VREMENSKA FUNKCIJA BROJ =',I5/
     2' ARGUMENT VREME =',1PD12.4)
 6000 FORMAT(///' ARGUMENT IS OUT OF RANGE'/
     1' TEMPERATURE FUNCTION  =',I5/
     2' ARGUMENT TEMPERATURE  =',D12.4)
C-----------------------------------------------------------------------
      END
C======================================================================
      SUBROUTINE JACTP3(R,S,H,CORD,NODPR,P1,P2,P3,P4,P1U,P1V,P1W,
     1                  P2U,P2V,P2W,P3U,P3V,P3W,P4U,P4V,P4W,
     1                  PU,PV,PW,PQ,II,NPP,CINA,CINB,CING,IND)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     POVRSINSKI JAKOBIJAN NA GRANICI 3/D ELEMENTA
C
C
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      DIMENSION NODPR(NPP,*),CORD(NP,*),H(9,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' JACTP3'
      RP=1.+R
      RM=1.-R
      RK=1.-R*R
      SP=1.+S
      SM=1.-S
      SK=1.-S*S
      H(1,1)=.25*RP*SP
      H(2,1)=.25*RM*SP
      H(3,1)=.25*RM*SM
      H(4,1)=.25*RP*SM
      H(1,2)=.25*SP
      H(2,2)=-.25*SP
      H(3,2)=-.25*SM
      H(4,2)=.25*SM
      H(1,3)=.25*RP
      H(2,3)=.25*RM
      H(3,3)=-.25*RM
      H(4,3)=-.25*RP
      IF(IND.EQ.0) GO TO 26
      PU=H(1,1)*P1U+H(2,1)*P2U+H(3,1)*P3U+H(4,1)*P4U
      PV=H(1,1)*P1V+H(2,1)*P2V+H(3,1)*P3V+H(4,1)*P4V
      PW=H(1,1)*P1W+H(2,1)*P2W+H(3,1)*P3W+H(4,1)*P4W
      PQ=H(1,1)*P1 +H(2,1)*P2 +H(3,1)*P3 +H(4,1)*P4 
C
C     KOREKCIJA FUNKCIJA KADA JE BROJ CVOROVA VECI OD 4
C
C     PETI CVOR
   26 N5=NODPR(II,5)
      IF(N5.EQ.0) GO TO 10
      H(5,1)=.5*RK*SP
      H(5,2)=-R*SP
      H(5,3)=.5*RK
C     SESTI CVOR
   10 N6=NODPR(II,6)
      IF(N6.EQ.0) GO TO 20
      H(6,1)=.5*SK*RM
      H(6,2)=-.5*SK
      H(6,3)=-S*RM
C     SEDMI CVOR
   20 N7=NODPR(II,7)
      IF(N7.EQ.0) GO TO 30
      H(7,1)=.5*RK*SM
      H(7,2)=-R*SM
      H(7,3)=-.5*RK
C     OSMI CVOR
   30 N8=NODPR(II,8)
      IF(N8.EQ.0) GO TO 40
      H(8,1)=.5*SK*RP
      H(8,2)=.5*SK
      H(8,3)=-S*RP
CS    DEVETI CVOR
   40 N9=NODPR(II,9)
      IF(N9.EQ.0) GO TO 45
      H(9,1)=RK*SK
      H(9,2)=-2.D0*R*SK
      H(9,3)=-2.D0*S*RK
CS    KOREKCIJA SVIH CVOROVA AKO POSTOJI DEVETI
      DO 150 I=1,4
      DO 150 J=1,3
         H(I,J)=H(I,J)-.25D0*H(9,J)
  150 CONTINUE
      DO 160 I=5,8
         IF(NODPR(II,I).EQ.0) GO TO 160
         DO 155 J=1,3
            H(I,J)=H(I,J)-0.5D0*H(9,J)
  155    CONTINUE
  160 CONTINUE
C
C     KOREKCIJA PRVA CETIRI CVORA
C
   45 N5=NODPR(II,5)
      IF(N5.EQ.0) GO TO 100
      H(1,1)=H(1,1)-.5*H(5,1)
      H(2,1)=H(2,1)-.5*H(5,1)
      H(1,2)=H(1,2)-.5*H(5,2)
      H(2,2)=H(2,2)-.5*H(5,2)
      H(1,3)=H(1,3)-.5*H(5,3)
      H(2,3)=H(2,3)-.5*H(5,3)
  100 N6=NODPR(II,6)
      IF(N6.EQ.0) GO TO 200
      H(2,1)=H(2,1)-.5*H(6,1)
      H(3,1)=H(3,1)-.5*H(6,1)
      H(2,2)=H(2,2)-.5*H(6,2)
      H(3,2)=H(3,2)-.5*H(6,2)
      H(2,3)=H(2,3)-.5*H(6,3)
      H(3,3)=H(3,3)-.5*H(6,3)
  200 N7=NODPR(II,7)
      IF(N7.EQ.0) GO TO 300
      H(3,1)=H(3,1)-.5*H(7,1)
      H(4,1)=H(4,1)-.5*H(7,1)
      H(3,2)=H(3,2)-.5*H(7,2)
      H(4,2)=H(4,2)-.5*H(7,2)
      H(3,3)=H(3,3)-.5*H(7,3)
      H(4,3)=H(4,3)-.5*H(7,3)
  300 N8=NODPR(II,8)
      IF(N8.EQ.0) GO TO 400
      H(4,1)=H(4,1)-.5*H(8,1)
      H(1,1)=H(1,1)-.5*H(8,1)
      H(4,2)=H(4,2)-.5*H(8,2)
      H(1,2)=H(1,2)-.5*H(8,2)
      H(4,3)=H(4,3)-.5*H(8,3)
      H(1,3)=H(1,3)-.5*H(8,3)
C
C     JAKOBIJAN
C
  400 DO 60 I=1,3
         XJ(1,I)=0.D0
         XJ(2,I)=0.D0
      DO 60 J=1,9
         NJ=NODPR(II,J)
         IF(NJ.EQ.0) GO TO 60
         XJ(1,I)=XJ(1,I)+H(J,2)*CORD(NJ,I)
         XJ(2,I)=XJ(2,I)+H(J,3)*CORD(NJ,I)
   60 CONTINUE
C
C     DETERMINANTA JAKOBIJANA
C
      DETX=XJ(1,2)*XJ(2,3)-XJ(1,3)*XJ(2,2)
      DETY=XJ(1,1)*XJ(2,3)-XJ(1,3)*XJ(2,1)
      DETZ=XJ(1,1)*XJ(2,2)-XJ(1,2)*XJ(2,1)
      DET=DSQRT(DETX*DETX+DETY*DETY+DETZ*DETZ)
      IF(DET.GT.1.0D-10) GO TO 70
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) II,DET
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) II,DET
      STOP ' PROGRAM STOP - PAK071 - JACTP3'
   70 IF(IND.EQ.1) RETURN
      CINA=DETX/DET
      CINB=DETY/DET
      CING=DETZ/DET
      RETURN
C-----------------------------------------------------------------------
 2000 FORMAT(/' ','DETERMINANTA JAKOBIJANA MANJA OD NULE'/
     1' ','3-D PRITISAK BROJ =',I10/' ','DETERMINANTA =',1PD12.5)
 6000 FORMAT(/' ','ZERO OR NEGATIVE DETERMINANTE'/
     1' ','3-D PRESSURE NUMBER =',I10/' ','DETERMINANT =',1PD12.5)
C-----------------------------------------------------------------------
      END
C======================================================================
      SUBROUTINE JACTP33(R,S,H,CORD,NODPR,P1,P2,P3,P1U,P1V,P1W,
     1                  P2U,P2V,P2W,P3U,P3V,P3W,
     1                  PU,PV,PW,PQ,II,NPP,CINA,CINB,CING,IND)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     POVRSINSKI JAKOBIJAN NA GRANICI 3/D TETRA ELEMENTA
C
C
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      DIMENSION NODPR(NPP,*),CORD(NP,*),H(9,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' JACTP33'
      
      CALL CLEAR(H,27)
      H(1,1)=1.-R-S
      H(2,1)=R
      H(3,1)=S
      H(1,2)=-1.
      H(2,2)=1.
      H(3,2)=0.
      H(1,3)=-1.
      H(2,3)=0.
      H(3,3)=1.
      IF(IND.EQ.0) GO TO 26
      PU=H(1,1)*P1U+H(2,1)*P2U+H(3,1)*P3U
      PV=H(1,1)*P1V+H(2,1)*P2V+H(3,1)*P3V
      PW=H(1,1)*P1W+H(2,1)*P2W+H(3,1)*P3W
      PQ=H(1,1)*P1 +H(2,1)*P2 +H(3,1)*P3 
C
C     KOREKCIJA FUNKCIJA KADA JE BROJ CVOROVA VECI OD 3
C
C     CETVRTI CVOR
   26 N5=NODPR(II,5)
      IF(N5.EQ.0) GO TO 10
      H(5,1)=4.*R*(1.-R-S)
      H(5,2)=4.*(1.-R-S)-4.*R
      H(5,3)=-4.*R
C     PETI CVOR
   10 N6=NODPR(II,6)
      IF(N6.EQ.0) GO TO 20
      H(6,1)=4.*R*S
      H(6,2)=4.*S
      H(6,3)=4.*R
C     SESTI CVOR
   20 N7=NODPR(II,7)
      IF(N7.EQ.0) GO TO 45
      H(7,1)=4.*S*(1.-R-S)
      H(7,2)=-4.*S
      H(7,3)=4.*(1.-R-S)-4.*S
C
C     KOREKCIJA PRVA TRI CVORA
C
   45 N5=NODPR(II,5)
      IF(N5.EQ.0) GO TO 100
      H(1,1)=H(1,1)-.5*H(5,1)
      H(2,1)=H(2,1)-.5*H(5,1)
      H(1,2)=H(1,2)-.5*H(5,2)
      H(2,2)=H(2,2)-.5*H(5,2)
      H(1,3)=H(1,3)-.5*H(5,3)
      H(2,3)=H(2,3)-.5*H(5,3)
  100 N6=NODPR(II,6)
      IF(N6.EQ.0) GO TO 200
      H(2,1)=H(2,1)-.5*H(6,1)
      H(3,1)=H(3,1)-.5*H(6,1)
      H(2,2)=H(2,2)-.5*H(6,2)
      H(3,2)=H(3,2)-.5*H(6,2)
      H(2,3)=H(2,3)-.5*H(6,3)
      H(3,3)=H(3,3)-.5*H(6,3)
  200 N7=NODPR(II,7)
      IF(N7.EQ.0) GO TO 400
      H(3,1)=H(3,1)-.5*H(7,1)
      H(1,1)=H(1,1)-.5*H(7,1)
      H(3,2)=H(3,2)-.5*H(7,2)
      H(1,2)=H(1,2)-.5*H(7,2)
      H(3,3)=H(3,3)-.5*H(7,3)
      H(1,3)=H(1,3)-.5*H(7,3)
C
C     JAKOBIJAN
C
  400 DO 60 I=1,3
         XJ(1,I)=0.D0
         XJ(2,I)=0.D0
      DO 60 J=1,9
         NJ=NODPR(II,J)
         IF(NJ.EQ.0) GO TO 60
         XJ(1,I)=XJ(1,I)+H(J,2)*CORD(NJ,I)
         XJ(2,I)=XJ(2,I)+H(J,3)*CORD(NJ,I)
   60 CONTINUE
C
C     DETERMINANTA JAKOBIJANA
C
      DETX=XJ(1,2)*XJ(2,3)-XJ(1,3)*XJ(2,2)
      DETY=XJ(1,1)*XJ(2,3)-XJ(1,3)*XJ(2,1)
      DETZ=XJ(1,1)*XJ(2,2)-XJ(1,2)*XJ(2,1)
      DET=DSQRT(DETX*DETX+DETY*DETY+DETZ*DETZ)
      IF(DET.GT.1.0D-10) GO TO 70
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) II,DET
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) II,DET
      STOP ' PROGRAM STOP - PAK071 - JACTP33'
   70 IF(IND.EQ.1) RETURN
      CINA=DETX/DET
      CINB=DETY/DET
      CING=DETZ/DET
      RETURN
C-----------------------------------------------------------------------
 2000 FORMAT(/' ','DETERMINANTA JAKOBIJANA MANJA OD NULE'/
     1' ','3-D PRITISAK BROJ =',I10/' ','DETERMINANTA =',1PD12.5)
 6000 FORMAT(/' ','ZERO OR NEGATIVE DETERMINANTE'/
     1' ','3-D PRESSURE NUMBER =',I10/' ','DETERMINANT =',1PD12.5)
C-----------------------------------------------------------------------
      END
C=======================================================================
C=======================================================================
      SUBROUTINE SABZAP(RTDT,ZAPS,NPRZ,JEDN)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO ADD BODY FORCES
CS.    P R O G R A M
CS.        ZA DODAVANJE ZAPREMINSKIH SILA
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /FVREME/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON /ZAPSIL/ UBXYZ(3,10),NVFUB(10),INDZS,LZAPS,LNPRZ
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /CDEBUG/ IDEBUG
      DIMENSION RTDT(*),ZAPS(*),NPRZ(*)
C
      IF(IDEBUG.GT.0) PRINT *, ' SABZAP'
C
      DO 10 IZS=1,INDZS
         NF=NVFUB(IZS)
         CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
         IF(IND.GT.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NF,VREME
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NF,VREME
            STOP
         ENDIF
C
      DO 10 NJ=1,JEDN
         IP=NPRZ(NJ)
         IF(IP.GT.0) RTDT(NJ) = RTDT(NJ)+ZAPS(NJ)*UBXYZ(IP,IZS)*FT
   10 CONTINUE
      RETURN
C-----------------------------------------------------------------------
 2000 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     1' VREMENSKA FUNKCIJA BROJ =',I5/
     2' ARGUMENT VREME =',1PD12.4)
C-----------------------------------------------------------------------
 6000 FORMAT(///' ARGUMENT IS OUT OF PRESCRIBED CURVE RANGE'/
     1' TIME FUNCTION NO. =',I5/
     2' ARGUMENT TIME  =',1PD12.4)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE DIVCGR(UPRI,RTDT,KOLKO,ID,ITER) 
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C ISPITIVANJE DIVERGENCIJE POMERANJA U CVORU
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /STARAE/ ENESTA,ENENOV
      COMMON /SRPSKI/ ISRPS
      DIMENSION UPRI(*),RTDT(*),KOLKO(*),ID(NP,*)
C
      IF(ENENOV.LT.ENESTA) THEN
         ENESTA=ENENOV
         RETURN
      ENDIF
      SKAL=1.1
      JBAR=0
      DO 10 I=1,NP
         UPRII=0.
         RTDTI=0.
         DO 11 J=1,3
            NJ=ID(I,J)
            IF(NJ.LE.0) GO TO 11
            UPRII=UPRII+UPRI(NJ)*UPRI(NJ)
            RTDTI=RTDTI+RTDT(NJ)*RTDT(NJ)
   11    CONTINUE
         UPRII=DSQRT(UPRII)
         RTDTI=DSQRT(RTDTI)
         RTDTI=SKAL*RTDTI
         IF(UPRII.GT.RTDTI) THEN
            JBAR=JBAR+1
            KOLKO(I)=KOLKO(I)+1
         ELSE
            KOLKO(I)=0
         ENDIF
   10 CONTINUE
C STAMPANJE DIVERGENTNIH CVOROVA
      IF(JBAR.GT.0) THEN
      IF(ISRPS.EQ.0)
     +WRITE(IZLAZ,*) JBAR,' DIVERGENTNIH CVOROVA U ITERACIJI',ITER
      IF(ISRPS.EQ.0)
     +WRITE(*,*) JBAR,' DIVERGENTNIH CVOROVA U ITERACIJI',ITER
      IF(ISRPS.EQ.1)
     +WRITE(IZLAZ,*) JBAR,' DIVERGENT NODES IN ITERATION',ITER
      IF(ISRPS.EQ.1)
     +WRITE(*,*) JBAR,' DIVERGENT NODES IN ITERATION',ITER
C         CALL STAGDC(KOLKO,A(LCVEL),ICVEL,NP,27,ITER)
         CALL STAUTD(KOLKO,A(LCVEL),ICVEL,NP,27,31,ITER)
      ENDIF
      RETURN
      END
C=======================================================================
C
C====================================================================
      SUBROUTINE FSINT(ID,RTDT,NELCV,NPI,ICVEL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C .......................................................................
C .
CE.   P R O G R A M
CE.       TO FORM CONCENTRATED FORCES OF FLUID-STRUCTURE INTERACTION 
CS.   P R O G R A M
CS.       ZA FORMIRANJE KONCENTRISANIH SILA OD INTERAKCIJE FLUID-STRUKTURA 
C .
C .......................................................................
C
      CHARACTER *24 ZSILE,ZSILB
      include 'paka.inc'
      
      COMMON /CERSIL/ ZSILE
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
C
      DIMENSION VOL(3),RTDT(*),ID(NP,*),NELCV(*)
C
      ZSILB=ZSILE
      ZSILE='ZFLUID                  '
      CALL CONFIL()
      ZSILE=ZSILB
      READ(35,*) NCVOR
C      READ(35,1010) NCVOR
      DO 10 JJ=1,NCVOR
         READ(35,*) NOD,(VOL(K),K=1,3)
C         READ(35,1010) NOD,(VOL(K),K=1,3)
         KPNN=NOD
CZILE PROVERI         IF(ICVEL.NE.0) KPNN=NELCV(NOD-NPI+1)
         DO 20 K=1,3 
            I=ID(KPNN,K)
            IF(I.GT.0) RTDT(I)=RTDT(I)+VOL(K)
   20    CONTINUE
   10 CONTINUE
      CLOSE(35)
      RETURN
C-----------------------------------------------------------------------
C 1010 FORMAT(I5,3E13.5)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE FORMCP
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM POINTERS OF NODAL PRESSURES
CS.   P R O G R A M
CS.      ZA FORMIRANJE REPERA ZA CVORNE PRITISKE
C .
C ......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DUPLAP/ IDVA
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /OPSTIP/ JPS,JPBR,NPG,JIDG,JCORG,JCVEL,JELCV,NGA,NGI,NPK,
     1                NPUP,LIPODS,IPODS,LMAX13,MAX13,JEDNG,JMAXA,JEDNP,
     1                NWP,NWG,IDF,JPS1
      COMMON /OPTERE/ NCF,NPP2,NPP3,NPGR,NPGRI,NPLJ,NTEMP
      COMMON /PRITGR/ LPRCV
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' FORMCP'
      LFFUG = LRAD
      LNFUG = LFFUG + NPGR*IDVA
      LNFUJ = LNFUG + NPGR
      LMAX  = LNFUJ + NPGR
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      NPRO=LMAX-LRAD
      CALL DELJIV(NPRO,2,INDL)
      IF(INDL.EQ.1) NPRO=NPRO+1
C
      CALL READDD(A(LFFUG),NPRO/IDVA,IPODS,LMAX13,LDUZI)
      CALL CLEAR(A(LPRCV),NP)
      CALL FTDTCT(A(LPRCV),A(LNFUJ),A(LNFUG),A(LFFUG),VREME,NPGR)
      RETURN
      END

