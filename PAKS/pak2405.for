C=======================================================================
C
C   PLASTICNOST 2/D ELEMENT
C
C    SUBROUTINE MODMAT
C               D2M5
C               TAUIN5
C               TEQBIS
C               PRILAM
C               DEVEQ
C
C======================================================================
      SUBROUTINE D2M5(TAU,DEF,IRAC,LPOCG,LPOC1,IBTC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PROGRAM ZA ODREDIVANJE LOKACIJA VELICINA KOJE SE CUVAJU
C     NA NIVOU INTEGRACIONE TACKE
      include 'paka.inc'
      
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
C
      COMMON /REPERM/ MREPER(4)
C
      COMMON /DUPLAP/ IDVA
C
      DIMENSION TAU(*),DEF(*)
C
      LFUN=MREPER(1)
      LNTA=MREPER(2)
      MATE=MREPER(4)
      LTAU=LPOCG
      LDEFT=LTAU + 4*IDVA
      LDEFPT=LDEFT + 4*IDVA
      LTEQT=LDEFPT + 4*IDVA
      LTEQYT=LTEQT + 1*IDVA
      LDQPT=LTEQYT + 1*IDVA
      LIPL = LDQPT + IDVA
C
      LTAU1=LPOC1
      LDEFT1=LTAU1 + 4*IDVA
      LDEFP1=LDEFT1 + 4*IDVA
      LTEQT1=LDEFP1 + 4*IDVA
      LTEQY1=LTEQT1 + 1*IDVA
      LDQPT1=LTEQY1 + 1*IDVA
      LIPL1 = LDQPT1 + IDVA
      KN=LDQPT1+1
C
      CALL TAUIN5(A(LIPL),A(LTAU),A(LDEFT),A(LDEFPT),A(LTEQT),
     1A(LTEQYT),A(LDQPT),A(LIPL1),A(LTAU1),A(LDEFT1),A(LDEFP1),A(LTEQT1)
     1,A(LTEQY1),A(LDQPT1),A(LFUN),A(LNTA),MATE,TAU,DEF,IRAC,IBTC)
C
      RETURN
      END
C======================================================================
      SUBROUTINE TAUIN5( PL,TAUT,DEFT,DEFPT,TEQT,TEQYT,DEFQPT,
     1            PL1,TAU1,DEF1,DEFP,TEQ,TEQY,DEFQP,FUN,NTA,MATE,
     1           TAU,DEF,IRAC,IBT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PODPROGRAM ZA INTEGRACIJU KONSTITUTIVNIH RELACIJA ZA ELASTOPLASTIC
C     ELASTOPLASTICAN MATERIJAL SA IZOTROPNIM OJACANJEM
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
C
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
C
      COMMON /TAUD2/ TAUD(4),DEFDPR(4),DEFDS(4),DDEFP(4),
     1              DETAU(4),DDEF(4)
C
      COMMON/MAT2D/E,ANI,ET,TEQY0
C
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
C
      COMMON/PLASTI/LPLAST,LPLAS1,LSIGMA
C
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON/ITERBR/ITER
C
      COMMON /CONMAT/ AE,EP,DVT
C
      DIMENSION TAUT(*),DEFT(*),DEFPT(*),TAU(*),DEF(*),TAU1(*),DEF1(*),
     1          DEFP(*)
      DIMENSION FUN(2,MATE,*),NTA(*)
C
C     OSNOVNE KONSTANTE
C
      ISEG=0
      IPLSS=IETYP
      NTT=NTA(MAT)
      IF(NTT.GT.1) ISEG=NTT-1
      IPL=PL
      IPL1=PL1
      DVT=2.0D0/3.0D0
C
C     INICIJALIZACIJA OSNOVNIH VELICINA
C
      ET=FUN(2,MAT,2)
      E=FUN(1,MAT,1)
      ANI=FUN(2,MAT,1)
      TEQY0=FUN(2,MAT,2)
      IF(ISEG.EQ.0)TEQY0=FUN(1,MAT,2)
CC      IF(IPL.EQ.1)TEQYT=TEQT
      IF(ISEG.EQ.0.AND.IPL.EQ.0)TEQYT=TEQY0
CC      TEQ=TEQT
       IF(KOR.EQ.1) THEN
        TEQY=TEQY0
        TEQYT=TEQY0 
       ENDIF
CC      IF(IPL.EQ.1) TEQY=TEQT
      CALL MEL05(FUN,NTA,MATE,IRAC,IPL1,TAU)
      AE=(1.0D0+ANI)/E
      IF(IRAC.EQ.2) RETURN
      DO 10 I=1,4
      TAU(I)=0.0D0
      DDEF(I)=DEF(I)-DEFT(I)
   10 CONTINUE
C
C     PROVERA ELASTICNOG RESENJA
C
      EP=E*ET/(E-ET)
C
C     ODREDIVANJE NAPONA KOJI ODGOVARA ELASTICNOM RESENJU

      KS=3
      IF(IPLSS.EQ.1)KS=4
C
      DO 20 I=1,KS
      DO 20 J=1,KS
   20 TAU(I)=TAU(I) + ELAST(I,J)*(DEF(J) - DEFPT(J))
      IF(IPLSS.NE.2) GO TO 180
CC      CRSD=(1.0D0-ANI)/(1.0D0+ANI)/(1.0D0-2.0D0*ANI)
C      TAU(4)=CRSD*(TAU(1)+TAU(2))
       TAU(4)=ANI*(TAU(1)+TAU(2))
  180 CONTINUE
C
C     ODREDIVANJE EFEKTIVNOG NAPONA KOJI ODGOVARA ELASTICNOM RESENJU
      II=1
      CALL DEVEQ(TAU,II,TAUEQE,TAUD)
      IF(TAUEQE.GT.TEQYT) GO TO 340
      TEQ=TAUEQE
      DEFQP=0.0D0
      DO 600 I=1,4
  600 DEFP(I)=DEFPT(I)
      GO TO 100
340    PL1=1.0D0
C      IF(IPLSS.EQ.0) GO TO 150
C
C     RESENJE JE ELASTOPLASTICNO , TREBA ODREDITI PRIRASTAJ PLASTICNE
C     DEFORMACIJE IPRIRASTAJ NAPONA PRIMENOM FUNKCIJE EFEKTIVNOG NAPONA
C
C     ODREDIVANJE DEVIJATORA UKUPNE DEFORMACIJE
C
      EMT = (DEF(1)+DEF(2)+DEF(4))/3.0D0
      DEFDPR(1)=DEF(1)-EMT
      DEFDPR(2)=DEF(2)-EMT
      DEFDPR(3)=DEF(3)
CC      IF(IPLSS.GT.0) GO TO 190
      DEFDPR(4)=DEF(4)-EMT
C
      DO 30 I=1,4
   30 DEFDS(I)=DEFDPR(I)-DEFPT(I)
C     ODREDIVANJE POJEDINIH CLANOVA FUNKCIJE EFEKTIVNOG NAPONA
C
      DKV=1.5D0*(DEFDS(1)*DEFDS(1)+DEFDS(2)*DEFDS(2)+DEFDS(4)*DEFDS(4)
     1+2.0D0*DEFDS(3)*DEFDS(3))
      DD=DSQRT(DKV)
      TAUEQE=DD/AE
      IF(IPLSS.EQ.0) GO TO 150 
      IF(ISEG.EQ.0.AND.IPLSS.GT.0) GO TO 330
       ISE=1
  400 ISE=ISE+1
      IF(ISE.GT.ISEG) GO TO 422
      TEQ=  FUN(2,MAT,ISE)
      DEFPP=FUN(1,MAT,ISE)
      IF(DEFPP.LT.DEFQPT) GO TO 400
      DDP=DEFPP-DEFQPT
      F=  AE*TEQ+1.5D0*DDP-DD
       IF(F) 400,410,420
  410 TEQ= (DD-1.5D0*DDP)/AE
      DLAM=1.5D0*DDP/TEQ
       GO TO 331
  420 EPI=(FUN(2,MAT,ISE)-FUN(2,MAT,ISE-1))/
     1    (FUN(1,MAT,ISE)-FUN(1,MAT,ISE-1))
      DDP=FUN(1,MAT,ISE)-DEFQPT
      TEQ= (DD-1.5D0*(DDP-FUN(2,MAT,ISE)/EPI))/(AE+1.5D0/EPI)
      DLAM=1.5D0*(DDP+(TEQ-FUN(2,MAT,ISE))/EPI)/TEQ    
       GO TO 331
  422 CONTINUE
      TEQ=FUN(2,MAT,ISEG)
      DLAM=1.5D0*(FUN(1,MAT,ISEG)-DEFQPT)/TEQ
      GO TO 331
C
C     PRIMENA POSTUPKA BISEKCIJE ZA
C     ODREDIVANJE NULE FUNKCUJE EFEKTIVNOG NAPONA
C     UBACITI FILE BISE
C
  150 IBISE=0
      IM=0
      IP=0
      TM=0.0D0
      TFM=0.0D0
      TP=0.0D0
      TFP=0.0D0
      IBISM=100
      TEQ1=TEQ
      TOLBIS=1.0D-6
      DTEQ=TAUEQE-TEQT
C
   50 IBISE=IBISE+1
C     TEQ1=TEQ
      IF(IBISE.EQ.1)TEQ=TAUEQE
      IF(IBISE.EQ.2)TEQ=TEQY
C
C     ODREDIVANJE DELTA LAMBDA
C
       CALL PRILA2(TEQ,ISEG,DLAM,TEQYT,EP,FUN,NTA,DEFQPT,MAT,MATE)
C
      IF(IPLSS.GT.0) GO TO 200
      CN=(1.0D0-2.D0*ANI)/(3.0D0*(1.0D0-ANI))
      CN1=1.0D0-CN
      ADL=AE+DLAM
      ADLR=1.0D0/ADL
C
C     DD1=DEF(1)-DEFPT(1)
C     DD2=DEF(2)-DEFPT(2)
C     DEFDS(1)=DD1*CN1-DD2*CN
C     DEFDS(2)=DD2*CN1-DD1*CN
      DEFDS(1)=CN1*DEF(1)-CN*DEF(2)-CN1*DEFPT(1)+CN*DEFPT(2)
      DEFDS(2)=CN1*DEF(2)-CN*DEF(1)-CN1*DEFPT(2)+CN*DEFPT(1)
C
      DEFDS(3)=DEF(3)-DEFPT(3)
      B1=AE+CN1*DLAM
      B2=CN*DLAM
      B1B2=B1*B1-B2*B2
C
C     KOMPONENTE DEVIJATORA NAPONA ZA RAVNO STANJE NAPONA
C
      TAUD(1)=(B1*DEFDS(1)+B2*DEFDS(2))/B1B2
      TAUD(2)=(B2*DEFDS(1)+B1*DEFDS(2))/B1B2
      TAUD(4)=-TAUD(1)-TAUD(2)
      TAUD(3)=ADLR*DEFDS(3)
C
C     FUNKCIJA EFEKTIVNOG NAPONA ZA RAVNO STANJE NAPONA
C
      TFQ=TAUD(1)*TAUD(1)+TAUD(2)*TAUD(2)+2.0D0*TAUD(3)*TAUD(3)
     1    +TAUD(4)*TAUD(4)-DVT*TEQ*TEQ
      IF(IPLSS.EQ.0) GO TO 220
C
  200 CONTINUE
      ADL=AE+DLAM
      TFQ=ADL*ADL*TEQ*TEQ-DKV
C
  220 CONTINUE
      TEQ1=TEQ
      CALL TEQBIS(TEQ,DTEQ,TFQ,TM,TFM,TP,TFP,IM,IP,IBISE)
      IF(IBISE.EQ.1) GO TO 50
      DTEQB=DABS(TEQ1-TEQ)
      TOLSR=DABS(TEQ+TEQ1)/2.0D0
      IF(TOLSR.LT.1.D-9) GO TO 79
      TTOL=DTEQB/TOLSR
      IF(TTOL.LT.TOLBIS)GO TO 60
   79 IF((DABS(TFP).LE.TOLBIS).AND.(DABS(TFM).LE.TOLBIS)) GO TO 60
      IF(IBISE.LE.IBISM) GO TO 50
      WRITE(6,1000)
 1000 FORMAT(' ','DOSTIGNUT MAKSIMALAN BROJ BISEKCIJA U TAUINT5')
      STOP
C
C     ODREDIVANJE KOMPONENATA DEVIJATORA NAPONA
   60 CONTINUE
  330 CONTINUE
      IF(IPLSS.EQ.0)GO TO 240
      TEQ=(2.0D0*EP*DD+3.0D0*TEQYT)/(2.0D0*EP*AE+3.0D0)
      CALL PRILA2(TEQ,ISEG,DLAM,TEQYT,EP,FUN,NTA,DEFQPT,MAT,MATE)
C
  331 CONTINUE
C     
      ADL=AE+DLAM
      ADLR=1.0D0/ADL
      DO 65 I=1,4
   65 TAUD(I)=ADLR*DEFDS(I)
C
C     ODREDIVANJE PRIRASTAJA PLASTICNE DEFORMACIJE
C
  240 IF(IPLSS.GT.0) GO TO 310
      DDEFP(1)=DLAM*TAUD(1)
      DDEFP(2)=DLAM*TAUD(2)
      DDEFP(3)=DLAM*TAUD(3)
      DDEFP(4)=-DDEFP(1)-DDEFP(2)
      GO TO 320
  310 DO 70 I=1,4
      DDEFP(I)=DLAM*TAUD(I)
   70 CONTINUE
C
C     ODREDIVANJE PLASTICNE DEFORMACIJE
C
  320 DO 170 I=1,4
  170 DEFP(I)=DEFPT(I)+DDEFP(I)
C
C     EKVIVALENTNA PLASTICNA DEFORMACIJA
C
      DDEFQP=DDEFP(1)*DDEFP(1)+DDEFP(2)*DDEFP(2)+
     1       2.0D0*DDEFP(3)*DDEFP(3)+DDEFP(4)*DDEFP(4)
      DDEFQP=DSQRT(DVT*DDEFQP)
      DEFQP=DEFQPT+DDEFQP
C
C     ODREDIVANJE NAPONA
C
      IF(IPLSS.GT.0) GO TO 260
      EMT=CN*(DEF(1)+DEF(2)-DEFP(1)-DEFP(2))
  260 TAUM=E/(1.0D0-2.0D0*ANI)*EMT
      TAU(1)=TAUD(1)+TAUM
      TAU(2)=TAUD(2)+TAUM
      TAU(3)=TAUD(3)
      IF(IPLSS.EQ.0) GO TO 250
      TAU(4)=TAUD(4)+TAUM
      GO TO 270
  250 DEF(4)=-ANI/(1.0D0-ANI)*(DEF(1)+DEF(2)-DEFP(1)-DEFP(2))-
     1        DEFP(1)-DEFP(2)
C
  270 CONTINUE
C     KORIGOVANJE VELICINA IZ PRETHODNOG KORAKA KAD JE POSTIGNUTA
C     KONVERGENCIJA
C
      IF(TEQ.GT.TEQYT) TEQY=TEQ
C
      IF(ITER.GT.0.AND.METOD.EQ.4) THEN 
      DO 430 I=1,4
  430 DEFDS(I)=DEFDPR(I)-DEFP(I)
C     ODREDIVANJE POJEDINIH CLANOVA FUNKCIJE EFEKTIVNOG NAPONA
C
      DKV=1.5D0*(DEFDS(1)*DEFDS(1)+DEFDS(2)*DEFDS(2)+DEFDS(4)*DEFDS(4)
     1    +2.0D0*DEFDS(3)*DEFDS(3))
      DD=DSQRT(DKV)
      DDEFQP=DEFQP-DEFQPT
      CALL ELPLM(DEFDS,DD,DLAM,TEQ,DDEFQP)
      ENDIF
C
  100 CONTINUE
      TEQY=TEQYT
      IF(TEQ.GT.TEQYT) TEQY=TEQ
      DO 290 I=1,4
      DEF1(I)=DEF(I)
  290 TAU1(I)=TAU(I)
      RETURN
      END
C======================================================================
      SUBROUTINE TEQBIS(X,DX,F,XM2,FM2,XP2,FP2,IM,IP,IBISE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PODPROGRAM ZA RESAVANJE NELINEARNE JEDNACINE F(X)=0.
C
      COMMON /BISEK/ X1,F1,XM1,FM1,XP1,FP1,IR
      FUBRZ=1.0D0
      IF(IBISE.GT.2) GO TO 10
      IF(IBISE.GT.1) GO TO 5
      X1=X
      F1=F
    5 IF(IBISE.GT.2) GO TO 10
      IR=1
      IF(X.GT.X1.AND.F.GT.F1) IR=2
C
   10 IF(F)20,100,30
   20 IM=IM+1
      IF(IM.GT.1) GO TO 22
      XM2=X
      FM2=F
      GO TO 50
   22 IF(F.LT.FM2) GO TO 50
      XM1=XM2
      FM1=FM2
      XM2=X
      FM2=F
C  25 X=XM1+(XM2-XM1)/(FM2-FM1)*FM1
C     GO TO 100
      GO TO 50
   30 IP=IP+1
      IF(IP.GT.1) GO TO 32
      XP2=X
      FP2=F
      GO TO 50
   32 IF(F.GT.FP2) GO TO 50
      XP1=XP2
      FP1=FP2
      XP2=X
      FP2=F
C  35 X=XP1+(XP2-XP1)/(FP2-FP1)*FP1
C     GO TO 100
   50 CONTINUE
      IF(IBISE.EQ.1) GO TO 60
      IF(IM.GT.0.AND.IP.GT.0) GO TO 80
      IF(IP.GT.0) GO TO 60
      DX=DABS(0.3D0*X)*FUBRZ
      IF(IR.EQ.1) GO TO 55
      X=X+DX
      GO TO 100
   55 X=X-DX
      GO TO 100
   60 DX=DABS(0.3D0*X)*FUBRZ
      IF(IR.EQ.1) GO TO 65
      X=X-DX
      GO TO 100
   65 X=X+DX
      GO TO 100
C
C     KORENI SU RAZDVOJENI - METOD BISEKCIJE
C
   80 IF(IM.GT.5.AND.IP.GT.5) GO TO 90
C  80 CONTINUE
      X=(XP2+XM2)/2.0D0
      DX=XP2-XM2
      GO TO 100
C
C     METOD SECICE
C
C  90 IF(IBISE.GT.10) GO TO 200
   90 CONTINUE
      X=XP2-(XM2-XP2)/(FM2-FP2)*FP2
      DX=XP2-XM2
  100 CONTINUE
      RETURN
      END
C======================================================================
      SUBROUTINE PRILA2(TEQ,ISEG,DLAM,TEQYT,EP,FUN,NTA,DEFQPT,
     1                  MAT,MATE)
C      SUBROUTINE PRILAM(TEQ,DLAM,TEQYT,EP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PODPROGRAM ZA ODREDIVANJE PRIRASTAJA EFEKTIVNE PLASTICN
C     DEFORMACIJE I ODREDIVANJE PRIRASTAJA LAMBDA ZA DATU VREDNOST
C     EFEKTIVNOG NAPONA
C
      COMMON/MAT2D/E,ANI,ET,TEQY0
C
      DIMENSION FUN(2,MATE,*),NTA(*)
C
C     UGRADENA SAMO BILINEARNA ZAVISNOST
C
      IF(ISEG.GT.0) GO TO 50
C     BILINEARNA KRIVA
      DE=E-ET
      IF(DE.GT.0.0001)GO TO 30
      WRITE(3,100)
  100 FORMAT(' ','PERFEKTNA PLASTICNOST NIJE UGRADENA')
      STOP
   30 CONTINUE
      IF(DABS(TEQ).GT.TEQYT) GO TO 140
      DLAM=0.0D0
      GO TO 150
  140 DLAM=1.5D0*(1.0D0-TEQYT/TEQ)/EP
  150 CONTINUE
      RETURN
C
C     MULTILINEARNA KRIVA
C
   50 CONTINUE
      I=1
  60  I=I+1
CC      IF(I.GT.NTA(MAT)) THEN 
CC      DPTD=FUN(1,MAT,NTA(MAT))
CC      GO TO 250
CC      ENDIF
      TI=FUN(2,MAT,I)
      IF(TEQ.LE.TI)THEN
      DLAM=0.0D0
      GO TO 90
      ENDIF
      TI1=FUN(2,MAT,I+1)
      IF(TEQ.GT.TI.AND.TEQ.LE.TI1) GO TO 61
      GO TO 60
   61 DPI = FUN(1,MAT,I)
      DPI1= FUN(1,MAT,I+1)
      DPTD= DPI + (TEQ-TI)*(DPI1-DPI)/(TI1-TI)
C
      DLAM=1.5D0*(DPTD-DEFQPT)/TEQ
      EP=(FUN(2,MAT,I+1)-FUN(2,MAT,I))/(FUN(1,MAT,I+1)-FUN(1,MAT,I))
      IF(DLAM.LT.0.0D0) DLAM=0.0D0
C
  90  RETURN
      END
C======================================================================
      SUBROUTINE DEVEQ(TAU,II,TEQ,TAUD)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PODPROGRAM ZA ODREDIVANJE DEVIJATORA NAPONA EVIVALENTNOG NAPONA
C
      DIMENSION TAU(*),TAUD(*)
C
      GO TO(10,20),II
C
C     RAVNO STANJE DEFORMACIJE ILI OSNOSIMETRICAN PROBLEM
C
   10 TAUM=(TAU(1)+TAU(2)+TAU(4))/3.0D0
C
      DO 15 I=1,4
      IF(I.EQ.3) GO TO 16
      TAUD(I)=TAU(I)-TAUM
      GO TO 15
   16 TAUD(I)=TAU(I)
   15 CONTINUE
C
      TEQ=TAUD(1)*TAUD(1)+TAUD(2)*TAUD(2)+TAUD(4)*TAUD(4)+
     1    2.0D0*TAUD(3)*TAUD(3)
      TEQ=DSQRT(1.5D0*TEQ)
      RETURN
C     RAVNO STANJE NAPONA
   20 WRITE(6,100)
  100 FORMAT(' ','RAVNO STANJE NAPONA NIJE UGRADENO- DEVEQ')
      STOP
      END
C======================================================================
      SUBROUTINE ELPLM(DEFDS,DD,DLAM,TEQ,DDEFQP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICE ELAST
CE     ELAST MATRIX
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON/MAT2D/E,ANI,ET,TEQY0
      COMMON /CONMAT/ AE,EP,DVT
      COMMON /CDEBUG/ IDEBUG
      DIMENSION DEFDS(4),CP(4,4) 
C
      IF(IDEBUG.GT.0) PRINT *, ' ELPLM '
C
C      E, V, ALFA
C
      DO 10 I=1,4
      DO 10 J=1,4
      CP(I,J)=0.0D0
   10 ELAST(I,J)=0.0D0
C
      A=1.0D0/(AE+DLAM)
      B=1.5D0*A*A*(TEQ-DDEFQP*EP)/(AE*EP+1.5D0)/(TEQ*TEQ*DD)
C
      DO 20 I=1,4
      DO 20 J=I,4
      DSKJ=DEFDS(J)
      IF(J.EQ.3)DSKJ=2.0D0*DEFDS(J)
        IF(I.EQ.J) THEN
        CP(I,J)=A-B*DEFDS(I)*DSKJ
         ELSE
         CP(I,J)=-B*DEFDS(I)*DSKJ
        ENDIF
   20 CONTINUE
C
      TR=DVT/2.0D0
      CM=E/(1.0D0-2.0D0*ANI)
C
      ELAST(1,1)=TR*(2.0D0*CP(1,1)-CP(1,2)-CP(1,4)+CM)
      ELAST(2,2)=TR*(2.0D0*CP(2,2)-CP(1,2)-CP(2,4)+CM)
      ELAST(4,4)=TR*(2.0D0*CP(4,4)-CP(1,4)-CP(2,4)+CM)
      ELAST(3,3)=0.5D0*CP(3,3)
      ELAST(1,2)=TR*(2.0D0*CP(1,2)-CP(1,1)-CP(1,4)+CM)
      ELAST(1,4)=TR*(2.0D0*CP(1,4)-CP(1,1)-CP(1,2)+CM)
      ELAST(2,4)=TR*(2.0D0*CP(2,4)-CP(2,1)-CP(2,2)+CM)
      ELAST(1,3)=0.5D0*CP(1,3)
      ELAST(2,3)=0.5D0*CP(2,3)
      ELAST(3,4)=0.5D0*CP(3,4)
C
      DO 30 I=1,4
      DO 30 J=1,4
      IF(I.GT.J)ELAST(I,J)=ELAST(J,I)
   30 CONTINUE
C
      IF(IETYP.EQ.0) THEN
      DO 40 I=1,3
      DO 40 J=1,3
      ELAST(I,J)=ELAST(I,J)-ELAST(I,4)*ELAST(4,J)/ELAST(4,4)
  40  CONTINUE
      ENDIF
C
      RETURN
      END
