C$DEBUG      
C===========================================================================
C===========================================================================
C     SUBROUTINE PPAKF
C                CFD
C                CFDD
C
C===========================================================================
C===========================================================================
      SUBROUTINE PPAKF(A,LPAKF,NNPER,LMMAX,IS,VREM0,KORBR)
      DIMENSION IS(*)
C
CE    Subroutine PPAKF is used for calling CFD analysis
C
      DIMENSION A(*)
      REAL A
     
       CHARACTER*250 NASLOV
	     
       CALL INTREA(NIDATF,A(LPAKF+0))
       CALL INTREA(NRDATF,A(LPAKF+1))
       CALL INTREA(LIDATF,A(LPAKF+2))
       CALL INTREA(LDATF,A(LPAKF+3))
       CALL INHEAD(A(LPAKF+4),NASLOV)        

       CALL CFD(NASLOV,A,A(LIDATF),A(LDATF),NNPER,LMMAX,IS,VREM0,KORBR)


      END
C===========================================================================
C===========================================================================
      SUBROUTINE CFD(NASLOV,A,I,R,NNPER,LMMAX,IS,VREM0,KORBR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON /ALE/ IALE,METOD
      CHARACTER*250 NASLOV
      DIMENSION A(*),I(*),R(*),IS(*)
      REAL A
C
CE    Subroutine CFD is used for calling CFD analysis
C

      LMAX=LMMAX
      LMAX0=LMAX
      NTOT=I(23)
      NETIP=I(25)
      IULAZ=I(26)
      IZLAZ=I(27)
      NPT=I(30)
      NEQ=I(33)
     	NWK=I(34)
      NET=I(35)
      NDES=I(38)
      IDPRIT=I(39)
      LSPSIL=I(21)
      I(43)=KORBR
      R(11)=VREM0


        CALL MEMORY(LVMESH,LMAX,NPT*3,2,NTOT,IZLAZ)
        CALL MEMORY(LCORD0,LMAX,NPT*3,2,NTOT,IZLAZ)

       LAMASA=LMAX
       LVELOC=LMAX
       LGNOD0=LMAX
       LVMSH0=LMAX

      IF (METOD.EQ.2) THEN
       CALL MEMORY(LAMASA,LMAX,NPT,2,NTOT,IZLAZ)
       CALL MEMORY(LVELOC,LMAX,NPT*3,2,NTOT,IZLAZ)
      ELSEIF (IALE.EQ.2) THEN
       CALL MEMORY(LGNOD0,LMAX,NPT*3,2,NTOT,IZLAZ)
       CALL MEMORY(LVMSH0,LMAX,NPT*3,2,NTOT,IZLAZ)
      ENDIF
       
      CALL MEMORY(LSKEF,LMAX,NDES*NDES,2,NTOT,IZLAZ)
      CALL MEMORY(LPRES,LMAX,3*NPT,2,NTOT,IZLAZ)
      CALL MEMORY(LPRIT,LMAX,IDPRIT*NET,2,NTOT,IZLAZ)
      CALL MEMORY(LALEVO,LMAX,NWK,2,NTOT,IZLAZ)
      CALL MEMORY(LDESNO,LMAX,NWK,2,NTOT,IZLAZ)
      CALL MEMORY(LSILE,LMAX,NEQ,2,NTOT,IZLAZ)

      CALL CLEARR(A(LMAX0),LMAX-LMAX0+1)


C CALLING COMPUTATIONAL FLUID DYNAMICS ROUTINE
      CALL CFDD(A,NASLOV,A(I(1)),A(I(2)),A(I(3)),A(I(4)),A(I(5)),
     &A(I(6)),A(I(7)),A(I(8)),A(I(9)),A(I(10)),A(I(11)),A(I(12)),
     &A(I(13)),A(I(14)),A(I(15)),A(I(16)),A(I(17)),A(I(18)),A(I(19)),
     &A(I(20)),A(I(21)),I(24),I(25),I(26),I(27),I(28),I(29),I(30),I(31),
     &I(32),I(33),I(34),I(35),I(36),I(37),I(38),I(39),I(40),I(41),I(42),
     &I(43),A(I(46)),R(1),R(2),R(3),R(4),R(5),R(6),R(7),R(8),R(9),R(10),
     &R(11),A(LSKEF),A(LPRES),A(LPRIT),A(LALEVO),A(LDESNO),A(LSILE),
     &NNPER,I,IS,LMAX,NTOT,A(LAMASA),A(LVMESH),A(LVELOC),A(I(45)),
     &A(LGNOD0),A(LCORD0),A(LVMSH0))

C End of subroutine CFD
      END
C=========================================================================
C=========================================================================
      SUBROUTINE CFDD(A,NASLOV,VREME,NTABF,ID,CORD,NEL,NZAD,ZADVRE,TABF,
     &ITFMAX,NGPSIL,MAXA,MHT,TT1,TT10,CCORD,SPAR1,AKc,
     &IKc,ROW,INDEL,SPSIL,MAXIT,NETIP,IULAZ,IIZLAZ,INDAMI,NUMZAD,NPT,
     &NDIM,MAXSIL,JEDN,NWK,NET,NPER,NTABFT,NDES,IDPRIT,IFORM,NSTAC,INDAX
     &,KKORAK,GNODE,GUSM,CC,AKT,EPSTR,AMI,BETA,TETAO,FB2,FB3,PENALT,
     &VVREME,SKEF,PRES,PRIT,ALEVO,DESNO,SILE,NNPER,INIZ,IS,LMAX,NTOTF,
     &AMASA,VMESH,VELOC,IDALE,GNOD0,CCORD0,VMESH0)
      USE FSIDENT
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CE Subroutine CFDD makes 2-D and 3-D analysis with fluid-structure coupling
C
      COMMON /INTERA/ IINTER,NPTI
      COMMON /SRPSKI/ ISRPS
      COMMON /CDEBUG/ IDEBUG
      COMMON /AKIRA/ VOLT,PBALL,VSR,PBOX,PTUBE
      COMMON /AKIRA1/ VOLT1,PBALL1,VSR1,PTUBE1
      COMMON /ALE/ IALE,METOD


      CHARACTER*250 NASLOV
      DIMENSION TT1(*),ALEVO(*),DESNO(*),SILE(*),ZADVRE(*),CORD(3,*)
      DIMENSION NEL(NDIM,*),ID(5,*),NZAD(3,*)
      DIMENSION NGPSIL(3*NETIP-1,*),MAXA(*)
      DIMENSION SKEF(NDES,*),TT10(*),MHT(*),TABF(2,NTABFT,*)
      DIMENSION ITFMAX(*),INDEL(*),NTABF(*)
      DIMENSION PRIT(IDPRIT,*),SPSIL(NETIP,*),CCORD(3,*),PRES(3,*)
      DIMENSION AMASA(*),VMESH(3,*),VELOC(3,*),IDALE(3,*)
      DIMENSION GNOD0(3,*),CCORD0(3,*),VMESH0(3,*)

	DIMENSION AKc(*),IKc(2,*),ROW(*)
      DIMENSION LM2(92)
      DIMENSION VREME(*),GNODE(2,5,*)
      DIMENSION INIZ(*),IS(*)


      DIMENSION A(*)
      REAL A


      ITER=0
      INDSK=1

C ONLY FOR EXAMPLE SOLITARY WAVE PROPAGATION
C      IF (IALE.EQ.1.AND.KKORAK.EQ.1) THEN
C       CALL POCET(GNODE,IDALE,CORD,CCORD,0.D0,NPT)
C      ENDIF

       
C VVREME is global time
C KKORAK is global step

      KORAK=0

C KORAK is local step at each period NNPER

      KORAK=KORAK+1
       ITER=0

      TIME=VREME(NNPER)


c TT10-vector of unknowns values at start of every time step
 
      DO I=1,JEDN
       TT10(I)=TT1(I)
      ENDDO
      
      DO 20 I=1,NDES
 20   LM2(I)=0

      IF (IALE.EQ.2) THEN
      DO NODE=1,NPT
       DO I=1,3
        GNOD0(I,NODE)=GNODE(1,I,NODE)
       ENDDO
      ENDDO
      ENDIF


CE ONLY TEMPORARILY FOR AKIRA EXAMPLE FLUID FLOW THROUGH ELASTIC TUBE
CS SAMO PRIVREMENO ZA AKIRIN PRIMER STRUJANJA FLUIDA KROZ ELASTICNU CEV
C      CALL BALLON(ID,TT1,TT10,CCORD,FK1,TIME,VVREME,KKORAK,
C     &ITER,NPT,IIZLAZ,PRES,ZADVRE,NUMZAD)
C      CALL ZBALL(GNODE,CCORD,TIME,VVREME,KKORAK,ITER,NPT,IIZLAZ,CORD)
C================================================================
      IF (NPTI.GT.0.AND.NSTAC.EQ.1) CALL CLEAR(GNODE,2*5*NPT)
      CALL ZADNOD(GNODE,ZADVRE,NZAD,TABF,VVREME,ITFMAX,NTABFT,
     &IIZLAZ,NUMZAD,NPT)


      DO NODE=1,NPT
       DO I=1,5
        GNODE(1,I,NODE)=GNODE(2,I,NODE)
       ENDDO
      ENDDO

      IF (NPTI.GT.0.AND.KKORAK.GT.1) THEN
        CALL TCORDC(CCORD,CCORD0,NPT,NETIP)
      ALLOCATE (IDENT(2,NPTI))
      REWIND IINTER
      CALL READD(IDENT,NPTI,IINTER)
      CALL NOVEKF(CCORD,IDENT,NPTI,IINTER,NPT,NETIP)
      DEALLOCATE (IDENT)     
cz        CALL WALLPS(A,INIZ,LMAX,GNODE,A(1),NETIP,NSTAC,TIME,CCORD,NPT,
cz     &NEL,NDIM,NET)
        CALL GREZON(VMESH,CCORD,CCORD0,NPT,NETIP,TIME)
      ENDIF

C==========================================================================
C LABELA 100:
C==========================================================================
C MAXIT is maximal number of iteration

 100  IF (ITER.GT.MAXIT) THEN

        WRITE(IIZLAZ,3001) MAXIT
 3001 FORMAT(//
     1,'DOSTIGNUT JE MAKSIMALAN BROJ OD ',I5,' ITERACIJA BEZ POSTIZANJA 
     1KONVERGENCIJE!!'//)
       STOP
       ENDIF

C NWK is number of terms of stiffness matrix in skyline procedure
C ALEVO is upper profile of skyline for asymmetric system
C DESNO is lower profile of skyline for asymmetric system
C SILE is right-hand side of system

      CALL CLEAR(SPSIL,NETIP*NPT)
      CALL CLEAR(ALEVO,NWK)
      CALL CLEAR(DESNO,NWK)
      CALL CLEAR(SILE,JEDN)

CE DEFINITION OF NUMBER OF GAUSS POINT FOR INTEGRATION
CS ODREDJIVANJE BROJA GAUSOVIH TACAKA PRILIKOM INTEGRACIJE
C gauss point integration for 9-node and 8-node element is 3x3
C gauss point integration for 4-node element is 2x2
C NDIM is number of nodes per element
C NPT is global number of nodes

	IF (NETIP.EQ.2.AND.NDIM.EQ.4) IBRGT=2
	IF (NETIP.EQ.2.AND.NDIM.EQ.9) IBRGT=3
	IF (NETIP.EQ.3.AND.NDIM.EQ.8) IBRGT=2
	IF (NETIP.EQ.3.AND.NDIM.EQ.21) IBRGT=3

C SPSIL are forces from fluid dynamic analysis to solid

C================================================================
CE ONLY TEMPORARILY
CS SAMO PRIVREMENO
      IUPWIN=0
C================================================================

C GLAVNA PETLJA PO ELEMENTIMA
C GLOBAL LOOP PER ELEMENTS
C NBREL is counter of elements
	IF (NETIP.EQ.2 ) THEN
C================================================================
      CALL CLEAR(PRES,3*NPT)
      IF (METOD.EQ.2) THEN
      CALL EXIM2D(GNODE,NEL,ID,CORD,SKEF,
     &TABF,ITFMAX,NBREL,TIME,KKORAK,VVREME,SPSIL,ALEVO,DESNO,SILE,ITER,
     &NGPSIL,MAXA,IBRGT,NASLOV,GUSM,CC,AKT,IIZLAZ,AMI,
     &INDAMI,BETA,TETAO,FB2,FB3,NUMZAD,NPT,NDIM,MAXSIL,JEDN,NWK,NET,
     &NPER,NTABFT,NDES,IDPRIT,IFORM,PENALT,PRESS,NSTAC,INDAX,IUPWIN,
     &PRES,AMASA,VMESH,CCORD,VELOC,IDALE)
      GOTO 480
      ELSEIF (IALE.EQ.2) THEN
      CALL ALE2DN(GNODE,NEL,ID,CORD,SKEF,
     &TABF,ITFMAX,NBREL,TIME,KKORAK,VVREME,SPSIL,ALEVO,DESNO,SILE,ITER,
     &NGPSIL,MAXA,IBRGT,NASLOV,GUSM,CC,AKT,IIZLAZ,AMI,
     &INDAMI,BETA,TETAO,FB2,FB3,NUMZAD,NPT,NDIM,MAXSIL,JEDN,NWK,NET,
     &NPER,NTABFT,NDES,IDPRIT,IFORM,PENALT,PRESS,NSTAC,INDAX,IUPWIN,
     &PRES,VMESH,CCORD,CCORD0,VMESH0,GNOD0)
      ELSE
C ONLY FOR EXPANDABLE TUBE EXAMPLE:
      CALL EXPAN1(GNODE,CORD,CCORD,ID,VVREME,NPT,VMESH,TIME)
C ONLY FOR ONE ALVEOLA EXAMPLE:
C      CALL EXPAN2(GNODE,CORD,CCORD,ID,VVREME,NPT,VMESH,TIME,IIZLAZ)
      CALL RACU2D(GNODE,NEL,ID,CCORD,SKEF,
     &TABF,ITFMAX,NBREL,TIME,KKORAK,VVREME,SPSIL,ALEVO,DESNO,SILE,ITER,
     &NGPSIL,MAXA,IBRGT,NASLOV,GUSM,CC,AKT,IIZLAZ,AMI,
     &INDAMI,BETA,TETAO,FB2,FB3,NUMZAD,NPT,NDIM,MAXSIL,JEDN,NWK,NET,
     &NPER,NTABFT,NDES,IDPRIT,IFORM,PENALT,PRESS,NSTAC,INDAX,IUPWIN,
     &PRES,VMESH,IALE)
      ENDIF

	ELSEIF(NETIP.EQ.3) THEN
       IF (METOD.EQ.2) THEN
      CALL EXIM3D(GNODE,ALEVO,DESNO,SILE,NEL,
     1ID,NGPSIL,MAXA,CCORD,SKEF,PRIT,SPSIL,IBRGT,
     &ITFMAX,TABF,GUSM,CC,AKT,NETIP,IIZLAZ,AMI,INDAMI,BETA,TETAO,FB2,
     &FB3,NUMZAD,NPT,NDIM,MAXSIL,JEDN,NWK,NET,NDES,IDPRIT,IFORM,NPER,
     &NTABFT,PENALT,PRES,NSTAC,VVREME,TIME,INDEL,ZADVRE,NZAD,IUPWIN,
     &AMASA,VMESH,CCORD,VELOC,IDALE)
      GOTO 480
      ELSEIF (IALE.EQ.2) THEN
      CALL ALE3DN(GNODE,ALEVO,DESNO,SILE,NEL,
     1ID,NGPSIL,MAXA,CCORD,SKEF,PRIT,SPSIL,IBRGT,
     &ITFMAX,TABF,GUSM,CC,AKT,NETIP,IIZLAZ,AMI,INDAMI,BETA,TETAO,FB2,
     &FB3,NUMZAD,NPT,NDIM,MAXSIL,JEDN,NWK,NET,NDES,IDPRIT,IFORM,NPER,
     &NTABFT,PENALT,PRES,NSTAC,VVREME,TIME,INDEL,ZADVRE,NZAD,IUPWIN,
     &VMESH,IALE)
      ELSE
      CALL RACU3D(GNODE,ALEVO,DESNO,SILE,NEL,
     1ID,NGPSIL,MAXA,CCORD,SKEF,PRIT,SPSIL,IBRGT,
     &ITFMAX,TABF,GUSM,CC,AKT,NETIP,IIZLAZ,AMI,INDAMI,BETA,TETAO,FB2,
     &FB3,NUMZAD,NPT,NDIM,MAXSIL,JEDN,NWK,NET,NDES,IDPRIT,IFORM,NPER,
     &NTABFT,PENALT,PRES,NSTAC,VVREME,TIME,INDEL,ZADVRE,NZAD,IUPWIN,
     &VMESH,IALE)
       ENDIF
      ENDIF
      
C      CALL LEFTA(ISPAR,SKEF,ROW,TT1,NEL,ID,NZAD,
C     &ZADVRE,CORD,TT10,VVREME,TABF,ITFMAX,NBREL,TIME,AKc,IKc,NKC,
C     &KKORAK,MHT)










    

C      DO 420 I=1,NUMZAD
C 420  SILE(ID(NZAD(2,I),NZAD(1,I)))=0.D0
C===========================================================================
C CONTROL PRINTING:
C===========================================================================
C      WRITE(IIZLAZ,*)'NWK= ',NWK
C      CALL LSPARC(ALEVO,DESNO,MAXA)
C      WRITE(IIZLAZ,*)'SPARCE MATRIX: '
C      WRITE(IIZLAZ,*)JEDN,NKC
C      DO I=1,NKC
C       WRITE(IIZLAZ,*)(IKc(J,I),J=1,2)
C      ENDDO
C      DO I=1,NKC
C       WRITE(IIZLAZ,*) AKc(I)
C      ENDDO
C      DO I=1,JEDN
C       WRITE(IIZLAZ,*) SILE(I)
C      ENDDO
C      WRITE(IIZLAZ,*)'END'
C      STOP

C      CALL WRR(ALEVO,NWK,'LEVO')
C      CALL WRR(DESNO,NWK,'DESNO')
C      CALL WRR(SILE,JEDN,'SILE')
      
C JEDN is number of equations
      

C       DO 2423 I=1,NWK
C 2423    WRITE(IIZLAZ,*)I,'ALEVO',ALEVO(I)

C       DO 2424 I=1,NWK
C 2424    WRITE(IIZLAZ,*)I,'DESNO',DESNO(I)

C       DO 424 I=1,JEDN
C 424   WRITE(IIZLAZ,*)I,'SILE ',SILE(I)


C       CALL WRRF(SILE,JEDN,'SILE=',IIZLAZ)
C       CALL IWRRF(MAXA,JEDN,'MAXA=',IIZLAZ)
C===========================================================================
C UNSYMMETRIC SOLVER
C===========================================================================
      CALL UACTCF(ALEVO,DESNO,SILE,MAXA,JEDN,1)
      CALL UACTCF(ALEVO,DESNO,SILE,MAXA,JEDN,2)

C       CALL WRRF(SILE,JEDN,'RESE=',IIZLAZ)

           DO 440 I=1,JEDN
               TT1(I)=TT1(I)+SILE(I)
 440       CONTINUE

C===========================================================================
CE TRANSFER DATA FROM VECTOR TT1 TO MATRIX GNODE 
CE AT THE END OF CURRENT TIME STEP
C===========================================================================

       CALL FILLN(GNODE,TT1,ID,NPT)

  480  CONTINUE

      WRITE(*,*)'ITER= ',ITER
      WRITE(*,*)'PERIOD= ',NNPER
      WRITE(*,*)'STEP= ',KKORAK
      WRITE(*,*)'TIME= ',VVREME

      IF (METOD.EQ.1) THEN
       CALL KONVTF(TT1,SILE,KONVV1,1,ID,ITER,NPT,EPSTR,ISRPS,5)
       CALL KONVTF(TT1,SILE,KONVV2,2,ID,ITER,NPT,EPSTR,ISRPS,5)
       CALL KONVTF(TT1,SILE,KONVV3,3,ID,ITER,NPT,EPSTR,ISRPS,5)
       CALL KONVTF(TT1,SILE,KONVP,4,ID,ITER,NPT,EPSTR,ISRPS,5)
       CALL KONVTF(TT1,SILE,KONVT,5,ID,ITER,NPT,EPSTR,ISRPS,5)
       IF (KONVV1*KONVV2*KONVV3*KONVP*KONVT.EQ.0) THEN
        ITER=ITER+1
        GO TO 100
       ENDIF
      ENDIF



      IF (PENALT.GT.1.D0) THEN
       IF(NETIP.EQ.2) THEN 
      CALL PENTPR(GNODE,NEL,CCORD,ID,TT10,PRIT,INDAX,NDIM,
     &IDPRIT,PENALT,NUMZAD,NPT,MAXSIL,JEDN,NWK,NET,AMI,INDAMI,IIZLAZ,
     &IUPWIN,GUSM,AKT)
       ELSE IF(NETIP.EQ.3) THEN
      CALL PENTP3(GNODE,NEL,CCORD,ID,PRIT,NET,NDIM,IDPRIT,PENALT,IIZLAZ,
     &AMI,ISRPS)
       ENDIF
      ENDIF
 490   IF (ISRPS.EQ.0)
     *WRITE(IIZLAZ,6003) ITER
       IF (ISRPS.EQ.1)
     *WRITE(IIZLAZ,6004) ITER
    

 6003 FORMAT(/' BROJ ITERACIJA ........................... ITER =',I5//)
 6004 FORMAT(/' NUMBER OF ITERATIONS ..................... ITER =',I5//)
C=========================================================================

      IF (PENALT.GT.1.D0) THEN
      WRITE(IIZLAZ,*)'   ELEMENT   ','  PRITISAK  '
      DO 500 I=1,NET
      IF (NETIP.EQ.2) THEN
       WRITE(IIZLAZ,5001) I,(PRIT(J,I),J=1,(IBRGT-1)*(IBRGT-1))
      ELSE IF(NETIP.EQ.3) THEN
       WRITE(IIZLAZ,5001) I,PRIT(1,I)
      ENDIF    
  500 CONTINUE

C========================================================================

      ENDIF


C========================================================================

      
 5001 FORMAT(I10,4(D13.5))

      CALL PRTIME(NNPER,KKORAK,VVREME,ISRPS,IIZLAZ)

C ONLY FOR POSTPROCESSING FOR EXAMPLE: CAROTID ARTERY BIFURCATION
C      IF (NETIP.EQ.3) THEN
C      CALL CROSSC(GNODE,ID,NEL,CORD,VVREME,KKORAK,PRIT,NASLOV,NDIM,
C     &IDPRIT,NETIP,PENALT,21,66,50,1)
C      CALL CROSXY(GNODE,ID,NEL,CORD,VVREME,KKORAK,PRIT,NASLOV,NDIM,
C     &IDPRIT,NETIP,PENALT,NPT,NET)
C      ENDIF
C ONLY FOR POSTPROCESSING FOR EXAMPLE: PULMONARY BIFURCATION
C     IF (NETIP.EQ.3) 
C      CALL CROSSC(GNODE,ID,NEL,CORD,VVREME,KKORAK,PRIT,NASLOV,NDIM,
C     &IDPRIT,NETIP,PENALT,40,66,50,0)
C========================================================================
C=======================================================================
C ONLY FOR AKIRA'S COLLEAGUE RESULTS
C      CALL COLLEA(CORD,CCORD,TT1,NPT,ID,IIZLAZ,VVREME)
C=======================================================================
      CALL FILZAD(GNODE,ID,NPT,NZAD,ZADVRE,NUMZAD,ITFMAX,NTABFT,IIZLAZ,
     &TABF,VVREME)
      IF (PENALT.GT.1.D0) THEN
      CALL RETPRIP(GNODE,INDEL,NPT,TT1,ID,NDIM,PENALT,PRIT,
     &IDPRIT,NEL,NET,NETIP)
      ELSE
      CALL RETPRI(GNODE,INDEL,NPT,TT1,ID,NDIM,PENALT,PRIT,
     &IDPRIT,NEL,NET,NETIP)
      ENDIF
C 777  CALL IZLLSF(GNODE,IIZLAZ,IDPRIT,ISRPS,NPT,PRES,IFORM)
      CALL IZLLSF(GNODE,IIZLAZ,IDPRIT,ISRPS,NPT,PRES,IFORM)
      CALL SPSOUT(SPSIL,NETIP,IIZLAZ,NPT,ISRPS)
      CALL STAGPF(GNODE,NASLOV,VVREME,KKORAK,1,NPT,59,1,NET,NEL,PRIT,
     &CCORD,CORD,NDIM,NETIP,PENALT,IDPRIT,ISRPS,SPSIL,PRES)
      CALL STAU09F(GNODE,NPT,69,1,KKORAK)
      CALL STAU09F(GNODE,NPT,69,11,KKORAK)
      CALL STAU09F(GNODE,NPT,69,41,KKORAK)
      CALL STAU10F(PRES,NPT,69,51,KKORAK)
C=========================================================================
C WRITING *.VTK FILE IN EVERY STEP !NE VALJA!     
CZ      CALL VTKSTP(IMEF,PAKUSR,IDUZIF,ISRPS,NASLOV,GNODE,PRES,
CZ     1  KKORAK,NPT,CORD,NETIP,NEL,NDIM,NET)
      IF(NETIP.EQ.2)
     &CALL STRM2D(A,GNODE,CCORD,NEL,NDIM,NET,LMAX,NPT,NTOTF,NASLOV,
     &KKORAK,VVREME)

      IF (PENALT.GT.1.D0) THEN
       DO I=1,NPT
C        GNODE(2,4,I)=0.D0
       ENDDO

      ENDIF
C==========================================================================
C WRITING FORCES FOR PAK-S IN FILE 'ZFLUID'
      IF (NPTI.GT.0) 
     &CALL ZFLUID(A,SPSIL,NPT,NETIP,LMAX,NTOTF,IIZLAZ)
C==========================================================================
      RETURN
      END
      SUBROUTINE NOVEKF(CORD,IDENT,NPTI,IINTER,NPT,NETIP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION CORD(NETIP,*),IDENT(2,NPTI),COR(3)
      DO I=1,NPTI
C PROVERITI ZA SLOBODNU NUMERACIJU
         READ(IINTER) IDENTZ,(COR(J),J=1,3)
         DO K=1,NETIP
            CORD(K,IDENTZ)=COR(K)
         ENDDO
      ENDDO      
      RETURN
      END