C=======================================================================
C
CS   PLASTICNOST 2/D ELEMENT
CE  PLASTICITY CAM-CLAY MATERIAL  MODEL 3D ELEMENT
C
C    SUBROUTINE D2M9
C               TAUI35
C               TEQBI3
C               PRILA3
C               DEVEQ3
C
      SUBROUTINE D2M9(TAU,DEF,IRAC,LPOCG,LPOC1,IBTC,lpoc0)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
CS     PROGRAM ZA ODREDIVANJE LOKACIJA VELICINA KOJE SE CUVAJU
CS     NA NIVOU INTEGRACIONE TACKE
CE     PROGRAM FOR DEFINITION OF LOCATIONS AT INTEGRATION PIONT LEVEL
      include 'paka.inc'
      
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
C
      COMMON /REPERM/ MREPER(4)
      COMMON /DUPLAP/ IDVA
      COMMON /CDEBUG/ IDEBUG
C
      DIMENSION TAU(4),DEF(4)
C
      IF(IDEBUG.GT.0) PRINT *, ' D2M9'
C
      LFUN=MREPER(1)
      LNTA=MREPER(2)
      MATE=MREPER(4)
C
      LTAU=LPOCG
      LDEFT=LTAU + 4*IDVA
      LDEFPP=LDEFT + 4*IDVA
      LPOT=LDEFPP + 4*IDVA
      LEMP=LPOT + 1*IDVA
      LOCR=LEMP + 1*IDVA
C
      LTAU1=LPOC1
      LDEFT1=LTAU1 + 4*IDVA
      LDEFP1=LDEFT1 + 4*IDVA
      LPOT1=LDEFP1 + 4*IDVA
      LEMP1=LPOT1 + 1*IDVA
      LOCR1=LEMP1 + 1*IDVA
C
      LTAU0=LPOC0
      LDEFT0=LTAU0 + 4*IDVA
      LDEFP0=LDEFT0 + 4*IDVA
      LPOT0=LDEFP0 + 4*IDVA
      LEMP0=LPOT0 + 1*IDVA
      LOCR0=LEMP0 + 1*IDVA
C
      CALL TAUI29(A(LTAU),A(LDEFT),A(LDEFPP),A(LPOT),A(LEMP),A(LOCR),
     1       A(LTAU1),A(LDEFT1),A(LDEFP1),A(LPOT1),A(LEMP1),A(LOCR1),
     1            A(LFUN),A(LNTA),MATE,TAU,DEF,IRAC,IBTC,
     1       A(LTAU0),A(LDEFT0))
C
      RETURN
      END
C
C  =====================================================================
C
      SUBROUTINE TAUI29(TAUT,DEFT,DEFPP,P0T,EMP,OCR,
     1                  TAU1,DEF1,DEFP1,P0TDT,EMP1,OCR1,
     1                  FUN,NTA,MATE,TAU,DEF,IRAC,IBTC,
     1                  tau0,def0)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
CS     PODPROGRAM ZA INTEGRACIJU KONSTITUTIVNIH RELACIJA ZA 
CS     CAM-CLAY MATERIJALNI MMODEL
CE     PROGRAM FOR STRESS INTEGRATION FOR CAM-CLAY CAP MODEL
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
C
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
C
      COMMON /TAUD2/ TAUD(4),DEFDPR(4),DEFDS(4),DDEFP(4),
     1               DETAU(4),DDEF(4)
      COMMON /MAT2D/ EE,ANI,ET,TEQY0
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
C
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
C
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /CEPMAT/ INDCEP
C
      COMMON/ITERBR/ITER
C
      COMMON /CONMAT/ AE,EP,DVT
      COMMON /RESTAR/ TSTART,IREST
      COMMON /restap/ irestp,lplas0,lstaz0
      COMMON /CDEBUG/ IDEBUG
C
      DIMENSION TAUT(*),DEFT(*),DEFPP(*),TAU(*),DEF(*),TAU1(*),DEF1(*),
     1          DEFP1(*),tau0(6),def0(6),TAUD0(6),TAUDP(6)
      DIMENSION FUN(9,MATE),NTA(*),FUN2(2)
      IF(IDEBUG.EQ.1) PRINT *, 'TAUI29'
C
      IF(DABS(DEF(1)).GT.10.OR.DABS(DEF(2)).GT.10.OR.DABS(DEF(4)).GT.10)
     1   THEN
         WRITE(*,*) 'DEF', (DEF(I),I=1,2),DEF(4)
         STOP 'TAUI29'
      ENDIF
C
CS     OSNOVNE KONSTANTE
CE     BASIC KONSTANTS
C
      TOLP0=1.0D-8
      TOLFY=1.0D-8
      IPLSS=IETYP
      IBISE=0
C
      DVT=2.0D0/3.0D0
      SQ2=DSQRT(2.0D0)
      DJP=DSQRT(1.5D0)
C
C     INICIJALIZACIJA OSNOVNIH VELICINA
CE.     MATERIAL CONSTANTS
      EE    = FUN(1,MAT)
      ANI  = FUN(2,MAT)
      AT   = FUN(3,MAT)
      IEL  = INT(FUN(4,MAT))
C
      AEM  = FUN(5,MAT)
      ALAM = FUN(6,MAT)
      AKA  = FUN(7,MAT)
CS RADOVAN 08.11.99
      P0   = -FUN(8,MAT)
CS  KRAJ RADOVAN    
      AE0  = FUN(9,MAT)
CS RADOVAN 08.11.99
      P0MIN=0.1D0*P0
CS  KRAJ RADOVAN    
      ISOFT=1
      ICSS=0
C
       AMM=AEM
       SM0=0.0D0
C
C      ANI=0.35D0 
      IF(KOR.EQ.1) THEN
       SMT=P0
        ELSE
         SMT=(TAUT(1)+TAUT(2)+TAUT(4))/3.0D0+SM0
      ENDIF
C
      ET=(DEFT(1)+DEFT(2)+DEFT(4))/3.0D0
      ET=(1.0D0+AE0)*DEXP(3.*ET)-1.0D0
      ALK = ALAM-AKA 
       EAL=-(1.+ET)/ALK
C
      IF(IEL.EQ.1) THEN
       SMTA=DABS(SMT)
       AMS=(1.0D0+ET)*SMTA/AKA
       EE=3.0D0*AMS*(1.0D0+2.0D0*ANI)
      ENDIF
C
      IF(KOR.GT.1) SM0=0.0D0
      FUN2(1)=EE
      FUN2(2)=ANI
      IF(KOR.EQ.1) THEN   
      P0T=P0
      SMT=SM0
       ENDIF
      P0TDT=P0T
C
       IDUM=MAT
       MAT=1
       CALL MEL01(FUN2)
       MAT=IDUM
C
      AE=(1.0D0+ANI)/EE
      AM=(1.0D0-2.0D0*ANI)/EE
      CM=1.0D0/AM
C
      IF(IRAC.EQ.2)GO TO 110
      DO 10 I=1,4
      TAU(I)=0.0D0
      DDEF(I)=DEF(I)-DEFPP(I)
   10 CONTINUE
      KS=4
      IF(IPLSS.EQ.2)KS=3
C
C
CE    SOLUTION IS ELASTOPLASTIC , DETERMINE PLASTIC STRAIN AND STRESS
CE    INCREMENT BY USING EFFECTIVE STRESS FUNCTION
CS     RESENJE JE ELASTOPLASTICNO , TREBA ODREDITI PRIRASTAJ PLASTICNE
CS     DEFORMACIJE IPRIRASTAJ NAPONA PRIMENOM FUNKCIJE EFEKTIVNOG NAPONA
C
CS     ODREDIVANJE DEVIJATORA UKUPNE DEFORMACIJE
CE    TOTAL STRAIN DEVIATOR 
C
      EMT = (DEF(1)+DEF(2)+DEF(4))/3.0D0
C
       
        DEFDPR(1)=DEF(1)-EMT
        DEFDPR(2)=DEF(2)-EMT
        DEFDPR(4)=DEF(4)-EMT
        DEFDPR(3)=0.5D0*DEF(3)
C
      DEFDS(1)=DEFDPR(1)-DEFPP(1)+EMP
      DEFDS(2)=DEFDPR(2)-DEFPP(2)+EMP
      DEFDS(4)=DEFDPR(4)-DEFPP(4)+EMP
      DEFDS(3)=DEFDPR(3)-DEFPP(3)
C
CS     ODREDIVANJE POJEDINIH CLANOVA FUNKCIJE EFEKTIVNOG NAPONA
CE     EFFECTIVE STRESS FUNCTION DEFINITION
C
      DKV = DEFDS(1)*DEFDS(1)+DEFDS(2)*DEFDS(2)+DEFDS(4)*DEFDS(4)
     1      +2.0D0*DEFDS(3)*DEFDS(3)
      DD=DSQRT(DKV)
C
CS     PROVERA ELASTICNOG RESENJA
CS     ODREDIVANJE NAPONA KOJI ODGOVARA ELASTICNOM RESENJU
CE     PLASTIC YIELDING CHECK
CE     ELASTIC SOLUTION
C
      DO 32 I=1,4
   32 TAUD(I)=DEFDS(I)/AE
C
      IF(IRAC.EQ.2) GO TO 110
      AJ2DE=0.5*(TAUD(1)*TAUD(1)+TAUD(2)*TAUD(2)+TAUD(4)*TAUD(4))+
     1      TAUD(3)*TAUD(3)
      AJ2DQ=DSQRT(3.0D0*AJ2DE)
C
      EMS = EMT - EMP
      SMTE =EMS/AM
      SMTDT=SMTE
C
Czile
c      RAZE=2.0D0*SMTE-P0T
      RAZE=2.0D0*SMTE-P0T-AT
Czile
      RAZ=RAZE 
      DELEMP=0.0D0
      DLAM=0.0D0
      AER=AE
C
CS     KOREKCIJA FY ZBOG POMERENOSTI POVRSI TECENJA ZA AT
CE     CORRECTION OF FY ACCORDING TO YIELD SURFACE TRANSLATION AT
       RAZE=2.0D0*SMTE-P0T-AT
       PPT=SMTE-(P0T+AT)/2.0D0
       PMT=(P0T-AT)/2.0D0
      FYE=PPT*PPT- PMT*PMT+ 3.* AJ2DE/(AMM*AMM)
C
CE    OCR RATIO
C
      IF(DABS(SMTE).GT.1.0D-5) THEN
      PC=SMTE+3.0D0*AJ2DE/(AMM*AMM*SMTE)
       IF(DABS(PC).GT.1.0D-8) THEN
       OCR1=P0T/PC
       ENDIF
      ELSE
      OCR1=1.0D3
      ENDIF
C
CS      ELACTICNO RESENJE
CE      ELASTIC SOLUTION
C
       IF((FYE.LT.0.D0).OR.(DABS(FYE).LT.TOLFY)) GO TO 100
CS      ELASO-PLASTICNO RESENJE
CE      ELAST0-PLASTIC  SOLUTION
C
       IF(FYE.GT.TOLFY) THEN
C
       TOLP=1.D-5
C
      TANAE=-AJ2DQ/SMTE
       IPL1=1
       ICSS=1
        TOLPT=1.0D0-2.0D0*SMTE/(P0T+AT)      
C
CS     KRITICNO STANJE
CE     CRITICAL STATE
C
      IF(DABS(TOLPT).LT.TOLP0.AND.FYE.GT.TOLFY)THEN
C      WRITE(3,2381)
C 2381 FORMAT(' ***KRITICNO STANJE') 
       OCR1=1.0D0
       SMTDT=SMTE
       P0TDT=2.0D0*SMTE
       DJP=DSQRT(0.5D0)
       DLAM= (DJP*DD/(AMM*SMTE)-AE)*AMM*AMM/3.0D0
       AER=AE+3.0D0*DLAM/AMM/AMM
        DELEMP=0.0D0     
        GO TO 330
      ENDIF
C 
CS     PODRUCJE OJACANJA
CE     HARDENING REGION
C
       IF((ISOFT.EQ.1).OR.(ISOFT.EQ.0.AND.RAZE.LT.0.0D0)) THEN 
C
CS     ODREDIVANJE NULE FUNKCUJE EFEKTIVNOG NAPONA
CE     SOLUTION OF NONLINEAR EQUATIN FN=0.0 - NEWTON METHOD
C
      IBISE=0
      IBISM=100
      ICSS=0
      TOLBIS=1.0D-5
      DELEMP=0.0D0
      DELE1=0.0D0
      ETDT=(1.0D0+AE0)*DEXP(3.*EMT)-1.0D0
      BVTDT=AKA/(1.0D0+ETDT)/3.0D0
      ALK = ALAM-AKA 
      OCR1=1.0D0
C
   50 IBISE=IBISE+1
       DELE1=DELEMP
       IF(IBISE.EQ.1)DELEMP=0.0D0
C
       SMTDT=SMTE-DELEMP/AM
       EME=EMS-DELEMP
       EAL=-(1.+ETDT)/ALK
       P0TDT=P0T*DEXP(EAL*3.0*DELEMP)
CS RADOVAN 08.11.99
       IF(P0TDT.GT.P0MIN) P0TDT=P0MIN
CS  KRAJ RADOVAN    
C
      RAZ=2.0D0*SMTDT-P0TDT-AT
C
       DLAM=3.0D0*DELEMP/RAZ
C
      IF(RAZ.LT.0.0D0) GO TO 555
 555   AER=AE+3.0D0*DLAM/AMM/AMM
C	
       PPT=SMTDT-(P0TDT+AT)/2.0D0
       PMT=(P0TDT-AT)/2.0D0
       TFQ=PPT*PPT- PMT*PMT+ 3.0*DKV/(AER*AER)/(2.*AMM*AMM)
C
      TFQP=-RAZ/AM-0.5D0*(RAZ+P0TDT-AT)*3.0*EAL*P0TDT-
     1       3.0D0*DKV/AMM**4/AER**3*9.*
     2     (1.0D0/RAZ+DELEMP*(2.0/AM+3.0*EAL*P0TDT)/(RAZ*RAZ))
C
       DELEMP=DELEMP-TFQ/TFQP
       TDEL=DABS((DELEMP-DELE1)/DELEMP)
       IF(TDEL.LT.TOLBIS) GO TO 60
      IF(IBISE.GT.IBISM) GO TO 220
      IF(DABS(TFQ).LT.TOLBIS) GO TO 60
      GO TO 50
  220 CONTINUE
C
      WRITE(6,1000)
 1000 FORMAT(' ','DOSTIGNUT MAKSIMALAN BROJ BISEKCIJA U TAUINT5')
      STOP
C     RADOVAN
      ENDIF
C
CS     ODREDIVANJE KOMPONENATA DEVIJATORA NAPONA
CE     STRESS DEVIATOR COMPONENTS
C
CS   TACKA IZNAD KRITICNE LINIJE
CE   POINT ABOVE CRITICAL LINE
C
        IF(ISOFT.EQ.0.AND.RAZE.GT.0.0D0) THEN
        DAST=DABS(SMTE-AT)*AMM
              IF(AJ2DE.GT.DAST) THEN
C 
       OCR1=1.0D0
       SMTDT=SMTE
C   RADOVAN 12.11.99 ????
       IF(SMTE.GT.AT) THEN
         SMTE=AT
         DAST=0.0D0
       ENDIF
C      KRAJ 
       P0TDT=2.0D0*SMTE-AT
C   RADOVAN 09.11.99
       IF(P0TDT.GT.P0MIN) P0TDT=P0MIN
C   KRAJ
       DJP=DSQRT(0.5D0)
       DLAM= (DJP*DD/(DAST-AE))*AMM*AMM/3.0D0
       AER=AE+3.0D0*DLAM/AMM/AMM
       DELEMP=0.0D0     
C
             ENDIF
       ENDIF
C
      GO TO 330
       ELSE
C           
CS   TACKA ISPOD KRITICNE LINIJE
CE   POINT BELOW CRITICAL LINE
C
       DELEMP=0.0D0
       DLAM=0.0D0
       SMTDT=SMTE
       P0TDT=P0T
       AER=AE
         GO TO 330
C
      ENDIF  
   60 CONTINUE
C
  330 CONTINUE
C
      EMP1=EMP+DELEMP
      DO 65 I=1,4
   65 TAUD(I)=DEFDS(I)/AER
C
CS     ODREDIVANJE PRIRASTAJA PLASTICNE DEFORMACIJE
CE     PLASTIC STRAIN INCREMENT 
C
      DO 70 I=1,4
      DEFP1(I)=DEFPP(I)+3.0D0*DLAM/(AMM*AMM)*TAUD(I)
   70 CONTINUE
C
      DEFP1(1)=DEFP1(1)+DELEMP
      DEFP1(2)=DEFP1(2)+DELEMP
      DEFP1(4)=DEFP1(4)+DELEMP
      DEFP1(3)=DEFP1(3)
C
CS     ODREDIVANJE PLASTICNE DEFORMACIJE
CE     PLASTIC STRAIN
C
  100 CONTINUE 
        TAU(1)=TAUD(1)+SMTDT
        TAU(2)=TAUD(2)+SMTDT
        TAU(4)=TAUD(4)+SMTDT
        TAU(3)=TAUD(3)
C
CS    ODREDIVANJE ELASTOPLASTICNE MATRICE
CE    ELASTIC-PLASTIC CONSTITUTIVE MATRIX
C
      IF(ITER.EQ.0.OR.ICSS.EQ.1) GO TO 110
      IF(ISKNP.NE.2.AND.INDCEP.EQ.0)
     1CALL MEL29(TAU,DEFDS,SMTDT,P0TDT,DLAM,EAL,AMM,AER,AM,
     1           RAZ,DKV,DELEMP,ICSS,IBTC)
C
CS     KORIGOVANJE VELICINA IZ PRETHODNOG KORAKA KAD JE POSTIGNUTA
CS     KONVERGENCIJA
CE    CORECTION OF VALUES FROM PREVIOUS STEP WHEN CONVERGENCE IS
CE    REATCHED
C
  110 CONTINUE
      DO 290 I=1,4
      DEF1(I)=DEF(I)
  290 TAU1(I)=TAU(I)
      RETURN
      END
C======================================================================
C
      SUBROUTINE MEL29(TAU,DEFDS,SMTDT,P0TDT,DLAM,EAL,AMM,AER,AM,
     1           RAZ,DKV,DELEMP,ICSS,IBTC)
C
C----------------------------------------------------------------------
CS    PROGRAM ZA FORMIRANJE MATRICE C<E> ILI C<EP> ZA CAM-CLAY MODEL
CE    PROGRAM FOR CONSTITUTIVE MATRIX C<E> OR C<EP>
C----------------------------------------------------------------------
C
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /CDEBUG/ IDEBUG
C
      DIMENSION C(4,4),EPSD(4),TAU(4),DEFDS(4)
      IF(IDEBUG.EQ.1) PRINT *, 'MEL29 '
C
C
      DVT=2.0/3.0
      TR=1.0/3.0
      CM=1.0/AM
C
      TMP=DEFDS(4)
      DEFDS(4)=DEFDS(3)
      DEFDS(3)=TMP
C
      DO 1 I=1,3
    1 EPSD(I)=DEFDS(I)
      EPSD(4)=2.0*DEFDS(4)
C
       AA=1.0/AER
       AAM=AA/AMM**2
       A2M2=1.0/(AER*AER*AMM*AMM)
       AL2=3.0*P0TDT*EAL  
       SA2=SMTDT*AL2
C
        IF(ICSS.EQ.0) THEN
C
       AL3=(3.+DLAM*(2.0*CM+AL2))/RAZ
       A43=AMM**4*AER**3
       D9=9.0*DKV/A43
C  AL4
       AL4=CM*RAZ+SA2+D9*AL3
C  AL15
       AL5=3.0*AL3*A2M2/AL4
       AL5=3.0*AL5*A2M2
        ELSE
         AL5=DSQRT(DVT*DKV)*AMM/SMTDT
        ENDIF 
C
       RAZ2=RAZ*RAZ
         IF(ICSS.EQ.0) THEN
        AL14=-2.0*DLAM*CM/RAZ
        AL15= 3.0/RAZ+3.0*DELEMP/RAZ2*(2.*CM+AL2)
        AL16=RAZ*CM-D9*AL14
        AL17=RAZ*CM+SA2+D9*AL15
        A67 = AL16/AL17
        AL18=AL14+AL15*A67
        AL19=CM*(1.0-A67)
C
        ELSE
        AL18=AL5
        AL19=CM 
        ENDIF
C
      DO 4 I=1,4
      DO 4 J=1,4
      ELAST(I,J)=0.0D0
    4 C(I,J)=0.0D0
C
C   MATRICA __Cik' NADVUCENO
C
      DO 5 I=1,4
      DO 5 J=1,4
      C(I,J)=-AL5*DEFDS(I)*EPSD(J)
      IF(I.EQ.J)C(I,J)=C(I,J)+AA
    5 CONTINUE
C
C    MATRICA C'ij
      ACMP=-A2M2*AL18
      DO 6 I=1,4
      DO 6 J=1,3
      DO 16 K=1,3
       IF(J.EQ.K) THEN
       TT=DVT
       ELSE
       TT=-TR
       ENDIF
   16 ELAST(I,J)=ELAST(I,J)+C(I,K)*TT
    6 CONTINUE
C
      DO 40 I=1,4
      DO 40 J=1,3
   40 ELAST(I,J)=ELAST(I,J)+ACMP*DEFDS(I)
C
      DO 7 I=1,4
      ELAST(I,4)=C(I,4)/2.0
    7 CONTINUE
C
      AM78=(1.0-AL17/AL18)*CM
       IF(ICSS.EQ.0) THEN
        AML4=-3.0/AL4*CM*A2M2
       ELSE
        AML4=0.0D0
       ENDIF
C  
      AL19=AL19/3.0
      DO 8  I=1,3
      DO 28 J=1,3
      DO 26 K=1,3
       IF(J.EQ.K) THEN
       TT=DVT
       ELSE
       TT=-TR
       ENDIF
   26  ELAST(I,J)=ELAST(I,J)+AML4*EPSD(K)*TT
       ELAST(I,J)=ELAST(I,J)+AL19
   28 CONTINUE
       ELAST(I,4)=ELAST(I,4)+AML4*EPSD(4)*0.5
    8 CONTINUE
C
      DO 30 I=1,4
      DO 30 J=I,4
30    ELAST(I,J)=(ELAST(I,J)+ELAST(J,I))/2.
C
       TMP=ELAST(3,3)
       ELAST(3,3)=ELAST(4,4)
       ELAST(4,4)=TMP
       TMP=ELAST(1,3)
       ELAST(1,3)=ELAST(1,4)
       ELAST(1,4)=TMP
       TMP=ELAST(2,3)
       ELAST(2,3)=ELAST(2,4)
       ELAST(2,4)=TMP
C      
      DO 31 I=1,4
      DO 31 J=1,I
31    ELAST(I,J)=ELAST(J,I)
C
C  FORMIRANJE ELASTICNE MATRICE
C
      RETURN
      END

