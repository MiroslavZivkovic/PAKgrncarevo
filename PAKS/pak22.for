C======================================================================
C
C   SUBROUTINE K09EGL
C              READE
C              SISTTE
C              ELTE
C              BETBED
C              MATRTE
C              JACTEL
C              JACGAU
C              TRAEL
C              MEL01
C              MEL02
C              MEL03
C              MEL04
C              MEL05
C              FORMP2
C              FTDTRS
C              JACTP
C
C=======================================================================
      SUBROUTINE K09EGL
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     GLAVNI PROGRAM ZA RACUNANJE MATRICA ELEMENATA  2/D
CE     MAIN PROGRAM FOR CALCULATION OF ELEMENT MATRIX FOR  2/D 
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /ELEMAE/ MXAE,LAE,LMXAE,LHE,LBET,LBED,LRTHE,LSKE,LLM
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /DUPLAP/ IDVA
      COMMON /SRPSKI/ ISRPS
      COMMON /GEORGE/ TOLG,ALFAG,ICCGG
      COMMON /MIXEDM/ MIXED,IOPGS(6),NDS
      COMMON /CRXFEM/ NCXFEM,LNODTIP,LNSSN,LPSIE,LFIE,LHNOD,
     1                LPSIC,LFI,LHZNAK,LNSSE,LKELEM,LID1,LID2
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' K09EGL'
      LAU=LMAX
      CALL READE(A(LAU))
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
      LAE=LMAX
      NDUM=ND
      IF(NCXFEM.GT.0) ND=40
      IF(IETYP.LE.2) THEN
         MXAE = ND+(29+5*NCVE+6*ND+ND*(ND+1)/2)*IDVA
         IF(IETYP.EQ.1) MXAE = MXAE + (7+ND)*IDVA
      ELSE
         MXAE = ND+(29+12*NCVE+15*NCVE*NCVE+ND*(ND+1)/2)*IDVA
      ENDIF
      IF(ICCGG.EQ.2) MXAE=MXAE+(ND+NDS)*(ND+NDS)*IDVA
      K4=3
      IF(IETYP.EQ.1) K4=4
      IF(MIXED.EQ.1) MXAE=MXAE+(NDS+2*K4*NDS+ND*NDS+NDS*(NDS+1)/2)*IDVA
      IF(IALFA.GE.0) THEN
         MXAE = MXAE + 39*IDVA
         IF(IETYP.EQ.1) MXAE = MXAE + 17*IDVA
      ENDIF
      LMAX = LAE + MXAE
      ND=NDUM
      IF(LMAX.LT.MTOT) GO TO 70
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2009) LMAX,MTOT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6009) LMAX,MTOT
      STOP
C
C     FORMIRANJE MATRICE KRUTOSTI ELEMENATA I PAKOVANJE U SISTEM
C
   70 CALL SISTTE(A(LAE),A(LAU))
C
      RETURN
C-----------------------------------------------------------------------
 2009 FORMAT(/1X,'NEDOVOLJNA DIMENZIJA U OSNOVNOM RADNOM VEKTORU A ZA UC
     1ITAVANJE ULAZNIH PODATAKA'/1X,'POTREBNA DIMENZIJA, LMAX=',I10/1X,'
     2RASPOLOZIVA DIMENZIJA, MTOT=',I10)
 6009 FORMAT(///' NOT ENOUGH SPACE IN WORKING VECTOR  A'
     1/' REQUESTED DIMENSION , LMAX=',I10
     2/' AVAILABLE DIMENSION , MTOT=',I10)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE READE(AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     UPRAVLJACKI PROGRAM ZA UCITAVANJE ULAZNIH PODATAKA U AU
CE     MENAGEMENT ROUTINE FOR INPUT DATA IN    AU
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /UGAOVL/ TE(4,4)
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /restap/ irestp,lplas0,lstaz0
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /ZAPISI/ LSTAZA(5)
      COMMON /SPANEL/ ISHEAR
      COMMON /PODTIP/ IPODT
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /CVSILE/ NSILA,LESILA
      COMMON /MIXEDM/ MIXED,IOPGS(6),NDS
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
      COMMON /OBNOVA/ IRUSI
      COMMON /CRACKS/ CONTE,SINTE,FK123(10,3),NODCR(10,14),NCRACK,LQST,
     1                LNERING,LMIE,LPSI,LQ,N100,IRING,NSEG,MAXRIN,MAXSEG
     1                ,MAXNOD,LXL,LYL,LZL,LSIF1,LXGG,LYGG,LZGG,LNNOD
      COMMON /CRXFEM/ NCXFEM,LNODTIP,LNSSN,LPSIE,LFIE,LHNOD,
     1                LPSIC,LFI,LHZNAK,LNSSE,LKELEM,LID1,LID2
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /CDEBUG/ IDEBUG
C
      DIMENSION AU(*)
      REAL AU
C
      IF(IDEBUG.GT.0) PRINT *, ' READE '
C
CS     CITANJE SKALARA IZ DIREKT ACCES FILE 
CE     READ SCALARS FROM A DIRECT ACCESS FILE
C
      LSTAZA(1)=LMAX8
      READ(IELEM,REC=LMAX8)
     1IETYP,NGAUSX,NGAUSY,BETA,NCVE,ITERME,ICORGT,LCEL,LELC,NMA,NMI,
     1MXAU,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,LLMEL,IPODT,ISHEAR,
     1ND,NGS12,MSLOJ,MXS,MSET,NSILA,LESILA,LNNOD,
     1LNSLOJ,LMATSL,LDSLOJ,LBBET,INCOTX,INCOTY,INCOTZ,
     1LBET0,(CPP(J,1),J=1,3),IBB0,LALFE,LHAEM,LHINV,LGEEK,IALFA,
     1INDBTH,INDDTH,LTBTH,LTDTH,NDS,ILEDE,NLD,ICPM1
      LSTAZA(2)=LMAX8+1
	NDNDS=ND+NDS
      CALL READDD(AU,MXAU/IDVA,IELEM,LMAX8,LDUZI)
C      call wrr6(AU(LPSIC),NE*NCVE,'PSIC')
C      call wrr6(AU(LFI),NE*NCVE,'PFI ')
C      call wrr6(AU(LHZNAK),NE*NCVE,'HZNA')
C      CALL IWRR(AU(LKELEM),NE,'KELE')
C      CALL IWRR(AU(LNSSE),NE,'NSSE')
C      CALL IWRR(A(LNODTIP),NP,'NODT')
C      CALL IWRR(AU(LID1),KTIP1*2,'ID1 ')
C      CALL IWRR(AU(LID2),KTIP2*8,'ID2 ')
C      WRITE(3,*) 'LLMEL,LNEL,NDNDS',LLMEL,LNEL,NDNDS
C      CALL IWRR(AU(LLMEL),NE*NDNDS,'LMEL')
C      CALL IWRR(AU(LNEL),NE*NCVE,'LNEL')
C      CALL IWRR(AU(LNMAT),NE,'NMAT')
C      CALL WRR6(AU(LTHID),NE,'THID')
C      CALL IWRR(AU(LIPGC),NE,'IPGC')
C      CALL IWRR(AU(LIPRC),NE,'IPRC')
C      CALL IWRR(AU(LISNA),NE,'ISNA')
C      WRITE(3,*) 'MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA',
C    1               MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA
      LMAX=LAU+MXAU
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
CS     PLASTICNOST
CE     PLASTICITY
      LPLAST=LMAX
      LPLAS1=LMAX
      lplas0=lmax
      LSIGMA=LMAX
      LCOR0 =LMAX
      LTEMGT=LMAX
      LCORGT=LMAX
      IF(IATYP.EQ.0) GO TO 10
      IF(NMODM.LE.4) GO TO 10
      NPROS=NE*NGS12*MXS*MODPR2( NMODM )*IDVA
      LPLAS1=LPLAST+NPROS
      LMAX=LPLAS1+NPROS
      if(irusi.eq.1) then
         LPLAS0=LMAX
         LMAX=LPLAS0+NPROS
      endif
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      LSTAZA(3)=LMAX8+1
      CALL READDD(A(LPLAST),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      LSTAZA(4)=LMAX8+1
      CALL READDD(A(LPLAS1),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      if(irusi.eq.1) then
        LSTAZ0=LMAX8+1
        CALL READDD(A(LPLAS0),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      endif
      IF(IATYP.GE.4) GO TO 10
      NPROS=0
      LSIGMA=LMAX
      IF(ITERME.EQ.1) GO TO 20
      IF(ICORGT.EQ.1) GO TO 30
      RETURN
C
   10 LSIGMA=LMAX
      N45=NLD
      NPROS=NE*NGS12*N45*MXS*IDVA
      IF(NMODM.LE.4) NPROS=NPROS*2
      LMAX=LSIGMA+NPROS
      LCOR0=LMAX
      IF(IATYP.GE.4) THEN
         NPRO1=NE*NCVE*3*IDVA
         LMAX=LCOR0+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
   20 LTEMGT=LMAX
      IF(ITERME.EQ.1) THEN
         NPRO1=NE*NGS12*MXS*IDVA
         LMAX=LTEMGT+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
   30 LCORGT=LMAX
      IF(ICORGT.EQ.1) THEN
         NPRO1=NE*NGS12*3*MXS*IDVA
         LMAX=LCORGT+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      LSTAZA(5)=LMAX8+1
      CALL READDD(A(LSIGMA),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      RETURN
      END
C======================================================================
      SUBROUTINE SISTTE(AE,AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     GLAVNI UPRAVLJACKI PROGRAM  ZA MATRICE ELEMENATA I SISTEMA
CE     MAIN MANAGEMENT  PROGRAM  FOR ELEMENT MATRIX
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /ELEMAE/ MXAE,LAE,LMXAE,LHE,LBET,LBED,LRTHE,LSKE,LLM
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /ZAPISI/ LSTAZA(5)
      COMMON /UPRIRI/ LUPRI
      COMMON /DUPLAP/ IDVA
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /UPDLAG/ LUL,LCORUL
      COMMON /PROBAS/ IILS
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /ITERBR/ ITER
      COMMON /INDKON/ IKONV
      COMMON /INDNAP/ NAPON
      COMMON /MATERM/ LMODEL,LGUSM
      COMMON /ZAPSIL/ UBXYZ(3,10),NVFUB(10),INDZS,LZAPS,LNPRZ
      COMMON /CVSILE/ NSILA,LESILA
      COMMON /OBNOVA/ IRUSI
      COMMON /restap/ irestp,lplas0,lstaz0
      COMMON /GEORGE/ TOLG,ALFAG,ICCGG
      COMMON /MIXEDM/ MIXED,IOPGS(6),NDS
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
      COMMON /BOBAN3/ IBOB,IC69
      COMMON /CRACKS/ CONTE,SINTE,FK123(10,3),NODCR(10,14),NCRACK,LQST,
     1                LNERING,LMIE,LPSI,LQ,N100,IRING,NSEG,MAXRIN,MAXSEG
     1                ,MAXNOD,LXL,LYL,LZL,LSIF1,LXGG,LYGG,LZGG,LNNOD
      COMMON /CRXFEM/ NCXFEM,LNODTIP,LNSSN,LPSIE,LFIE,LHNOD,
     1                LPSIC,LFI,LHZNAK,LNSSE,LKELEM,LID1,LID2
      COMMON /gocajo/ LNGG,KOJEB
C
      DIMENSION AE(*),AU(*)
      REAL AE,AU
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' SISTTE'
C
      LA=1
      IF(IALFA.EQ.1) LA=4
      IF(IALFA.EQ.2) LA=5
      IF(IALFA.EQ.3) LA=4
C
C     REPERI U VEKTORU ELEMENATA AE
C
      NDUM=ND
      IF(NCXFEM.GT.0) ND=40
      KK=3
      IF(IETYP.EQ.1) KK=4
      N45=NLD
      NCVE2=NCVE*2
      NWE=ND*(ND+1)/2
      LHE=1
      LBET=LHE+3*NCVE*IDVA
      LSKE=LBET+KK*ND*IDVA
      LUEL=LSKE+NWE*IDVA
      LELAS=LUEL+ND*IDVA
      LTSG=LELAS+KK*KK*IDVA
      LCEGE=LTSG+KK*KK*IDVA
      LFOT=LCEGE+LA*KK*IDVA
      LEKOR=LFOT
      LGERS=LEKOR
      LLM=LGERS
      IF(IALFA.GE.0) THEN
         LEKOR=LFOT+KK*KK*IDVA
         LGERS=LEKOR+KK*LA*IDVA
         LLM=LGERS+KK*LA*IDVA
      ENDIF
      LSKEP=LLM
      LSKEP1=LSKEP
      IF(IETYP.EQ.3) THEN
        LSKEP1=LSKEP+NCVE2*ND*IDVA
        LLM=LSKEP1+ND*ND*IDVA
      ENDIF
      NDNDS=ND+NDS
      IF(ICCGG.EQ.2) THEN
         LLM=LSKEP1+NDNDS*NDNDS*IDVA
      ENDIF
      LSKS=LLM
      LSKES=LSKS
      LHS=LSKS
      LQS=LSKS
      LPS=LSKS
      IF(MIXED.EQ.1) THEN
         NWS=NDS*(NDS+1)/2
         LSKES=LSKS+NWS*IDVA
         LHS=LSKES+ND*NDS*IDVA
         LQS=LHS+KK*NDS*IDVA
         LPS=LQS+NDS*IDVA
         LLM=LPS+KK*NDS*IDVA
      ENDIF
      MXAE1=LLM+NDNDS
      ND=NDUM
      NDNDS=ND+NDS
C      WRITE(3,*) 'LLM,LSKE,NWE',LLM,LSKE,NWE
C      WRITE(3,*) 'LLM22,LNEL,NDNDS',LLMEL,LNEL,NDNDS
C      CALL IWRR(AU(LLMEL),NE*NDNDS,'LME2')
      IF(MXAE1.GT.MXAE) THEN
	 WRITE(*,*) MXAE1,MXAE
       STOP 'MXAE1.GT.MXAE'
	ENDIF
C

      LDEFOR=LSIGMA
      IF(NMODM.LT.5) LDEFOR=LSIGMA+NE*NGS12*N45*MXS*IDVA
C
C     RACUNANJE MATRICE ELEMENATA I/ILI NAPONA
C
      KORD=LCORD
      IF(IATYP.GE.3) KORD=LCORUL
      IF(IBOB.EQ.0) THEN
      CALL ELTE(AE(LBET),AE(LSKE),AE(LUEL),AE(LLM),AU(LNEL),AU(LNMAT),
     1AU(LTHID),AE(LHE),A(KORD),A(LUPRI),A(LRTDT),A(LFTDT),A(LSIGMA),
     2AU(LISNA),AU(LIPGC),AU(LLMEL),AE(LSKEP),AE(LSKEP1),AE(LELAS),
     3AE(LFOT),AE(LEKOR),AE(LGERS),AU(LNSLOJ),AU(LMATSL),AU(LBBET),
     4AU(LDSLOJ),AU(LBET0),AU(LALFE),AU(LHAEM),AU(LHINV),AU(LGEEK),
     5NCVE2,IALFA,A(LCOR0),A(LTEMGT),A(LCORGT),A(LAU),AE(LTSG),N45,
     6A(LZAPS),A(LNPRZ),INDZS,A(LGUSM),LA,AE(LCEGE),AU(LESILA),
     7AE(LSKS),AE(LSKES),NDNDS,AE(LHS),AE(LQS),AE(LPS),A(LID),A(LDEFOR),
     8AU(LNNOD),au(lngg),AU(LTBTH))
      ELSE
      CALL ELTE2B(AE(LBET),AE(LSKE),AE(LUEL),AE(LLM),AU(LNEL),AU(LNMAT),
     1AU(LTHID),AE(LHE),A(KORD),A(LUPRI),A(LRTDT),A(LFTDT),A(LSIGMA),
     2AU(LISNA),AU(LIPGC),AU(LLMEL),AE(LSKEP),AE(LSKEP1),AE(LELAS),
     3AE(LFOT),AE(LEKOR),AE(LGERS),AU(LNSLOJ),AU(LMATSL),AU(LBBET),
     4AU(LDSLOJ),AU(LBET0),AU(LALFE),AU(LHAEM),AU(LHINV),AU(LGEEK),
     5NCVE2,IALFA,A(LCOR0),A(LTEMGT),A(LCORGT),A(LAU),AE(LTSG),N45,
     6A(LZAPS),A(LNPRZ),INDZS,A(LGUSM),LA,AE(LCEGE),AU(LESILA),
     7AE(LSKS),AE(LSKES),NDNDS,AE(LHS),AE(LQS),AE(LPS))
      ENDIF
C      CALL WRR(A(LSK),NWK,'SK  ')
C
      IF((IALFA.GE.0.OR.NSILA.GT.0).AND.IILS.NE.-1) THEN
C
C  PRIPREMA ZA RESTART CAM-CLY (SOPSTVENA TEZINA)
C
        IF(IRUSI.EQ.1.AND.IRESTP.EQ.0.AND.KOR.EQ.NDT.AND.NAPON.EQ.1)THEN
            KBR=NE*LA*(2+LA+NCVE2)
            CALL CLEAR(AU(LALFE),KBR)
         ENDIF
         LMA8=LSTAZA(2)-1
         CALL WRITDD(AU,MXAU/IDVA,IELEM,LMA8,LDUZI)
      ENDIF
      IF(IATYP.EQ.0) GO TO 10
      IF(NMODM.LE.4) GO TO 10
      IF(IILS.NE.-1) THEN
        NPROS=NE*NGS12*MXS*MODPR2( NMODM )*IDVA
        LMA8=LSTAZA(4)-1
        CALL WRITDD(A(LPLAS1),NPROS/IDVA,IELEM,LMA8,LDUZI)
        IF(IATYP.GE.4) GO TO 10
        NPROS=0
        IF(ITERME.EQ.1) GO TO 20
        IF(ICORGT.EQ.1) GO TO 30
      ENDIF
      RETURN
C
   10 NPROS=NE*NGS12*N45*MXS*IDVA
      IF(NMODM.LE.4) NPROS=NPROS*2
      IF(IATYP.GE.4) THEN
         NPRO1=NE*NCVE*3*IDVA
         NPROS=NPROS+NPRO1
         IF(NAPON.EQ.0.AND.ITER.GT.0) RETURN
      ENDIF
   20 IF(ITERME.EQ.1) THEN
         NPRO1=NE*NGS12*MXS*IDVA
         NPROS=NPROS+NPRO1
      ENDIF
   30 IF(ICORGT.EQ.1) THEN
         NPRO1=NE*NGS12*3*MXS*IDVA
         NPROS=NPROS+NPRO1
      ENDIF
      LMA8=LSTAZA(5)-1
      IF(IILS.NE.-1) 
     1CALL WRITDD(A(LSIGMA),NPROS/IDVA,IELEM,LMA8,LDUZI)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE ELTE(BLT,SKE,UEL,LM,NOP,NMAT,THID,HE,CORD,UPRI,RTDT,
     1                FTDT,TAU,ISNA,IPGC,LMEL,SKP,SKP1,ELAS,FOT,EKOR,
     1                GERS,NSLOJ,MATSL,BBET,DSLOJ,BET0,ALFE,HAEM,HINV,
     1                GEEK,NCVE2,IALFA,COR0,TEMGT,CORGT,AU,TSG2,N45,
     1                ZAPS,NPRZ,INDZS,GUSM,LA,CEGE,ESILA,
     1                SKS,SKES,NDNDS,HS,QS,PS,ID,DEF,NNOD,ngg,TBTH)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C      
      include 'pakxfem.inc'
C
CS     FORMIRANJE MATRICA ELEMENATA I SISTEMA
CE     FORM ELEMENT MATRIX
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /UGAOVL/ TE(4,4)
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /GRUPEE/ NGEL,NGENL,LGEOM,NGEOM,ITERM
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /REPERM/ MREPER(4)
      COMMON /TEMPCV/ LTECV,ITEMP
      COMMON /restap/ irestp,lplas0,lstaz0
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /ANALIZ/ LINEAR,ITERGL,INDDIN
      COMMON /MATIZO/ E,V
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /SPANEL/ ISHEAR
      COMMON /CDEBUG/ IDEBUG
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /SOPSVR/ ISOPS,ISTYP,NSOPV,ISTSV,IPROV,IPROL
      COMMON /DUPLAP/ IDVA
      COMMON /ITERBR/ ITER
      COMMON /INDKON/ IKONV
      COMMON /INDNAP/ NAPON
      COMMON /FILTER/ TOLNAP,TOLPOM
      COMMON /PRINCI/ PRINC(3)
      COMMON /KOREKJ/ AJOT
      COMMON /fier/ fier(3,3)
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /RMISIC/ VMS(3,3),VMS1(3,3),RACGR(3,3)
C
      COMMON /MPOINC/ MMP,NMPC,NEZAV,LCMPC,LMPC,NEZA1
      COMMON /PODTIP/ IPODT
      COMMON /GEORGE/ TOLG,ALFAG,ICCGG
      COMMON /MIXEDM/ MIXED,IOPGS(6),NDS
      COMMON /VELIKD/ DETG,QP(3,3),IGLPR
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
      COMMON /GRADIJ/ GRAD(3,3),GRAE(3,3),GRAP(3,3)
      COMMON /DEBLJG/ THICK,THICT,THIC0,NNSL
      COMMON /TRA2DN/ TSGD(4,4),TSGN(4,4),INTGL
      COMMON /DEFNAP/ NAPDEF
      COMMON /CRACKS/ CONTE,SINTE,FK123(10,3),NODCR(10,14),NCRACK,LQST,
     1                LNERING,LMIE,LPSI,LQ,N100,IRING,NSEG,MAXRIN,MAXSEG
     1                ,MAXNOD,LXL,LYL,LZL,LSIF1,LXGG,LYGG,LZGG,LNNOD
      COMMON /CRXFEM/ NCXFEM,LNODTIP,LNSSN,LPSIE,LFIE,LHNOD,
     1                LPSIC,LFI,LHZNAK,LNSSE,LKELEM,LID1,LID2
      COMMON /RADJAJ/ RPOM0(8,1000),IPOM0(1000)
      COMMON /DELAMI/ YDELT,YDELC,SDEL,DSQMK,NLMMK,JGMK,
     1                DSQMAX,KORMAX,NLMMAX,JGMAX,JGMAXF,
     1                ETCMF,NLMMF,JGMF,ETCMAX,KORMAXF,NLMMAXF,
     1                TSAIM,NLMMT,JGMT,TSAIMAX,KORMAXT,NLMMAXT,JGMAXT
      COMMON /EXPLICITNA/ INDEXPL
      COMMON /KRITKOR/ DTCR

C ARGENTINA
      COMMON /MMOD51/ TVOLE
C
      DIMENSION AU(*)
      REAL AU
C
      DIMENSION BLT(KK,*),SKE(*),UEL(*),LM(*),NOP(NE,*),NMAT(*),ISNA(*),
     1          THID(NE,*),CORD(NP,*),HE(NCVE,*),IPGC(*),UPRI(*),
     1          LMEL(NDNDS,*),RTDT(*),FTDT(*),TAU(N45,NGS12,NE,*),
     1          TEMGT(NGS12,*),CORGT(3,NGS12,*),SKP(ND,*),SKP1(NDNDS,*),
     1          SKS(*),SKES(NDS,*),HS(KK,*),QS(*),PS(NDS,*),
     1          ELAS(KK,*),NSLOJ(*),MATSL(MSLOJ,*),BBET(MSLOJ,*),
     1          DSLOJ(MSLOJ,*),BET0(*),ESILA(ND,*),
     1          ZAPS(*),NPRZ(*),GUSM(50,*),AMASC(9),ID(NP,*),
     1          ALFE(LA,*),HAEM(LA,*),HINV(LA,LA,*),GEEK(LA,NCVE2,*),
     1          DEF(N45,NGS12,NE,*),NNOD(*),ngg(*),TBTH(*)
      DIMENSION STRAIN(6),STRESS(8),TA(6)
      DIMENSION XG(55),WGT(55),NREF(11),XNC(15),WNC(15)
      DIMENSION XG5(5),YG5(5),WG5(5)
      DIMENSION TTE(2,3),CORDL(2,9),A12(3),A13(3),EN(3),Y(3),FTDTL(40),
     1          RTDTL(40),UPRIL(40),LMLAZ(27),RGOCA(40),
     1          COR(9,3),CORT(9,3),CON(9,3),COR0(NE,3,*),
     1          FOT(KK,*),EKOR(KK,*),GERS(KK,*),LJA(5),MJA(5),
     1          CEGE(LA,*),HAEML(5),TSG2(KK,*)
C
      DIMENSION GRAN(3,3),XJT(3,3),XJ0(3,3)
C
      DATA NREF/0,1,3,6,10,15,21,28,36,45,55/
      DATA WGT/            2.D0,               1.D0,               1.D0,
     1       .555555555555556D0, .888888888888889D0, .555555555555556D0,
     2       .347854845137454D0, .652145154862546D0, .652145154862546D0,
     3       .347854845137454D0, .236926885056189D0, .478628670499366D0,
     4       .568888888888889D0, .478628670499366D0, .236926885056189D0,
     5       .171324492379170D0, .360761573048139D0, .467913934572691D0,
     6       .467913934572691D0, .360761573048139D0, .171324492379170D0,
     7       .129484966168870D0, .279705391489277D0, .381830050505119D0,
     8       .417959183673469D0, .381830050505119D0, .279705391489277D0,
     9       .129484966168870D0, .101228536290376D0, .222381034453374D0,
     9       .313706645877887D0, .362683783378362D0, .362683783378362D0,
     1       .313706645877887D0, .222381034453374D0, .101228536290376D0,
     2       .081274388361574D0, .180648160694857D0, .260610696402935D0,
     3       .312347077040003D0, .330239355001260D0, .312347077040003D0,
     4       .260610696402935D0, .180648160694857D0, .081274388361574D0,
     5       .066671344308688D0, .149451349150581D0, .219086362515982D0,
     6       .269266719309996D0, .295524224714753D0, .295524224714753D0,
     7       .269266719309996D0, .219086362515982D0, .149451349150581D0,
     8       .066671344308688D0/
      DATA XG /            0.D0,-.577350269189626D0, .577350269189626D0,
     1      -.774596669241483D0,               0.D0, .774596669241483D0,
     2      -.861136311594053D0,-.339981043584856D0, .339981043584856D0,
     3       .861136311594053D0,-.906179845938664D0,-.538469310105683D0,
     4                     0.D0, .538469310105683D0, .906179845938664D0,
     5      -.932469514203152D0,-.661209386466265D0,-.238619186083197D0,
     6       .238619186083197D0, .661209386466265D0, .932469514203152D0,
     7      -.949107912342759D0,-.741531185599394D0,-.405845151377397D0,
     8                     0.D0, .405845151377397D0, .741531185599394D0,
     9       .949107912342759D0,-.960289856497536D0,-.796666477413627D0,
     9      -.525532409916329D0,-.183434642495650D0, .183434642495650D0,
     1       .525532409916329D0, .796666477413627D0, .960289856497536D0,
     2      -.968160239507626D0,-.836031107326636D0,-.613371432700590D0,
     3      -.324253423403809D0,               0.D0, .324253423403809D0,
     4       .613371432700590D0, .836031107326636D0, .968160239507626D0,
     5      -.973906528517172D0,-.865063366688985D0,-.679409568299024D0,
     6      -.433395394129247D0,-.148874338981631D0, .148874338981631D0,
     7       .433395394129247D0, .679409568299024D0, .865063366688985D0,
     8       .973906528517172D0/
C
      DATA WNC/            2.D0,               1.D0,               1.D0,
     1       .333333333333333D0,1.333333333333333D0, .333333333333333D0,
     2       .250000000000000D0, .750000000000000D0, .750000000000000D0,
     3       .250000000000000D0, .155555555555556D0, .711111111111111D0,
     4       .266666666666667D0, .711111111111111D0, .155555555555556D0/
C
      DATA XNC/            0.D0,              -1.D0,               1.D0,
     1                    -1.D0,               0.D0,               1.D0,
     2                    -1.D0,-.333333333333333D0, .333333333333333D0,
     3                     1.D0,              -1.D0,             -0.5D0,
     4                     0.D0,              0.5D0,               1.D0/
C
      DATA WG5/1.77777777777778D0,.555555555555556D0,.555555555555556D0,
     1         .555555555555556D0,.555555555555556D0/
      DATA XG5/            0.D0,-.774596669241483D0,-.774596669241483D0,
     1                           .774596669241483D0, .774596669241483D0/
      DATA YG5/            0.D0,-.774596669241483D0, .774596669241483D0,
     1                          -.774596669241483D0, .774596669241483D0/
c
      DIMENSION DL(NCVE),TEMPL(NCVE,3)
C
      DLMIN=1.D+10

      IF(IDEBUG.GT.0) PRINT *, ' ELTE  '
CM
      XDELT=1730E-5
      XDELC=1380E-5
      YDELT=66.5E-5
      YDELC=26.8E-5
      SDEL=133.7E-5
      DSQMK=-1.
      ETCMF=-1.
      TSAIM=-1.
      IF(KOR.EQ.1.AND.ITER.EQ.0) THEN
         DSQMAX=-1.
         ETCMAX=-1.
         TSAIMAX=-1.
         CALL CLEAR(RPOM0,8000)
         CALL ICLEAR(IPOM0,1000)
      ENDIF
CM     
C      PI=4.D0*DATAN(1.D0)
      NWE=ND*(ND+1)/2
C
CS    FORMIRANJE LAZNOG LM KOJI ODGOVARA STEPENIMA SLOBODE
C
      DO 9 I=1,ND
         LMLAZ(I)=I
    9 CONTINUE
CS.....   MATRICA TRANSFORMISANJA KONSTITUITIVNIH RELACIJA LAMINATA
CE.....   FIBER ORIENTATION TRANSFORMATION MATRIX
C
      IF(MSET.EQ.0.AND.MODORT(NMODM).EQ.1.AND.IBB0.EQ.0)
     1   CALL MATRTE(TE,BETA)
C
CS            P E T L J A    P O    E L E M N T I M A
CE            L O O P    O V E R    E L E M E N T S
C
C     INDIKATOR ZA INTEGRACIJU: (0-U GL.PRAVCIMA; 1-U DEKARTOVOM) 
C     (ZA SADA ZBOG SABIRANJA IKOMPATIBILNIH DEFORMACIJA)
      INTGL=0
C     INDIKATOR ZA GLAVNE PRAVCE
      IGLPR=0
      IF(IATYP.EQ.5.OR.ILEDE.EQ.1.OR.ICPM1.EQ.2) IGLPR=1
C
      GRZAP=0.D0
      GRMAS=0.D0
      DETGM=0.D0
      DETGP=0.D0
C
      NNCVE=NCVE
      DO 10 NLM=1,NE
c         WRITE(3,*) 'NLM - ULAZ U ELEMENT',NLM
C        PROMENLJIV BROJ CVOVORA ZA MEHANIKU LOMA
         NCVE=NNOD(NLM)
         NCVE2=NCVE*2
C
CS       NASTAJANJE I NESTAJANJE ELEMENATA
CE       ELEMENT BIRTH AND DEATH OPTION
C
         IBD=0
         CALL DTHBTH(AU(LTBTH),AU(LTDTH),VREME,NLM,IBD)
         IF(IBD.EQ.1) GO TO 10
C
         NNXYZ=(NLM-1)*NGS12-1
C........
CS.....  MATRICA TRANSFORMISANJA KONSTITUITIVNIH RELACIJA LAMINATA
CE.....  FIBER ORIENTATION TRANSFORMATION MATRIX
         IF(MSET.EQ.0.AND.MODORT(NMODM).EQ.1.AND.IBB0.EQ.1) THEN
            BETA=BETA+BET0(NLM)
            CALL MATRTE(TE,BETA)
         ENDIF
C
         CALL CLEAR(STRAIN,6)
         CALL CLEAR(STRESS,6)
         CALL CLEAR(TA,6)
         CALL CLEAR(XJ0,9)
         CALL CLEAR(XJT,9)
         CALL CLEAR(XJJ,9)
         CALL CLEAR(XJ,9)
         CALL CLEAR(CORDL,18)
         CALL CLEAR(COR,27)
         CALL CLEAR(CORT,27)
         CALL CLEAR(CON,27)
         CALL CLEAR(TSG2,KK*KK)
         IF(IETYP.EQ.1) TSG2(4,4)=1.D0
C
CS       VEKTOR  LM I VEKTOR LOKALNIH POMERANJA
CE       VECTOR  LM  AND  LOCALL DISPLACEMENTS
C
         CALL IJEDN1(LM,LMEL(1,NLM),NDNDS)
c         CALL IWRR(LMEL(1,NLM),NDNDS,'LMEU')
C        DODAVANJE JEDNACINA ZA XFEM         
         ND1=0
         ND2=0
         ND12=0
         IF(NCXFEM.GT.0) 
     1      CALL LMXFEM(LM,A(LNODTIP),AU(LID1),AU(LID2),NOP,
     1                  NLM,NE,NCVE,NDNDS,ND1,ND2)
         ND12=ND1+ND2
         NDD=NDNDS+ND1+ND2
         IF(NCXFEM.GT.0) NWE=NDD*(NDD+1)/2 
	   IF(NDD.GT.40) THEN
	    WRITE(*,*) NDD,ND,ND1,ND2
          STOP 'NDD.GT.100'
         ENDIF
         IF(MIXED.EQ.1) NDD=NCVE2
         IF(NCXFEM.GT.0.AND.IALFA.GE.0) STOP'NCXFEM.GT.0.AND.IALFA.GE.0' 
         IF(NCXFEM.GT.0.AND.IATYP.GT.1) STOP'NCXFEM.GT.0.AND.IATYP.GT.1' 
         IF(NCXFEM.GT.0.AND.IETYP.EQ.1) STOP'NCXFEM.GT.0.AND.IETYP.EQ.1' 
         IF(NCXFEM.GT.0.AND.IETYP.EQ.3) STOP'NCXFEM.GT.0.AND.IETYP.EQ.3' 
         IF(NCXFEM.GT.0.AND.MIXED.EQ.1) STOP'NCXFEM.GT.0.AND.MIXED.EQ.1' 
C
      DO 1222 I=1,NCVE
         II=NOP(NLM,I)
         IF(II.EQ.0) GO TO 1222
         DO 1223 J=1,3
 1223    COR(I,J)=CORD(II,J)
 1222 CONTINUE
C
      IF(IATYP.GE.4) THEN
         DO 1224 I=1,NCVE
         DO 1224 J=1,3
            IF(ITER.EQ.0) THEN
               COR0(NLM,J,I)=COR(I,J)
            ENDIF
            CORT(I,J)=COR0(NLM,J,I)
 1224    CONTINUE
      ENDIF
C
      IF(ISKNP.NE.2) THEN
c      call iwrr(lm,NDD,'LM0 ')
c      WRITE(3,*) 'LLM,LSKE,NWE',LLM,LSKE,NWE
         CALL CLEAR(SKE,NWE)
c      call iwrr(lm,NDD,'LM1 ')
         IF(MIXED.EQ.1) THEN
            NWS=NDS*(NDS+1)/2
            CALL CLEAR(SKS,NWS)
            CALL CLEAR(SKES,ND*NDS)
            CALL CLEAR(SKP1,NDNDS*NDNDS)
         ENDIF
      ENDIF
      IF(MIXED.EQ.1) CALL CLEAR(HS,KK*NDS)
      CALL CLEAR(AMASC,NCVE)
      CALL CLEAR(BLT,KK*(NCVE2+ND12))
      CALL CLEAR(HE,3*NCVE)
      IF(IETYP.EQ.3) THEN
         CALL CLEAR(SKP,ND*NCVE2)
         CALL CLEAR(SKP1,ND*ND)
      ENDIF
      IF(NGENL.GT.0) CALL CLEAR(FTDTL,NCVE2+ND12)
c      call iwrr(lm,NDD,'LM1 ')
C
CS    FORMIRANJE MATRICE TRANSFORMACIJE
CE    FORM TRANSFORMATION MATRIX
C
      IF(IETYP.EQ.3) THEN
         I1=NOP(NLM,1)
         I2=NOP(NLM,2)
         I3=NOP(NLM,3)
         DO 620 I=1,3
         A12(I) = CORD(I2,I) - CORD(I1,I)
  620    A13(I) = CORD(I3,I) - CORD(I1,I)
C        VEKTOR NORMALE
         EN(1) = A12(2)*A13(3) - A12(3)*A13(2)
         EN(2) = A12(3)*A13(1) - A12(1)*A13(3)
         EN(3) = A12(1)*A13(2) - A12(2)*A13(1)
C        VEKTOR Y
         Y(1) = EN(2)*A12(3) - EN(3)*A12(2)
         Y(2) = EN(3)*A12(1) - EN(1)*A12(3)
         Y(3) = EN(1)*A12(2) - EN(2)*A12(1)
         YI = DSQRT(Y(1)*Y(1)+Y(2)*Y(2)+Y(3)*Y(3))
         A12I = DSQRT(A12(1)*A12(1)+A12(2)*A12(2)+A12(3)*A12(3))
         DO 640 I=1,3
         TTE(1,I) = A12(I)/A12I
  640    TTE(2,I) = Y(I)/YI
C        FORMIRANJE LOKALNIH KOORDINATA
         I1=NOP(NLM,1)
         CORDL(1,1)=0.0D0
         CORDL(2,1)=0.0D0
         DO 660 I=2,NCVE
            IN=NOP(NLM,I)
            IF(IN.EQ.0) GO TO 660
            DO 670 J=1,2
            DO 670 K =1,3
  670       CORDL(J,I) = CORDL(J,I) + TTE(J,K)*(CORD(IN,K) - CORD(I1,K))
  660    CONTINUE
      ELSE
         DO 600 I=1,NCVE
            II = NOP(NLM,I)
            IF(II.EQ.0) GO TO 600
            DO 610 J=1,2
  610       CORDL(J,I)=CORD(II,J)
  600    CONTINUE
      ENDIF
C
CS    FORMIRANJE LOKALNIH POMERANJA
C
      IF(IETYP.EQ.3) THEN
         MM=0
         DO 170 I=1,NCVE
         DO 170 J=1,2
            MM=MM+1
            RTDTL(MM)=0.D0
            IF(NGENL.GT.0) UPRIL(MM)=0.D0
            DO 172 K=1,3
               IK=(I-1)*3+K
               IF(LM(IK).EQ.0) GO TO 172
               LL=LM(IK)
               UEL(IK)=RTDT(LL)
               RTDTL(MM) = RTDTL(MM) + TTE(J,K)*RTDT(LL)
               IF(NGENL.GT.0) UPRIL(MM) = UPRIL(MM) + TTE(J,K)*UPRI(LL)
  172       CONTINUE
  170    CONTINUE
      ELSE
C        OVO PROVERITI DA LI TREBA SVE ZAJEDNO ILI ODVOJENO ZA XFEM      
         DO 242 I=1,NDD
            UEL(I)=0.D0
            IF(NGENL.GT.0) UPRIL(I)=0.D0
            IF(LM(I).EQ.0) GO TO 242
            J=LM(I)
            UEL(I)=RTDT(J)
            if(j.lt.0) uel(i)=condof(rtdt,a(lcmpc),a(lmpc),j)
            IF(NGENL.GT.0) UPRIL(I)=UPRI(J)
  242    CONTINUE
         CALL JEDNA1(RTDTL,UEL,NDD)
      ENDIF
      IF(MIXED.EQ.1) THEN
         DO 702 I=1,NDS
            QS(I)=0.D0
            I1=ND+I
            IF(LM(I1).EQ.0) GO TO 702
            J=LM(I1)
            QS(I)=RTDT(J)
  702    CONTINUE
      ENDIF
C      WRITE(3,*) 'ITER',ITER
C     CALL WRR(UEL,8,'U0  ')
CM
         IF(INDBTH.EQ.1.AND.IPOM0(NLM).EQ.0.AND.
     +                      DABS(TBTH(NLM)).GT.1.E-15) THEN
            IPOM0(NLM)=KOR
            CALL JEDNA1(RPOM0(1,NLM),UEL,NDD)
         ENDIF
         IF(INDBTH.EQ.1.AND.IPOM0(NLM).GT.0.AND.
     +                      DABS(TBTH(NLM)).GT.1.E-15) THEN
C VIDI STA JE SA PRIRASTAJIMA
            CALL ZBIRMM(UEL,RPOM0(1,NLM),NDD)
c     oduzimanje koordinata pri zameni betona
            LL=0
            DO 609 I=1,NCVE
              II = NOP(NLM,I)
              IF(II.EQ.0) GO TO 609
              DO 608 J=1,2
         	    LL=LL+1
  608         CORDL(J,I)=CORDL(J,I)+RPOM0(LL,NLM)
  609      CONTINUE
        ENDIF
CM
C      WRITE(3,*) 'NLM,IPOM0(NLM),KOR,ITER',NLM,IPOM0(NLM),KOR,ITER
C      CALL WRR(UEL,NDD,'UEL ')
C      CALL WRR(RPOM0(1,NLM),NDD,'rpom')
C
      R=0.0D0
      S=0.0D0
      IF(IALFA.GE.0) THEN
         IF(ISKNP.NE.1) THEN
C
CS          RACUNANJE IZRAZA - F * U + h
CE          CALCULATE EXPRESSION - F * U + h
C
            DO 180 I=1,LA
               HAEML(I)=0.D0
               DO 190 J=1,NCVE2
                  IF(NGENL.GT.0) THEN
                     HAEML(I)=HAEML(I)+GEEK(I,J,NLM)*UPRIL(J)
                  ELSE
                     HAEML(I)=HAEML(I)+GEEK(I,J,NLM)*RTDTL(J)
                  ENDIF
  190          CONTINUE
               IF(NGENL.GT.0) HAEML(I)=HAEML(I)+HAEM(I,NLM)
  180       CONTINUE
C
CS          RACUNANJE PARAMETARA - ALFA
CE          CALCULATE PARAMETERS - ALFA
C           ALFA = ALFA - (H**-1) * (F * U + h )
C
            IF(NGENL.EQ.0) CALL CLEAR(ALFE(1,NLM),LA)
            CALL INTEV1(ALFE(1,NLM),HINV(1,1,NLM),HAEML,-1.D0,LA,LA)
C
         ENDIF
C
CS       BRISANJE PROSTORA ZA MATRICE H, F, h, E
CS       CLEAR SPACE FOR MATRIX H, F, h, E
C
         IF(ISKNP.NE.2) CALL CLEAR(HINV(1,1,NLM),LA*LA)
         IF(ISKNP.NE.2) CALL CLEAR(GEEK(1,1,NLM),LA*NCVE2)
         IF(NGENL.GT.0) CALL CLEAR(HAEM(1,NLM),LA)
         CALL CLEAR(EKOR,KK*LA)
         CALL CLEAR(FOT,KK*KK)
C
CS       INTERPOLACIJSKE FUNKCIJE I JAKOBIJAN U TACKI R, S, T
CE       INTERPOLATED FUNCTIONS AND JACOBIAN MATRIX IN R,S,T POINT
C
         CALL JACTEL(NOP,CORDL,HE,R,S,0)
C        CALL WRR(CORDL,8,'COR0')
C
CS       INVERTOVAN JAKOBIJAN - XJ
CE       INVERSE JACOBIAN - XJ
C
         DET0=DET
C
CS       MATRICA TRANSFORMACIJE - FOT (KOVARIJANTNI - GLOBALNI DEKARTOV) 
CE       TRANSFORMATION MATRIX - FOT (COVARIANT - GLOBAL CARTESIAN)
C
C         CALL TRANSE(FOT,XJ)
C
         FOT(1,1)=XJ(1,1)*XJ(1,1)
         FOT(2,1)=XJ(2,1)*XJ(2,1)
         FOT(3,1)=2.D0*XJ(1,1)*XJ(2,1)
C
         FOT(1,2)=XJ(1,2)*XJ(1,2)
         FOT(2,2)=XJ(2,2)*XJ(2,2)
         FOT(3,2)=2.D0*XJ(1,2)*XJ(2,2)
C
         FOT(1,3)=XJ(1,1)*XJ(1,2)
         FOT(2,3)=XJ(2,1)*XJ(2,2)
         FOT(3,3)=XJ(1,1)*XJ(2,2)+XJ(1,2)*XJ(2,1)
C
         IF(IETYP.EQ.1) THEN
            FOT(4,4)=1.D0
            RSNAD=3.D0*(CORDL(1,1)+CORDL(1,2)+CORDL(1,3)+CORDL(1,4))
            RNAD=(CORDL(1,1)-CORDL(1,2)-CORDL(1,3)+CORDL(1,4))/RSNAD
            SNAD=(CORDL(1,1)+CORDL(1,2)-CORDL(1,3)-CORDL(1,4))/RSNAD
            RSNAD=(CORDL(1,1)-CORDL(1,2)+CORDL(1,3)-CORDL(1,4))/RSNAD/3.
         ENDIF
C
      ENDIF 
C
C
CS    P E T L J A    P O    S L O J E V I M A
CE    L O O P    O V E R    L A Y E R S
C
C     ZA VELIKE DEFORMACIJE (IATYP.GE.4)
C     ISNN=2 - GRIN-LAGRANZEOVA DEFORMACIJA I PIOLA-KIRHOFOV NAPON
C     ISNN=3 - ALMANSIJEVA DEFORMACIJA I KOSIJEV NAPON
C     ISNN=4 - ROTIRANA GRIN-LAGR. DEFORM. I ROT. PIOLA-KIRHOFOV NAPON
      ISNN=3
C     INDIKATOR ISKLJUCIVANJA SVIH TRANSFORMACIJA 
      IPRI=0
C     INDIKATOR KONTROLNE STAMPE
      IST=0
      IPG=IPGC(NLM)
      if(ipg.gt.0) CALL CLEAR(ESILA(1,IPG),ND)
      MAT=NMAT(NLM)
      GUST=GUSM(NMODM,MAT)
      THICK=THID(NLM,1)
      MST=MAT
      NNSL=1
      IF(MSET.GT.0) THEN
         NNSL=NSLOJ(MST)
         TTT=-1.D0
      ENDIF
C
      ZAPRE=0.D0
      AMASA=0.D0
      DO 25 MSL=1,NNSL
C
         DDD=1.D0
         IF(MSET.GT.0) THEN
            BETA=BBET(MSL,MST)
            IF(IBB0.EQ.1) BETA=BETA+BET0(NLM)
            IF(MODORT(NMODM).EQ.1) CALL MATRTE(TE,BETA)
            DDD =DSLOJ(MSL,MST)
            TTT =TTT+2.D0*DDD
            MAT =MATSL(MSL,MST)
         ENDIF   
C
         GO TO (  1,  2,999,999,999,999,999,999,999,999,
     1          999,999,999,999,999,999,999,999,999,999,
     2          999,999,999,999,999,999,999,999,999,999,
     3          999,999,999,999,999,999,999,999,999,999,
     4          999,999,999,999,999,999,999,999,999,999,
     5          999,999,999,999,999,999,999,999,999,999,
     6          999,999,999,999,999,999,999,999,999,999,
     7          999,999,999,999,999,999,999,999,999,999,
     8          999,999,999,999,999,999,999,999,999,999,
     9          999,999,999,999,999,999,999,999,999,999),NMODM
    1    LFUN=MREPER(1)
         CALL MEL01(A(LFUN))
         GO TO 999
    2    LFUN=MREPER(1)
         CALL MEL02(A(LFUN))
C
CS       PETLJA PO GAUSOVIM TACKAMA 
CE       LOOP OVER GAUSS POINTS
C
  999    JG=0
C START ARGENTINA
C CALCULATION OF ELEMENT SURFACE
      TVOLE=0.
      IF(NMODM.EQ.51) THEN
         DO 920 NGR=1,NGAUSX
            JGR=NREF(NGAUSX)+NGR
            IF(INCOTX.EQ.0) THEN
              IF(NGAUSX.EQ.5)THEN
                R=XG5(NGR)
                S=YG5(NGR)
                WR=WG5(NGR)
                WS=1.D0
                NGAUSY=1
            ELSE
                R=XG(JGR)
                WR=WGT(JGR)
              ENDIF
            ELSE
               R =XNC(JGR)
               WR=WNC(JGR)
            ENDIF
C
         DO 920 NGS=1,NGAUSY
            JGR=NREF(NGAUSY)+NGS
            IF(INCOTY.EQ.0) THEN
              IF(NGAUSX.NE.5)THEN
                S=XG(JGR)
                WS=WGT(JGR)
              ENDIF
            ELSE
               S =XNC(JGR)
               WS=WNC(JGR)
            ENDIF
C
            CALL JACTEL(NOP,CORDL,HE,R,S,0)
            IF(ICORGT.EQ.1.OR.ITERME.EQ.1.OR.IETYP.EQ.1)
     1      CALL JACGAU(NOP,CORDL,A(LTECV),HE,X1,CORGT(1,JG,NLM),TGT)
            WT=WR*WS*DET
            WTU=WT
C            IF(IETYP.EQ.1) WTU=X1*WT
            TVOLE=TVOLE+WTU
  920    CONTINUE
      ENDIF
C END ARGENTINA
         NGAUXX=NGAUSX
         NGAUYY=NGAUSY
         IF(ND12.GT.0) THEN
            NGAUXX=6
            NGAUYY=6
         ENDIF   
         IBTC=0
         DO 20 NGR=1,NGAUXX
            JGR=NREF(NGAUXX)+NGR
            IF(INCOTX.EQ.0) THEN
              IF(NGAUXX.EQ.5.AND.NGAUYY.EQ.1)THEN
                R=XG5(NGR)
                S=YG5(NGR)
                WR=WG5(NGR)
                WS=1.D0
              ELSE
                R=XG(JGR)
                WR=WGT(JGR)
              ENDIF
            ELSE
               R =XNC(JGR)
               WR=WNC(JGR)
            ENDIF
C
         DO 20 NGS=1,NGAUYY
            JGR=NREF(NGAUYY)+NGS
            IF(INCOTY.EQ.0) THEN
              IF(NGAUXX.NE.5.AND.NGAUYY.NE.1)THEN
                S=XG(JGR)
                WS=WGT(JGR)
              ENDIF
            ELSE
               S =XNC(JGR)
               WS=WNC(JGR)
            ENDIF
C
            JG=JG+1
            IF(IST.EQ.1) WRITE(3,*)'NLM,NGR,NGS',NLM,NGR,NGS
C            WRITE(3,*)'NLM,JG',NLM,JG
C
CS          INTERPOLACIJSKE FUNKCIJE I JAKOBIJAN U TACKI R, S, T
CE          INTERPOLATED FUNCTIONS AND JACOBIAN MATRIX IN R,S,T POINT
C
            CALL JACTEL(NOP,CORDL,HE,R,S,0)
C            
            IF(MIXED.EQ.1) THEN
               DO 701 I=1,NCVE
                  I1=(I-1)*KK
               DO 701 J=1,KK
                  IJ=J+I1
                  HS(J,IJ)=HE(I,1)
  701          CONTINUE
            ENDIF
C
CS          TEMPERATURA, GLOBALNE KOORDINATE GAUSOVE TACKE
CE          TEMPERATURE AND GLOBAL COORDINATES OF GAUSS POINT
C
            IF(ICORGT.EQ.1.OR.ITERME.EQ.1.OR.IETYP.EQ.1)
     1      CALL JACGAU(NOP,CORDL,A(LTECV),HE,X1,CORGT(1,JG,NLM),TGT)
            IF(ITERME.EQ.1) TEMGT(JG,NLM)=TGT
C
            IF(IALFA.GE.0) THEN
               DETT=DET0/DET
C
CS             FORMIRANJE MATRICE - E (KOVARIJANTNA)
CE             FORM MATRIX - E (COVARIANT)
C
               IF(IETYP.EQ.1) THEN
                  EKOR(1,1)=R*DETT-RNAD
                  EKOR(2,2)=S*DETT-SNAD
                  EKOR(3,3)=R*DETT-RNAD
                  EKOR(3,4)=S*DETT-SNAD
                  EKOR(4,5)=R*S/X1
               ELSE
                  EKOR(1,1)=R*DETT
                  EKOR(2,2)=S*DETT
                  EKOR(3,3)=R*DETT
                  EKOR(3,4)=S*DETT
                  IF(IALFA.EQ.2) THEN
                     EKOR(1,5)=R*S*DETT
                     EKOR(2,5)=-R*S*DETT
                     EKOR(3,5)=(R*R-S*S)*DETT
                  ENDIF
               ENDIF
C
CS             FORMIRANJE MATRICE - G (GLOBALNI DEKARTOV)
CE             FORM MATRIX - G (GLOBAL CARTESIAN)
C
               CALL MNOZM1(GERS,FOT,EKOR,KK,LA,KK)
            ENDIF
C
CS          FORMIRANJE KONSTITUITIVNE MATRICE
CE          CONSTITUITIVE MATRIX
C
            GO TO ( 70, 70,  3,  4,  5,  5,  5,  5,  5,  5,
     1               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     2               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     3               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     4               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     5               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     6               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     7               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     8               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     9               5,  5,  5,  5,  5,  5,  5,  5,  5,  5),NMODM
    3       LFUN=MREPER(1)
            LNTA=MREPER(2)
            LTEM=MREPER(3)
            MATE=MREPER(4)
            CALL MEL03(A(LFUN),A(LNTA),A(LTEM),MATE,TGT)
            GO TO 70
    4       LFUN=MREPER(1)
            LNTA=MREPER(2)
            LTEM=MREPER(3)
            MATE=MREPER(4)
            CALL MEL04(A(LFUN),A(LNTA),A(LTEM),MATE,TGT)
            GO TO 70
    5       IBTC=IBTC+1
            IRAC=2
            NPROS=(NNXYZ+IBTC)*MODPR2( NMODM )*IDVA
            LPLAS=LPLAST+NPROS     
            LPLA1=LPLAS1+NPROS
            LPLA0=LPLAS0+NPROS
C            
            IF(IATYP.GE.4.AND.IETYP.NE.1.AND.IETYP.NE.2) THEN
               IT1=4
               IF(IPODT.EQ.1) IT1=3
               THIC0=0.D0
               DO 711 I=1,IT1
                  THIC0=THIC0+THID(NLM,I)*HE(I,1)
  711          CONTINUE
               IF(IPODT.EQ.0) THEN
                  IF(NOP(NLM,5).GT.0.AND.NCVE.GE.5)
     +            THIC0=THIC0+(THID(NLM,1)+THID(NLM,2))*HE(5,1)/2.D0
                  IF(NOP(NLM,6).GT.0.AND.NCVE.GE.6)
     +            THIC0=THIC0+(THID(NLM,2)+THID(NLM,3))*HE(6,1)/2.D0
                  IF(NOP(NLM,7).GT.0.AND.NCVE.GE.7)
     +            THIC0=THIC0+(THID(NLM,3)+THID(NLM,4))*HE(7,1)/2.D0
                  IF(NOP(NLM,8).GT.0.AND.NCVE.GE.8)
     +            THIC0=THIC0+(THID(NLM,1)+THID(NLM,4))*HE(8,1)/2.D0
                  IF(NOP(NLM,9).GT.0.AND.NCVE.EQ.9) THIC0=THIC0+HE(9,1)*
     +            (THID(NLM,1)+THID(NLM,2)+THID(NLM,3)+THID(NLM,4))/4.D0
               ENDIF
               IF(IPODT.EQ.1) THEN
                  IF(NOP(NLM,4).GT.0.AND.NCVE.GE.4)
     +            THIC0=THIC0+(THID(NLM,1)+THID(NLM,2))*HE(4,1)/2.D0
                  IF(NOP(NLM,5).GT.0.AND.NCVE.GE.5)
     +            THIC0=THIC0+(THID(NLM,2)+THID(NLM,3))*HE(5,1)/2.D0
                  IF(NOP(NLM,6).GT.0.AND.NCVE.GE.6)
     +            THIC0=THIC0+(THID(NLM,1)+THID(NLM,3))*HE(6,1)/2.D0
               ENDIF
               THICT=THIC0
               THICK=THIC0
C               WRITE(3,*) 'R,S',R,S
C               WRITE(3,*)'H',(HE(I,1),I=1,NCVE)
C               WRITE(3,*)'T',(THID(NLM,I),I=1,IT1)
C               WRITE(3,*)'THICK,THICT,THIC0',THICK,THICT,THIC0
            ENDIF
            CALL MODMAT(STRAIN,TA,NMODM,IRAC,LPLAS,LPLA1,IBTC,TGT,lpla0)
   70       WT=WR*WS*DET
            WTU=WT*THICK*DDD
            IF(IETYP.EQ.1) WTU=X1*WT
            IF(IST.EQ.1) WRITE(3,*)'DET,THICK,WR,WS',DET,THICK,WR,WS
            IF(IST.EQ.1) WRITE(3,*)'WTU,DDD',WTU,DDD
C           FORMIRANJE VEKTORA H ZA MATRICU MASA
            IF(ITER.EQ.0.AND.INDZS.GT.0)THEN
               WD=WTU*GUST
               ZAPRE=ZAPRE+WTU
               AMASA=AMASA+WD
               DO 149 I=1,NCVE
                  AMASC(I)=AMASC(I)+HE(I,1)*WD
  149          CONTINUE
            ELSE
               ZAPRE=ZAPRE+WTU
            ENDIF
C
CS          FORMIRANJE MATRICE BL0 LINEARNO
CE          FORM LINEAR BL0 MATRIX
C
            IF(NCXFEM.GT.0) THEN
               NGG(NLM)=JG
               CALL BETBEX(A(LCORD),HE,BLT,NOP,X1,A(LNODTIP),AU(LHZNAK),
     1	                   AU(LKELEM),JG,NP,r,s)
            ELSE
               CALL BETBED(HE,BLT,NOP,X1)
            ENDIF
C
CS          KOREKCIJA ZA SMICUCI PANEL
CE          UPDATE FOR SHEARING PANEL
C
            IF(NMODM.LT.5) THEN
               IF(ISHEAR.EQ.1) THEN
                  DO 71 I=1,2
                  DO 71 J=1,2
   71             ELAST(I,J)=0.0D0
               ENDIF
               DO 80 I=1,KK
               DO 80 J=1,KK
   80          ELAS(I,J)=ELAST(I,J)
            ENDIF
C
CS          FORMIRANJE MATRICE BL1 LINEARNO
CE          FORM LINEAR BL1 MATRIX
C
            IF(IATYP.EQ.2) CALL BETL12(BLT,NOP,LM,RTDTL,X1,STRAIN,0)
C
      IF(ISKNP.NE.1) THEN
C
CS       RACUNANJE DEFORMACIJA U GLOBALNOM DEKARTOVOM
CE       CALCULATE STRAINS IN GLOBAL CARTESIAN 
C
C
         CALL CLEAR(STRAIN,6) 
C
CS       LINEARNOST I M.N.O.
CE       LINEAR PART AND M.N.O.
C
C         IF(NCXFEM.GT.0)
C     1   CALL KOR_POM_X(A(LNODTIP),NOP,NLM,NE,NCVE,RTDTL,RGOCA,A(LHNOD))

         IF(IATYP.EQ.0.OR.IATYP.EQ.1)
     1   CALL MNOZI1(STRAIN,BLT,RTDTL,KK,NDD)
C
CS       GEOMETRIJSKA NELINEARNOST - UKUPNE DEFORMACIJE ZA T.L. I U.L.
CE       GEOMETRICAL NONLINEARITY - TOTAL STRAIN FOR T.L. AND U.L.
C
         IF(IATYP.EQ.2) CALL BETL12(BLT,NOP,LM,RTDTL,X1,STRAIN,1)
         IF(IATYP.EQ.3) CALL STRUL2(BLT,NOP,LM,RTDTL,X1,STRAIN)
C
C        RACA - !!!!!!!!!!!!!!!!!!!!!!!
         IF (NMODM.EQ.31) THEN
C
CS          KOORDINATE U TRENUTKU - 0
CE          COORDINATE IN TIME - 0
C
            NK=2
            IF(IETYP.EQ.3) NK=3
            II=0
            DO 14 I=1,NCVE
            DO 14 K=1,NK
               II=II+1
               IF (IATYP.EQ.1) THEN 
                 CON(I,K)=COR(I,K)+UEL(II)
               ELSE             
                 CON(I,K)=COR(I,K)-UEL(II)
               ENDIF
   14       CONTINUE
C
C           CALL WRR(COR,18,'COR ')
C           CALL WRR(CON,18,'CON ')
C           CALL WRR(UEL,NDD,'UEL ')
C
C           ZBOG RACUNANJA VEKTORA GR U T+DT
CS          JAKOBIJEVA MATRICA U GAUSOVOJ TACKI U TRENUTKU - T+DT
CE          JACOBIAN MATRIX IN GAUSS POINT IN TIME - T+DT
C
               IF (IATYP.EQ.1) THEN 
                 CALL GRGSG2(CON,XJJ,HE,NCVE)
               ELSE             
                 CALL GRGSG2(COR,XJJ,HE,NCVE)
               ENDIF
C
              CALL JEDNA1(VMS,XJJ,9) 
C
CS          JAKOBIJEVA MATRICA U GAUSOVOJ TACKI U TRENUTKU - 0
CE          JACOBIAN MATRIX IN GAUSS POINT IN TIME - 0
C
               IF (IATYP.EQ.1) THEN 
                 CALL GRGSG2(COR,XJJ,HE,NCVE)
               ELSE             
                 CALL GRGSG2(CON,XJJ,HE,NCVE)
               ENDIF
C
              CALL JEDNA1(VMS1,XJJ,9) 
C
CS          INVERTOVAN JAKOBIJAN - XJJ
CE          INVERSE JACOBIAN - XJJ
C
            CALL MINV2(XJJ,DET)
C
CS          RACUNANJE GRADIJENTA DEFORMACIJE OD 0 DO T+DT
CE          CALCULATE DEFORMATION GRADIENT FROM 0 TO T+DT
C
               IF (IATYP.EQ.1) THEN 
                 CALL GRAD2T(XJJ,HE,CON,COR,GRAD,NCVE,IETYP)
               ELSE             
                 CALL GRAD2T(XJJ,HE,COR,CON,GRAD,NCVE,IETYP)
               ENDIF
C
CZ            CALL JEDNA1(GRAD1R,GRAD,9)
            DLAMZ=GRAD(3,3)
C
CS          INVERTOVAN GRADIJENT - GRAD
CE          INVERSE GRADIENT - GRAD
C
            CALL MINV2(GRAD,DET)
            CALL JEDNA1(RACGR,GRAD,9)
            RACGR(3,3)=DLAMZ 
C
	   ENDIF
C        RACA - !!!!!!!!!!!!!!!!!!!!!!!
C
         iboj=0
         if(nmodm.eq.28.and.iboj.eq.1) then
C
CS          JAKOBIJEVA MATRICA U TACKI (R,S,T) U TRENUTKU - T,0
CE          JACOBIAN MATRIX IN POINT (R,S,T) IN TIME - T,0
C
CS          KOORDINATE U TRENUTKU - 0
CE          COORDINATE IN TIME - 0
            NK=2
            IF(IETYP.EQ.3) NK=3
            II=0
            DO I=1,NCVE
            DO K=1,NK
               II=II+1
               CON(I,K)=COR(I,K)-UEL(II)
            enddo
            enddo
CS          KOVARIJANTNI BAZNI VEKTORI U KONFIGURACIJI - ,XJ0
CE          COVARIANT BASIS VECTORS IN CONFIGURATION - XJ0
            CALL GRGSG2(CON,XJ0,HE,NCVE)
C
CS          INVERTOVAN JAKOBIJAN - XJ0
CE          INVERSE JACOBIAN - XJ0
C
            CALL MINV2(XJ0,DUM)
C
CS          RACUNANJE GRADIJENTA DEFORMACIJE OD 0 DO T+DT
CE          CALCULATE DEFORMATION GRADIENT FROM 0 TO T+DT
C
            CALL GRAD2T(XJ0,HE,COR,CON,GRAD,NCVE,IETYP)
            CALL DETER3(GRAD,DETG)
            IF(IETYP.NE.1.AND.IETYP.NE.2) GRAD(3,3)=THICK/THIC0
            call mnozm3(grae,grad,grad,3,3,3)
            strain(1)=0.5*(grae(1,1)-1.)
            strain(2)=0.5*(grae(2,2)-1.)
            strain(3)=0.5*(grae(1,2))
            strain(4)=0.5*(grae(3,3)-1.)
         endif
CS       VELIKE DEFORMACIJE
CE       LARGE STRAIN
C
         IF(IATYP.GE.4) THEN
C
CS          STARO - Be, Cp**-1, Fp**-1
CE          OLD - B
C
            IF(ILEDE.EQ.0.AND.ICPM1.LE.1) THEN
               CALL JEDNA1(STRESS,TAU(1,JG,NLM,MSL),NLD)
               IF(IST.EQ.1) CALL WRR(STRESS,NLD,'BOLD')
            ENDIF
            IF(ILEDE.EQ.1.OR.(ILEDE.EQ.0.AND.ICPM1.EQ.2)) THEN 
               CALL JEDNA1(GRAP,TAU(1,JG,NLM,MSL),NLD)
               CALL MINV3(GRAP,DUM)
               IF(IST.EQ.1) CALL WRR(GRAP,NLD,'BOLD')
            ENDIF
C
CS          JAKOBIJEVA MATRICA U TACKI (R,S,T) U TRENUTKU - T,0
CE          JACOBIAN MATRIX IN POINT (R,S,T) IN TIME - T,0
C
CS          KOORDINATE U TRENUTKU - 0
CE          COORDINATE IN TIME - 0
            NK=2
            IF(IETYP.EQ.3) NK=3
            II=0
            DO 12 I=1,NCVE
            DO 12 K=1,NK
               II=II+1
               CON(I,K)=COR(I,K)-UEL(II)
   12       CONTINUE
CS          KOVARIJANTNI BAZNI VEKTORI U KONFIGURACIJI - XJT,XJ0
CE          COVARIANT BASIS VECTORS IN CONFIGURATION - XJT,XJ0
            CALL GRGSG2(CORT,XJT,HE,NCVE)
            CALL GRGSG2(CON,XJ0,HE,NCVE)
C
CS          INVERTOVAN JAKOBIJAN - XJT,XJ0
CE          INVERSE JACOBIAN - XJT,XJ0
C
            CALL MINV2(XJT,DUM)
            CALL MINV2(XJ0,DUM)
C
CS          RACUNANJE GRADIJENTA DEFORMACIJE OD T DO T+DT
CE          CALCULATE DEFORMATION GRADIENT FROM T TO T+DT
C
            IF(ILEDE.EQ.0) THEN
               IF(ICPM1.EQ.0) THEN
                  CALL GRAD2T(XJT,HE,COR,CORT,GRAD,NCVE,IETYP)
                  IF(IETYP.NE.1.AND.IETYP.NE.2) GRAD(3,3)=THICK/THICT
               ENDIF
               IF(ICPM1.GE.1) THEN
                  CALL GRAD2T(XJ0,HE,COR,CON,GRAD,NCVE,IETYP)
                  IF(IETYP.NE.1.AND.IETYP.NE.2) GRAD(3,3)=THICK/THIC0
               ENDIF
            ENDIF
            IF(ILEDE.EQ.1) THEN
               CALL GRAD2T(XJ0,HE,COR,CON,GRAD,NCVE,IETYP)
               IF(IETYP.NE.1.AND.IETYP.NE.2) GRAD(3,3)=THICK/THIC0
            ENDIF
            IF(IST.EQ.1) CALL WRR3(XJJ,9,'XJJ ')
            IF(IST.EQ.1) CALL WRR3(XJT,9,'XJT ')
            IF(IST.EQ.1) CALL WRR3(GRAD,9,'GRAD')
CS          RACUNANJE NORMIRANOG GRADIJENTA DEFORMACIJE OD T DO T+DT
C            IF(IETYP.NE.1.AND.IETYP.NE.2) THEN
               CALL JEDNA1(GRAN,GRAD,9)
C            ELSE
C               AJOT=GRAD(3,3)*(GRAD(1,1)*GRAD(2,2)-GRAD(1,2)*GRAD(2,1))
C               IF(AJOT.GT.DETGM) DETGM=AJOT
C               IF(AJOT.LE.0.D0) THEN
C                  WRITE(3,*) 'NLM,JG,AJOT',NLM,JG,AJOT
C                  STOP 'PAK22.FOR'
C               ENDIF
C               TKOR=DEXP(-1.D0/3.D0*DLOG(AJOT))
C               CALL JEDNAK(GRAN,GRAD,TKOR,9)
C               CALL DETER3(GRAN,DUM)
C               WRITE(3,*) 'DUM',DUM
C            ENDIF
            IF(IST.EQ.1) CALL WRR3(GRAN,9,'GRAN')
C
CS          RACUNANJE GRADIJENTA DEFORMACIJE OD 0 DO T+DT
CE          CALCULATE DEFORMATION GRADIENT FROM 0 TO T+DT
C
            CALL GRAD2T(XJ0,HE,COR,CON,GRAD,NCVE,IETYP)
            IF(IETYP.NE.1.AND.IETYP.NE.2) GRAD(3,3)=THICK/THIC0
            DETG=GRAD(3,3)*(GRAD(1,1)*GRAD(2,2)-GRAD(1,2)*GRAD(2,1))
            IF(DETG.LT.1.D-15) STOP 'DETG.LE.0, PAK22.FOR'
            IF(IST.EQ.1) CALL WRR3(XJJ,9,'XJJ ')
            IF(IST.EQ.1) CALL WRR3(XJ0,9,'XJ0 ')
            IF(IST.EQ.1) CALL WRR3(GRAD,9,'GRAD')
            IF(IST.EQ.1) WRITE(3,*) 'DETG',DETG
C
CS          TRANSF. ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORMACIJE
CE          TRANSFORM. ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
C           Be* = Ft * Be * FtT  (ICPM1=0)
C           Be* = F * (Cp**-1) * FT  (ICPM1=1)
            IF(ILEDE.EQ.0.AND.ICPM1.LE.1) CALL PIOKOS(GRAN,STRESS)
CS          RACUNANJE ELASTICNOG GRADIJENTA DEFORMACIJE
CE          ELASTIC DEFORMATION GRADIENT
C           Fe = F * Fp**-1         Be = Fe * FeT
            IF(ILEDE.EQ.0.AND.ICPM1.EQ.2) THEN
C              GRAD ILI GRAN
               CALL MNOZM1(GRAE,GRAD,GRAP,3,3,3)
               CALL MNOZM3(GRAP,GRAE,GRAE,3,3,3)
               CALL TENVEK(GRAP,STRESS,1)
               CALL JEDNA1(XJ,GRAE,9)
            ENDIF
C           Fe = F * Fp**-1         Ce = FeT * Fe
            IF(ILEDE.EQ.1) THEN
C              GRAD ILI GRAN
               CALL MNOZM1(GRAE,GRAD,GRAP,3,3,3)
               CALL MNOZM2(GRAP,GRAE,GRAE,3,3,3)
               CALL TENVEK(GRAP,STRESS,1)
               CALL JEDNA1(XJ,GRAE,9)
            ENDIF
C
C           GLAVNE VREDNOSTI I PRAVCI
C
            IF(IST.EQ.1) CALL WRR6(STRESS,6,'BECE')
            IF(IGLPR.EQ.1) THEN
               NAPDEF=1
               CALL GLAVN(STRESS)
               NAPDEF=0
               CALL GLAPR3(STRESS,QP)
               CALL JEDNA1(FIER,QP,9)
c               IF(IETYP.NE.1.AND.IETYP.NE.2)
c     1         CALL GLASOR(PRINC,QP,0.D0,0.D0,1.D0,IMAX)
               CALL GLASOR(PRINC,QP,0.D0,0.D0,1.D0,IMAX)
               IF(IST.EQ.1) CALL WRR3(PRINC,3,'PP  ') 
               IF(IST.EQ.1) CALL WRR3(QP,9,'QP  ') 
               CALL TRA2SE(TSGD,QP)
               CALL TRA2SS(TSGN,QP)
            ENDIF
C
CS          PROBNE ELASTICNE DEFORMACIJE
CE          TRIAL ELASTIC STRAIN
C
            IF(IATYP.EQ.4) THEN
C              IF(IGLPR.EQ.1) THEN
C     IZMENIO DUNIC
               IF(INTGL.EQ.0) THEN
C     IZMENIO DUNIC
                  CALL CLEAR(STRESS,6)
                  STRESS(1)=PRINC(1)
                  STRESS(2)=PRINC(2)
                  STRESS(3)=PRINC(3)
               ENDIF
               CALL UKDEFV(STRAIN,STRESS)
            ENDIF
            IF(IATYP.EQ.5) THEN
C              GLAVNE VREDNOSTI
C              LAMBDA
               if(princ(1).lt.1.e-8) stop 'princ(1)'
               if(princ(2).lt.1.e-8) stop 'princ(2)'
               if(princ(3).lt.1.e-8) stop 'princ(3)'
               P1=DSQRT(PRINC(1))
               P2=DSQRT(PRINC(2))
               P3=DSQRT(PRINC(3))
               IF(IST.EQ.1) WRITE (3,*) 'L1,L2,L3',P1,P2,P3
               if(p1.lt.1.e-8) stop 'p1'
               if(p2.lt.1.e-8) stop 'p2'
               if(p3.lt.1.e-8) stop 'p3'
               STRAIN(1)=DLOG(P1)
               STRAIN(2)=DLOG(P2)
               STRAIN(3)=DLOG(P3)
               IF(IST.EQ.1) CALL WRR3(STRAIN,6,'STLO')
            ENDIF
            IF(IGLPR.EQ.1) THEN
C              TRANSFORMACIJA DEFORMACIJA: GLAVNI PRAVCI - DEKARTOV SISTEM
               CALL DIJADS(QP,STRAIN)
               STRAIN(4)=2.D0*STRAIN(4)
            ENDIF
            IF(IST.EQ.1) CALL WRR3(STRAIN,6,'STDE')
            DUM=STRAIN(3)
            STRAIN(3)=STRAIN(4)
            STRAIN(4)=DUM
         ENDIF
C
CS       INKOMPATIBILNE DEFORMACIJE
CE       INCOMPATIBILE STRAIN
C        ovaj koncept ne valja za velike deformacije
         IF(IALFA.GE.0.AND.IATYP.LT.4)
     1   CALL MNOZI1(STRAIN,GERS,ALFE(1,NLM),KK,LA)
C
CS       TRANSFORMACIJA DEFORMACIJA (GLOBALNI DEKART - GLAVNI PRAVCI)
CE       TRANSFORM STRAIN (GLOBAL CARTESIAN - PRINCIPAL DIRECTIONS) 
C
C        ZA INTEGRACIJU U DEKARTOVOM SISTEMU (INTGL.EQ.1)
         IF(IATYP.GE.4.AND.IGLPR.EQ.1.AND.INTGL.EQ.0) THEN
C           Eg=Qd*Ed
            CALL CLEAR(TA,4) 
            CALL MNOZI1(TA,TSGD,STRAIN,4,4)
            CALL JEDNA1(STRAIN,TA,4)
         ENDIF
C
CS       TERMICKE DEFORMACIJE   ETH=ALFA*(T-T0)
CE       THERMAL STRAINS
C
         IF(NMODM.EQ.3.OR.NMODM.EQ.4) CALL MAMO34(STRAIN,TGT)
         IF(NMODM.EQ.3.OR.NMODM.EQ.4) DTGT0=TGT-TEMP0
         IF(IETYP.EQ.0.OR.IETYP.EQ.3) THEN
           IF(NMODM.EQ.1) STRAIN(4)=-(STRAIN(1)+STRAIN(2))*V/(1.D0-V)
           IF(NMODM.EQ.2)
     &     STRAIN(4)=-STRAIN(1)*(VZX*EX/EZ+VXY*VYZ)/(1.D0-VXY*VXY*EY/EX)
     &               -STRAIN(2)*(VYZ+VXY*VZX*EY/EZ)/(1.D0-VXY*VXY*EY/EX)
         ENDIF
         IF(IST.EQ.1) CALL WRR3(STRAIN,6,'STRA')
C
C
CS       RACUNANJE NAPONA
CE       CALCULATE STRESS 
C
C
         CALL CLEAR(TA,6) 
C
         IF(NMODM.LT.5) THEN
C
C           DEFORMACIJE ZBOG KOREKCIJE DEBLJINE
            IF(NAPON.EQ.1) CALL JEDNA1(DEF(1,JG,NLM,MSL),STRAIN,KK)
C
CS          MATERIJALNA LINEARNOST
CE          MATERIAL LINEAR
C
            CALL MNOZI1(TA,ELAS,STRAIN,KK,KK)
C
CS          RACUNANJE UNUTRASNJIH SILA
CE          CALCULATE INTERNAL FORCES
C           r = BT * S 
C
            IF(NZADP.GT.0.AND.ISKNP.EQ.2.AND.NGENL.EQ.0) THEN
               IF(IETYP.EQ.3) THEN
                  CALL INTEGF(FTDTL,BLT,TA,LMLAZ,WTU,NCVE2,3)
               ELSE
                  CALL INTEGF(FTDT,BLT,TA,LM,WTU,NDD,KK)
                  IF(MIXED.EQ.1) THEN
                     CALL JEDNAK(STRESS,TA,-1.D0,KK)
                     CALL MNOZI1(STRESS,HS,QS,KK,NDS)
                     CALL INTEGF(FTDT,HS,STRESS,LM(ND+1),WTU,NDS,KK)
                  ENDIF
               ENDIF
            ENDIF
C
CS          CISCENJE NUMERICKIH GRESAKA ZA NAPONE
CE          CLEANING NUMERICAL ERRORS FOR STRESS
C
            CALL CISTIN(TA,KK)
C
            DO 21 I=1,4
               IF(IATYP.EQ.2) THEN
C
CS                KOSIJEVI NAPONI U GLOBAL. ILI LOKAL. DEKART. SISTEMU
CE                CAUCHY STRESS IN GLOBAL OR LOCAL CARTESIAN SYSTEM 
C
C?                  CALL GLLOKN(TAK,TSS,SIG,ISNA(NLM),I)
               ELSE
C
CS                KOSIJEVI NAPONI U GLOBAL. ILI LOKAL. DEKART. SISTEMU
CE                CAUCHY STRESS IN GLOBAL OR LOCAL CARTESIAN SYSTEM 
C
C?                  CALL GLLOKN(TA,TSG,SIG,ISNA(NLM),I)
               ENDIF
               SIG=TA(I)
c               IF(DABS(SIG).LT.TOLNAP) SIG=0.D0
               TAU(I,JG,NLM,MSL)=SIG
   21       CONTINUE
C
CS          RACUNANJE NAPONA U PRAVCU DEBLJINE
C
            IF(IETYP.EQ.2) THEN
               IF(NMODM.EQ.1.OR.NMODM.EQ.3) THEN
                  TA(4)=(TA(1)+TA(2))*V
                  IF(ITERME.NE.0) TA(4)=TA(4)-E*ALFA(3)*DTGT0
               ENDIF
               IF(NMODM.EQ.2.OR.NMODM.EQ.4) THEN
                  TA(4)=(TA(1)*VZX+TA(2)*VYZ*EZ/EY)
                  IF(ITERME.NE.0) TA(4)=TA(4)-EZ*ALFA(3)*DTGT0
               ENDIF
               TAU(4,JG,NLM,MSL)=TA(4)
            ENDIF
C            
C           DELAMINATION INITIATION CHANG-SPRINGER
C
            IF(NMODM.EQ.2) THEN
               TSAI=TA(2)/YDELT*TA(2)/YDELC+TA(3)/SDEL*TA(3)/SDEL
     1             +TA(2)/YDELT*(YDELC-YDELT)/YDELC
               TSAI=TSAI-1.
               IF(TSAI.GT.TSAIM)THEN
                  TSAIM=TSAI
                  NLMMT=NLM
                  JGMT=JG
               ENDIF 
               IF(TSAI.GT.TSAIMAX)THEN
                  TSAIMAX=TSAI
                  KORMAXT=KOR
                  NLMMAXT=NLM
                  JGMAXT=JG
               ENDIF 
               IF(TA(2).GT.0.) THEN
c tensile matrix mode
                DSQ=TA(2)/YDELT*TA(2)/YDELT+TA(3)/SDEL*TA(3)/SDEL
               ELSE
c compressive matrix mode
                DSQ=TA(2)/YDELC*TA(2)/YDELC+TA(3)/SDEL*TA(3)/SDEL
               ENDIF
               DSQ=DSQ-1.
               IF(TA(1).GT.0.) THEN
c tensile fiber mode
                ETC=TA(1)/XDELT*TA(1)/XDELT
               ELSE
c compressive fiber mode
                ETC=TA(1)/XDELC*TA(1)/XDELC
               ENDIF
               ETC=ETC-1.
               IF(DSQ.GT.DSQMK)THEN
                  DSQMK=DSQ
                  NLMMK=NLM
                  JGMK=JG
               ENDIF 
               IF(DSQ.GT.DSQMAX)THEN
                  DSQMAX=DSQ
                  KORMAX=KOR
                  NLMMAX=NLM
                  JGMAX=JG
               ENDIF 
               IF(ETC.GT.ETCMF)THEN
                  ETCMF=ETC
                  NLMMF=NLM
                  JGMF=JG
               ENDIF 
               IF(ETC.GT.ETCMAX)THEN
                  ETCMAX=ETC
                  KORMAXF=KOR
                  NLMMAXF=NLM
                  JGMAXF=JG
               ENDIF 
            ENDIF            
         ELSE
C
CS          NAPONI ZA PLASTICAN MODEL
CE          STRESS FOR MATERIAL NONLINEARITY 
C
            IRAC=1
            CALL MODMAT(STRAIN,TA,NMODM,IRAC,LPLAS,LPLA1,IBTC,TGT,lpla0)
            IF(IST.EQ.1) CALL WRR3(STRAIN,6,'DEFL')
            IF(IST.EQ.1) CALL WRR3(TA,6,'STRL')
CS          TRANSFORMACIJA ELAST
            DO 81 I=1,KK
            DO 81 J=1,KK
   81       ELAS(I,J)=ELAST(I,J)
C
CS          PROMENA ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORMACIJE
CE          UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
C
C           OVO PROVERITI ????????????????????????????
            IF(NAPON.EQ.1.AND.IATYP.GE.4) THEN
C               CALL WRR6(TAU(1,JG,NLM,MSL),NLD,'BST ')
               IF(ILEDE.EQ.0) THEN
                  IF(ICPM1.EQ.0) THEN
                     CALL JEDNA1(TAU(1,JG,NLM,MSL),STRAIN,NLD)
                  ENDIF
                  IF(ICPM1.EQ.1) THEN
CS                   TRANSF. ELAS. LEVOG KOSI - GRINOVOG TENZORA DEFOR.
CS                   U DESNI PLASTICNI INVERZNI
CE                   TRANSFORM. ELASTIC LEFT CAUCHY - GREEN DEFOR. TENS.
C                    CP**-1 = F**-1 * Be * F**-T
                     CALL MINV3(GRAN,DUM)
C                     CALL WRR(GRAN,9,'GR-1')
                     CALL PIOKOS(GRAN,STRAIN)
C                     CALL WRR6(STRAIN,6,'CP-1')
C                     CALL WRR6(TAU(1,JG,NLM,MSL),NLD,'BST ')
                     CALL JEDNA1(TAU(1,JG,NLM,MSL),STRAIN,NLD)
C                     CALL WRR6(TAU(1,JG,NLM,MSL),6,'BNOV')
C                    PROVERA PLASTICNE ROTACIJE
C                     IF(NLM.EQ.1.AND.JG.EQ.1) THEN
C                        WRITE(3,*) 'NLM,JG,ITER,KOR',NLM,JG,ITER,KOR
C                        CALL WRR3(PRINC,3,'PRI0')
C                        CALL WRR3(QP,9,'QP0 ')
C                        CALL GLAVN(STRAIN)
C                        CALL GLAPR3(STRAIN,QP)
C                        CALL WRR3(PRINC,3,'PRIN')
C                        CALL WRR3(QP,9,'QP  ')
C                     ENDIF
                  ENDIF
               ENDIF
               IF(ILEDE.EQ.1.OR.(ILEDE.EQ.0.AND.ICPM1.EQ.2)) THEN 
                  CALL JEDNA1(GRAD,TAU(1,JG,NLM,MSL),NLD)
                  P1=DEXP(STRAIN(1))
                  P2=DEXP(STRAIN(2))
                  P3=DEXP(STRAIN(3))
                  CALL DIJAD(GRAN,QP,QP,P1,P2,P3)
                  CALL MNOZM1(GRAP,GRAN,GRAD,3,3,3)
                  CALL JEDNA1(TAU(1,JG,NLM,MSL),GRAP,NLD)
C                 PROVERA PLASTICNE ROTACIJE
C                  IF(NLM.EQ.1.AND.JG.EQ.1) THEN
C                     WRITE(3,*) 'NLM,JG,ITER,KOR',NLM,JG,ITER,KOR
C                     CALL WRR3(GRAD,9,'GRAD')
C                     CALL WRR3(PRINC,3,'PRI0')
C                     CALL WRR3(QP,9,'QP0 ')
C                     CALL WRR3(GRAP,9,'GRAP')
C                     CALL MNOZM2(GRAN,GRAP,GRAP,3,3,3)
C                     CALL WRR3(GRAN,9,'GRAN')
C                     CALL TENVEK(GRAN,STRESS,1)
C                     CALL GLAVN(STRESS)
C                     CALL GLAPR3(STRESS,QP)
C                     CALL WRR3(PRINC,3,'PRIN')
C                     CALL WRR3(QP,9,'QP  ')
C                     CALL MNOZM3(GRAN,GRAP,GRAP,3,3,3)
C                     CALL WRR3(GRAN,9,'GRA1')
C                     CALL TENVEK(GRAN,STRESS,1)
C                     CALL GLAVN(STRESS)
C                     CALL GLAPR3(STRESS,QP)
C                     CALL WRR3(PRINC,3,'PRI1')
C                     CALL WRR3(QP,9,'QP1 ')
C                  ENDIF
                  NAPKO=0
                  IF(NAPKO.EQ.1) THEN
                     IF(IATYP.EQ.4.AND.ILEDE.EQ.1) THEN
                        CALL MINV3(GRAP,DETP)
                        IF(DETP.GT.DETGP) DETGP=DETP
                        CALL MNOZM1(GRAE,GRAD,GRAP,3,3,3)
CS                      TRANSF. PIOLA KIRKOFOV - KOSIJEV NAPON 
CE                      TRANSFORM. PIOLA KIRCKOF - CAUCHY STRESS
C                       s = F * S * FT
                        DUM=TA(3)
                        TA(3)=TA(4)
                        TA(4)=DUM
                        CALL PIOKOS(GRAE,TA)
                        DUM=TA(3)
                        TA(3)=TA(4)
                        TA(4)=DUM
                        CALL CEPMT(ELAST,CT,0)
C                       Cmnop = Fmi Fnj Fok Fpl Cijkl
                        CALL RRRRC(ELAST,CT,GRAE,1)
CS                      TRANSFORMACIJA ELAST
                        DO 82 I=1,KK
                        DO 82 J=1,KK
   82                   ELAS(I,J)=ELAST(I,J)
                     ENDIF
                  ENDIF
               ENDIF
               IF(IST.EQ.1) CALL WRR6(TAU(1,JG,NLM,MSL),NLD,'BNOV')
            ENDIF
C
         ENDIF
C
C
CS       RACUNANJE UNUTRASNJIH SILA
CE       CALCULATE INTERNAL FORCES 
C
C
         IF(NGENL.GT.0) THEN
C
CS          INTEGRACIJA VEKTORA - h
CE          INTEGRATE VEKTOR - h
C           h = GT * S
C
            IF(IALFA.GE.0)
     1      CALL INTEV2(HAEM(1,NLM),GERS,TA,WTU,LA,KK)
C
CS          RACUNANJE UNUTRASNJIH SILA
CE          CALCULATE INTERNAL FORCES
C           r = BT * S 
C
            IF(IETYP.EQ.3) THEN
               CALL INTEGF(FTDTL,BLT,TA,LMLAZ,WTU,NCVE2,3)
            ELSE
               CALL INTEGF(FTDT,BLT,TA,LM,WTU,NDD,KK)
               IF(MIXED.EQ.1) THEN
C                  CALL WRR6(UEL,ND,'UEL ')
C                  CALL WRR6(QS,NDS,'QS  ')
                  CALL JEDNAK(STRESS,TA,-1.D0,KK)
C                  CALL WRR(TA,KK,'TA  ')
                  CALL MNOZI1(STRESS,HS,QS,KK,NDS)
C                  CALL WRR(STRESS,KK,'STRS')
                  CALL INTEGF(FTDT,HS,STRESS,LM(ND+1),WTU,NDS,KK)
C                  CALL WRR(FTDT,JEDN,'FTDT')
               ENDIF
            ENDIF
C
         ENDIF
C
         IF(IPG.GT.0) THEN
            CALL JEDNAK(STRAIN,TA,WTU,KK)
            CALL MNOZI2(ESILA(1,IPG),BLT,STRAIN,NDD,KK)
         ENDIF
C
      ENDIF
C
C
CS    INTEGRACIJA MATRICE KRUTOSTI ELEMENTA - SKE
CE    INTEGRATE ELEMENT STIFFNESS MATRIX - SKE
C     SKE = BT * C * B
C
C
      IF(ISKNP.EQ.2) GO TO 20
      IF(IST.EQ.1) CALL WRR6(ELAST,36,'ELAS')
      IF(IETYP.EQ.3) THEN
         CALL INTEGK(SKE,BLT,ELAS,LMLAZ,WTU,NCVE2,3)
      ELSE
c         WRITE(3,*) ' NLM,JG,ND,ND1,ND2',NLM,JG,ND,ND1,ND2
c         CALL WRR3(BLT,NDD*KK,'BLT ')
c               if(nlm.eq.9.and.jg.eq.1) then
c                 write(3,*) 'nlm,jg',nlm,jg
c                 do ib=1,ndd
c                    write(3,*) (blt(jb,ib),jb=1,KK)
c                 enddo
c                 write(3,*) 'ndd',ndd
c                 do ib=1,3
c                    write(3,*) (elas(jb,ib),jb=1,3)
c                 enddo
c               endif
         CALL INTEGK(SKE,BLT,ELAS,LM,WTU,NDD,KK)
      ENDIF
C
CS    GEOMETRIJSKI NELINEARAN DEO MATRICE KRUTOSTI
CE    GEOMETRIC NONLINEAR PART OF STIFFNESS MATRIX   
C
      IF(IATYP.GT.1) CALL KNL2(SKE,HE,NOP,LM,X1,TA,WTU)
C
      IF(IALFA.GE.0) THEN
C
CS       PROIZVOD MATRICA - GT * C
CE       MULTIPLY MATRIX - GT * C
C
         CALL MNOZM2(CEGE,GERS,ELAS,LA,KK,KK)
C
CS       INTEGRACIJA MATRICE - H
CE       INTEGRATE MATRIX - H
C        H = GT * C * G
C
         CALL INTEM1(HINV(1,1,NLM),CEGE,GERS,WTU,LA,LA,KK)
C
CS       INTEGRACIJA MATRICE - GAMA
CE       INTEGRATE MATRIX - GAMA
C        GAMA = GT * C * B
C
         CALL INTEM1(GEEK(1,1,NLM),CEGE,BLT,WTU,LA,NCVE2,KK)
      ENDIF
C
         IF(MIXED.EQ.1) THEN
C
CS          INTEGRACIJA MATRICE - KSS
CE          INTEGRATE MATRIX - KSS
C           SKS = HST * HS
C
            CALL INTEGV(SKS,HS,LM(ND+1),WTU,NDS,KK)
C
CS          PROIZVOD MATRICA - HST * C
CE          MULTIPLY MATRIX - HST * C
C
            CALL MNOZM2(PS,HS,ELAS,NDS,KK,KK)
C
CS          INTEGRACIJA MATRICE - KSU
CE          INTEGRATE MATRIX - KSU
C           SKES = HST * C * BL
C
            CALL INTEM1(SKES,PS,BLT,WTU,NDS,ND,KK)
         ENDIF
C
   20    CONTINUE
C
   25 CONTINUE
C
CS-------------------------- KRAJ PETLJE PO GAUSOVIM TACKAMA --------
CE-------------------------- END  LOOP  OVER  GAUSS  POINTS  --------
C
C
         IF(IALFA.GE.0) THEN
C
CS          INVERTOVANJE MATRICE - H
CE          INVERSE MATRIX - H
C
            IF(ISKNP.NE.2) CALL MINV(HINV(1,1,NLM),LA,DET,LJA,MJA)
C
            IF(NGENL.GT.0) THEN
C
CS             RACUNANJE IZRAZA - (H**-1) * h
CE             CALCULATE EXPRESSION - (H**-1) * h
C
               CALL CLEAR(HAEML,LA)
               CALL MNOZI1(HAEML,HINV(1,1,NLM),HAEM(1,NLM),LA,LA)
C
CS             KOREKCIJA UNUTRASNJIH SILA
CE             CORECTION INTERNAL FORCES
C              r = r - FT * (H**-1) * h
C
               IF(IETYP.EQ.3) THEN
             CALL INTEGF(FTDTL,GEEK(1,1,NLM),HAEML,LMLAZ,-1.D0,NCVE2,LA)
               ELSE
                  CALL INTEGF(FTDT,GEEK(1,1,NLM),HAEML,LM,-1.D0,ND,LA)
               ENDIF
C
               IF(IPG.GT.0) 
     1         CALL MNOZ2I(ESILA(1,IPG),GEEK(1,1,NLM),HAEML,ND,LA)
C
            ENDIF
C
CS          KOREKCIJA MATRICE KRUTOSTI
CE          CORECTION STIFFNESS MATRIX
C           K = K - FT * (H**-1) * F
C
            IF(ISKNP.NE.2) THEN
               IF(IETYP.EQ.3) THEN
       CALL INTEGK(SKE,GEEK(1,1,NLM),HINV(1,1,NLM),LMLAZ,-1.D0,NCVE2,LA)
               ELSE
             CALL INTEGK(SKE,GEEK(1,1,NLM),HINV(1,1,NLM),LM,-1.D0,ND,LA)
               ENDIF
            ENDIF
C
         ENDIF
C
      IF(IETYP.EQ.3.AND.ISKNP.NE.2) THEN
         DO 370 I=1,NCVE
         DO 370 K=1,3
            IK=(I-1)*3+K
            IF(LM(IK).EQ.0) GO TO 370
            LL=LM(IK)
            DO 372 J =1,2
               MM=(I-1)*2+J
  372       FTDT(LL) = FTDT(LL) + TTE(J,K)*FTDTL(MM)
  370    CONTINUE
C
         IJ=0
         DO 480 I=1,NCVE*2
         DO 480 J=I,NCVE*2
            IJ=IJ+1
            SKP1(I,J)=SKE(IJ)
            SKP1(J,I)=SKP1(I,J)
  480    CONTINUE
         DO 800 N=1,NCVE
         DO 800 I=1,3
            II=3*(N-1)+I
         DO 800 J=1,NCVE*2
            SKP(II,J)=0.0D0
         DO 800 K=1,2
            MM=2*(N-1)+K
            SKP(II,J)=SKP(II,J)+TTE(K,I)*SKP1(J,MM)
  800    CONTINUE 
         DO 850 N=1,NCVE
         DO 850 I=1,3
            II=3*(N-1)+I
         DO 850 J1=1,NCVE
         DO 850 J2=1,3
            J=3*(J1-1)+J2
            SKP1(II,J)=0.0D0
         DO 850 K=1,2
            MM=2*(J1-1)+K
            SKP1(II,J)=SKP1(II,J)+TTE(K,J2)*SKP(II,MM)
  850    CONTINUE
         IJ=0
         DO 900 I=1,ND
         DO 900 J=I,ND
            IJ=IJ+1
            SKE(IJ)=SKP1(I,J)
  900    CONTINUE
      ENDIF
C
CS       RASPOREDJIVANJE MATRICE KRUTOSTI (SKE)
CE       ASSEMBLE STIFFNESS MATRIX
C
         IF(ICCGG.EQ.2) THEN
            IJ=0
            DO 481 I=1,NCVE*2
            DO 481 J=I,NCVE*2
               IJ=IJ+1
               SKP1(I,J)=SKE(IJ)
               SKP1(J,I)=SKP1(I,J)
  481       CONTINUE
            IF(MIXED.EQ.1) THEN
               IJ=0
               DO 482 I=1,NDS
               DO 482 J=I,NDS
                  IJ=IJ+1
                  I1=NCVE*2+I
                  J1=NCVE*2+J
                  SKP1(I1,J1)=SKS(IJ)
                  SKP1(J1,I1)=SKP1(I1,J1)
  482          CONTINUE
               DO 483 I=1,NDS
               DO 483 J=1,NCVE*2
                  I1=NCVE*2+I
                  SKP1(I1,J)=-SKES(I,J)
                  SKP1(J,I1)=SKP1(I1,J)
  483          CONTINUE
            ENDIF
            IF(ISKNP.NE.2) CALL SPAKUJ(A(LSK),A(LMAXA),SKP1,LM,NDNDS)
         ELSE
            IF(ISKNP.NE.2) CALL SPAKUJ(A(LSK),A(LMAXA),SKE,LM,NDD)
c            IF(nlm.eq.1) THEN
c               NDUM=NDD*(NDD+1)/2
c               write(3,*) 'nlm,ndd,neq',nlm,ndd,jedn
c               CALL WRR6(SKE,NDUM,'SKE ')
c               call iwrr(lm,NDD,'LM  ')
c               call iwrr(a(lmaxa),jedn+1,'maxa')
c            ENDIF
         ENDIF
C        RASPOREDJIVANJE KONCENTRISANIH MATRICE MASA AMASC U VEKTOR ZAPS
         IF(ITER.EQ.0.AND.INDZS.GT.0)THEN
C        WRITE(3,*) 'AMASA,NCVE,ND,NLM',AMASA,NCVE,ND,NLM
C        CALL WRR(AMASC,NCVE,'AMAS')
            II=3
            IF(IETYP.LE.2) II=2
            IK=0
            DO 500 I=1,NCVE
            DO 500 K=1,II
               IK=IK+1
               NJ=LM(IK)
               IF(NJ.GT.0) THEN
                  NPRNJ=NPRZ(NJ)
                  IF(NPRNJ.GT.0.AND.NPRNJ.NE.K) STOP 'NPRNJ'
                  NPRZ(NJ)=K
                  ZAPS(NJ)=ZAPS(NJ)+AMASC(I)
               ENDIF
  500       CONTINUE
         ENDIF
         IF(ITER.EQ.0.AND.INDZS.GT.0)THEN
            GRZAP=GRZAP+ZAPRE
            GRMAS=GRMAS+AMASA
         ELSE
            GRZAP=GRZAP+ZAPRE
         ENDIF
C     FAKTORI INTEZIVNOSTI NAPONA KI, KII, KIII
C      IF(NCRACK.GT.0.AND.NAPON.EQ.1.AND.NGENL.EQ.0.AND.NCVE.GT.4
C     +          .AND.NGE.EQ.1) THEN
      IZIL=0
      IF(NCRACK.GT.0.AND.NAPON.EQ.1.AND.NCVE.GT.4
     +          .AND.NGE.EQ.1.AND.IZIL.EQ.1) THEN
         DO 123 NCR=1,NCRACK
            IF(NODCR(NCR,1).EQ.2.AND.NODCR(NCR,2).EQ.NLM) THEN
               CAPA=(3.-V)/(1.+V)
               IF(IETYP.EQ.2.OR.IETYP.EQ.1) CAPA=3.-4.*V
               DO 1123 J=1,3
 1123          EN(J)=CORD(NODCR(NCR,3),J)-CORD(NODCR(NCR,4),J)
               EL=DSQRT(EN(1)*EN(1)+EN(2)*EN(2)+EN(3)*EN(3))
               PIH=DSQRT(2.*PI/EL)
               PIH=PIH*E/(1.+V)/(1.+CAPA)
               JAX=ID(NODCR(NCR,3),1)
               UAX=0.
               IF(JAX.GT.0) UAX=RTDT(JAX)
               JAY=ID(NODCR(NCR,3),2)
               UAY=0.
               IF(JAY.GT.0) UAY=RTDT(JAY)
               JBX=ID(NODCR(NCR,5),1)
               UBX=0.
               IF(JBX.GT.0) UBX=RTDT(JBX)
               JBY=ID(NODCR(NCR,5),2)
               UBY=0.
               IF(JBY.GT.0) UBY=RTDT(JBY)
               JCX=ID(NODCR(NCR,4),1)
               UCX=0.
               IF(JCX.GT.0) UCX=RTDT(JCX)
               JCY=ID(NODCR(NCR,4),2)
               UCY=0.
               IF(JCY.GT.0) UCY=RTDT(JCY)
               FK123(NCR,1)=PIH*(4.*(UBY-UAY)-(UCY-UAY))
               FK123(NCR,2)=PIH*(4.*(UBX-UAX)-(UCX-UAX))
c               write(3,*) 'capa,e,v',capa,e,v
c               write(3,*) 'el,pih',el,pih
c               write(3,*) 'uax,ubx,ucx',uax,ubx,ucx
c               write(3,*) 'uay,uby,ucy',uay,uby,ucy
               WRITE(IZLAZ,2123) NCR,(FK123(NCR,I),I=1,2)
 2123 FORMAT(///' CRACK STRESS INTENSITY FACTORS FOR CRACK',I5/
     +'       (using displacement method)'/
     +'   KI   =',1PD12.5/'   KII  =',1PD12.5//)
            ENDIF
  123    CONTINUE       
      ENDIF
C
      IF (INDEXPL.eq.1) then
         DO I=1,NCVE
            DO J=1,3
                do k=I+1,ncve
                    TEMPL(K,J)=ABS(COR(I,J)-COR(K,J))
                enddo
            enddo
            do k=I+1,ncve
                DL(k)=SQRT(TEMPL(K,1)**2+TEMPL(K,2)**2+TEMPL(K,3)**2)
                if (DLMIN.ge.DL(K).and.DL(K).ne.0) THEN
                    DLMIN=DL(K)
                    IF (MODORT(NMODM).eq.1) then
                        BRZ=SQRT(EX/(1-VXY**2)*GUST)
                    else
                        BRZ=SQRT(E/(1-V**2)*GUST)
                    endif
                    DTCRT=DLMIN/BRZ
                    if (DTCR>DTCRT) DTCR=DTCRT
                endif
            enddo
        enddo
      endif
C
   10 CONTINUE
c     CALL WRR6(FTDT,JEDN,'FTDT')
C     PROMENLJIV BROJ CVOVORA ZA MEHANIKU LOMA
      NCVE=NNCVE
      NCVE2=NCVE*2
      MODEL=0
C
C     GOCA      
C     FAKTORI INTEZIVNOSTI NAPONA KI, KII, KIII
C      IF(NCRACK.GT.0.AND.NAPON.EQ.1.AND.NGENL.EQ.0.AND.NCVE.GT.3
C     +          .AND.NGE.EQ.1) THEN
c      IF(NCRACK.GT.0.AND.NAPON.EQ.1.AND.NCVE.GT.3
c     +          .AND.NGE.EQ.1) THEN
      IF(NCRACK.GT.0.AND.NAPON.EQ.1.AND.NCVE.GT.3) then
c     +          .AND.NGE.EQ.1) THEN
C     DOGRADITI ZA VISE PRSLINA SADA JE NCR=1     
C         DO 124 NCR=1,NCRACK
        NCR=1
        NDI=2
C        IF(IETYP.EQ.1) STOP 'IETYP.EQ.1.AND.NCRACK.GT.0'

        IF(NCXFEM.GT.0) THEN
         CALL S_FUNX(CORD,NOP,AU(LPSI),A(LNERING),A(LMIE),
     1            A(LQST),A(LQ),NP,NE,NCVE,A(LXL),A(LYL),A(LXGG),A(LYGG)
     1           ,AU(LNNOD),MODEL)
         CALL J2DX(NOP,A(LNERING),A(LMIE),A(LQST),A(LXL),A(LYL),
     1            A(LXGG),A(LYGG),A(LSIF1),TAU,N45,NDI,LM,LMEL,
     1            RTDT,DEF,AU(LNNOD),AU(LID1),AU(LID2),
     1            A(LNODTIP),A(LHNOD),MODEL,ngg)
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c        SREDNJE VREDNOSTI FAKTORA INTENZITETA NAPONA
C         WRITE(6,*) 'FAK1,FAK2',FAK1,FAK2
c         WRITE(6,*) 
C        UGAO PROPAGACIJE PRSLINE
         DTE=DACOS((3.D0*FAK2*FAK2+FAK1*DSQRT(FAK1*FAK1+8.D0*FAK2*FAK2))
     1            /(FAK1*FAK1+9.D0*FAK2*FAK2))
c         DTE=0.0D0
         !OVO JE USLOV AKO JE PRSLINA ORIJENTISANA U IV KVADRANTU 
         !GLOBALNOG KOORDINATNOG SISTEMA 
c         write(6,*) 'VX1(1) VX1(2)'
c         write(6,*)  VX1(1),VX1(2)

C        VARIJANTA I	
c         IF(VX1(2) .LT. 0.0 .AND. FAK2.LT.0.D0) DTE=-DTE	   ! IV kvadrant

c         IF(VX1(2) .GE. 0.0 .AND. FAK2.GT.0.D0) DTE=-DTE    ! I kvadrant

C        VARIJANTA II
         IF(FAK2.GT.0.D0) DTE=-DTE

C        INKREMENT RASTA PRSLINE
         DDn=DSQRT((Xp(NSEGX+1)-Xp(1))*(Xp(NSEGX+1)-Xp(1))+
     1            (Yp(NSEGX+1)-Yp(1))*(Yp(NSEGX+1)-Yp(1)) )
c         DA=0.025*DD    !!!1.1  0.7  0.3*

         DD=DSQRT((Xp(2)-Xp(1))*(Xp(2)-Xp(1))+
     1            (Yp(2)-Yp(1))*(Yp(2)-Yp(1)) )
c        pda
C         DA=1.000*DD    !!!0.05  1.000  1.1  0.7  0.3*
         DA=DD*NODCR(NCR,2)/100
c         WRITE(6,*) 'DTE',DTE*180.D0/PI
c         WRITE(6,*) 'NODCR(NCR,2),DA',NODCR(NCR,2),DA
c        LOKALNE KOORDINATE NOVOG VRHA
         Xloc=DA*DCOS(DTE)
         Yloc=DA*DSIN(DTE)
c         WRITE(6,*) 'Xloc,   Yloc'
c         WRITE(6,*)  Xloc,Yloc
c        GLOBALNE KOORDINATE NOVOG VRHA	 
         DEL=VX1(1)*VX1(1)+VX1(2)*VX1(2)
         Xnov=Xp(NSEGX+1)+(VX1(1)*Xloc-VX1(2)*Yloc)/DEL
         Ynov=Yp(NSEGX+1)+(VX1(2)*Xloc+VX1(1)*Yloc)/DEL
         IF(ISRPS.EQ.0) THEN
C            WRITE(6,*) ' DUZINA PRSLINE',DDn
            WRITE(6,*) ' KOORD. NOVOG VRHA: Xn,Yn'
            WRITE(6,*) Xnov,Ynov
C            WRITE(3,*) ' DUZINA PRSLINE',DDn
            WRITE(3,*) ' KOORD. NOVOG VRHA: Xn,Yn'
            WRITE(3,*) Xnov,Ynov
         ELSE
C            WRITE(6,*) ' CRACK LENGTH',DDn
            WRITE(6,*) ' COORDINATES OF NEW CRACK TIP: Xn,Yn'
            WRITE(6,*) Xnov,Ynov
C            WRITE(3,*) ' CRACK LENGTH',DDn
            WRITE(3,*) ' COORDINATES OF NEW CRACK TIP: Xn,Yn'
            WRITE(3,*) Xnov,Ynov
         ENDIF
         WRITE(3,*) 
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

        ELSE
         CALL S_FUN(CORD,NOP,AU(LPSI),A(LNERING),A(LMIE),
     1            A(LQST),A(LQ),NP,NE,NCVE,A(LXL),A(LYL),A(LXGG),A(LYGG)
     1           ,AU(LNNOD),MODEL)
         CALL J2D(NOP,A(LNERING),A(LMIE),A(LQST),A(LXL),A(LYL),
     1            A(LXGG),A(LYGG),A(LSIF1),TAU,N45,NDI,LM,LMEL,
     1            RTDT,DEF,AU(LNNOD),MODEL)

        ENDIF
C  124    CONTINUE       

      ENDIF
C
      IF(ITER.EQ.0.AND.INDZS.GT.0)THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NGE,GRZAP,NGE,GRMAS
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NGE,GRZAP,NGE,GRMAS
      ELSE
C      WRITE(3,*) 'DETGM,DETGP',DETGM,DETGP
C      WRITE(3,*) 'NGE,GRZAP,ITER',NGE,GRZAP,ITER
      ENDIF
      IF(NMODM.EQ.2) THEN
      WRITE(3,*) 'DSQMK,KOR,NLMMK,JGMK',DSQMK,KOR,NLMMK,JGMK
      WRITE(3,*) 'DSQMAX,KORMAX,NLMMAX,JGMAX',DSQMAX,KORMAX,NLMMAX,JGMAX
      WRITE(3,*) 'ETCMF,KOR,NLMMF,JGMF',ETCMF,KOR,NLMMF,JGMF
      WRITE(3,*) 'ETCMAX,KORMAXF,NLMMAXF,JGMAXF',
     1            ETCMAX,KORMAXF,NLMMAXF,JGMAXF
      WRITE(3,*) 'TSAIM,KOR,NLMMT,JGMT',TSAIM,KOR,NLMMT,JGMT
      WRITE(3,*) 'TSAIMAX,KORMAXT,NLMMAXT,JGMAXT',
     1            TSAIMAX,KORMAXT,NLMMAXT,JGMAXT
      ENDIF 
      RETURN
C-----------------------------------------------------------------------
 2000 FORMAT(///
     111X,'GRUPA ELEMENATA',I5,' ZAPREMINA =',1PD12.5/
     111X,'GRUPA ELEMENATA',I5,'      MASA =',1PD12.5)
C-----------------------------------------------------------------------
 6000 FORMAT(///
     111X,'ELEMENT GROUP',I5,' VOLUME =',1PD12.5/
     111X,'ELEMENT GROUP',I5,'   MASS =',1PD12.5)
C-----------------------------------------------------------------------
      END
C======================================================================
      SUBROUTINE BETBED(H,BLT,NOP,X1)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     MATRICE BLT (BE TRANSPONOVANO)
CE     MATRIX  BLT ( B TRANSPOSED )
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      DIMENSION H(NCVE,*),BLT(KK,*),NOP(NE,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' BETBED'
      JJ=-1
      DO 40 I=1,NCVE
      JJ=JJ+2
      IF(NOP(NLM,I).EQ.0) GO TO 40
      BLT(1,JJ)=XJ(1,1)*H(I,2)+XJ(1,2)*H(I,3)
      BLT(3,JJ)=XJ(2,1)*H(I,2)+XJ(2,2)*H(I,3)
      BLT(2,JJ+1)=BLT(3,JJ)
      BLT(3,JJ+1)=BLT(1,JJ)
      IF(IETYP.NE.1) GO TO 40
      IF(X1.GT.1.0D-8) GO TO 30
      BLT(4,JJ)=BLT(1,JJ)
      GO TO 40
   30 BLT(4,JJ)=H(I,1)/X1
   40 CONTINUE
      RETURN
      END
C======================================================================
      SUBROUTINE MATRTE(TE,BETA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS.....   MATRICA TRANSFORMISANJA KONSTITUITIVNIH RELACIJA LAMINATA
CE.....   CONSTITUITIVE LAW TRANSFORMATION MATRIX Qe  (QeT*C*Qe)
C
      DIMENSION TE(4,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' MATRTE'
      SB=DSIN(BETA)
      CB=DCOS(BETA)
C....   SLUCAJ  BETA = K * PI
      IF(DABS(SB).LT.1.D-4) THEN
        SB=0.D0
        CB=1.D0
      ENDIF
C....   SLUCAJ  BETA = K * PI/2
      IF(DABS(CB).LT.1.D-4) THEN
        SB=1.D0
        CB=0.D0
      ENDIF
C
      SB2=SB*SB
      CB2=CB*CB
      SCB=SB*CB
C
      TE(1,1)= CB2
      TE(1,2)= SB2
      TE(1,3)= SCB
      TE(1,4)= 0.D0
C
      TE(2,1)= TE(1,2)
      TE(2,2)= TE(1,1)
      TE(2,3)=-TE(1,3)
      TE(2,4)= 0.D0
C
      TE(3,1)= 2.D0*TE(2,3)
      TE(3,2)=-TE(3,1)
      TE(3,3)= TE(1,1)-TE(1,2)
      TE(3,4)= 0.D0
C
      TE(4,1)=0.D0
      TE(4,2)=0.D0
      TE(4,3)=0.D0
      TE(4,4)=1.D0
      RETURN
      END
C======================================================================
      SUBROUTINE MATRTS(TE,BETA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS.....   MATRICA TRANSFORMISANJA KONSTITUITIVNIH RELACIJA LAMINATA
CE.....   CONSTITUITIVE LAW TRANSFORMATION MATRIX Qs
C
      DIMENSION TE(4,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' MATRTE'
      SB=DSIN(BETA)
      CB=DCOS(BETA)
C....   SLUCAJ  BETA = K * PI
      IF(DABS(SB).LT.1.D-4) THEN
        SB=0.D0
        CB=1.D0
      ENDIF
C....   SLUCAJ  BETA = K * PI/2
      IF(DABS(CB).LT.1.D-4) THEN
        SB=1.D0
        CB=0.D0
      ENDIF
C
      SB2=SB*SB
      CB2=CB*CB
      SC2=2.D0*SB*CB
C
      TE(1,1)= CB2
      TE(1,2)= SB2
      TE(1,3)= SC2
      TE(1,4)= 0.D0
C
      TE(2,1)= TE(1,2)
      TE(2,2)= TE(1,1)
      TE(2,3)=-TE(1,3)
      TE(2,4)= 0.D0
C
      TE(3,1)= 0.5D0*TE(2,3)
      TE(3,2)=-TE(3,1)
      TE(3,3)= TE(1,1)-TE(1,2)
      TE(3,4)= 0.D0
C
      TE(4,1)=0.D0
      TE(4,2)=0.D0
      TE(4,3)=0.D0
      TE(4,4)=1.D0
      RETURN
      END
C======================================================================
      SUBROUTINE JACTEL(NOP,CORDL,H,R,S,KFIX)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE INTERPOLACIONIH   F-JA  I  JAKOBIJANA
CE     FORM INTERPOLATION FUNCTION AND JACOBIAN MATRIX
C
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      DIMENSION NOP(NE,*),CORDL(2,9),H(NCVE,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' JACTEL'
      RP=1.D0+R
      RM=1.D0-R
      RK=1.D0-R*R
      SP=1.D0+S
      SM=1.D0-S
      SK=1.D0-S*S
      H(1,1)=.25D0*RP*SP
      H(2,1)=.25D0*RM*SP
      H(3,1)=.25D0*RM*SM
      H(4,1)=.25D0*RP*SM
      H(1,2)=.25D0*SP
      H(2,2)=-.25D0*SP
      H(3,2)=-.25D0*SM
      H(4,2)=.25D0*SM
      H(1,3)=.25D0*RP
      H(2,3)=.25D0*RM
      H(3,3)=-.25D0*RM
      H(4,3)=-.25D0*RP
CS     KOREKCIJA FUNKCIJA KADA JE BROJ CVOROVA VECI OD 4
      IF(NCVE.EQ.4) GO TO 50
      NND5=NCVE-4
      I=0
    5 I=I+1
      IF(I.GT.NND5) GO TO 80
      NN=I+4
      IF(NOP(NLM,NN).EQ.0) GO TO 5
      GO TO (10,15,20,30,40),I
CS     PETI CVOR
   10 H(5,1)=.5D0*RK*SP
      H(5,2)=-R*SP
      H(5,3)=.5D0*RK
      GO TO 5
CS     SESTI CVOR
   15 H(6,1)=.5D0*SK*RM
      H(6,2)=-.5D0*SK
      H(6,3)=-S*RM
      GO TO 5
CS    SEDMI CVOR
   20 H(7,1)=.5D0*RK*SM
      H(7,2)=-R*SM
      H(7,3)=-.5D0*RK
      GO TO 5
CS     OSMI CVOR
   30 H(8,1)=.5D0*SK*RP
      H(8,2)=.5D0*SK
      H(8,3)=-S*RP
      GO TO 5
CS     DEVETI CVOR
   40 H(9,1)=RK*SK
      H(9,2)=-2.D0*R*SK
      H(9,3)=-2.D0*S*RK
CS     KOREKCIJA SVIH CVOROVA AKO POSTOJI DEVETI
      DO 150 I=1,4
      DO 145 J=1,3
      H(I,J)=H(I,J)-.25D0*H(9,J)
  145 CONTINUE
  150 CONTINUE
      DO 160 I=5,8
      IF(NOP(NLM,I).EQ.0) GO TO 160
      DO 155 J=1,3
      H(I,J)=H(I,J)-0.5D0*H(9,J)
  155 CONTINUE
  160 CONTINUE
C
CS     KOREKCIJA PRVA CETIRI CVORA
C
   80 IF(NND5.EQ.5) NND5=4
      I=0
   55 I=I+1
      IF(I.GT.NND5) GO TO 50
      NN=I+4
      IF(NOP(NLM,NN).EQ.0) GO TO 55
      GO TO (90,100,200,300),I
C
   90 H(1,1)=H(1,1)-.5D0*H(5,1)
      H(2,1)=H(2,1)-.5D0*H(5,1)
      H(1,2)=H(1,2)-.5D0*H(5,2)
      H(2,2)=H(2,2)-.5D0*H(5,2)
      H(1,3)=H(1,3)-.5D0*H(5,3)
      H(2,3)=H(2,3)-.5D0*H(5,3)
      GO TO 55
C
  100 H(2,1)=H(2,1)-.5D0*H(6,1)
      H(3,1)=H(3,1)-.5D0*H(6,1)
      H(2,2)=H(2,2)-.5D0*H(6,2)
      H(3,2)=H(3,2)-.5D0*H(6,2)
      H(2,3)=H(2,3)-.5D0*H(6,3)
      H(3,3)=H(3,3)-.5D0*H(6,3)
      GO TO 55
C
  200 H(3,1)=H(3,1)-.5D0*H(7,1)
      H(4,1)=H(4,1)-.5D0*H(7,1)
      H(3,2)=H(3,2)-.5D0*H(7,2)
      H(4,2)=H(4,2)-.5D0*H(7,2)
      H(3,3)=H(3,3)-.5D0*H(7,3)
      H(4,3)=H(4,3)-.5D0*H(7,3)
      GO TO 55
C
  300 H(4,1)=H(4,1)-.5D0*H(8,1)
      H(1,1)=H(1,1)-.5D0*H(8,1)
      H(4,2)=H(4,2)-.5D0*H(8,2)
      H(1,2)=H(1,2)-.5D0*H(8,2)
      H(4,3)=H(4,3)-.5D0*H(8,3)
      H(1,3)=H(1,3)-.5D0*H(8,3)
C     
C ZA MEHANIKU LOMA
C
      KORIG=0
      IF(KORIG.EQ.1) THEN
      IF(NOP(NLM,1).EQ.NOP(NLM,4).AND.NOP(NLM,1).EQ.NOP(NLM,8)) THEN    
         H(9,1)=RK*SK
         H(9,2)=-2.D0*R*SK
         H(9,3)=-2.D0*S*RK
         H(2,1)=H(2,1)+H(9,1)/8
         H(3,1)=H(3,1)+H(9,1)/8
         H(6,1)=H(6,1)-H(9,1)/4
         H(2,2)=H(2,2)+H(9,2)/8
         H(3,2)=H(3,2)+H(9,2)/8
         H(6,2)=H(6,2)-H(9,2)/4
         H(2,3)=H(2,3)+H(9,3)/8
         H(3,3)=H(3,3)+H(9,3)/8
         H(6,3)=H(6,3)-H(9,3)/4
      ENDIF   
      ENDIF
C
CS     JAKOBIJAN U GAUSOVOJ TACKI
CE     JACOBIAN MATRIX
C
   50 DO 62 I=1,2
      XJ(1,I)=0.0D0
      XJ(2,I)=0.0D0
      DO 60 J=1,NCVE
      IF(NOP(NLM,J).EQ.0) GO TO 60
      XJ(1,I)=XJ(1,I)+H(J,2)*CORDL(I,J)
      XJ(2,I)=XJ(2,I)+H(J,3)*CORDL(I,J)
   60 CONTINUE
      XJJ(1,I)=XJ(1,I)
      XJJ(2,I)=XJ(2,I)
   62 CONTINUE
      IF(KFIX.GT.0) GO TO 73
CS    DETERMINANTA JAKOBIJANA I INVERZNI JAKOBIJAN
      CALL MINV2(XJ,DET)
CZ    DET=DABS(DET)
      IF(DET.GT.1.0D-10) RETURN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NLM,DET
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NLM,DET
      WRITE(IZLAZ,5000) (NOP(NLM,J),CORDL(1,J),CORDL(2,J),J=1,NCVE)
 5000 FORMAT(I6,5X,1PD12.5,5X,1PD12.5) 
      STOP 'PROGRAM STOP - PAK22 - JACTEL'
CS     DETERMINATA LINIJSKOG JAKOBIJANA
   73 GO TO (71,72),KFIX
CS     KONSTANTNO KSI
   71 DET= XJ(2,1)*XJ(2,1)+XJ(2,2)*XJ(2,2)
      GO TO 74
CS     KONSTANTNO ETA
   72 DET= XJ(1,1)*XJ(1,1)+XJ(1,2)*XJ(1,2)
   74 DET=DSQRT(DET)
      IF (DET.GT.1.0D-10) RETURN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NLM,DET
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NLM,DET
      STOP 'PROGRAM STOP - PAK22 - JACTEL'
C-----------------------------------------------------------------------
 2000 FORMAT(/' ','DETERMINANTA JAKOBIJANA JEDNAKA / MANJA OD NULE'/
     1' ','ELEMENT BR. =',I10/' ','DETERMINANTA =',1PD12.5)
 6000 FORMAT(/' ','ZERO OR NEGATIVE JACOBIAN DETERMINANTE'/
     1' ','ELEMENT NUM. =',I10/' ','DETERMINANT =',1PD12.5)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C======================================================================
      SUBROUTINE MINV2(XJJ,DETT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO INVERSE MATRIX 2 X 2
CS.   P R O G R A M
CS.      ZA INVERTOVANJE MATRICE 2 X 2
C .
C ......................................................................
C
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      DIMENSION XJJ(3,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' MINV2 '
C
      DETT=XJJ(1,1)*XJJ(2,2)-XJJ(1,2)*XJJ(2,1)
      IF(DETT.GT.1.D-10) GOTO 10
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) DETT,NLM,NGE
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) DETT,NLM,NGE
      PRINT *, ' DET < 0'
      IF(DABS(DETT).LT.1.D-10) STOP 'MINV2'
   10 XJP=XJJ(1,1)
      XJJ(1,1)=XJJ(2,2)/DETT
      XJJ(2,2)=XJP/DETT
      XJJ(1,2)=-XJJ(1,2)/DETT
      XJJ(2,1)=-XJJ(2,1)/DETT
      RETURN
C-----------------------------------------------------------------------
 2000 FORMAT(/
     1' DETERMINANTA MANJA ILI JEDNAKA NULI, DET = ',1PD10.3/
     1' ELEMENT =',I8,'     GRUPA =',I5)
C-----------------------------------------------------------------------
 6000 FORMAT(/
     1' ZERO OR NEGATIVE DETERMINANTE, DET = ',1PD10.3/
     1' ELEMENT =',I8,'     GROUP =',I5)
C-----------------------------------------------------------------------
      END
C======================================================================
      SUBROUTINE JACGAU(NOP,CORDL,TECV,H,X1,CORGT,TGT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS    TEMPERATURA I KOORDINATE U INTEGRACIONOJ TACKI
CE    TEMPERATURE AND COORDINATES IN INTEGRATE POINT
C
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
C
      DIMENSION NOP(NE,*),CORDL(2,9),TECV(*),H(NCVE,*),CORGT(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' JACGAU' 
      X1=0.0D0
      X2=0.0D0
      TGT=0.0D0
      DO 80 I=1,NCVE
         IC=NOP(NLM,I)
         IF(IC.EQ.0) GO TO 80
         IF(ICORGT.EQ.1.OR.IETYP.EQ.1) THEN 
            X1=X1+H(I,1)*CORDL(1,I)
            X2=X2+H(I,1)*CORDL(2,I)
         ENDIF
         IF(ITERME.EQ.1) TGT=TGT+H(I,1)*TECV(IC)
   80 CONTINUE
      IF(ICORGT.EQ.0) RETURN
      CORGT(1)=X1
      CORGT(2)=X2
      CORGT(3)=0.D0
      RETURN
      END
C=====================================================================
      SUBROUTINE TRAEL(ELAST,Q,IDIM,II,JJ,ELA1)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
CS....  TRANSFORMACIJA MATRICE ELAST()
CE      TRANSFORMATION OF ELAST MATRIX
      DIMENSION ELAST(6,*),Q(IDIM,*),ELA1(6,*),P(6,6)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' TRAEL '
      DO 80 I=1,JJ
        DO 80 J=1,II
        P(I,J)=0.D0
          DO 75 K=1,II
   75     P(I,J)=P(I,J)+Q(K,I)*ELAST(K,J)
   80 CONTINUE
      DO 84 I=1,JJ
        DO 84 J=I,JJ
        ELA1(I,J)=0.D0
          DO 82 K=1,II
   82     ELA1(I,J)=ELA1(I,J)+P(I,K)*Q(K,J)
        ELA1(J,I)=ELA1(I,J)
   84 CONTINUE
      RETURN
      END
C======================================================================
      SUBROUTINE MEL01(FUN)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICE ELAST
CE     ELAST MATRIX
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /MATIZO/ E,V
      DIMENSION FUN(2,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' MEL01 '
      E=FUN(1,MAT)
      V=FUN(2,MAT)
      DO 15 I=1,6
      DO 15 J=1,6
   15 ELAST(I,J)=0.0D0
CS     RAVANSKO STANJE NAPONA
CE     PLANE STRESS
      IF(IETYP.EQ.0.OR.IETYP.EQ.3) THEN
        ELAST(1,1)=E/(1.D0-V*V)
        ELAST(2,2)=ELAST(1,1)
        ELAST(1,2)=ELAST(1,1)*V
        ELAST(3,3)=ELAST(1,1)*(1.D0-V)/2.D0
      ELSE
CS     RAVANSKA DEFORMACIJA
CE     PLANE STRAIN
        ELAST(1,1)=E*(1.D0-V)/(1.D0+V)/(1.D0-2.D0*V)
        ELAST(2,2)=ELAST(1,1)
        ELAST(1,2)=ELAST(1,1)*V/(1.D0-V)
        ELAST(3,3)=ELAST(1,1)*(1.D0-2.D0*V)/(1.D0-V)/2.D0
        IF(IETYP.NE.1) GO TO 40
        ELAST(4,4)=ELAST(1,1)
        ELAST(1,4)=ELAST(1,2)
        ELAST(2,4)=ELAST(1,2)
      ENDIF
   40 DO 50 I=1,6
      DO 50 J=I,6
   50 ELAST(J,I)=ELAST(I,J)
      RETURN
      END
C======================================================================
      SUBROUTINE MEL02(FUN)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICE ELAST
CE     ELAST MATRIX
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /UGAOVL/ TE(4,4)
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
      DIMENSION FUN(9,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' MEL02 '
      EX=FUN(1,MAT)
      EY=FUN(2,MAT)
      EZ=FUN(3,MAT)
      VXY=FUN(4,MAT)
      VYZ=FUN(5,MAT)
      VZX=FUN(6,MAT)
      GXY=FUN(7,MAT)
      GYZ=FUN(8,MAT)
      GZX=FUN(9,MAT)
      DO 15 I=1,6
      DO 15 J=1,6
   15 ELAST(I,J)=0.0D0
CS     RAVANSKO STANJE NAPONA
CE     PLANE STRESS
      IF(IETYP.EQ.0.OR.IETYP.EQ.3) THEN
        POM=EX-EY*VXY*VXY
        ELAST(1,1)=EX*EX/POM
        ELAST(2,2)=EX*EY/POM
        ELAST(1,2)=EX*EY*VXY/POM
        ELAST(3,3)=GXY
      ELSE
CS     RAVANSKA DEFORMACIJA
CE     PLANE STRAIN
        POM=(1.D0-2.D0*VXY*VYZ*VZX-EX/EZ*VZX*VZX-EY/EX*VXY*VXY
     1  -EZ/EY*VYZ*VYZ)/(EX*EY*EZ)
        ELAST(1,1)=(1.D0/EZ-VYZ*VYZ/EY)/(EY*POM)
        ELAST(2,2)=(1.D0/EX-VZX*VZX/EZ)/(EZ*POM)
        ELAST(1,2)=(VZX*VYZ/EY+VXY/EX)/(EZ*POM)
        ELAST(3,3)=GXY
        IF(IETYP.NE.1) GO TO 40
        ELAST(4,4)=(1.D0/EY-VXY*VXY/EX)/(EX*POM)
        ELAST(1,4)=(VXY*VYZ/EX+VZX/EZ)/(EY*POM)
        ELAST(2,4)=(VXY*VZX/EZ+VYZ/EY)/(EX*POM)
      ENDIF
   40 DO 50 I=1,6
      DO 50 J=I,6
   50 ELAST(J,I)=ELAST(I,J)
CS.... TRANSFORMACIJA MATRICE  ELAST()
CE     TRANSFORM ELAST MATRIX
      IF(DABS(BETA).GT.1.0D-6.AND.IETYP.NE.1) 
     1CALL TRAEL(ELAST,TE,4,3,3,ELAST)
      IF(DABS(BETA).GT.1.0D-6.AND.IETYP.EQ.1) 
     1CALL TRAEL(ELAST,TE,4,4,4,ELAST)
      RETURN
      END
C======================================================================
      SUBROUTINE MEL03(FUN,NTA,TEM,MATE,TGT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICE ELAST
CE     ELAST MATRIX
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /MATIZO/ E,V
      COMMON /SRPSKI/ ISRPS
      DIMENSION FUN(2,MATE*3,*),NTA(*),TEM(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' MEL03 '
C
C     E , V , ALFA
C
      DO 6 J=1,3
      NFE=(MAT-1)*3+J
      CALL TABF(FUN,NTA,NFE,MATE*3,TGT,EVA,NTMX,IND)
      IF(IND.GT.0) GO TO 120
      IF(J.EQ.1) E=EVA
      IF(J.EQ.2) V=EVA
    6 CONTINUE
      DO 7 I=1,3
    7 ALFA(I)=EVA
      DO 71 I=4,6
   71 ALFA(I)=0.D0
      TEMP0=TEM(MAT)
C
      DO 15 I=1,6
      DO 15 J=1,6
   15 ELAST(I,J)=0.0D0
CS     RAVANSKO STANJE NAPONA
CE     PLANE STRESS
      IF(IETYP.EQ.0.OR.IETYP.EQ.3) THEN
        ELAST(1,1)=E/(1.D0-V*V)
        ELAST(2,2)=ELAST(1,1)
        ELAST(1,2)=ELAST(1,1)*V
        ELAST(3,3)=ELAST(1,1)*(1.D0-V)/2.D0
      ELSE
CS     RAVANSKA DEFORMACIJA
CE     PLANE STRAIN
        ELAST(1,1)=E*(1.D0-V)/(1.D0+V)/(1.D0-2.D0*V)
        ELAST(2,2)=ELAST(1,1)
        ELAST(1,2)=ELAST(1,1)*V/(1.D0-V)
        ELAST(3,3)=ELAST(1,1)*(1.D0-2.D0*V)/(1.D0-V)/2.D0
        IF(IETYP.NE.1) GO TO 40
        ELAST(4,4)=ELAST(1,1)
        ELAST(1,4)=ELAST(1,2)
        ELAST(2,4)=ELAST(1,2)
      ENDIF
   40 DO 50 I=1,6
      DO 50 J=I,6
   50 ELAST(J,I)=ELAST(I,J)
      RETURN
  120 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NFE,TGT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NFE,TGT
      STOP
C-----------------------------------------------------------------------
 2000 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE U MEL03'/
     1' FUNKCIJA BROJ =',I5/
     2' ARGUMENT TEMPERATURA =',1PD12.4)
 6000 FORMAT(///' ARGUMENT IS OUT OF RANGE'/
     1' TEMPERATURE FUNCTION  =',I5/
     2' ARGUMENT TEMPERATURE  =',D12.4)
C-----------------------------------------------------------------------
      END
C======================================================================
      SUBROUTINE MEL04(FUN,NTA,TEM,MATE,TGT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICE ELAST
CE     ELAST MATRIX
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /UGAOVL/ TE(4,4)
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
      COMMON /SRPSKI/ ISRPS
      DIMENSION FUN(2,MATE*12,*),NTA(*),TEM(*),ALF(6),TBETA(6,6)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' MEL04 '
C
C     E , V , ALFA
C
      DO 6 J=1,12
      NFE=(MAT-1)*12+J
      CALL TABF(FUN,NTA,NFE,MATE*12,TGT,EVA,NTMX,IND)
      IF(IND.GT.0) GO TO 120
      IF(J.EQ.1) EX=EVA
      IF(J.EQ.2) EY=EVA
      IF(J.EQ.3) EZ=EVA
      IF(J.EQ.4) VXY=EVA
      IF(J.EQ.5) VYZ=EVA
      IF(J.EQ.6) VZX=EVA
      IF(J.EQ.7) GXY=EVA
      IF(J.EQ.8) GYZ=EVA
      IF(J.EQ.9) GZX=EVA
      IF(J.EQ.10) ALFA(1)=EVA
      IF(J.EQ.11) ALFA(2)=EVA
      IF(J.EQ.12) ALFA(3)=EVA
    6 CONTINUE
      DO 71 I=4,6
   71 ALFA(I)=0.D0
C
      TEMP0=TEM(MAT)
C
      CALL CLEAR(ELAST,36)
C
CS     RAVANSKO STANJE NAPONA
CE     PLANE STRESS
      IF(IETYP.EQ.0.OR.IETYP.EQ.3) THEN
        POM=EX-EY*VXY*VXY
        ELAST(1,1)=EX*EX/POM
        ELAST(2,2)=EX*EY/POM
        ELAST(1,2)=EX*EY*VXY/POM
        ELAST(3,3)=GXY
      ELSE
CS     RAVANSKA DEFORMACIJA
CE     PLANE STRAIN
        POM=(1.D0-2.D0*VXY*VYZ*VZX-EX/EZ*VZX*VZX-EY/EX*VXY*VXY
     1  -EZ/EY*VYZ*VYZ)/(EX*EY*EZ)
        ELAST(1,1)=(1.D0/EZ-VYZ*VYZ/EY)/(EY*POM)
        ELAST(2,2)=(1.D0/EX-VZX*VZX/EZ)/(EZ*POM)
        ELAST(1,2)=(VZX*VYZ/EY+VXY/EX)/(EZ*POM)
        ELAST(3,3)=GXY
        IF(IETYP.NE.1) GO TO 40
        ELAST(4,4)=(1.D0/EY-VXY*VXY/EX)/(EX*POM)
        ELAST(1,4)=(VXY*VYZ/EX+VZX/EZ)/(EY*POM)
        ELAST(2,4)=(VXY*VZX/EZ+VYZ/EY)/(EX*POM)
      ENDIF
   40 DO 50 I=1,6
      DO 50 J=I,6
   50 ELAST(J,I)=ELAST(I,J)
CS.... TRANSFORMACIJA MATRICE  ELAST()
CE     TRANSFORM ELAST MATRIX
      IF(DABS(BETA).GT.1.0D-6.AND.IETYP.NE.1) 
     1CALL TRAEL(ELAST,TE,4,3,3,ELAST)
      IF(DABS(BETA).GT.1.0D-6.AND.IETYP.EQ.1)
     1CALL TRAEL(ELAST,TE,4,4,4,ELAST)
      IF(DABS(BETA).GT.1.0D-6) THEN 
C       TRANSFORMACIJA SA MATERIJANLOG NA LOKALNI DEKARTOV
        CALL STBETS(TBETA,BETA)
        CALL CLEAR(ALF,6)
        CALL MNOZI2(ALF,TBETA,ALFA,6,6)
        CALL JEDNA1(ALFA,ALF,6)
      ENDIF
      RETURN
  120 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NFE,TGT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NFE,TGT
      STOP
C-----------------------------------------------------------------------
 2000 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE U MEL04'/
     1' FUNKCIJA BROJ =',I5/
     2' ARGUMENT TEMPERATURA =',1PD12.4)
 6000 FORMAT(///' ARGUMENT IS OUT OF RANGE'/
     1' TEMPERATURE FUNCTION  =',I5/
     2' ARGUMENT TEMPERATURE  =',D12.4)
C-----------------------------------------------------------------------
      END
C======================================================================
      SUBROUTINE MEL05(FUN,NTA,MATE,IRAC,IPL1,TAU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICE ELAST
CE     ELAST MATRIX
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /MAT2D/ EE,ANI,ET,TEQY0
      COMMON /CONMAT/ AE,EP,DVT
      COMMON /MATIZO/ E,V
      DIMENSION FUN(2,MATE,*),NTA(*),TAU(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' MEL05 '
C
C      E, V, ALFA
C
      NCT=NTA(MAT)
      E=FUN(1,MAT,1)
      EE=E
      V=FUN(2,MAT,1)
      ANI=V
      AE=(1.0D0+V)/E
C
      DO 15 I=1,6
      DO 15 J=1,6
   15 ELAST(I,J)=0.0D0
CS     RAVANSKO STANJE NAPONA
CE     PLANE STRESS
      IF(IETYP.EQ.0.OR.IETYP.EQ.3) THEN
        ELAST(1,1)=E/(1.D0-V*V)
        ELAST(2,2)=ELAST(1,1)
        ELAST(1,2)=ELAST(1,1)*V
        ELAST(3,3)=ELAST(1,1)*(1.D0-V)/2.D0
      ELSE
CS     RAVANSKA DEFORMACIJA
CE     PLANE STRAIN
        ELAST(1,1)=E*(1.D0-V)/(1.D0+V)/(1.D0-2.D0*V)
        ELAST(2,2)=ELAST(1,1)
        ELAST(1,2)=ELAST(1,1)*V/(1.D0-V)
        ELAST(3,3)=ELAST(1,1)*(1.D0-2.D0*V)/(1.D0-V)/2.D0
        IF(IETYP.NE.1) GO TO 40
        ELAST(4,4)=ELAST(1,1)
        ELAST(1,4)=ELAST(1,2)
        ELAST(2,4)=ELAST(1,2)
      ENDIF
   40 DO 50 I=1,6
      DO 50 J=I,6
   50 ELAST(J,I)=ELAST(I,J)
C
CS     KOREKCIJA ELASTICNE MATRICE ZA SLUCAJ ELASTO-PLASTICNOG STANJA
CE     ELASTO-PLASTIC ELAST MATRIX
C
      GO TO 100
C      IF(IRAC.EQ.1.OR.IPL1.EQ.0) GO TO 100
C      CALL DEVEQ(TAU,II,TT,TAUD)
C      AER=1.0D0/AE
C      BETA=1.5D0*AER*(1.0D0/(1.0D0+DVT*EP*AE))/ TT/TT
C      DO 110 I=1,6
C      DO 110 J=I,6
C  110 ELAST(I,J)=ELAST(I,J)-BETA*TAUD(I)*TAUD(J)
C      DO 120 I=1,6
C      DO 120 J=I,6
C  120 ELAST(J,I)=ELAST(I,J)
  100 RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE GRGSG2(CO,X,H,NCVE)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO CALCULATE DERIVATION CARTESIAN BY NATURAL COORDINATES
CE.      COVARIANT BASIS VECTORS - JACOBIAN MATRIX
CS.   P R O G R A M
CS.      ZA RACUNANJE IZVODA DEKARTOVIH PO PRIRODNIM KOORDINATAMA
CS.      KOVARIJANTNI BAZNI VEKTORI - JAKOBIJEVA MATRICA
C .
C ......................................................................
C
      DIMENSION X(3,*),CO(9,*),H(NCVE,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' GRGSG2'
C
      DO 10 I=1,2
         I1=I+1
      DO 10 J=1,2
         X(I,J)=0.D0
      DO 10 K=1,NCVE
         X(I,J)=X(I,J)+H(K,I1)*CO(K,J)
   10 CONTINUE
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE GRAD2T(XJ,H,CT,C0,GRAD,NCVE,IETYP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R  O G R A M
CE.      TO CALCULATE DEFORMATION GRADIENT
CE.      INVERSE JACOBIAN - XJ IS FORMED WITH C0 AND G0
CS.   P R O G R A M
CS.      ZA RACUNANJE GRADIJENTA DEFORMACIJE
CS.      INVERZNI JAKOBIJAN - XJ FORMIRAN JE SA C0 I G0
C .
C ......................................................................
C
      DIMENSION XJ(3,*),H(NCVE,*),GRAD(3,*),CT(9,*),C0(9,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' GRAD2T'
C
      CALL CLEAR(GRAD,9)
      GRAD(1,1)=1.D0
      GRAD(2,2)=1.D0
      GRAD(3,3)=1.D0
      DO 10 J=1,2
      DO 10 K=1,NCVE
         HKJ=XJ(J,1)*H(K,2)+XJ(J,2)*H(K,3)
      DO 10 I=1,2
         GRAD(I,J)=GRAD(I,J)+HKJ*(CT(K,I)-C0(K,I))
   10 CONTINUE
      IF(IETYP.NE.1) RETURN
      XT=0.D0
      X0=0.D0
      DO 20 K=1,NCVE
         XT=XT+H(K,1)*CT(K,1)
         X0=X0+H(K,1)*C0(K,1)
   20 CONTINUE
      GRAD(3,3)=XT/X0
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE BE20TE(TAU,TA,GRAD,DEF,ISHEAR,ISNN)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R  O G R A M
CE.      TO UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
CS.   P R O G R A M
CS.      ZA PROMENU ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORMACIJE
C .
C ......................................................................
C
      COMMON /MATIZO/ E,V
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
C
      DIMENSION TAU(*),TA(*),GRAD(3,*),STRAIN(6),DEF(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' BE20TE'
C
CS    TACNE ELASTICNE DEFORMACIJE U LOKALNOM DEKARTOVOM SISTEMU
CE    EXACT ELASTIC STRAIN IN LOCAL CARTESIAN SYSTEM
C     
      STRAIN(1)=0.D0
      STRAIN(2)=0.D0
      STRAIN(3)=0.D0
      AE=2.D0*(1.D0+V)/E
      IF(ISHEAR.EQ.0) THEN
         STRAIN(1)=(TA(1)-V*(TA(2)+TA(4)))/E
         STRAIN(2)=(TA(2)-V*(TA(1)+TA(4)))/E
         STRAIN(3)=(TA(4)-V*(TA(1)+TA(2)))/E
      ENDIF
      STRAIN(4)=AE*TA(3)
      STRAIN(5)=0.D0
      STRAIN(6)=0.D0
      DEF(1)=STRAIN(1)
      DEF(2)=STRAIN(2)
      DEF(4)=STRAIN(3)
      DEF(3)=STRAIN(4)
C
CS    TRANSFORMACIJA DEFORMACIJA (ALMANSI - GREEN LAGRANGE)
CE    TRANSFORM STRAIN (ALMANSI - GREEN LAGRANGE) 
C
      IPRI=0
      IF(IPRI.EQ.1.AND.ISNN.EQ.3) CALL ALMGRL(GRAD,STRAIN,1)
C
CS    TRANSFORMACIJA DEFORMACIJA (GREEN - ROTIRANA GREEN)
CE    TRANSFORM STRAIN (GREEN  LAGRANGE - ROTI GREEN LAGRANGE) 
C
      IF(IPRI.EQ.1.AND.(ISNN.EQ.3.OR.ISNN.EQ.2))
     1   CALL ROTGRL(GRAD,STRAIN,0)
C
      TAU(1)=2.D0*STRAIN(1)+1.D0
      TAU(2)=2.D0*STRAIN(2)+1.D0
      TAU(3)=2.D0*STRAIN(3)+1.D0
      TAU(4)=STRAIN(4)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE XPTDT0(TAU,TA,GRAD,DEF,ISHEAR,ISNN,FIER,ER0T)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R  O G R A M
CE.      TO UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
CS.   P R O G R A M
CS.      ZA PROMENU ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORMACIJE
C .
C ......................................................................
C
      COMMON /MATIZO/ E,V
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
C
      DIMENSION TAU(*),TA(*),GRAD(3,*),STRAIN(6),DEF(*),
     1FIER(3,*),ER0T(3,*),XJJ(3,3),POM(3,3),LJA(3),MJA(3) 
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' XPTDT0'
C
CS    TACNE ELASTICNE DEFORMACIJE U LOKALNOM DEKARTOVOM SISTEMU
CE    EXACT ELASTIC STRAIN IN LOCAL CARTESIAN SYSTEM
C     
      STRAIN(1)=0.D0
      STRAIN(2)=0.D0
      STRAIN(3)=0.D0
      AE=2.D0*(1.D0+V)/E
      IF(ISHEAR.EQ.0) THEN
         STRAIN(1)=(TA(1)-V*(TA(2)+TA(4)))/E
         STRAIN(2)=(TA(2)-V*(TA(1)+TA(4)))/E
         STRAIN(3)=(TA(4)-V*(TA(1)+TA(2)))/E
      ENDIF
      STRAIN(4)=AE*TA(3)
      STRAIN(5)=0.D0
      STRAIN(6)=0.D0
      DEF(1)=STRAIN(1)
      DEF(2)=STRAIN(2)
      DEF(4)=STRAIN(3)
      DEF(3)=STRAIN(4)
      IST=0
      IF(IST.EQ.1) CALL WRR(DEF,4,'DEF ')
      ALAM1=EXP(STRAIN(1))
      ALAM2=EXP(STRAIN(2))
      ALAM3=EXP(STRAIN(3))
      IF(IST.EQ.1) WRITE(3,*) 'ALAM123',ALAM1,ALAM2,ALAM3
C
            CALL CLEAR(XJJ,9)
            XJJ(1,1)=ALAM1
            XJJ(2,2)=ALAM2
            XJJ(3,3)=ALAM3
            CALL MNOZM1(POM,FIER,XJJ,3,3,3)
            CALL MNOZM3(XJJ,POM,FIER,3,3,3)
      IF(IST.EQ.1) CALL WRR(XJJ,9,'U0T ')
            CALL MNOZM1(POM,ER0T,XJJ,3,3,3)
      IF(IST.EQ.1) CALL WRR(POM,9,'XE0T')
            CALL MINV(GRAD,3,DET,LJA,MJA)
      IF(IST.EQ.1) CALL WRR(GRAD,9,'XT0 ')
            CALL MNOZM1(XJJ,GRAD,POM,3,3,3)
      IF(IST.EQ.1) CALL WRR(XJJ,9,'XPT0')
C           CALL JEDNA1(POM,XJJ,9)
C           CALL MINV(POM,3,DET,LJA,MJA)
C     IF(IST.EQ.1) WRITE(3,*) 'DETP',DET
C
            TAU(1)=XJJ(1,1)
            TAU(2)=XJJ(2,2)
            TAU(3)=XJJ(3,3)
            TAU(4)=XJJ(1,2)
            TAU(5)=XJJ(2,1)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE MAMO34(STRAIN,TGT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R  O G R A M
CE.      TO SUBTRACT THERMAL STRAIN FROM TOTAL STRAIN
CS.   P R O G R A M
CS.      ZA ODUZIMANJE TERMICKE DEFORMACIJE OD UKUPNE DEFORMACIJE
C .
C ......................................................................
C
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /MATIZO/ E,V
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
      DIMENSION STRAIN(6),ETHERM(4)
C
      CALL STERM2(ETHERM,TGT)
      DO 10 I=1,KK
   10   STRAIN(I)=STRAIN(I)-ETHERM(I)
      IF (IETYP.EQ.2) THEN
         IF (NMODM.EQ.3) THEN
            STRAIN(1)=STRAIN(1)+ETHERM(4)*V
            STRAIN(2)=STRAIN(2)+ETHERM(4)*V
         ELSE
            STRAIN(1)=STRAIN(1)+ETHERM(4)*VZX
            STRAIN(2)=STRAIN(2)+ETHERM(4)*VYZ*EZ/EY
         END IF
      END IF
C
      IF (IETYP.EQ.0.OR.IETYP.EQ.3) THEN
         IF (NMODM.EQ.3) THEN
            STRAIN(4)=-(STRAIN(1)+STRAIN(2))*V/(1.D0-V)
            STRAIN(4)=STRAIN(4)+ETHERM(4)
         ELSE
           STRAIN(4)=-STRAIN(1)*(VZX*EX/EZ+VXY*VYZ)/(1.D0-VXY*VXY*EY/EX)
     &               -STRAIN(2)*(VYZ+VXY*VZX*EY/EZ)/(1.D0-VXY*VXY*EY/EX)
           STRAIN(4)=STRAIN(4)+ETHERM(4)
         END IF
      END IF
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE STERM2(ETHERM,TGT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R  O G R A M
CE.      TO EVALUATE THERMAL STRAIN
CS.   P R O G R A M
CS.      ZA IZRACUNAVANJE TERMICKE DEFORMACIJE
C .
C ......................................................................
C
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      DIMENSION ETHERM(4)
C
      DTGT0=TGT-TEMP0
      DO 10 I=1,3
   10   ETHERM(I)=ALFA(I)*DTGT0
      ETHERM(4)=ETHERM(3)
      ETHERM(3)=ALFA(4)*DTGT0
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE MODMAT(DEF,TAU,NMODM,IRAC,LPLAS,LPLA1,IBTC,TGT,lpla0)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      DIMENSION TAU(*),DEF(*)
C     PODPROGRAM ZA POZIVANJE PODPROGRAMA INTEGRACIJU KONSTITUTIVNIH
C     RELACIJA ZA 2D ELEMENTE
C
      GO TO (   999,999,999,999,  5,  6,  7,  8,  9, 10,
     1          999,999,999, 14, 15, 16, 17, 18, 19, 20,
     2           21, 22,999,999, 25, 26,999, 28,999, 30,
     3           31,999,999,999,999,999,999,999,999, 40,
     4           41,999,999,999,999,999,999,999,999,999,
     5           51,999,999,999,999,999,999,999,999,999,
     6           61,999,999,999,999,999,999,999,999,999,
     7          999,999,999,999,999,999,999,999,999,999,
     8          999,999,999,999,999,999,999,999,999,999,
     9          999,999,999,999,999,999,999,999,999,999),NMODM
C
    5 CALL D2M5 (TAU,DEF,IRAC,LPLAS,LPLA1,IBTC)
      RETURN
    6 CALL D2M6 (TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
    7 CALL D2M7 (TAU,DEF,IRAC,LPLAS,LPLA1,IBTC)
      RETURN
    8 CALL D2M8 (TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
    9 CALL D2M9 (TAU,DEF,IRAC,LPLAS,LPLA1,IBTC,lpla0)
      RETURN
   10 CALL D2M10(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   14 CALL D2M14 (TAU,DEF,TGT,IRAC,LPLAS,LPLA1)
      RETURN
   15 CALL D2M15 (TAU,DEF,TGT,IRAC,LPLAS,LPLA1)
      RETURN
   16 CALL D2M16 (TAU,DEF,TGT,IRAC,LPLAS,LPLA1)
      RETURN   
   17 CALL D2M17 (TAU,DEF,TGT,IRAC,LPLAS,LPLA1)
      RETURN
   18 CALL D2M18 (TAU,DEF,TGT,IRAC,LPLAS,LPLA1)
      RETURN
   19 CALL D2M19 (TAU,DEF,TGT,IRAC,LPLAS,LPLA1)
      RETURN
   20 CALL D2M20(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   21 CALL D2M21(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   22 CALL D2M22(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   25 CALL D2M25(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   26 CALL D2M26(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   28 CALL D2M28(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   30 CALL D2M30(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   31 CALL D2M31(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   40 CALL D2M6G(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
C     Drucker-Prager (rakic)
   41 CALL D2M41(TAU,DEF,IRAC,LPLAS,LPLA1,IBTC)
      RETURN
C ARGENTINA
   51 CALL D2M51(TAU,DEF,IRAC,LPLAS,LPLA1,IBTC)
      RETURN
   61 CALL D2M61(TAU,DEF,IRAC,LPLAS,LPLA1)
  999 RETURN
      END
