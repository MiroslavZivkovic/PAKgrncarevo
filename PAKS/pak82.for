C=======================================================================
C
C     SUBROUTINE IZLJ4B
C                SISTEL
C                INT4B 
C                IZLJAC
C                READL 
C                MEL81
C                MEL82
C                MEL83
C                MEL84
C                                                         19.02.1991.
C=======================================================================
      SUBROUTINE IZLJ4B
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     GLAVNI UPRAVLJACKI PROGRAM ZA FORMIRANJE MATRICA I VEKTORA 
CS     ELEMENATA IZOPARAMETARSKIH CETVOROUGAONIH I TROUGAONIH LJUSKI
CE     MAIN PROGRAM FOR CALCULATION OF ELEMENT MATRIX FOR 
CE     ISOPARAMETRIC QUADRILATERAL AND THREEANGULAR SHELLS
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' IZLJ4B'
C
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
      LAU=LMAX
      CALL READL(A(LAU))
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
      LAE=LMAX
      NWE=ND*(ND+1)/2
      MXAE=(NWE+36)*IDVA
      LMAX = LAE + MXAE
C
      IF(LMAX.LT.MTOT) GO TO 70
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2009) LMAX,MTOT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6009) LMAX,MTOT
      STOP
C
C     FORMIRANJE MATRICE KRUTOSTI ELEMENATA I PAKOVANJE U SISTEM
C
   70 CALL SISTEL(A(LAE),A(LAU))
      RETURN
C-----------------------------------------------------------------------
 2009 FORMAT(/1X,'NEDOVOLJNA DIMENZIJA U OSNOVNOM RADNOM VEKTORU A ZA UC
     1ITAVANJE ULAZNIH PODATAKA'/1X,'POTREBNA DIMENZIJA, LMAX=',I10/1X,'
     2RASPOLOZIVA DIMENZIJA, MTOT=',I10)
 6009 FORMAT(///' NOT ENOUGH SPACE IN WORKING VECTOR  A'
     1/' REQUESTED DIMENSION , LMAX=',I10
     2/' AVAILABLE DIMENSION , MTOT=',I10)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE READL(AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     UPRAVLJACKI PROGRAM ZA UCITAVANJE ULAZNIH PODATAKA U AU
CE     MENAGEMENT ROUTINE FOR INPUT DATA IN    AU
C
      include 'paka.inc'
      
C
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /PLASTV/ LPLAVT,LPLAV1,LSIGMV
      COMMON /ZAPISI/ LSTAZA(5)
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /PODTIP/ IPODT
      COMMON /TRANS6/ LTR0,NPD6
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /INDCEL/ IND3D
      COMMON /COEFSM/ COEF(3),ICOEF
      COMMON /IKOVAR/ INDKOV
      COMMON /CVSILE/ NSILA,LESILA
      COMMON /CUVAJN/ TAUCEN(6,5),INDSEL,NGAUSU
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
C
      DIMENSION AU(*)
      REAL AU
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' READL '
C
CS     CITANJE SKALARA IZ DIREKT ACCES FILE 
CE     READ SCALARS FROM A DIRECT ACCESS FILE
C
      LSTAZA(1)=LMAX8
C      WRITE(3,*) 'LSTAZR1',LMAX8
      READ(IELEM,REC=LMAX8)
     1NGAUSX,NGAUSY,NGAUSZ,BETA,NCVE,ITERME,ICORGT,LCEL,LELC,NMA,NMI,
     1LMXAU,MXAU,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,LTR0,IPODT,
     1ND,NGS12,MSLOJ,MXS,MSET,NGS4,NSILA,LESILA,
     1LNSLOJ,LMATSL,LDSLOJ,LBBET,INCOTX,INCOTY,INCOTZ,
     1LBET0,(CPP(J,1),J=1,3),IBB0,LALFE,LHAEM,LHINV,LGEEK,IALFA,IND3D,
     1INDBTH,INDDTH,LTBTH,LTDTH,INDKOV,ICOEF,(COEF(I),I=1,3),INDSEL,
     1ILEDE,NLD,ICPM1
      LSTAZA(2)=LMAX8+1
C      WRITE(3,*) 'LSTAZR2',LMAX8+1
      CALL READDD(AU(LNSLOJ),MXAU/IDVA,IELEM,LMAX8,LDUZI)
C      CALL WRR(AU(LALFE),(LMXAU-LALFE)/IDVA,'RA82')
      LMAX=LAU+MXAU
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
C     PROVERI
      LPLAST=LMAX
      LPLAS1=LMAX
      LSIGMA=LMAX
      LPLAVT=LMAX
      LPLAV1=LMAX
      LSIGMV=LMAX
      LCOR0 =LMAX
      LGM0  =LMAX
      LTEMGT=LMAX
      LCORGT=LMAX
      IF(IATYP.EQ.0) GO TO 10
      IF(NMODM.LE.4) GO TO 10
      NPROS=NE*NGS12*MXS*MODPRO( NMODM )*IDVA
      IF(IATYP.GE.4.AND.IPODT.EQ.4) THEN
         NGS4=NGAUSZ*4
         NPRO1=NE*NGS4*MXS*MODPRO( NMODM )*IDVA
         LPLAVT=LPLAST+NPROS
         LPLAS1=LPLAVT+NPRO1
         LPLAV1=LPLAS1+NPROS
         LMAX=LPLAV1+NPRO1
         NPROS=NPROS+NPRO1
      ELSE
         LPLAS1=LPLAST+NPROS
         LMAX=LPLAS1+NPROS
      ENDIF
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      LSTAZA(3)=LMAX8+1
C      WRITE(3,*) 'LSTAZR3',LMAX8+1
      CALL READDD(A(LPLAST),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      LSTAZA(4)=LMAX8+1
C      WRITE(3,*) 'LSTAZR4',LMAX8+1
      CALL READDD(A(LPLAS1),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      IF(IATYP.GE.4) GO TO 10
      NPROS=0
      LSIGMA=LMAX
      IF(ITERME.EQ.1) GO TO 20
      IF(ICORGT.EQ.1) GO TO 30
      RETURN
C
   10 LSIGMA=LMAX
      N45=NLD
      NPROS=NE*NGS12*N45*MXS*IDVA
      IF(NMODM.LE.4) NPROS=NPROS*2
      LMAX=LSIGMA+NPROS
      LCOR0=LMAX
      IF(IATYP.GE.4) THEN
         NPRO1=NE*NCVE*3*IDVA
         LGM0=LCOR0+NPRO1
         LMAX=LGM0+NPRO1
         NPROS=NPROS+2*NPRO1
         IF(IPODT.EQ.4) THEN
            NPRO2=NE*NGS4*N45*MXS*IDVA
            LSIGMV=LMAX
            LMAX=LSIGMV+NPRO2
            NPROS=NPROS+NPRO2
         ENDIF
      ENDIF
   20 LTEMGT=LMAX
      IF(ITERME.EQ.1) THEN
         NPRO1=NE*NGS12*MXS*IDVA
         LMAX=LTEMGT+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
   30 LCORGT=LMAX
      IF(ICORGT.EQ.1) THEN
         NPRO1=NE*NGS12*3*MXS*IDVA
         LMAX=LCORGT+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      LSTAZA(5)=LMAX8+1
C      WRITE(3,*) 'LSTAZR5',LMAX8+1
      CALL READDD(A(LSIGMA),NPROS/IDVA,IELEM,LMAX8,LDUZI)
C      WRITE(3,*) 'LSTAZRS',LMAX8+1
      RETURN
      END
C======================================================================
      SUBROUTINE SISTEL(AE,AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     GLAVNI UPRAVLJACKI PROGRAM  ZA MATRICE ELEMENATA I SISTEMA
CE     MAIN MANAGEMENT  PROGRAM  FOR ELEMENT MATRIX
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /ZAPISI/ LSTAZA(5)
      COMMON /UPRIRI/ LUPRI
      COMMON /DUPLAP/ IDVA
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /REPERM/ MREPER(4)
      COMMON /UPDLAG/ LUL,LCORUL
      COMMON /DIREKT/ LSTAZZ(9),LDRV0,LDRV1,LDRV,IDIREK
      COMMON /TRANS6/ LTR0,NPD6
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /PROBAS/ IILS
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /ITERBR/ ITER
      COMMON /INDKON/ IKONV
      COMMON /INDNAP/ NAPON
      COMMON /PODTIP/ IPODT
      COMMON /MATERM/ LMODEL,LGUSM
      COMMON /ZAPSIL/ UBXYZ(3,10),NVFUB(10),INDZS,LZAPS,LNPRZ
      COMMON /KAKO6O/ LLJUS,LKAKO6
      COMMON /CVSILE/ NSILA,LESILA
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
C
      DIMENSION AE(*),AU(*)
      REAL AE,AU
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' SISTEL'
C      WRITE(3,*) 'LLJUS',LLJUS
      LA=1
      IF(IPODT.EQ.0.OR.IPODT.EQ.4.OR.IPODT.EQ.5) THEN
         IF(IALFA.EQ.1) LA=4
         IF(IALFA.EQ.2) LA=5
         IF(IALFA.EQ.3) LA=6
      ENDIF
C     REPERI U VEKTORU ELEMENATA AE
      NCVE3=NCVE*3
      LSKE=1
      LCEGE=LSKE +ND*(ND+1)/2*IDVA
      MXAE1=LCEGE+LA*6*IDVA
      N45=NLD
C
C     RACUNANJE MATRICE ELEMENATA I/ILI NAPONA
C
      KORD=LCORD
      IF(IATYP.GE.3.AND.IDIREK.EQ.-1) KORD=LCORUL
      CALL INT4B(A(LID),A(KORD),AU(LTHID),AU(LNEL),AU(LNMAT),A(LDRV0),
     1 A(LDRV),A(LSK),A(LFTDT),AE(LSKE),A(LLJUS),A(LRTDT),A(LDRV1),
     1 AU(LNSLOJ),AU(LMATSL),AU(LBBET),AU(LDSLOJ),AU(LBET0),AU(LISNA),
     1 AU(LTR0),AU(LALFE),AU(LHAEM),AU(LHINV),AU(LGEEK),NCVE3,IALFA,LA,
     1 A(LUPRI),A(LCOR0),A(LGM0),A(LTEMGT),A(LCORGT),A(LAU),N45,
     1 A(LZAPS),A(LNPRZ),INDZS,A(LGUSM),A(LKAKO6),AE(LCEGE),
     1 AU(LIPGC),AU(LESILA),AU(LIPRC),AU(LTBTH),AU(LTDTH),
     1 AU(LCEL),A(LCVEL),ICVEL)
C
      IF(IDIREK.EQ.0.OR.((IALFA.GE.0.OR.NSILA.GT.0).AND.IILS.NE.-1))THEN
         LMA8=LSTAZA(2)-1
         CALL WRITDD(AU(LNSLOJ),MXAU/IDVA,IELEM,LMA8,LDUZI)
C      CALL WRR(AU(LALFE),(LMXAU-LALFE)/IDVA,'WA82')
         IF(IDIREK.EQ.0) RETURN
      ENDIF
C
      IF(IATYP.EQ.0) GO TO 10
      IF(NMODM.LE.4) GO TO 10
      IF(IILS.NE.-1) THEN
        NPROS=NE*NGS12*MXS*MODPRO( NMODM )*IDVA
        IF(IATYP.GE.4.AND.IPODT.EQ.4) THEN
           NPRO1=NE*NGS4*MXS*MODPRO( NMODM )*IDVA
           NPROS=NPROS+NPRO1
        ENDIF
        LMA8=LSTAZA(4)-1
        CALL WRITDD(A(LPLAS1),NPROS/IDVA,IELEM,LMA8,LDUZI)
        IF(IATYP.GE.4) GO TO 10
        NPROS=0
        IF(ITERME.EQ.1) GO TO 20
        IF(ICORGT.EQ.1) GO TO 30
      ENDIF
      RETURN
C
   10 NPROS=NE*NGS12*N45*MXS*IDVA
      IF(NMODM.LE.4) NPROS=NPROS*2
      IF(IATYP.GE.4) THEN
         NPRO1=NE*NCVE*3*IDVA
         NPROS=NPROS+2*NPRO1
         IF(IPODT.EQ.4) THEN
            NPRO2=NE*NGS4*N45*MXS*IDVA
            NPROS=NPROS+NPRO2
         ENDIF
         IF(NAPON.EQ.0.AND.ITER.GT.0) RETURN
      ENDIF
   20 IF(ITERME.EQ.1) THEN
         NPRO1=NE*NGS12*MXS*IDVA
         NPROS=NPROS+NPRO1
      ENDIF
   30 IF(ICORGT.EQ.1) THEN
         NPRO1=NE*NGS12*3*MXS*IDVA
         NPROS=NPROS+NPRO1
      ENDIF
      LMA8=LSTAZA(5)-1
      IF(IILS.NE.-1) 
     1CALL WRITDD(A(LSIGMA),NPROS/IDVA,IELEM,LMA8,LDUZI)
      RETURN
      END
C=======================================================================
      SUBROUTINE INT4B(ID,CORD,DEB,NOP,IMAT,DRG0,DRG,SK,FTDT,SKE,LJUS,
     1                 RTDT,DRV1,NSLOJ,MATSL,BBET,DSLOJ,BET0,ISNA,TR0,
     1                 ALFE,HAEM,HINV,GEEK,NCVE3,IALFA,LA,UPRI,COR0,GM0,
     1                 TEMGT,CORGT,AU,N45,ZAPS,NPRZ,INDZS,GUSM,KAKO6,
     1                 CEGE,IPGC,ESILA,IPRC,TBTH,TDTH,MCVEL,NCVEL,ICVEL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICA ELEMENATA I SISTEMA
CE     FORM ELEMENT MATRIX
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /IZLE4B/ H(9,3),GM(3,9),BLT(6,54),BE(9,54),ETP(6,6),UEL(54)
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /ITERBR/ ITER
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /GRUPEE/ NGEL,NGENL,LGEOM,NGEOM,ITERM
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /PLASTV/ LPLAVT,LPLAV1,LSIGMV
      COMMON /REPERM/ MREPER(4)
      COMMON /DIREKT/ LSTAZZ(9),LDRV0,LDRV1,LDRV,IDIREK
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /TEMPCV/ LTECV,ITEMP
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /PODTIP/ IPODT
      COMMON /UGAOV6/ TE(6,6)
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /SRPSKI/ ISRPS
      COMMON /RESTAR/ TSTART,IREST
      COMMON /COEFSM/ COEF(3),ICOEF
      COMMON /CUVAJN/ TAUCEN(6,5),INDSEL,NGAUSU
      COMMON /VELIKD/ DETG,QP(3,3),IGLPR
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
      COMMON /DEBLJG/ THICK,THICT,THIC0,NNSL
      COMMON /DRILLI/ EL14(4),EN14(3,4),IDRIL
      COMMON /PRINTS/ IPRS
C
      DIMENSION AU(*)
      REAL AU
C
      DIMENSION ID(NP,*),CORD(NP,*),FTDT(*),RTDT(*),UPRI(*),LJUS(*),
     1          DRG0(NP,*),DRG(NP,*),DRV1(NP,*),TR0(*),
     1          SK(*),TEMGT(NGS12,*),CORGT(3,NGS12,*)
      DIMENSION SKE(*),DEB(NE,*),NOP(NE,*),IMAT(*),NSLOJ(*),ISNA(*),
     1          MATSL(MSLOJ,*),BBET(MSLOJ,*),DSLOJ(MSLOJ,*),BET0(*),
     1          ZAPS(*),NPRZ(*),GUSM(50,*),AMASC(9),IPGC(*),ESILA(ND,*),
     1          ALFE(LA,*),HAEM(LA,*),HINV(LA,LA,*),GEEK(LA,ND,*),
     1          TBTH(*),TDTH(*),IPRC(*)
      DIMENSION XG(55),WGT(55),NREF(11),VN(3,9),TBETA(6,6),
     1          GKS(3,2,9),LM(54),EF1(3),EF2(3),EF3(3),EF0(3),COEFE(3),
     1          CFS(2,10),DRGTM0(9,3),MTR(9),TTR(3,3,9),UPR(54),
     1          GKS0(3,2,9),GMT0(3,9),GMN0(3,9),GNT0(3,9)
      DIMENSION COR(9,3),GMT(3,9),CORT(9,3),GNT(3,9),GMP(3),
     1          COR0(NE,3,*),GM0(NE,3,*),KAKO6(*),MCVEL(*),NCVEL(*)
      DIMENSION FOT(6,6),EKOR(6,6),GERS(6,6),LJA(6),MJA(6),
     1          CEGE(LA,*),HAEML(6),NCV(9)
      DIMENSION NREFTP(7),WGTTP(11),XGTP(11),YGTP(11)
      DIMENSION WNC(15),XNC(15)
      COMMON /CDEBUG/ IDEBUG
      EQUIVALENCE (TBETA(1,1),TE(1,1))
C
      DATA NREF/0,1,3,6,10,15,21,28,36,45,55/
      DATA WGT/            2.D0,               1.D0,               1.D0,
     1       .555555555555556D0, .888888888888889D0, .555555555555556D0,
     2       .347854845137454D0, .652145154862546D0, .652145154862546D0,
     3       .347854845137454D0, .236926885056189D0, .478628670499366D0,
     4       .568888888888889D0, .478628670499366D0, .236926885056189D0,
     5       .171324492379170D0, .360761573048139D0, .467913934572691D0,
     6       .467913934572691D0, .360761573048139D0, .171324492379170D0,
     7       .129484966168870D0, .279705391489277D0, .381830050505119D0,
     8       .417959183673469D0, .381830050505119D0, .279705391489277D0,
     9       .129484966168870D0, .101228536290376D0, .222381034453374D0,
     9       .313706645877887D0, .362683783378362D0, .362683783378362D0,
     1       .313706645877887D0, .222381034453374D0, .101228536290376D0,
     2       .081274388361574D0, .180648160694857D0, .260610696402935D0,
     3       .312347077040003D0, .330239355001260D0, .312347077040003D0,
     4       .260610696402935D0, .180648160694857D0, .081274388361574D0,
     5       .066671344308688D0, .149451349150581D0, .219086362515982D0,
     6       .269266719309996D0, .295524224714753D0, .295524224714753D0,
     7       .269266719309996D0, .219086362515982D0, .149451349150581D0,
     8       .066671344308688D0/
      DATA XG /            0.D0,-.577350269189626D0, .577350269189626D0,
     1      -.774596669241483D0,               0.D0, .774596669241483D0,
     2      -.861136311594053D0,-.339981043584856D0, .339981043584856D0,
     3       .861136311594053D0,-.906179845938664D0,-.538469310105683D0,
     4                     0.D0, .538469310105683D0, .906179845938664D0,
     5      -.932469514203152D0,-.661209386466265D0,-.238619186083197D0,
     6       .238619186083197D0, .661209386466265D0, .932469514203152D0,
     7      -.949107912342759D0,-.741531185599394D0,-.405845151377397D0,
     8                     0.D0, .405845151377397D0, .741531185599394D0,
     9       .949107912342759D0,-.960289856497536D0,-.796666477413627D0,
     9      -.525532409916329D0,-.183434642495650D0, .183434642495650D0,
     1       .525532409916329D0, .796666477413627D0, .960289856497536D0,
     2      -.968160239507626D0,-.836031107326636D0,-.613371432700590D0,
     3      -.324253423403809D0,               0.D0, .324253423403809D0,
     4       .613371432700590D0, .836031107326636D0, .968160239507626D0,
     5      -.973906528517172D0,-.865063366688985D0,-.679409568299024D0,
     6      -.433395394129247D0,-.148874338981631D0, .148874338981631D0,
     7       .433395394129247D0, .679409568299024D0, .865063366688985D0,
     8       .973906528517172D0/
C
      DATA WNC/            2.D0,               1.D0,               1.D0,
     1       .333333333333333D0,1.333333333333333D0, .333333333333333D0,
     2       .250000000000000D0, .750000000000000D0, .750000000000000D0,
     3       .250000000000000D0, .155555555555556D0, .711111111111111D0,
     4       .266666666666667D0, .711111111111111D0, .155555555555556D0/
C
      DATA XNC/            0.D0,              -1.D0,               1.D0,
     1                    -1.D0,               0.D0,               1.D0,
     2                    -1.D0,-.333333333333333D0, .333333333333333D0,
     3                     1.D0,              -1.D0,             -0.5D0,
     4                     0.D0,              0.5D0,               1.D0/
C
C
      DATA NREFTP /0,0,1,0,0,0,4/
C
      DATA WGTTP /           1.0D0,
     &            .3333333333333D0, .3333333333333D0, .3333333333333D0,
     1            .1259391805448D0, .1259391805448D0, .1259391805448D0,
     3            .1323941527885D0, .1323941527885D0, .1323941527885D0,
     4            .2250000000000D0/
C
      DATA XGTP  /.3333333333333D0,
     &            .1666666666667D0, .6666666666667D0, .1666666666667D0,
     1            .1012865073235D0, .7974269853531D0, .1012865073235D0,
     2            .4701420641051D0, .4701420641051D0, .0597158717898D0,
     3            .3333333333333D0/
C
      DATA YGTP  /.3333333333333D0,
     &            .1666666666667D0, .1666666666667D0, .6666666666667D0,
     1            .1012865073235D0, .1012865073235D0, .7974269853531D0,
     2            .0597158717898D0, .4701420641051D0, .4701420641051D0,
     3            .3333333333333D0/
C
      IF(IDEBUG.GT.0) PRINT *, ' INT4B '
C     USLOV ZA DRILLING
      IF(IDRIL.EQ.1.AND.NCVE.NE.4) STOP 'STOP-IDRIL.EQ.1.AND.NCVE.NE.4'
C     INDIKATOR KONTROLNE STAMPE
      IST=0
C     BROJ DEBLJINA PO CVOROVIMA
      NDEB=1
      IF(IATYP.GE.3.AND.NMODM.GT.4) THEN
         NDEB=4
         IF(IPODT.EQ.1.OR.IPODT.EQ.3) NDEB=3
      ENDIF
C     INDIKATOR ZA INTEGRACIJU: (0-U GL.PRAVCIMA; 1-U DEKARTOVOM) 
C     (ZA SADA LJUSKA NE MOZE U GLAVNIM PRAVCIMA)
      INTGL=1
C     INDIKATOR ZA GLAVNE PRAVCE
      IGLPR=0
      IF(IATYP.EQ.5.OR.ILEDE.EQ.1.OR.ICPM1.EQ.2) IGLPR=1
C
      NUL=0
      ZERO=1.D-9
      PI=DATAN(1.D0)*4.            
      NP3=NP*3
      NWE=ND*(ND+1)/2
C     COEFE(1)=0.833333333D0
      COEFE(1)=COEF(1)
      COEFE(2)=COEF(2)
      COEFE(3)=COEF(3)
C
      IF(IDIREK.EQ.0) THEN
         IF(IREST.EQ.2) THEN
            WRITE(IZLAZ,1011) NGE
 1011 FORMAT(///' GRUPA =',I5/)
         ENDIF
         L6=-8
C
CS       FORMIRANJE VEKTORA NORMALE U TRENUTKU 0 NA OSNOVU KOORDINATA
CE       FORM UNIT NORMAL VECTORS IN TIME "0"
C
C        CALL IWRR(LJUS,NP,'LJUS')
C         CALL IWRR(ID,NP*6,'ID  ')
C         CALL WRR(CORD,NP3,'CORD')
C         CALL WRR(DRG,NP3,'DRG ')
C         CALL WRR(DRV1,NP3,'DRV1')
C         CALL WRR(DRG0,NP3,'DRG0')
C         CALL IWRR(NOP,NE*8,'NOP ')
C         CALL WRR6(DEB,NE*NDEB,'DEB ')
         IDIRN=1
         DO 40 NLM=1,NE
C            WRITE(3,*) 'NLM',NLM
C  NPUT=0, VEKTORI NORMALE VN(3,NPL) I BAZNI VEKTORI GKS(I,J,NPL) U CVOROVIMA
C           IZLAZ SU VN I GKS A R,S,T SE UZIMAJU IZ TABELA ZA CVOROVE
            NPUT=0
            CALL IZLJAC(XJ,DET,CORD,NOP,DEB,R,S,T,VN,BB0,GKS,NLM,NPUT)
C            CALL WRR(VN,24,'VN  ')
C            CALL WRR(GKS,48,'GKS ')
            NAOPAK=0
            IF(IREST.EQ.2.AND.IDIRN.EQ.1) THEN
               IG1=NOP(NLM,1)
               IG2=NOP(NLM,2)
               IG3=NOP(NLM,3)
               DO 341 I=1,3
                  EF0(I)=CORD(IG1,I)
                  EF1(I)=CORD(IG2,I)-CORD(IG1,I)
                  EF2(I)=CORD(IG3,I)-CORD(IG2,I)
  341          CONTINUE
               CALL AXBV(EF1,EF2,EF3)
               SKA=DOT(EF3,EF0,3)
               IF(SKA.GT.0..OR.NLM.EQ.1) THEN
                  WRITE(IZLAZ,*) 
     +            'NLM,NGE,IG1,IG2,IG3,SKA',NLM,NGE,IG1,IG2,IG3,SKA
               ENDIF
            ENDIF
            DO 42 NBR=1,NCVE
               IG=NOP(NLM,NBR)
               IF(IG.EQ.0) GO TO 42
C
C              SKALARNI PROIZVOD NORMALA - PRIVREMENO ZBOG VAGONA
               IF(IREST.EQ.2.AND.IOPGL(6).EQ.1) THEN
                  SKAL=VN(1,NBR)*DRG(IG,1)+VN(2,NBR)*DRG(IG,2)+
     +                 VN(3,NBR)*DRG(IG,3)
                  AVN =VN(1,NBR)*VN(1,NBR)+VN(2,NBR)*VN(2,NBR)+
     +                 VN(3,NBR)*VN(3,NBR)
                  AVN =DSQRT(AVN)
                  ADRG=DRG(IG,1)*DRG(IG,1)+DRG(IG,2)*DRG(IG,2)+
     +                 DRG(IG,3)*DRG(IG,3)
                  IF(DABS(ADRG).GT.1.D-3) THEN
                     ADRG=DSQRT(ADRG)
                     SKAL=SKAL/AVN/ADRG
                     IF(DABS(SKAL)-1.D0.GT.ZERO) STOP 'SKAL > 1 U PAK82' 
                     IF(DABS(DABS(SKAL)-1.D0).LT.ZERO) THEN
                        SKAL=0.D0
                     ELSE
                        SKAL=DACOS(SKAL)
                     ENDIF          
                     SKAL=SKAL*180./PI
                     if(skal.gt.30.)write(*,*)'nlm,ig',nlm,ig 
                     if(skal.gt.30.)write(izlaz,*)'nlm,ig',nlm,ig 
                     IF(SKAL.GT.30.) KAKO6(IG)=0
C                     IF(SKAL.GT.0.5) KAKO6(IG)=0
                  ENDIF
               ENDIF
C
C               WRITE(3,*) 'IG,ID,LJ',IG,ID(IG,6),LJUS(IG)
C**            5 DOF    ---   OSREDNJAVANJE NORMALA
               IF(ID(IG,6).EQ.0.AND.LJUS(IG).EQ.0) THEN
C                  WRITE(3,*) 'IG,5',IG
                  SKALAR=VN(1,NBR)*DRG(IG,1)+VN(2,NBR)*DRG(IG,2)+
     +                   VN(3,NBR)*DRG(IG,3)
                  DO 41 I=1,3
                     IF(DABS(VN(I,NBR)).LT.ZERO) VN(I,NBR)=0.D0
                     IF(SKALAR.GT.-ZERO) THEN
                        DRG(IG,I)=VN(I,NBR)+DRG(IG,I)
                     ELSE
                        IF(IREST.EQ.2) THEN
                           DRG(IG,I)=VN(I,NBR)+DRG(IG,I)
                           NAOPAK=1
                           GO TO 41
                        ENDIF
                        DRG(IG,I)=-VN(I,NBR)+DRG(IG,I)
                        IF(I.GT.1) GO TO 41
                        NMM=NLM
                        IF(ICVEL.EQ.1) NMM=MCVEL(NLM)
                        WRITE(*,5000) NMM,NBR,SKALAR
                        WRITE(IZLAZ,5000) NMM,NBR,SKALAR
 5000 FORMAT(/' ELEMENT=',I9,' REDNI BROJ CVORA=',I9,' SKALAR=',1PD12.5/
     +' CVOR            VEKTOR NORMALE',15X,'ZAJEDNICKI VEKTOR NORMALE')       
                        DO 422 NBRR=1,NCVE
                           IGG=NOP(NLM,NBRR)
                           IF(IGG.EQ.0) GO TO 422
                           NI=IGG
                           IF(ICVEL.EQ.1) NI=NCVEL(IGG)
                           WRITE(*,5001) NI,(VN(J,NBRR),J=1,3),
     +                                      (DRG(IGG,J),J=1,3)
                           WRITE(IZLAZ,5001) NI,(VN(J,NBRR),J=1,3),
     +                                          (DRG(IGG,J),J=1,3)
 5001 FORMAT(I9,6(1PD12.4))
  422                   CONTINUE
C               STOP 'PROVERI ORIJENTACIJU ELEMENTA, SCAL<0. - PAK82'
C
      IF(ISRPS.EQ.0)
     1PRINT *,'PROVERI ORIJENTACIJU ELEMENTA, SCAL<0. - PAK82'
      IF(ISRPS.EQ.1)
     1PRINT *,'CHECK ELEMENT ORIENTATION, SCAL<0. - PAK82'
                     ENDIF
   41             CONTINUE
               ELSE
C**            6 DOF    ---   TRANSFORMACIJA
C                  WRITE(3,*) 'NLM,NBR,IG,6',NLM,NBR,IG
                  L6=L6+9
                  LEF2=L6+3
                  LEF3=L6+6
                  DO 43 I=1,3
                     LL=LEF3+I-1
   43             TR0(LL)=VN(I,NBR)
                  CALL V1V2(TR0(L6),TR0(LEF2),TR0(LEF3),1)
                  CALL V1V2(TR0(L6),TR0(LEF2),TR0(LEF3),2)
C                  WRITE(3,*) 'L6',L6
C                  CALL WRR(TR0(L6),3,'E1  ')
C                  CALL WRR(TR0(LEF2),3,'E2  ')
C                  CALL WRR(TR0(LEF3),3,'E3  ')
C                 NORMALA JE OSA Z
                  DRG(IG,1)=0.D0
                  DRG(IG,2)=0.D0
                  DRG(IG,3)=1.D0
               ENDIF
   42       CONTINUE
C  NPUT=2, UGAO BB0 PROJEKCIONOG PRAVCA U ODNOSU NA R-OSU U PRVOM CVORU
C           IZLAZ JE UGAO BB0 U ODNOSU NA R OSU U PRVOM CVORU
            NPUT=2
            CALL IZLJAC(XJ,DET,CORD,NOP,DEB,R,S,T,VN,BB0,GKS,NLM,NPUT)
C            WRITE(3,*) 'BB0',BB0
            BET0(NLM)=BB0+BETA
            IF(IREST.EQ.2) THEN
               BTH=0.D0
               DTH=0.D0
               IF(INDBTH.EQ.1) BTH=TBTH(NLM)
               IF(INDDTH.EQ.1) DTH=TDTH(NLM)
               NMM=NLM
               IF(ICVEL.EQ.1) NMM=MCVEL(NLM)
               WRITE(IZLAZ,1010) NMM,IMAT(NLM),IPRC(NLM),ISNA(NLM),
     +            IPGC(NLM),DEB(NLM,1),NUL,BTH,DTH,(DEB(NLM,I),I=2,NDEB)
               IF(NCVE.LE.4) THEN
                  DO 442 I=1,NCVE
                     NCV(I)=NOP(NLM,I)
                     IF(ICVEL.EQ.1) NCV(I)=NCVEL(NCV(I)) 
  442             CONTINUE
                  IF(NAOPAK.EQ.0) THEN
                     WRITE(IZLAZ,1010) (NCV(I),I=1,NCVE)
                  ELSE
                     IF(NCVE.EQ.3)
     +               WRITE(IZLAZ,1010) NCV(1),NCV(3),NCV(2)
                     IF(NCVE.EQ.4)
     +               WRITE(IZLAZ,1010) NCV(1),NCV(4),NCV(3),NCV(2)
                     WRITE(*,*) NMM
                  ENDIF
               ENDIF
            ENDIF
 1010 FORMAT(5I8,F10.3,I5,2F10.3,3F5.2)
   40    CONTINUE
         RETURN
      ENDIF
CS.....   REPERI ZA MODEL MATERIJALA  
CE.....   MATERIAL MODEL POINTER
      LFUN=MREPER(1)
      LNTA=MREPER(2)
      LTEM=MREPER(3)
      MATE=MREPER(4)
CS.....   MATRICA  CFS()  KOREKCIJA SMICANJA
CE.....   SHEAR FACTORS
C      IF(MSET.GT.0.AND.(NMODM.EQ.1.OR.NMODM.EQ.2)) THEN
      IF(MSET.GT.0) THEN
        DO 45 MST=1,MSET  
        NNSL=NSLOJ(MST)
   45   CALL   SMICC (DSLOJ,MATSL,CFS(1,MST),TGT,MST,NNSL,
     1                NMODM,LFUN,LNTA,LTEM,MATE)
      ENDIF
CS.....   MATRICA TRANSFORMISANJA KONSTITUITIVNIH RELACIJA LAMINATA
CE.....   FIBER ORIENTATION TRANSFORMATION MATRIX
      IF(MSET.EQ.0.AND.MODORT(NMODM).EQ.1.AND.IBB0.EQ.0)
     1   CALL STBETA(TBETA,BETA)
C
CS            P E T L J A    P O    E L E M E N T I M A
CE            L O O P    O V E R    E L E M E N T S
C
      L6=0
      GRZAP=0.D0
      GRMAS=0.D0
      LDEFOR=LSIGMA
      IF(NMODM.LT.5) LDEFOR=LSIGMA+NE*NGS12*N45*MXS*IDVA
C
      DO 10 NLM=1,NE
C
C
CS       NASTAJANJE I NESTAJANJE ELEMENATA
CE       ELEMENT BIRTH AND DEATH OPTION
C
         IBD=0
         CALL DTHBTH(AU(LTBTH),AU(LTDTH),VREME,NLM,IBD)
         IF(IBD.EQ.1) GO TO 10
C
         NNXYZ=(NLM-1)*NGS12*MXS-1
         IPG=IPGC(NLM)
         ISN=ISNA(NLM)
         IF(ISN.GE.10)THEN
            ISN=ISN-10
         ENDIF
         IPRS=ISN
C.....................
CS.....   MATRICA TRANSFORMISANJA KONSTITUITIVNIH RELACIJA LAMINATA
CE.....   FIBER ORIENTATION TRANSFORMATION MATRIX
      IF(MSET.EQ.0.AND.MODORT(NMODM).EQ.1.AND.IBB0.EQ.1) THEN
         BETA=BETA+BET0(NLM)
         CALL STBETA(TBETA,BETA)
      ENDIF
C
CS    INTERPOLACIJSKE FUNKCIJE I JAKOBIJAN U TACKI R, S, T
CE    INTERPOLATED FUNCTIONS AND JACOBIAN MATRIX IN R,S,T POINT
C
C  NPUT=-1, VEKTORI GR I GS I NORMALA U TEZISTU GT
      NPUT=-1
      CALL IZLJAC(XJ,DET,CORD,NOP,DEB,R,S,T,VN,BB0,GKS,NLM,NPUT)
      GMP(1)=XJ(3,1)
      GMP(2)=XJ(3,2)
      GMP(3)=XJ(3,3)
      IND6=0
C     PROVERI DA LI JE UREDU SA THICK ZA VISESLOJNE MATERIJALE
      THICK=DEB(NLM,1)
      D05=THICK*0.5D0
      IF(IATYP.GE.3.AND.NMODM.GT.4) D05=0.5D0
      DO 47 NBR=1,NCVE
         IG=NOP(NLM,NBR)
         IF(IG.EQ.0) GO TO 47
         IF(IATYP.GT.1)THEN
            DO 48 I=1,3
               EF0(I)=DRG0(IG,I)
               EF1(I)=DRV1(IG,I)
               EF3(I)=DRG(IG,I)
   48       CONTINUE
         ELSE
            DO 488 I=1,3
               EF0(I)=DRG0(IG,I)
  488       EF3(I)=EF0(I)
            CALL V1V2(EF1,EF2,EF3,1)
         ENDIF
         IF(ID(IG,6).EQ.0.AND.LJUS(IG).EQ.0) THEN
            SCAL=DOT(GMP,EF3,3)
            IF(DABS(SCAL).LT.1.D-9) then
               NMM=NLM
               IF(ICVEL.EQ.1) NMM=MCVEL(NLM)
               WRITE(*,5000) NMM,NBR,Scal
               WRITE(3,5000) NMM,NBR,Scal
               STOP ' SCAL=0. - PAK82'
            endif
            IF(SCAL.LT.0.D0) THEN
               DO 499 I=1,3
                  EF0(I)=-EF0(I)
                  EF3(I)=-EF3(I)
                  EF1(I)=-EF1(I)
  499          CONTINUE
               WRITE(3,*) 'NLM',NLM
               STOP 'CHECK ELEMENT ORIENTATION, SCAL<0. - PAK82'
            ENDIF
         ENDIF
         CALL V1V2(EF1,EF2,EF3,2)
C         WRITE(3,*) 'NLM,NB ',NLM,NBR
C         CALL WRR(EF1,3,'XGLO')
C         CALL WRR(EF2,3,'YGLO')
C         CALL WRR(EF3,3,'ZGLO')
C**      TRANSFORMACIJA ZA CVOROVE SA 6 DOF
         MTR(NBR)=0
         IF(ID(IG,6).GT.0.OR.LJUS(IG).EQ.1) THEN
            IND6=1
            MTR(NBR)=1
            DO 50 I=1,3
            DO 50 J=1,3
               L6=L6+1
C               IF(I.EQ.1.AND.J.EQ.1)WRITE(3,*) 'L6',L6
C               IF(I.EQ.1.AND.J.EQ.1)CALL WRR(TR0(L6),9,'TR0 ')
               TTR(I,J,NBR)=TR0(L6)
   50       CONTINUE
            CALL TRAV(EF1,EF2,EF3,TTR(1,1,NBR))
            EF0(1)=TTR(3,1,NBR)
            EF0(2)=TTR(3,2,NBR)
            EF0(3)=TTR(3,3,NBR)
         ENDIF
C         WRITE(3,*) 'NLM,NBR ',NLM,NBR
C         CALL WRR(EF1,3,'XGL1')
C         CALL WRR(EF2,3,'YGL1')
C         CALL WRR(EF3,3,'ZGL1')
C
         DO 49 I=1,3
            GKS(I,1,NBR)=-D05*EF2(I)
            GKS(I,2,NBR)= D05*EF1(I)
   49    CONTINUE
C
         IF(IATYP.GE.3) THEN
            DO 17 I=1,3
               GMT(I,NBR)=D05*EF0(I)
               GM(I,NBR)=D05*EF3(I)
   17       CONTINUE
         ELSE
            DO 18 I=1,3
               GMT(I,NBR)=D05*EF3(I)
               GM(I,NBR)=D05*EF0(I)
   18       CONTINUE
         ENDIF
         IF(IATYP.GE.2) THEN
            DO 19 I=1,3
   19       DRGTM0(NBR,I)=(EF3(I)-EF0(I))
         ENDIF
C
   47 CONTINUE
C
CS     VEKTOR  LM I VEKTOR LOKALNIH POMERANJA
CE     VECTOR  LM  AND  LOCALL DISPLACEMENTS
C
      CALL ICLEAR(LM,ND)
      KT=0
      KR=NCVE3
      DO 1222 I=1,NCVE
      II=NOP(NLM,I)
       DO 1221 J=1,3
        COR(I,J)=CORD(II,J)
        KT=KT+1
        KR=KR+1
        IF(II.EQ.0) GO TO 1221
        LM(KR)=ID(II,3+J)
        LM(KT)=ID(II,J)
 1221  CONTINUE
 1222 CONTINUE
C
      IF(IDRIL.EQ.1) THEN
         DO 441 J=1,3
            EF1(J)=COR(2,J)-COR(4,J)
            EF2(J)=COR(3,J)-COR(1,J)
  441    CONTINUE
         CALL AXBV(EF1,EF2,EF3)
         DO 444 I=1,4
            K=MOD(I,4)+1
            DO 443 J=1,3
               EF1(J)=COR(K,J)-COR(I,J)
  443       CONTINUE
            EL14(I)=RNORM(EF1,3)
            CALL AXBV(EF1,EF3,EN14(1,I))
            CALL JEDV(EN14(1,I),EN14(2,I),EN14(3,I))
  444    CONTINUE
      ENDIF
C
      IF(IATYP.GE.4) THEN
         DO 1224 I=1,NCVE
         DO 1224 J=1,3
            IF(ITER.EQ.0) THEN
               COR0(NLM,J,I)=COR(I,J)
               GM0(NLM,J,I) =GM(J,I)
            ENDIF
            CORT(I,J)=COR0(NLM,J,I)
            GNT(J,I) =GM0(NLM,J,I)
 1224    CONTINUE
      ENDIF
      IF(IATYP.GE.3.AND.NMODM.GT.4) THEN
         DO 1225 I=1,NCVE
         DO 1225 J=1,3
            GKS0(J,1,I)=GKS(J,1,I)
            GKS0(J,2,I)=GKS(J,2,I)
            GMT0(J,I)  =GMT(J,I)  
            GMN0(J,I)  =GM(J,I)   
            IF (NMODM.LT.32) GNT0(J,I)  =GNT(J,I)  
 1225    CONTINUE
      ENDIF
C         
      DO 242 I=1,ND
         UEL(I)=0.D0
         UPR(I)=0.D0
         IF (LM(I).EQ.0) GO TO 242
         J=LM(I)
         UEL(I)=RTDT(J)
         IF(NGENL.GT.0) UPR(I)=UPRI(J)
  242 CONTINUE
C         WRITE(3,*) 'NLM',NLM
C         CALL WRR6(UEL,ND,'UEL ')
C         CALL WRR6(UPR,ND,'UPR ')
C
      IF(ISKNP.NE.2) CALL CLEAR(SKE,NWE)
      CALL CLEAR(AMASC,9)
C
      R=0.0D0
      S=0.0D0
      T=0.0D0
      IF(IALFA.GE.0) THEN
         IF(ISKNP.NE.1) THEN
C
CS          RACUNANJE IZRAZA - F * U + h
CE          CALCULATE EXPRESSION - F * U + h
C
            DO 180 I=1,LA
               HAEML(I)=0.D0
               DO 190 J=1,ND
                  LL=LM(J)
                  IF(LL.EQ.0) GO TO 190
                  IF(NGENL.GT.0) THEN
                     HAEML(I)=HAEML(I)+GEEK(I,J,NLM)*UPRI(LL)
                  ELSE
                     HAEML(I)=HAEML(I)+GEEK(I,J,NLM)*RTDT(LL)
                  ENDIF
  190          CONTINUE
               IF(NGENL.GT.0) HAEML(I)=HAEML(I)+HAEM(I,NLM)
  180       CONTINUE
C
CS          RACUNANJE PARAMETARA - ALFA
CE          CALCULATE PARAMETERS - ALFA
C           ALFA = ALFA - (H**-1) * (F * U + h )
C
            IF(NGENL.EQ.0) CALL CLEAR(ALFE(1,NLM),LA)
            CALL INTEV1(ALFE(1,NLM),HINV(1,1,NLM),HAEML,-1.D0,LA,LA)
C            CALL WRR6(ALFE(1,NLM),LA,'ALFE')
C
         ENDIF
C
CS       BRISANJE PROSTORA ZA MATRICE H, F, h, E
CS       CLEAR SPACE FOR MATRIX H, F, h, E
C
         IF(ISKNP.NE.2) CALL CLEAR(HINV(1,1,NLM),LA*LA)
         IF(ISKNP.NE.2) CALL CLEAR(GEEK(1,1,NLM),LA*ND)
         IF(NGENL.GT.0) CALL CLEAR(HAEM(1,NLM),LA)
         CALL CLEAR(EKOR,6*LA)
      ENDIF 
C
C
CS    P E T L J A    P O    S L O J E V I M A
CE    L O O P    O V E R    L A Y E R S
C
C
      MAT=IMAT(NLM)
      GUST=GUSM(NMODM,MAT)
      MST=MAT
      NNSL=1
      IF(MSET.GT.0) THEN
         NNSL=NSLOJ(MST)
         COEFE(1)=CFS(1,MST)
         COEFE(2)=CFS(2,MST)
         TTT=-1.D0
      ENDIF
C
      IBTC=0
         ZAPRE=0.D0
         AMASA=0.D0
      DO 25 MSL=1,NNSL
C
         IF(MSET.GT.0) THEN
            BETA=BBET(MSL,MST)
            IF(IBB0.EQ.1) BETA=BETA+BET0(NLM)
            IF(MODORT(NMODM).EQ.1) CALL STBETA(TBETA,BETA)
            DDD =DSLOJ(MSL,MST)
            TTT =TTT+2.D0*DDD
            MAT =MATSL(MSL,MST)
         ENDIF   
C
         GO TO (  1,  2,999,999,999,999,999,999,999,999,
     1          999,999,999,999,999,999,999,999,999,999,
     2          999,999,999,999,999,999,999,999,999,999,
     3          999,999,999,999,999,999,999,999,999,999,
     4          999,999,999,999,999,999,999,999,999,999,
     5          999,999,999,999,999,999,999,999,999,999,
     6          999,999,999,999,999,999,999,999,999,999,
     7          999,999,999,999,999,999,999,999,999,999,
     8          999,999,999,999,999,999,999,999,999,999,
     9          999,999,999,999,999,999,999,999,999,999),NMODM
    1    CALL MEL81(A(LFUN),COEFE,ETP,1,DEB(NLM,1))
         GO TO 999
    2    CALL MEL82(A(LFUN),COEFE,ETP,TBETA,BETA,1)
C
CS       PETLJA PO GAUSOVIM TACKAMA 
CE       LOOP OVER GAUSS POINTS
C
 999     IF(INDSEL.EQ.1) THEN
            NGAUXX=NGAUSX
            NGAUYY=NGAUSY
            NGAUZZ=NGAUSZ
            IALFAA=IALFA
            NGAUSX=1
            NGAUSY=1
C            NGAUSZ=1
            IALFA=-1
         ENDIF
         GO TO 997
 998     NGAUSX=NGAUXX
         NGAUSY=NGAUYY
         NGAUSZ=NGAUZZ
         IALFA=IALFAA
 997     JG=0
         NGAUSU=NGAUSX*NGAUSY*NGAUSZ
         DO 20 NGR=1,NGAUSX
            IF(IPODT.NE.1.AND.IPODT.NE.3)THEN
               JGR=NREF(NGAUSX)+NGR
               IF(INCOTX.EQ.0)THEN
                  R =XG (JGR)
                  WR=WGT(JGR)
               ELSE
                  R =XNC(JGR)
                  WR=WNC(JGR)
               ENDIF
            ENDIF
            IF(IPODT.EQ.1.OR.IPODT.EQ.3)THEN
               JGR=NREFTP(NGAUSX)+NGR
               R=XGTP(JGR)
               S=YGTP(JGR)
               WR=WGTTP(JGR)
               WS=.5D0
            ENDIF
C
         DO 20 NGS=1,NGAUSY
            IF(IPODT.NE.1.AND.IPODT.NE.3)THEN
               JGR=NREF(NGAUSY)+NGS
               IF(INCOTY.EQ.0)THEN
                  S =XG (JGR)
                  WS=WGT(JGR)
               ELSE
                  S =XNC(JGR)
                  WS=WNC(JGR)
               ENDIF
            ENDIF
C
         DO 20 NGT=1,NGAUSZ
            JGR=NREF(NGAUSZ)+NGT
            IF(INCOTZ.EQ.0)THEN
               T =XG (JGR)
               WT=WGT(JGR)
            ELSE
               T =XNC(JGR)
               WT=WNC(JGR)
            ENDIF
            IF(MSET.GT.0) THEN
               T =TTT-DDD*(1.D0-T)
               WT=DDD*WT
            ENDIF
C
            JG=JG+1
C        WRITE(3,*) 'JG,R,S,T',JG,R,S,T
C           NPUT=-2, SAMO INTERPOLACIONE FUNKCIJE
            NPUT=-2
            CALL IZLJAC(XJ,DET,CORD,NOP,DEB,R,S,T,VN,BB0,GKS,NLM,NPUT)
C
CS          TEMPERATURA, GLOBALNE KOORDINATE GAUSOVE TACKE
CE          TEMPHERATURE AND GLOBAL COORDINATES OF GAUSS POINT
C
            IF(ITERME.EQ.1)
     1      CALL JACGA8(NOP,CORD,A(LTECV),T,CORGT(1,JG,NLM),TGT,0)
            IF(ITERME.EQ.1) TEMGT(JG,NLM)=TGT
C
CS          KOREKCIJA SMICANJA ZA MATERIJALE ZAVISNE OD FIZICKOG STANJA
CE          SHEAR CORECTION 
C
            IF(MSET.GT.0.AND.(NMODM.EQ.3.OR.NMODM.EQ.4))
     1      CALL  SMICC (DSLOJ,MATSL,COEFE,TGT,MST,NNSL,
     1                   NMODM,LFUN,LNTA,LTEM,MATE)
C
CS          FORMIRANJE KONSTITUITIVNE MATRICE
CE          CONSTITUITIVE MATRIX
C
            GO TO ( 70, 70,  3,  4,  5,  5,  5,  5,  5,  5,
     1               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     2               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     3               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     4               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     5               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     6               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     7               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     8               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     9               5,  5,  5,  5,  5,  5,  5,  5,  5,  5),NMODM
    3       CALL MEL83(A(LFUN),A(LNTA),A(LTEM),MATE,TGT,COEFE,ETP,1)
            GO TO 70
    4       CALL MEL84(A(LFUN),A(LNTA),A(LTEM),MATE,TGT,COEFE,
     1                 ETP,TBETA,BETA,1)
            GO TO 70
    5       IBTC=IBTC+1
            IRAC=2
            NPROS=(NNXYZ+IBTC)*MODPRO( NMODM )*IDVA
            LPLAS=LPLAST+NPROS     
            LPLA1=LPLAS1+NPROS
            THIC0=DEB(NLM,1)
            IF(IATYP.GE.3.AND.NMODM.GT.4.AND.NDEB.GT.1) THEN
c               IT1=4
c               IF(IPODT.EQ.1.OR.IPODT.EQ.3) IT1=3
               IT1=NDEB
               THIC0=0.D0
               DO 711 I=1,IT1
                  THIC0=THIC0+DEB(NLM,I)*H(I,1)
  711          CONTINUE
               IF(IPODT.EQ.0) THEN
                  IF(NOP(NLM,5).GT.0.AND.NCVE.GE.5)
     +            THIC0=THIC0+(DEB(NLM,1)+DEB(NLM,2))*H(5,1)/2.D0
                  IF(NOP(NLM,6).GT.0.AND.NCVE.GE.6)
     +            THIC0=THIC0+(DEB(NLM,2)+DEB(NLM,3))*H(6,1)/2.D0
                  IF(NOP(NLM,7).GT.0.AND.NCVE.GE.7)
     +            THIC0=THIC0+(DEB(NLM,3)+DEB(NLM,4))*H(7,1)/2.D0
                  IF(NOP(NLM,8).GT.0.AND.NCVE.GE.8)
     +            THIC0=THIC0+(DEB(NLM,1)+DEB(NLM,4))*H(8,1)/2.D0
                  IF(NOP(NLM,9).GT.0.AND.NCVE.EQ.9) THIC0=THIC0+H(9,1)*
     +            (DEB(NLM,1)+DEB(NLM,2)+DEB(NLM,3)+DEB(NLM,4))/4.D0
               ENDIF
               IF(IPODT.EQ.1.OR.IPODT.EQ.3) THEN
                  IF(NOP(NLM,4).GT.0.AND.NCVE.GE.4)
     +            THIC0=THIC0+(DEB(NLM,1)+DEB(NLM,2))*H(4,1)/2.D0
                  IF(NOP(NLM,5).GT.0.AND.NCVE.GE.5)
     +            THIC0=THIC0+(DEB(NLM,2)+DEB(NLM,3))*H(5,1)/2.D0
                  IF(NOP(NLM,6).GT.0.AND.NCVE.GE.6)
     +            THIC0=THIC0+(DEB(NLM,1)+DEB(NLM,3))*H(6,1)/2.D0
               ENDIF
            ENDIF
            THICT=THIC0
            THICK=THIC0
C               WRITE(3,*) 'R,S,T',R,S,T
C               WRITE(3,*)'H',(H(I,1),I=1,NCVE)
C               WRITE(3,*)'T',(DEB(NLM,I),I=1,IT1)
C               WRITE(3,*)'THICK,THICT,THIC0',THICK,THICT,THIC0
            CALL MODMA8(STRAIN,STRESS,NMODM,IRAC,LPLAS,LPLA1,TGT)
C????  ZASTO OVAJ POZIV
            IF(NMODM.EQ.5)
     &      CALL MEL81(A(LFUN),COEFE,ETP,1,THICK)
C
C
         IF(IATYP.GE.3) THEN
            DO 1234 NBR=1,NCVE
            DO 1234 I=1,3
               GKS(I,1,NBR)=GKS0(I,1,NBR)*THICK
               GKS(I,2,NBR)=GKS0(I,2,NBR)*THICK
               GMT(I,NBR)  =GMT0(I,NBR)  *THIC0
               GM(I,NBR)   =GMN0(I,NBR)  *THICK
               IF (NMODM.LT.32) GNT(I,NBR)  =GNT0(I,NBR)  *THICT
 1234       CONTINUE
         ENDIF
C NASTAVAK
   70    CONTINUE
C
         IF(IALFA.GT.0.AND.JG.EQ.1) THEN
C
CS         INTERPOLACIJSKE FUNKCIJE I JAKOBIJAN U TACKI R=0, S=0, T=0
CE         INTERPOLATED FUNCTIONS AND JACOBIAN MATRIX IN R=0,S=0,T=0 POINT
C
C  NPUT=1, RACUNANJE JAKOBIJANA U GAUS TACKI R,S,T
           R0=0.D0
           NPUT=1
           CALL IZLJAC(XJ,DET,CORD,NOP,DEB,R0,R0,R0,VN,BB0,GKS,NLM,NPUT)
C
CS         INVERTOVAN JAKOBIJAN - XJ
CE         INVERSE JACOBIAN - XJ
C
           CALL MINV3(XJ,DET)
           DET0=DET
C
CS         MATRICA TRANSFORMACIJE - FOT (KOVARIJANTNI - GLOBALNI DEKARTOV) 
CE         TRANSFORMATION MATRIX - FOT (COVARIANT - GLOBAL CARTESIAN)
C
           CALL TRANSE(FOT,XJ)
C
         ENDIF
C
CS          INTERPOLACIJSKE FUNKCIJE I JAKOBIJAN U TACKI R, S, T
CE          INTERPOLATED FUNCTIONS AND JACOBIAN MATRIX IN R,S,T POINT
C
C  NPUT=1, RACUNANJE JAKOBIJANA U GAUS TACKI R,S,T
            NPUT=1
            CALL IZLJAC(XJ,DET,CORD,NOP,DEB,R,S,T,VN,BB0,GKS,NLM,NPUT)
C
        IF(IALFA.GE.0) THEN
            DETT=DET0/DET
C
CS          FORMIRANJE MATRICE - E (KOVARIJANTNA)
CE          FORM MATRIX - E (COVARIANT)
C
            IF(IALFA.NE.3) THEN
               EKOR(1,1)=R*DETT
               EKOR(2,2)=S*DETT
               EKOR(4,3)=R*DETT
               EKOR(4,4)=S*DETT
               IF(IALFA.EQ.2) THEN
                  EKOR(1,5)=R*S*DETT
                  EKOR(2,5)=-R*S*DETT
                  EKOR(4,5)=(R*R-S*S)*DETT
               ENDIF
            ENDIF
            IF(IALFA.EQ.3) THEN
C              IF(INDKOV.LT.0) THEN
C                 PT=1.D0-T*T
C              ELSE
                  PT=1.D0
C              ENDIF
               EKOR(1,1)=-R*XJ(1,1)*DETT
               EKOR(1,2)=-R*XJ(1,2)*DETT
               EKOR(1,3)=-R*XJ(1,3)*DETT
               EKOR(2,4)=-S*XJ(2,1)*DETT
               EKOR(2,5)=-S*XJ(2,2)*DETT
               EKOR(2,6)=-S*XJ(2,3)*DETT
               EKOR(4,1)=-R*XJ(2,1)*DETT
               EKOR(4,2)=-R*XJ(2,2)*DETT
               EKOR(4,3)=-R*XJ(2,3)*DETT
               EKOR(4,4)=-S*XJ(1,1)*DETT
               EKOR(4,5)=-S*XJ(1,2)*DETT
               EKOR(4,6)=-S*XJ(1,3)*DETT
               EKOR(5,4)=-S*XJ(3,1)*DETT*PT
               EKOR(5,5)=-S*XJ(3,2)*DETT*PT
               EKOR(5,6)=-S*XJ(3,3)*DETT*PT
               EKOR(6,1)=-R*XJ(3,1)*DETT*PT
               EKOR(6,2)=-R*XJ(3,2)*DETT*PT
               EKOR(6,3)=-R*XJ(3,3)*DETT*PT
            ENDIF
C
CS             FORMIRANJE MATRICE - G (GLOBALNI DEKARTOV)
CE             FORM MATRIX - G (GLOBAL CARTESIAN)
C
               CALL MNOZM1(GERS,FOT,EKOR,6,LA,6)
            ENDIF
C
CS          TEMPERATURA, GLOBALNE KOORDINATE GAUSOVE TACKE
CE          TEMPHERATURE AND GLOBAL COORDINATES OF GAUSS POINT
C
            IF(ICORGT.EQ.1)
     1      CALL JACGA8(NOP,CORD,A(LTECV),T,CORGT(1,JG,NLM),TGT,1)
C
            WTU=WR*WS*WT*DET
            IF(IST.EQ.1) WRITE(3,*)'DET,WT,WR,WS',DET,WT,WR,WS
            IF(IST.EQ.1) WRITE(3,*)'WTU',WTU
C           FORMIRANJE VEKTORA H ZA MATRICU MASA
            IF(ITER.EQ.0.AND.INDZS.GT.0.AND.NGAUSU.EQ.NGS12) THEN
               WD=WTU*GUST
               ZAPRE=ZAPRE+WTU
               AMASA=AMASA+WD
               DO 149 I=1,NCVE
                  AMASC(I)=AMASC(I)+H(I,1)*WD
  149          CONTINUE
            ELSE
               ZAPRE=ZAPRE+WTU
            ENDIF
C
CS          MATRICE ELEMENATA
CE          MATRIX OF ELEMENTS
C
      IF(IPODT.EQ.0.OR.IPODT.EQ.1) 
     1CALL MATEIL (A(LSIGMA),SKE,FTDT,T,WTU,GKS,LM,MSL,NOP,DRGTM0,DEB,
     1             TGT,LPLAS,LPLA1,ISN,MTR,TTR,IND6,R,S,COR,GMT,
     1             CORT,GNT,GERS,ALFE,HAEM,HINV,GEEK,
     1             N45,LA,CEGE,ESILA,IPG,A(LDEFOR),INTGL)
      IF(IPODT.EQ.3)
     1CALL GELBOI (A(LSIGMA),SKE,FTDT,T,WTU,GKS,LM,MSL,NOP,DRGTM0,DEB,
     1             TGT,LPLAS,LPLA1,ISN,MTR,TTR,IND6,CORD,COR,GMT,R,S,
     1             N45,A(LDEFOR))
      IF(IPODT.EQ.2) 
     1CALL PINSKY (A(LSIGMA),SKE,FTDT,T,WTU,GKS,LM,MSL,NOP,DRGTM0,DEB,
     1             TGT,LPLAS,LPLA1,ISN,MTR,TTR,IND6,R,S,COR,
     1             N45,A(LDEFOR))
      IF(IPODT.EQ.4) 
     1CALL BATHE4 (A(LSIGMA),SKE,FTDT,T,WTU,GKS,LM,MSL,NOP,DRGTM0,DEB,
     1             TGT,LPLAS,LPLA1,ISN,MTR,TTR,IND6,R,S,COR,GMT,
     1             CORT,GNT,GERS,ALFE,HAEM,HINV,GEEK,FOT,DET0,A(LSIGMV),
     1             N45,LA,CEGE,ESILA,IPG,A(LDEFOR),INTGL)
      IF(IPODT.EQ.5) 
     1CALL PLOCAF (A(LSIGMA),SKE,FTDT,T,WTU,GKS,LM,MSL,NOP,DRGTM0,DEB,
     1             TGT,LPLAS,LPLA1,ISN,MTR,TTR,IND6,R,S,COR,GMT,
     1             CORT,GNT,GERS,ALFE,HAEM,HINV,GEEK,
     1             N45,LA,CEGE,ESILA,IPG,A(LDEFOR))
C
   20    CONTINUE
         IF(NGAUSU.LT.NGS12) GO TO 998
C
   25 CONTINUE
C
CS-------------------------- KRAJ PETLJE PO GAUSOVIM TACKAMA --------
CE-------------------------- END  LOOP  OVER  GAUSS  POINTS  --------
C
        IF(IALFA.GE.0) THEN
C
CS          INVERTOVANJE MATRICE - H
CE          INVERSE MATRIX - H
C
            IF(ISKNP.NE.2) CALL MINV(HINV(1,1,NLM),LA,DET,LJA,MJA)
C
            IF(NGENL.GT.0) THEN
C
CS             RACUNANJE IZRAZA - (H**-1) * h
CE             CALCULATE EXPRESSION - (H**-1) * h
C
               CALL CLEAR(HAEML,LA)
               CALL MNOZI1(HAEML,HINV(1,1,NLM),HAEM(1,NLM),LA,LA)
C
CS             KOREKCIJA UNUTRASNJIH SILA
CE             CORECTION INTERNAL FORCES
C              r = r - FT * (H**-1) * h
C
               CALL INTEGF(FTDT,GEEK(1,1,NLM),HAEML,LM,-1.D0,ND,LA)
C            CALL WRR(FTDT,JEDN,'F82 ')
C
               IF(IPG.GT.0) 
     1         CALL MNOZ2I(ESILA(1,IPG),GEEK(1,1,NLM),HAEML,ND,LA)
C
            ENDIF
C
CS          KOREKCIJA MATRICE KRUTOSTI
CE          CORECTION STIFFNESS MATRIX
C           K = K - FT * (H**-1) * F
C
            IF(ISKNP.NE.2)
     1      CALL INTEGK(SKE,GEEK(1,1,NLM),HINV(1,1,NLM),LM,-1.D0,ND,LA)
C
         ENDIF
C
CS       RASPOREDJIVANJE MATRICE KRUTOSTI (SKE)
CE       ASSEMBLE STIFFNESS MATRIX
C
         IF(ISKNP.NE.2) CALL SPAKUJ(SK,A(LMAXA),SKE,LM,ND)
C	call wrr6(ske,18,' ske')
C        RASPOREDJIVANJE KONCENTRISANIH MATRICE MASA AMASC U VEKTOR ZAPS
         IF(ITER.EQ.0.AND.INDZS.GT.0)THEN
C        WRITE(3,*) 'AMASA,NCVE,ND,NLM',AMASA,NCVE,ND,NLM
C        CALL WRR(AMASC,NCVE,'AMAS')
            IK=0
            DO 500 I=1,NCVE
            DO 500 K=1,3
               IK=IK+1
               NJ=LM(IK)
               IF(NJ.GT.0) THEN
                  NPRNJ=NPRZ(NJ)
                  IF(NPRNJ.GT.0.AND.NPRNJ.NE.K) STOP 'NPRNJ'
                  NPRZ(NJ)=K
                  ZAPS(NJ)=ZAPS(NJ)+AMASC(I)
               ENDIF
  500       CONTINUE
         ENDIF
         IF(ITER.EQ.0.AND.INDZS.GT.0)THEN
            GRZAP=GRZAP+ZAPRE
            GRMAS=GRMAS+AMASA
         ELSE
            GRZAP=GRZAP+ZAPRE
         ENDIF
   10 CONTINUE
C      call wrr6(ftdt,jedn,'FTDT')
      IF(ITER.EQ.0.AND.INDZS.GT.0)THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NGE,GRZAP,NGE,GRMAS
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NGE,GRZAP,NGE,GRMAS
      ELSE
      WRITE(3,*) 'NGE,GRZAP,ITER',NGE,GRZAP,ITER
      ENDIF
      RETURN
C-----------------------------------------------------------------------
 2000 FORMAT(///
     111X,'GRUPA ELEMENATA',I5,' ZAPREMINA =',1PD12.5/
     111X,'GRUPA ELEMENATA',I5,'      MASA =',1PD12.5)
C-----------------------------------------------------------------------
 6000 FORMAT(///
     111X,'ELEMENT GROUP',I5,' VOLUME =',1PD12.5/
     111X,'ELEMENT GROUP',I5,'   MASS =',1PD12.5)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE STBETA(TBETA,BETA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS.....   MATRICA TRANSFORMISANJA KONSTITUITIVNIH RELACIJA LAMINATA
CE.....   CONSTITUITIVE LAW TRANSFORMATION MATRIX  Qe  (QeT*C*Qe)
C
      DIMENSION TBETA(6,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' STBETA'
C
      SB=DSIN(BETA)
      CB=DCOS(BETA)
C....   SLUCAJ  BETA = K * PI
      IF(DABS(SB).LT.1.D-4) THEN
        SB=0.D0
        CB=1.D0
      ENDIF
C....   SLUCAJ  BETA = K * PI/2
      IF(DABS(CB).LT.1.D-4) THEN
        SB=1.D0
        CB=0.D0
      ENDIF
C
      SB2=SB*SB
      CB2=CB*CB
      SCB=SB*CB
C
      TBETA(1,1)= CB2
      TBETA(1,2)= SB2
      TBETA(1,3)= 0.D0
      TBETA(1,4)= SCB
      TBETA(1,5)= 0.D0
      TBETA(1,6)= 0.D0
C
      TBETA(2,1)= TBETA(1,2)
      TBETA(2,2)= TBETA(1,1)
      TBETA(2,3)= 0.D0
      TBETA(2,4)=-TBETA(1,4)
      TBETA(2,5)= 0.D0
      TBETA(2,6)= 0.D0
C
      TBETA(3,1)= 0.D0
      TBETA(3,2)= 0.D0
      TBETA(3,3)= 1.D0
      TBETA(3,4)= 0.D0
      TBETA(3,5)= 0.D0
      TBETA(3,6)= 0.D0
C
      TBETA(4,1)= 2.D0*TBETA(2,4)
      TBETA(4,2)=-TBETA(4,1)
      TBETA(4,3)= 0.D0
      TBETA(4,4)= TBETA(1,1)-TBETA(1,2)
      TBETA(4,5)= 0.D0
      TBETA(4,6)= 0.D0
C
      TBETA(5,1)= 0.D0
      TBETA(5,2)= 0.D0
      TBETA(5,3)= 0.D0
      TBETA(5,4)= 0.D0
      TBETA(5,5)= CB
      TBETA(5,6)=-SB
C
      TBETA(6,1)= 0.D0
      TBETA(6,2)= 0.D0
      TBETA(6,3)= 0.D0
      TBETA(6,4)= 0.D0
      TBETA(6,5)= SB
      TBETA(6,6)= CB
C
      RETURN
      END
C=======================================================================
      SUBROUTINE STBETS(TBETA,BETA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS.....   MATRICA TRANSFORMISANJA KONSTITUITIVNIH RELACIJA LAMINATA
CE.....   CONSTITUITIVE LAW TRANSFORMATION MATRIX  Qs
C
      DIMENSION TBETA(6,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' STBETA'
C
      SB=DSIN(BETA)
      CB=DCOS(BETA)
C....   SLUCAJ  BETA = K * PI
      IF(DABS(SB).LT.1.D-4) THEN
        SB=0.D0
        CB=1.D0
      ENDIF
C....   SLUCAJ  BETA = K * PI/2
      IF(DABS(CB).LT.1.D-4) THEN
        SB=1.D0
        CB=0.D0
      ENDIF
C
      SB2=SB*SB
      CB2=CB*CB
      SC2=2.D0*SB*CB
C
      TBETA(1,1)= CB2
      TBETA(1,2)= SB2
      TBETA(1,3)= 0.D0
      TBETA(1,4)= SC2
      TBETA(1,5)= 0.D0
      TBETA(1,6)= 0.D0
C
      TBETA(2,1)= TBETA(1,2)
      TBETA(2,2)= TBETA(1,1)
      TBETA(2,3)= 0.D0
      TBETA(2,4)=-TBETA(1,4)
      TBETA(2,5)= 0.D0
      TBETA(2,6)= 0.D0
C
      TBETA(3,1)= 0.D0
      TBETA(3,2)= 0.D0
      TBETA(3,3)= 1.D0
      TBETA(3,4)= 0.D0
      TBETA(3,5)= 0.D0
      TBETA(3,6)= 0.D0
C
      TBETA(4,1)= 0.5D0*TBETA(2,4)
      TBETA(4,2)=-TBETA(4,1)
      TBETA(4,3)= 0.D0
      TBETA(4,4)= TBETA(1,1)-TBETA(1,2)
      TBETA(4,5)= 0.D0
      TBETA(4,6)= 0.D0
C
      TBETA(5,1)= 0.D0
      TBETA(5,2)= 0.D0
      TBETA(5,3)= 0.D0
      TBETA(5,4)= 0.D0
      TBETA(5,5)= CB
      TBETA(5,6)=-SB
C
      TBETA(6,1)= 0.D0
      TBETA(6,2)= 0.D0
      TBETA(6,3)= 0.D0
      TBETA(6,4)= 0.D0
      TBETA(6,5)= SB
      TBETA(6,6)= CB
C
      RETURN
      END
C=======================================================================
      SUBROUTINE IZLJAC(XJ,DET,CORD,NOP,DEB,R,S,T,VN,BB0,GKS,NLM,NPUT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE INTERPOLACIONIH   F-JA  I  JAKOBIJANA
CE     FORM INTERPOLATION FUNCTION AND JACOBIAN MATRIX
C
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /IZLE4B/ H(9,3),GM(3,9),BLT(6,54),BE(9,54),ETP(6,6),UEL(54)
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /SRPSKI/ ISRPS
      COMMON /PODTIP/ IPODT
      COMMON /DRILLI/ EL14(4),EN14(3,4),IDRIL
C
      DIMENSION XJ(3,*),CORD(NP,*),NOP(NE,*),DEB(NE,*),RSS(9,2),
     1          RSTP(6,2),RS(9,2),GKS(3,2,*),VN(3,*),AN(3),POM(3)
      COMMON /CDEBUG/ IDEBUG
C     PRVE CETIRI FUNKCIJE I IZVODI
C     DATA RSS /-1.D0, 0.D0, 1.D0,-1.D0, 0.D0, 1.D0,-1.D0, 0.D0, 1.D0,
C    &          -1.D0,-1.D0,-1.D0, 0.D0, 0.D0, 0.D0, 1.D0, 1.D0, 1.D0 /
      DATA RSS /-.999, 0.D0, .999,-.999, 0.D0, .999,-.999, 0.D0, .999,
     &          -.999,-.999,-.999, 0.D0, 0.D0, 0.D0, .999, .999, .999 /
C     DATA RS  / 1.D0,-1.D0,-1.D0, 1.D0, 0.D0,-1.D0, 0.D0, 1.D0, 0.D0,
C    &           1.D0, 1.D0,-1.D0,-1.D0, 1.D0, 0.D0,-1.D0, 0.D0, 0.D0 /
      DATA RS  / .999,-.999,-.999, .999, 0.D0,-.999, 0.D0, .999, 0.D0,
     &           .999, .999,-.999,-.999, .999, 0.D0,-.999, 0.D0, 0.D0 /
      DATA RSTP/ 0.D0, 1.D0, 0.D0, .5D0, .5D0, 0.D0,
     &           0.D0, 0.D0, 1.D0, 0.D0, .5D0, .5D0 /
C
      IF(IDEBUG.GT.0) PRINT *, ' IZLJAC'
C  NPUT=0, VEKTORI NORMALE VN(3,NPL) I BAZNI VEKTORI GKS(I,J,NPL) U CVOROVIMA
C  NPUT=1, RACUNANJE JAKOBIJANA U GAUS TACKI R,S,T
C  NPUT=2, UGAO BB0 PROJEKCIONOG PRAVCA U ODNOSU NA R-OSU U PRVOM CVORU
C  NPUT=-1, VEKTORI GR I GS I NORMALA U TEZISTU GT
C  NPUT=-2, SAMO INTERPOLACIONE FUNKCIJE
      NORMT=0
      IF(NPUT.EQ.-1) THEN
        R=0.
        S=0.
        T=0.
        NORMT=1
        NPUT=1
        CALL CLEAR(GM,27)
      ENDIF
      NP1=NCVE
      IF(NPUT.EQ.1.OR.NPUT.EQ.2.OR.NPUT.EQ.-2) NP1=1
      DO 10 NPL=1,NP1
C         IF(NPUT.EQ.-2) GO TO 999
         IF(NPUT.EQ.0) THEN
            IF(IPODT.EQ.1.OR.IPODT.EQ.3) THEN
               R=RSTP(NPL,1)
               S=RSTP(NPL,2)
            ENDIF
            IF(IPODT.EQ.0.OR.IPODT.EQ.4.OR.IPODT.EQ.5) THEN
               R=RS(NPL,1)
               S=RS(NPL,2)
            ENDIF
            IF(IPODT.EQ.2) THEN
               R=RSS(NPL,1)
               S=RSS(NPL,2)
            ENDIF
         ENDIF
         IF(NPUT.EQ.2) THEN
            IF(IPODT.EQ.1.OR.IPODT.EQ.3) THEN
               R=RSTP(1,1)
               S=RSTP(1,2)
            ENDIF
            IF(IPODT.EQ.0.OR.IPODT.EQ.4.OR.IPODT.EQ.5) THEN
               R=RS(1,1)
               S=RS(1,2)
            ENDIF
            IF(IPODT.EQ.2) THEN
               R=RSS(1,1)
               S=RSS(1,2)
            ENDIF
         ENDIF
C
C
         IF(IPODT.EQ.1.OR.IPODT.EQ.3) THEN
            RSM=1.D0-R-S
            H(1,1)= RSM
            H(2,1)= R
            H(3,1)= S
            H(1,2)=-1.D0
            H(2,2)= 1.D0
            H(3,2)= 0.D0
            H(1,3)=-1.D0
            H(2,3)= 0.D0
            H(3,3)= 1.D0
CS          KOREKCIJE FUNKCIJA I IZVODA KADA JE BROJ CVOROVA VECI OD 3
            IF(NCVE.EQ.3) GOTO 504
            R4=4.D0*R
            S4=4.D0*S
CS          CETVRTI CVOR
            IF(NCVE.GE.4.AND.NOP(NLM,4).GT.0) THEN
               H(4,1)= R4*RSM
               H(4,2)= 4.D0*RSM-R4
               H(4,3)=-R4
               DO 552 II=1,2
               DO 552 I=1,3
  552          H(II,I)=H(II,I)-0.5D0*H(4,I)
            ENDIF
CS          PETI CVOR
            IF(NCVE.GE.5.AND.NOP(NLM,5).GT.0) THEN
               H(5,1)= R4*S
               H(5,2)= S4
               H(5,3)= R4
               DO 554 II=2,3
               DO 554 I=1,3
  554          H(II,I)=H(II,I)-0.5D0*H(5,I)
            ENDIF
CS          SESTI CVOR
            IF(NCVE.GE.6.AND.NOP(NLM,6).GT.0) THEN
               H(6,1)= S4*RSM
               H(6,2)=-S4
               H(6,3)= 4.D0*RSM-S4
               DO 556 II=1,3,2
               DO 556 I=1,3
  556          H(II,I)=H(II,I)-0.5D0*H(6,I)
            ENDIF
C
  504       IF(NPUT.EQ.-2) RETURN
            IF(NPUT.EQ.1) GOTO 14
         ENDIF
C-------------------------------------------------   ENDIF   IPODT.EQ.1
C
C
C
         IF(IPODT.NE.1.AND.IPODT.NE.3) THEN
            RP=1.+R
            RM=1.-R
            RK=1.-R*R
            SP=1.+S
            SM=1.-S
            SK=1.-S*S
            H(1,1)=0.25*RP*SP
            H(2,1)=0.25*RM*SP
            H(3,1)=0.25*RM*SM
            H(4,1)=0.25*RP*SM
            H(1,2)=0.25*SP
            H(2,2)=-0.25*SP
            H(3,2)=-0.25*SM
            H(4,2)=0.25*SM
            H(1,3)=0.25*RP
            H(2,3)=0.25*RM
            H(3,3)=-0.25*RM
            H(4,3)=-0.25*RP
CS          KOREKCIJE FUNKCIJA I IZVODA KADA JE BROJ CVOROVA VECI OD 4
            IF(NCVE.EQ.4) GO TO 4
CS          KOREKCIJA ZBOG CVORA 9
            IF(NCVE.EQ.9.AND.NOP(NLM,9).GT.0) THEN
               H(9,1)=RK*SK
               H(9,2)=-2.*R*SK
               H(9,3)=-2.*S*RK
               DO 9 II=1,4
               DO 9 I=1,3
    9          H(II,I)=H(II,I)-0.25*H(9,I)
            ENDIF
CS          PETI CVOR
            IF(NCVE.GE.5.AND.NOP(NLM,5).GT.0) THEN
               H(5,1)=0.5*RK*SP
               H(5,2)=-R*SP
               H(5,3)=0.5*RK
               IF(NCVE.EQ.9.AND.NOP(NLM,9).GT.0) THEN
                  DO 51 I=1,3
   51             H(5,I)=H(5,I)-0.5*H(9,I)
               ENDIF
               DO 52 II=1,2
               DO 52 I=1,3
   52          H(II,I)=H(II,I)-0.5*H(5,I)
            ENDIF
CS          SESTI CVOR
            IF(NCVE.GE.6.AND.NOP(NLM,6).GT.0) THEN
               H(6,1)=0.5*SK*RM
               H(6,2)=-0.5*SK
               H(6,3)=-S*RM
               IF(NCVE.EQ.9.AND.NOP(NLM,9).GT.0) THEN
                  DO 53 I=1,3
   53             H(6,I)=H(6,I)-0.5*H(9,I)
               ENDIF
               DO 54 II=2,3
               DO 54 I=1,3
   54          H(II,I)=H(II,I)-0.5*H(6,I)
            ENDIF
CS          SEDMI CVOR
            IF(NCVE.GE.7.AND.NOP(NLM,7).GT.0) THEN
               H(7,1)=0.5*RK*SM
               H(7,2)=-R*SM
               H(7,3)=-0.5*RK
               IF(NCVE.EQ.9.AND.NOP(NLM,9).GT.0) THEN
                  DO 55 I=1,3
   55             H(7,I)=H(7,I)-0.5*H(9,I)
               ENDIF
               DO 56 II=3,4
               DO 56 I=1,3
   56          H(II,I)=H(II,I)-0.5*H(7,I)
            ENDIF
CS          OSMI CVOR
            IF(NCVE.GE.8.AND.NOP(NLM,8).GT.0) THEN
               H(8,1)=0.5*SK*RP
               H(8,2)=0.5*SK
               H(8,3)=-S*RP
               IF(NCVE.EQ.9.AND.NOP(NLM,9).GT.0) THEN
                  DO 57 I=1,3
   57             H(8,I)=H(8,I)-0.5*H(9,I)
               ENDIF
               DO 58 II=1,4,3
               DO 58 I=1,3
   58          H(II,I)=H(II,I)-0.5*H(8,I)
            ENDIF
C
CS          REDOSLED INTERPOLACIJSKIH FUNKCIJA KAO KOD STANLEYA
            IF(IPODT.EQ.2) CALL STANLH(H)
C    
    4       IF(IDRIL.EQ.1) THEN
CS             PETI CVOR
               H(5,1)=0.5*RK*SP
               H(5,2)=-R*SP
               H(5,3)=0.5*RK
CS             SESTI CVOR
               H(6,1)=0.5*SK*RM
               H(6,2)=-0.5*SK
               H(6,3)=-S*RM
CS             SEDMI CVOR
               H(7,1)=0.5*RK*SM
               H(7,2)=-R*SM
               H(7,3)=-0.5*RK
CS             OSMI CVOR
               H(8,1)=0.5*SK*RP
               H(8,2)=0.5*SK
               H(8,3)=-S*RP
            ENDIF
            IF(NPUT.EQ.-2) RETURN
            IF(NPUT.EQ.1) GOTO 14
         ENDIF
C-------------------------------------------------   ENDIF   IPODT.EQ.0
C
CS FORMIRANJE VEKTORA NORMALE VN(3,NPL) I BAZNIH VEKTORA GKS(I,J,NPL) U CVORU
C        (I=X,Y,Z; J=R,S)
         DO 15 I=1,3
         DO 15 J=1,2
            GKS(I,J,NPL)=0.D0
            DO 16 K=1,NCVE
               IG=NOP(NLM,K)
               IF(IG.EQ.0) GO TO 16
               GKS(I,J,NPL)=GKS(I,J,NPL)+H(K,J+1)*CORD(IG,I)
   16       CONTINUE
   15    CONTINUE
         GKSINT=DSQRT(GKS(1,1,NPL)*GKS(1,1,NPL)+
     *              GKS(2,1,NPL)*GKS(2,1,NPL)+GKS(3,1,NPL)*GKS(3,1,NPL))
         DO 98 I=1,3
   98    GKS(I,1,NPL)=GKS(I,1,NPL)/GKSINT
         VN(1,NPL)=GKS(2,1,NPL)*GKS(3,2,NPL)-GKS(2,2,NPL)*GKS(3,1,NPL)
         VN(2,NPL)=GKS(1,2,NPL)*GKS(3,1,NPL)-GKS(1,1,NPL)*GKS(3,2,NPL)
         VN(3,NPL)=GKS(1,1,NPL)*GKS(2,2,NPL)-GKS(1,2,NPL)*GKS(2,1,NPL)
         VNI=DSQRT(VN(1,NPL)*VN(1,NPL)+VN(2,NPL)*VN(2,NPL)+
     *             VN(3,NPL)*VN(3,NPL))
         DO 97 I=1,3
            VN(I,NPL)=VN(I,NPL)/VNI
            IF(DABS(VN(I,NPL)).LT.1.D-6) VN(I,NPL)=0.D0
   97    CONTINUE
C  
C        UGAO BB0 PROJEKCIONOG PRAVCA U ODNOSU NA R-OSU U PRVOM CVORU
C
         BB0=0.D0
         IF(NPUT.EQ.2.AND.IBB0.EQ.1)THEN
C...        AN = (GT X AN0) X GT
            CALL AXBV( VN, CPP, POM)
            CALL AXBV( POM, VN, AN)
C...        COS(BB0)= (GR . AN)/ <GR>/<AN>
            GRAN=0.D0
            GRN =0.D0
            ANN =0.D0
            DO 220 L=1,3
               GRAN=GRAN+GKS(L,1,1)*AN(L)
               GRN =GRN+GKS(L,1,1)*GKS(L,1,1)
  220       ANN =ANN+AN(L)*AN(L)
            COB=DABS(GRAN/DSQRT(GRN*ANN))
            IF(COB.LT.1.D0) BB0=DACOS(COB)
C...        PROVERA ZA ZNAK BB0   (GR X AN).VN < 0.  ONDA  JE  BB0 < 0. 
            CALL AXBV( GKS, AN, POM)
            PP=POM(1)*VN(1,1)+POM(2)*VN(2,1)+POM(3)*VN(3,1)
            IF(PP.LT.0.D0) BB0=-BB0
         ENDIF
         GOTO 10
C
CS       JAKOBIJAN U GAUSOVOJ TACKI
CE       JACOBIAN MATRIX
C
   14    CALL CLEAR(XJ,9)
C         WRITE(3,*) 'R,S,T',R,S,T
         DO 19 I=1,3
         DO 19 J=1,NCVE
            IG=NOP(NLM,J)
            IF(IG.EQ.0) GO TO 19
            XJ(1,I)=XJ(1,I)+H(J,2)*(CORD(IG,I)+T*GM(I,J))
            XJ(2,I)=XJ(2,I)+H(J,3)*(CORD(IG,I)+T*GM(I,J))
            XJ(3,I)=XJ(3,I)+H(J,1)*GM(I,J)
C           WRITE(3,*) 'IG,I,CORD',IG,I,CORD(IG,I)
   19    CONTINUE
         IF(NORMT.EQ.1) THEN
            XJ(3,1)=XJ(1,2)*XJ(2,3)-XJ(1,3)*XJ(2,2)
            XJ(3,2)=XJ(1,3)*XJ(2,1)-XJ(1,1)*XJ(2,3)
            XJ(3,3)=XJ(1,1)*XJ(2,2)-XJ(1,2)*XJ(2,1)
            RETURN
         ENDIF
C         CALL WRR(H,27,'H   ')
C         CALL WRR(GM,12,'GM  ')
C         CALL WRR(XJ,9,'XJ  ')
C
CS       DETERMINANTA GRADIJENTA DEFORMACIJE
CE       DETERMINANT DEFORMATION GRADIENT
C
         CALL DETER3(XJ,DET)
         IF(DET.GT.1.D-10) GOTO 10
      NDEB=1
      IF(IATYP.GT.3) THEN
         NDEB=4
         IF(IPODT.EQ.1.OR.IPODT.EQ.3) NDEB=3
      ENDIF
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NGE,NLM,R,S,T,DET,(DEB(NLM,I),I=1,NDEB)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NGE,NLM,R,S,T,DET,(DEB(NLM,I),I=1,NDEB)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2001)(NOP(NLM,J),(CORD(NOP(NLM,J),I),I=1,3),
     1                             (GM(I,J),I=1,3),J=1,NCVE)     
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6001)(NOP(NLM,J),(CORD(NOP(NLM,J),I),I=1,3),
     1                             (GM(I,J),I=1,3),J=1,NCVE)     
C         DET=-DET
        STOP
   10 CONTINUE
      RETURN
C
C-----------------------------------------------------------------------
 2000 FORMAT(/' ','U GRUPI ELEMENATA BR. ',I5/
     1        ' ','ZA ELEMENT BR. ',I5/' ','GAUSOVA TACKA CIJE SU VREDNO
     1STI R, S, T  = ',3F10.4/5X,'DETERMINANTA JAKOBIJANA MANJA ILI JEDN
     2AKA NULI, DET = ',1PD10.3/5X,'DEBLJINA DEB(NLM)=',4(1PD10.3))
 2001 FORMAT(
     1' CVOR,           KOORDINATE,                    VEKTORI NORMALE'/
     1       (I5,3(2X,1PD10.3),3(2X,1PD10.3)))
C-----------------------------------------------------------------------
 6000 FORMAT(/' ','ELEMENT GROUP NUM. ',I5/
     1        ' ','ELEMENT NUM. ',I5/' ','GAUSS POINT R, S, T  = ',
     1       3F10.4/5X,'ZERO OR NEGATIVE JACOBIAN DETERMINANTE,',
     2      ' DET = ',1PD10.3/5X,'THICKNESS DEB(NLM)=',4(1PD10.3))
 6001 FORMAT(
     1' NODES,          COORDINATES,                    NORMAL VECTORS'/
     1       (I5,3(2X,1PD10.3),3(2X,1PD10.3)))
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE JACGA8(NEL,CORD,TECV,T,CORGT,TGT,IND)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     TEMPERATURA I KOORDINATE GAUSOVE TACKE
CE     TEMPHERATURE AND GLOBAL COORDINATES OF GAUSS POINT
C
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /IZLE4B/ H(9,3),GM(3,9),BLT(6,54),BE(9,54),ETP(6,6),UEL(54)
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
C
      DIMENSION NEL(NE,*),CORD(NP,*),TECV(*),CORGT(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' JACGA8'
C
      IF(IND.EQ.0) THEN
         TGT=0.D0
         DO 70 I=1,NCVE
            IC=NEL(NLM,I)
            IF(IC.EQ.0) GO TO 70
            TGT=TGT+H(I,1)*TECV(IC)
   70    CONTINUE
      ELSE
         X1=0.D0
         X2=0.D0
         X3=0.D0
         DO 80 I=1,NCVE
            IC=NEL(NLM,I)
            IF(IC.EQ.0) GO TO 80
            X1=X1+H(I,1)*(CORD(IC,1)+T*GM(1,I))
            X2=X2+H(I,1)*(CORD(IC,2)+T*GM(2,I))
            X3=X3+H(I,1)*(CORD(IC,3)+T*GM(3,I))
   80    CONTINUE
         CORGT(1)=X1
         CORGT(2)=X2
         CORGT(3)=X3
      ENDIF
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE MEL81(FUN,COEFE,ETP,IOPT,DH)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICE ELAST
CE     ELAST MATRIX
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /MATIZO/ E,V
      COMMON /PODTIP/ IPODT
      COMMON /INDCEL/ IND3D
      COMMON /IKOVAR/ INDKOV
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
C
      DIMENSION FUN(2,*),ETP(6,*),COEFE(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' MEL81 '
C
      E=FUN(1,MAT)
      V=FUN(2,MAT)
C
      IF(IOPT.EQ.0) THEN
        DO 12 I=1,6
        DO 12 J=1,6
   12   ELAST(I,J)=0.D0
        ELAST(1,1)=E/(1.D0-V*V)
        ELAST(2,2)=ELAST(1,1)
        ELAST(5,5)=ELAST(1,1)*0.5D0*(1.D0-V)
        ELAST(6,6)=ELAST(5,5)
      RETURN
      ENDIF
C
      DO 13 I=1,6
      DO 13 J=1,6
   13 ETP(I,J)=0.D0
C
C     MATRICA ELASTICNOSTI ZA PLOCU
C
      IF(IPODT.EQ.5) THEN
         EA=E/2./(1.D0+V)
         E1=DH*DH/6./(1.D0-V)
         ETP(1,1)=EA*E1
         ETP(2,2)=ETP(1,1)
         ETP(2,1)=ETP(1,1)*V
         ETP(1,2)=ETP(2,1)
         ETP(4,4)=EA*DH*DH/12.
         ETP(5,5)=COEFE(1)*EA
         ETP(6,6)=COEFE(2)*EA
         RETURN
      ENDIF
C
C     MATRICA ELASTICNOSTI ZA LJUSKU
C
      EA=E/(1.D0-V*V)
      E1=0.5D0*(1.D0-V)
      ETP(4,4)=EA*E1
      IF(IND3D.NE.2) THEN
         ETP(1,1)=EA
         ETP(2,2)=EA
         ETP(2,1)=EA*V
         ETP(1,2)=ETP(2,1)
      ENDIF
      IF(IND3D.EQ.0) THEN
C        IF(INDKOV.LT.0) THEN
C           ETP(5,5)=ETP(4,4)
C           ETP(6,6)=ETP(4,4)
C        ELSE
            IF(NMODM.LE.4)THEN
              ETP(5,5)=COEFE(1)*ETP(4,4)
              ETP(6,6)=COEFE(2)*ETP(4,4)
            ELSE
              ETP(5,5)=ETP(4,4)
              ETP(6,6)=ETP(4,4)
            ENDIF
C        ENDIF
      ENDIF
C ZA MODELIRANJE RAVNOG STANJA DEFORMACIJE
C      CALL MEL3EL(ETP,E,V)
      RETURN
      END
C======================================================================
      SUBROUTINE MEL82(FUN,COEFE,ETP,TBETA,BETA,IOPT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICE ELAST
CE     ELAST MATRIX
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
C
      DIMENSION FUN(9,*),COEFE(*),ETP(6,*),TBETA(6,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' MEL82 '
C
      EX=FUN(1,MAT)
      EY=FUN(2,MAT)
      EZ=FUN(3,MAT)
      VXY=FUN(4,MAT)
      VYZ=FUN(5,MAT)
      VZX=FUN(6,MAT)
      GXY=FUN(7,MAT)
      GYZ=FUN(8,MAT)
      GZX=FUN(9,MAT)
C
      IF(IOPT.EQ.0) THEN
        POM=EX-EY*VXY*VXY
        ELAST(1,1)=EX*EX/POM
        ELAST(2,2)=EX*EY/POM
        ELAST(5,5)=GYZ
        ELAST(6,6)=GZX
      RETURN
      ENDIF
C
      DO 15 I=1,6
      DO 15 J=I,6
   15 ELAST(I,J)=0.D0
C 
      POM=EX-EY*VXY*VXY
      ELAST(1,1)=EX*EX/POM
      ELAST(2,2)=EX*EY/POM
      ELAST(1,2)=EX*EY*VXY/POM
      ELAST(4,4)=GXY
      ELAST(5,5)=COEFE(1)*GYZ
      ELAST(6,6)=COEFE(2)*GZX
      DO 50 I=1,6
      DO 50 J=I,6
   50 ELAST(J,I)=ELAST(I,J)
C
      IF(DABS(BETA).GT.1.D-6) THEN
        CALL TRAETP(ELAST,ETP,TBETA)
      ELSE
        CALL JEDNA1(ETP,ELAST,36)
      ENDIF
      RETURN
      END
C======================================================================
      SUBROUTINE MEL83(FUN,NTA,TEM,MATE,TGT,COEFE,ETP,IOPT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICE ELAST
CE     ELAST MATRIX
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /MATIZO/ E,V
      COMMON /SRPSKI/ ISRPS
C
      DIMENSION FUN(2,MATE*3,*),NTA(*),TEM(*),ETP(6,*),COEFE(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' MEL83 '
C
C     E , V , ALFA
C
      DO 6 J=1,3
      NFE=(MAT-1)*3+J
      CALL TABF(FUN,NTA,NFE,MATE*3,TGT,EVA,NTMX,IND)
      IF(IND.GT.0) GO TO 120
      IF(J.EQ.1) E=EVA
      IF(J.EQ.2) V=EVA
    6 CONTINUE
C
      IF(IOPT.EQ.0) THEN
        ELAST(1,1)=E/(1.D0-V*V)
        ELAST(2,2)=ELAST(1,1)
        ELAST(5,5)=ELAST(1,1)*0.5D0*(1.D0-V)
        ELAST(6,6)=ELAST(5,5)
      RETURN
      ENDIF
C
      DO 7 I=1,3
    7 ALFA(I)=EVA
      ALFA(4)=0.D0
      ALFA(5)=0.D0
      ALFA(6)=0.D0
      TEMP0=TEM(MAT)
C
      DO 13 I=1,6
      DO 13 J=1,6
   13 ETP(I,J)=0.D0
C
      EA=E/(1.D0-V*V)
      E1=0.5D0*(1.D0-V)
      ETP(1,1)=EA
      ETP(2,2)=EA
      ETP(2,1)=EA*V
      ETP(1,2)=ETP(2,1)
      ETP(4,4)=EA*E1
      ETP(5,5)=COEFE(1)*ETP(4,4)
      ETP(6,6)=COEFE(2)*ETP(4,4)
      RETURN
  120 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NFE,TGT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NFE,TGT
      STOP
C-----------------------------------------------------------------------
 2000 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE U MEL83'/
     1' TEMPERATURSKA FUNKCIJA BROJ =',I5/
     2' ARGUMENT TEMPERATURA =',1PD12.4)
 6000 FORMAT(///' ARGUMENT IS OUT OF RANGE'/
     1' TEMPERATURE FUNCTION  =',I5/
     2' ARGUMENT TEMPERATURE  =',1PD12.4)
C-----------------------------------------------------------------------
      END
C======================================================================
      SUBROUTINE MEL84(FUN,NTA,TEM,MATE,TGT,COEFE,ETP,TBETA,BETA,IOPT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICE ELAST
CE     ELAST MATRIX
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
      COMMON /SRPSKI/ ISRPS
C
      DIMENSION FUN(2,MATE*12,*),NTA(*),TEM(*),COEFE(*),ALF(6),
     1          ETP(6,*),TBETA(6,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' MEL84 '
C
C     E , V , ALFA
C
      DO 6 J=1,12
      NFE=(MAT-1)*12+J
      CALL TABF(FUN,NTA,NFE,MATE*12,TGT,EVA,NTMX,IND)
      IF(IND.GT.0) GO TO 120
      IF(J.EQ.1) EX=EVA
      IF(J.EQ.2) EY=EVA
      IF(J.EQ.3) EZ=EVA
      IF(J.EQ.4) VXY=EVA
      IF(J.EQ.5) VYZ=EVA
      IF(J.EQ.6) VZX=EVA
      IF(J.EQ.7) GXY=EVA
      IF(J.EQ.8) GYZ=EVA
      IF(J.EQ.9) GZX=EVA
      IF(J.EQ.10) ALFA(1)=EVA
      IF(J.EQ.11) ALFA(2)=EVA
      IF(J.EQ.12) ALFA(3)=EVA
    6 CONTINUE
      ALFA(4)=0.D0
      ALFA(5)=0.D0
      ALFA(6)=0.D0
C
      IF(IOPT.EQ.0) THEN
        POM=EX-EY*VXY*VXY
        ELAST(1,1)=EX*EX/POM
        ELAST(2,2)=EX*EY/POM
        ELAST(5,5)=GYZ
        ELAST(6,6)=GZX
      RETURN
      ENDIF
C
      TEMP0=TEM(MAT)
C
      CALL CLEAR(ELAST,36)
C
      POM=EX-EY*VXY*VXY
      ELAST(1,1)=EX*EX/POM
      ELAST(2,2)=EX*EY/POM
      ELAST(1,2)=EX*EY*VXY/POM
      ELAST(4,4)=GXY
      ELAST(5,5)=COEFE(1)*GYZ
      ELAST(6,6)=COEFE(2)*GZX
      DO 50 I=1,6
      DO 50 J=I,6
   50 ELAST(J,I)=ELAST(I,J)
CS.... TRANSFORMACIJA MATRICE  ELAST()
CE     TRANSFORM ELAST MATRIX
      IF(DABS(BETA).GT.1.D-6) THEN
        CALL TRAETP(ELAST,ETP,TBETA)
C       TRANSFORMACIJA SA MATERIJANLOG NA LOKALNI DEKARTOV
        CALL STBETS(ELAST,BETA)
        CALL CLEAR(ALF,6)
        CALL MNOZI2(ALF,ELAST,ALFA,6,6)
        CALL JEDNA1(ALFA,ALF,6)
      ELSE
        CALL JEDNA1(ETP,ELAST,36)
      ENDIF
      RETURN
  120 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NFE,TGT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NFE,TGT
      STOP
C-----------------------------------------------------------------------
 2000 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE U MEL84'/
     1' TEMPERATURSKA FUNKCIJA BROJ =',I5/
     2' ARGUMENT TEMPERATURA =',1PD12.4)
 6000 FORMAT(///' ARGUMENT IS OUT OF RANGE'/
     1' TEMPERATURE FUNCTION  =',I5/
     2' ARGUMENT TEMPERATURE  =',1PD12.4)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE SMICC(DSLOJ,MATSL,COEFE,TGT,MST,NNSL,
     1                 NMODM,LFUN,LNTA,LTEM,MATE)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS         KOREKCIONI KOEFICIJENTI ZA SMICANJE  U SLUCAJU 
CS         LAMINATA     ( PREMA   D.R.J.OWEN )
CE         SHEAR CORRECTION FACTORS
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /COEFSM/ COEF(3),ICOEF
C
      DIMENSION RFACT(2),TRLOW(2),UPTER(2),GBARF(2),DSLOJ(MSLOJ,*),
     1          COEFE(*),ZETA1(2),ZETA2(2),DINDX(2),MATSL(MSLOJ,*),
     2          GINDX(2),DIFF2(2),DIFF3(2),SUMLA(2),DIFF5(2)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' SMICC '
C
CS....  KADA SU MATERIJALI ISTI U SVIM SLOJEVIMA PRORACUN NIJE POTREBAN
CE....  ALL MATERIALS ARE THE SAME
C
      KOUNT=0
      COEFE(1)=COEF(1)
      COEFE(2)=COEF(2)
      COEFE(3)=COEF(3)
      DO 50 I=2,NNSL
   50 IF(MATSL(I,MST).NE.MATSL(I-1,MST))KOUNT=KOUNT+1
      IF(KOUNT.EQ.0)RETURN
C
CS....  INICIJALIZACIJA
CE....  INITIALISE
C
      DUM = 0.D0
      DO 10 I= 1,2
      SUMLA(I)=DUM
      RFACT(I)=DUM
      GBARF(I)=DUM
      UPTER(I)=DUM
      TRLOW(I)=DUM
      COEFE(I)=DUM
   10 CONTINUE
C
CS....  POLOZAJ NEUTRALNIH OSA
CE....  POSITION OF THE NEUTRAL AXSIS
C
      DSUMM =0.D0
      DO 150 MSL = 1,NNSL
      MAT =MATSL(MSL,MST)
C
C
         GO TO (  1,  2,  3,  4,999,999,999,999,999,999,
     1          999,999,999,999,999,999,999,999,999,999,
     1          999,999,999,999,999,999,999,999,999,999),NMODM
    1 CALL MEL81(A(LFUN),DUM,DUM,0,DUM)
      GO TO 999
    2 CALL MEL82(A(LFUN),DUM,DUM,DUM,DUM,0)
      GO TO 999
    3 CALL MEL83(A(LFUN),A(LNTA),A(LTEM),MATE,TGT,DUM,DUM,0)
      GO TO 999
    4 CALL MEL84(A(LFUN),A(LNTA),A(LTEM),MATE,TGT,DUM,DUM,DUM,DUM,0)
      GO TO 999
  999 CONTINUE
C
C 
      DZETA = DSLOJ(MSL,MST)
      ZHEIG = DSUMM+DZETA/2.D0
      DO 140 I = 1,2
      DINDX(I) = ELAST(I,I)
      UPTER(I) = UPTER(I)+DINDX(I)*ZHEIG*DZETA
  140 TRLOW(I) = TRLOW(I)+DINDX(I)*DZETA
  150 DSUMM = DSUMM+DZETA
      DO 160 I = 1,2
  160 ZETA2(I) = -UPTER(I)/TRLOW(I)
C
CS....  KOREKCIONI FAKTORI
CE....  CORRECTION FACTORS
C
      DO 200 MSL = 1,NNSL
      MAT =MATSL(MSL,MST)
C
C
         GO TO ( 21, 22, 23, 24,102,102,102,102,102,102,
     1          102,102,102,102,102,102,102,102,102,102,
     1          102,102,102,102,102,102,102,102,102,102),NMODM
   21 CALL MEL81(A(LFUN),DUM,DUM,0,DUM)
      GO TO 102
   22 CALL MEL82(A(LFUN),DUM,DUM,DUM,DUM,0)
      GO TO 102
   23 CALL MEL83(A(LFUN),A(LNTA),A(LTEM),MATE,TGT,DUM,DUM,0)
      GO TO 102
   24 CALL MEL84(A(LFUN),A(LNTA),A(LTEM),MATE,TGT,DUM,DUM,DUM,DUM,0)
      GO TO 102
  102 CONTINUE
C
C 
      DIFF1 = DSLOJ(MSL,MST)
      INDEX = 5
      DO 200 I = 1,2
      ZETA1(I) = ZETA2(I)
      ZETA2(I) = ZETA1(I)+DIFF1
      DIFF2(I) = ZETA2(I)**2-ZETA1(I)**2
      DIFF3(I) = ZETA2(I)**3-ZETA1(I)**3
      DIFF5(I) = ZETA2(I)**5-ZETA1(I)**5
C
      DINDX(I) = ELAST(I,I)
      GINDX(I) = ELAST(INDEX,INDEX)
C
      RFACT(I) = RFACT(I)+DINDX(I)*DIFF3(I)/3.D0
      GBARF(I) = GBARF(I)+GINDX(I)*DIFF1/2.D0
      TERM1 = SUMLA(I)*SUMLA(I)*DIFF1
      TERM2 = DINDX(I)*(ZETA1(I)**4)*DIFF1/4.D0
      TERM3 = DINDX(I)*DIFF5(I)/20.D0
      TERM4 =-DINDX(I)*ZETA1(I)*ZETA1(I)*DIFF3(I)/6.D0
      TERM5 = SUMLA(I)*ZETA1(I)*ZETA1(I)*DIFF1
      TERM6 =-SUMLA(I)*DIFF3(I)/3.D0
      COEFE(I) = COEFE(I)+(TERM1+DINDX(I)*(TERM2+
     1           TERM3+TERM4+TERM5+TERM6))/GINDX(I)
      INDEX = INDEX+1
      SUMLA(I) = SUMLA(I)-DINDX(I)*DIFF2(I)/2.D0
  200 CONTINUE
C
      DO 300 I= 1,2
  300 COEFE(I) = RFACT(I)*RFACT(I)/(2.D0*GBARF(I)*COEFE(I))
C
      RETURN
      END
C=======================================================================
      SUBROUTINE TRAV(V1,V2,V3,T)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C...  TRANSFORMACIJA ZA LOKALNI SISTEM CVORA
      DIMENSION V1(*),V2(*),V3(*),T(3,*),P(3,3),P1(3,3)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' TRAV  '
      DO 10 I=1,3
       P(1,I)=V1(I)
       P(2,I)=V2(I)
       P(3,I)=V3(I)
   10 CONTINUE
      DO 30 I=1,3
       DO 20 J=1,3
        P1(I,J)=0.D0
        DO 15 K=1,3
   15   P1(I,J)=P1(I,J)+T(I,K)*P(K,J)
   20  CONTINUE
   30 CONTINUE
      DO 40 I=1,3
       V1(I)=P1(1,I)
       V2(I)=P1(2,I)
       V3(I)=P1(3,I)
   40 CONTINUE
      RETURN
      END
C=======================================================================
      SUBROUTINE TRAB(B,ICD,MTR,TTR,NCVE)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C...  TRANSFORMACIJA MATRICE   B   ZA LOKALNI SISTEM CVORA
      DIMENSION B(ICD,*),MTR(*),TTR(3,3,*),P(9,3)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' TRAB  '
      KB0=NCVE*3-3
      DO 50 N=1,NCVE
      KB0=KB0+3
      IF(MTR(N).EQ.1)THEN
       DO 20 I=1,ICD
       DO 20 J=1,3
        P(I,J)=0.D0
        KB=KB0
        DO 10 K=1,3
        KB=KB+1
   10   P(I,J)=P(I,J)+B(I,KB)*TTR(K,J,N)
   20  CONTINUE
       DO 30 I=1,ICD
       JB=KB0
       DO 30 J=1,3
       JB=JB+1
   30  B(I,JB)=P(I,J)
      ENDIF
   50 CONTINUE
      RETURN
      END
C=======================================================================
      SUBROUTINE STANLH(H)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS    REDOSLED CVOROVA KAO KOD STANLEYA  IPODT.EQ.2
C       
      DIMENSION H(9,*),HC(9)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' STANLH'
C
      DO 10 I=1,3
         DO 20 J=1,9
            HC(J)=H(J,I)
   20    CONTINUE
         H(1,I)=HC(3)
         H(2,I)=HC(7)
         H(3,I)=HC(4)
         H(4,I)=HC(6)
         H(5,I)=HC(9)
         H(6,I)=HC(8)
         H(7,I)=HC(2)
         H(8,I)=HC(5)
         H(9,I)=HC(1)
   10 CONTINUE
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE GRGSGT(CO,GN,X,H,T,NCVE)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO CALCULATE DERIVATION CARTESIAN BY NATURAL COORDINATES
CE.      COVARIANT BASIS VECTORS - JACOBIAN MATRIX
CS.   P R O G R A M
CS.      ZA RACUNANJE IZVODA DEKARTOVIH PO PRIRODNIM KOORDINATAMA
CS.      KOVARIJANTNI BAZNI VEKTORI - JAKOBIJEVA MATRICA
C .
C ......................................................................
C
      DIMENSION X(3,*),CO(9,*),GN(3,*),H(9,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' GRGSGT'
C
      DO 10 J=1,3
         X(1,J)=0.D0
         X(2,J)=0.D0
         X(3,J)=0.D0
      DO 10 K=1,NCVE
         X(1,J)=X(1,J)+H(K,2)*(CO(K,J)+T*GN(J,K))
         X(2,J)=X(2,J)+H(K,3)*(CO(K,J)+T*GN(J,K))
         X(3,J)=X(3,J)+H(K,1)*GN(J,K)
   10 CONTINUE
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE GRAD0T(XJ,H,CT,C0,GT,G0,T,GRAD,NCVE)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R  O G R A M
CE.      TO CALCULATE DEFORMATION GRADIENT
CE.      INVERSE JACOBIAN - XJ IS FORMED WITH C0 AND G0
CS.   P R O G R A M
CS.      ZA RACUNANJE GRADIJENTA DEFORMACIJE
CS.      INVERZNI JAKOBIJAN - XJ FORMIRAN JE SA C0 I G0
C .
C ......................................................................
C
      DIMENSION XJ(3,*),H(9,*),GRAD(3,*),CT(9,*),C0(9,*),GT(3,*),G0(3,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' GRAD0T'
C
      CALL CLEAR(GRAD,9)
      GRAD(1,1)=1.D0
      GRAD(2,2)=1.D0
      GRAD(3,3)=1.D0
      DO 10 J=1,3
      DO 10 K=1,NCVE
         HKJ=XJ(J,1)*H(K,2)+XJ(J,2)*H(K,3)
      DO 10 I=1,3
         GRAD(I,J)=GRAD(I,J)+HKJ*(CT(K,I)-C0(K,I))
     1                      +(T*HKJ+XJ(J,3)*H(K,1))*(GT(I,K)-G0(I,K))
   10 CONTINUE
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE MAMOL3(STRAIN,TGT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R  O G R A M
CE.      TO SUBTRACT THERMAL STRAIN FROM TOTAL STRAIN
CS.   P R O G R A M
CS.      ZA ODUZIMANJE TERMICKE DEFORMACIJE OD UKUPNE DEFORMACIJE
C .
C ......................................................................
C
      DIMENSION STRAIN(6),ETHERM(3)
C
      CALL STERM3(ETHERM,TGT)
      DO 10 I=1,3
   10   STRAIN(I)=STRAIN(I)-ETHERM(I)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      FUNCTION SREDEB(DEF,N45,NGS12,NE,MXS,NLM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION DEF(N45,NGS12,NE,*)
      SREDEB=0.
      DO 10 J=1,MXS
      DO 10 I=1,NGS12
         SREDEB=SREDEB+DEF(3,I,NLM,J)
   10 CONTINUE
      SREDEB=SREDEB/NGS12/MXS
      RETURN
      END
C=======================================================================
      SUBROUTINE BDRIL8(H,BET)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS    MATRICE BET ZA DRILING
CE    MATRIX BET FOR DRILLING
C
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /CUVAJN/ TAUCEN(6,5),INDSEL,NGAUSU
      COMMON /DRILLI/ EL14(4),EN14(3,4),IDRIL
      COMMON /CDEBUG/ IDEBUG
      DIMENSION H(9,*),BET(6,*)
C
      IF(IDEBUG.GT.0) PRINT *, ' BDRIL8'
C
      JF=12
      DO 40 I=1,4
         JF=JF+3
         M=I+4
         K=MOD(M,4)+1
         L=M-1+4*INT(1/I)
         J=L-4
         HL1=(H(L,2)*XJ(1,1)+H(L,3)*XJ(1,2))/8.
         HL2=(H(L,2)*XJ(2,1)+H(L,3)*XJ(2,2))/8.
         HL3=(H(L,2)*XJ(3,1)+H(L,3)*XJ(3,2))/8.
         HM1=(H(M,2)*XJ(1,1)+H(M,3)*XJ(1,2))/8.
         HM2=(H(M,2)*XJ(2,1)+H(M,3)*XJ(2,2))/8.
         HM3=(H(M,2)*XJ(3,1)+H(M,3)*XJ(3,2))/8.
         IF(INDSEL.EQ.1.AND.NGAUSU.LT.NGS12) GO TO 991
         BET(1,JF)=BET(1,JF)+HL1*EL14(J)*EN14(1,J)-HM1*EL14(I)*EN14(1,I)
         BET(2,JF)=BET(2,JF)+HL2*EL14(J)*EN14(2,J)-HM2*EL14(I)*EN14(2,I)
         BET(3,JF)=BET(3,JF)+HL3*EL14(J)*EN14(3,J)-HM3*EL14(I)*EN14(3,I)
         BET(4,JF)=BET(4,JF)+HL2*EL14(J)*EN14(1,J)-HM2*EL14(I)*EN14(1,I)
     1                      +HL1*EL14(J)*EN14(2,J)-HM1*EL14(I)*EN14(2,I)
  991    IF(INDSEL.EQ.1.AND.NGAUSU.EQ.NGS12) GO TO 40
         BET(5,JF)=BET(5,JF)+HL3*EL14(J)*EN14(2,J)-HM3*EL14(I)*EN14(2,I)
     1                      +HL2*EL14(J)*EN14(3,J)-HM2*EL14(I)*EN14(3,I)
         BET(6,JF)=BET(6,JF)+HL1*EL14(J)*EN14(3,J)-HM1*EL14(I)*EN14(3,I)
     1                      +HL3*EL14(J)*EN14(1,J)-HM3*EL14(I)*EN14(1,I)
   40 CONTINUE
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE MODMA8(DEF,TAU,NMODM,IRAC,LPLAS,LPLA1,TGT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      DIMENSION TAU(*),DEF(*)
C     PODPROGRAM ZA POZIVANJE PODPROGRAMA INTEGRACIJU KONSTITUTIVNIH
C     RELACIJA
C
      GO TO (   999,999,999,999,  5,  6,999,999,999, 10,
     1          999,999,999, 14, 15, 16, 17, 18, 19, 20,
     2           21,999,999,999,999,999,999,999,999,999,
     3          999, 32, 33, 34,999,999,999,999,999,999,
     4          999,999,999,999,999,999,999,999,999,999,
     5          999,999,999,999,999,999,999,999,999,999,
     6           61,999,999,999,999,999,999,999,999,999,
     7          999,999,999,999,999,999,999,999,999,999,
     8          999,999,999,999,999,999,999,999,999,999,
     9          999,999,999,999,999,999,999,999,999,999),NMODM
C
    5 CALL D8M5 (TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
    6 CALL D8M6 (TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   10 CALL D8M10(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   14 CALL D8M14(TAU,DEF,TGT,IRAC,LPLAS,LPLA1)
      RETURN
   15 CALL D8M15(TAU,DEF,TGT,IRAC,LPLAS,LPLA1)
      RETURN
   16 CALL D8M16(TAU,DEF,TGT,IRAC,LPLAS,LPLA1)
      RETURN
   17 CALL D8M17(TAU,DEF,TGT,IRAC,LPLAS,LPLA1)
      RETURN
   18 CALL D8M18(TAU,DEF,TGT,IRAC,LPLAS,LPLA1)
      RETURN
   19 CALL D8M19(TAU,DEF,TGT,IRAC,LPLAS,LPLA1)
      RETURN
   20 CALL D8M20(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   21 CALL D8M21(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   32 CALL D8M32(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   33 CALL D8M33(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
   34 CALL D8M34(TAU,DEF,IRAC,LPLAS,LPLA1)
      RETURN
C     Isotropic Damage Model (Oliver 1996)
   61 CALL D8M61(TAU,DEF,IRAC,LPLAS,LPLA1)
  999 RETURN
      END

