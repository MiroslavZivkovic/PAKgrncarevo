C======================================================================
C PAK43
C
C  RACUNANJE NAPONA
C   SUBROUTINE DETAU
C              MODIG
C              IGM5
C              PLAST5
C              TEQBS
C              PRILAM
C              KONSTE
C=======================================================================
      SUBROUTINE DETAU(BL,FUG,UKUM,TAU,STRESS,LM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/ELKG/DET,WTU,R,S,T,NLM,JNGS,NCV,ND,PI2,SS,GR(3),GS(3)
     1,XJ(3,3),AK(40),BK(40),DLS(40),DLT(40),VS(40,3),VT(40,3),V1(40,3)
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /ITERBR/ ITER
C     COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /IGRGLA/ NGRU,NGSU,NGTU,NGS,NTE,NUD,IANAL,JTAU,NWE,NT6,INEL
     *,MATG
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /IGMAT / EM(3,3),IBTC,LNAP1,LPLAS,LPLA1
      COMMON /DUPLAP/ IDVA
C*N      COMMON/STAMP /KONVER
      DIMENSION BL(3,*),FUG(*),UKUM(*),LM(NT6,*),DEF(3),TAU(*),STRESS(3)
C   ***********
C        RACUNANJE NAPONA
C********
C IZJEDNACAVANJE SA NULOM POCETNIH NAPONA
C     IF(KOR.GT.1.OR.ITER.GT.0) GO TO 20
C     DO 21 J=1,JTAU
C 21  TAU(NLM,JNGS,J)=0.
C     IF(KOR.GT.1.OR.ITER.GT.0) GO TO 20
C     DO 2111 J=1,3
C2111 DTA(J)=0.
C
C  SMESTITI BLSA I BLTA U RADNI VEKTOR AE
C
      ND3=3*NCV
      IF(NLM.GT.1.OR.JNGS.GT.1)GO TO 283
C     PROIZVOD BL*DU
  283 CONTINUE
C 283 IRAC=2
      IF(JNGS.EQ.1) IBTC=0
C
C UKUPNA DEFORMACIJA
C
      DO 3 I=1,3
      DEF(I)=0.
      DO 3 J=1,ND
      IF(LM(J,NLM).EQ.0) GO TO 3
      KK=LM(J,NLM)
      IF(NLM.GT.1) GO TO 311
  311 DEF(I)=DEF(I)+BL(I,J)*UKUM(KK)
    3 CONTINUE
      IBTC=IBTC+1
      GO TO (161,161,161,161,165,161,161,161),NMODM
  161 LNAP1=LSIGMA+(NLM-1)*NGS*JTAU*IDVA + (IBTC-1)*JTAU*IDVA
C     CALL IGM1(FUG,LM,DEF,STRESS)
      GO TO  400
C 165 IBTC=IBTC+1
  165 LPLAS=LPLAST+(NLM-1)*NGS*(JTAU+10)*IDVA
     *            +(IBTC-1)*(JTAU+10)*IDVA
      LPLA1=LPLAS1+(NLM-1)*NGS*(JTAU+10)*IDVA
     *            +(IBTC-1)*(JTAU+10)*IDVA
C     LPLAS=LPLAST+(NLM-1)*NGS*(JTAU+10)
C    *            +(IBTC-1)*(JTAU+10)
C     LPLA1=LPLAS1+(NLM-1)*NGS*(JTAU+10)
C    *            +(IBTC-1)*(JTAU+10)
      IRAC=1
  400 CALL MODIG (DEF,STRESS,NMODM)
      RETURN
      END
      SUBROUTINE MODIG(DEF,STRESS,NMODM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
C
      COMMON /IGREP/  LIGNOP,LIGNDS,LIGDST,LIGCTR,MXAUG,LMXAUG,LAG,MAXAE
     *               ,LICTRP,LIGX  ,LIGY  ,LIGZ,LAE,LLM,LIGMAT
C
C  POTPROGRAM ZA ODEREDJIVANJE REPERA ZA RACUNANJE NAPONA
C
      GO TO (10, 1, 1, 1,50, 1, 1),NMODM
C
   10 CALL IGM1(DEF,STRESS)
      RETURN
   50 CALL IGM5(DEF,STRESS)
      RETURN
    1 WRITE(3,999)
  999 FORMAT(//' ','UGRADJENI SU SAMO MODELI MATERIJALA 1 I 5')
      STOP
      END
      SUBROUTINE IGM1(DEF,STRESS)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      include 'paka.inc'
      
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /IGREP/  LIGNOP,LIGNDS,LIGDST,LIGCTR,MXAUG,LMXAUG,LAG,MAXAE
     *               ,LICTRP,LIGX  ,LIGY  ,LIGZ,LAE,LLM,LIGMAT
      COMMON /DUPLAP/ IDVA
      COMMON /IGRGLA/ NGRU,NGSU,NGTU,NGS,NTE,NUD,IANAL,JTAU,NWE,NT6,INEL
     *,MATG
      COMMON /IGMAT / EM(3,3),IBTC,LNAP1,LPLAS,LPLA1
      DIMENSION DEF(3),STRESS(3)
C
      LNAPP=LNAP1
C
      CALL NAPON1(A(LNAPP),A(LRTDT),A(LLM),DEF,STRESS)
C
      RETURN
      END
      SUBROUTINE NAPON1(TAU,FUG,LM,DEF,STRESS)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /IGMAT / EM(3,3),IBTC,LNAP1,LPLAS,LPLA1
      COMMON /DUPLAP/ IDVA
      COMMON /IGRGLA/ NGRU,NGSU,NGTU,NGS,NTE,NUD,IANAL,JTAU,NWE,NT6,INEL
     *,MATG
      COMMON/ELKG/DET,WTU,R,S,T,NLM,JNGS,NCV,ND,PI2,SS,GR(3),GS(3)
     1,XJ(3,3),AK(40),BK(40),DLS(40),DLT(40),VS(40,3),VT(40,3),V1(40,3)
      DIMENSION FUG(JEDN),DEF(3),EPS(3),EPT(3),LM(NT6),SG(3),DT(3)
      DIMENSION TAU(8),STRESS(3)
C
C  RACUNANJE NAPONA PRI ELASTICNOJ ANALIZI - MODEL MATERIJALA NMODM=1
C OVDE TAU(8) ZBOG ANALITICKE INTEGRACIJE
      DO 6 I=1,3
      DDT=0.
      DO 7 J=1,3
    7 DDT=DDT+EM(I,J)*DEF(J)
C     IF(IANAL.EQ.1) GO TO 677
C     TAU(I)=DDT
C     GO TO 6
C 677 STRESS(I)=DDT
      STRESS(I)=DDT
    6 CONTINUE
C
C     IF(KONVER.NE.1) GO TO 100
      DO 290 I=1,3
  290 TAU(I)=STRESS(I)
      IF(IANAL.EQ.0) RETURN
C     DO 8 I=1,3
C     DL(I)=0.
C     DO 9 J=1,6
C   9 DL(I)=DL(I)+TSG(J,I)*SPRI(J)
C   8 CONTINUE
      TAU(1)=TAU(1)+STRESS(1)
      TAU(2)=TAU(2)+1.5*STRESS(2)
      TAU(3)=TAU(3)+1.5*STRESS(3)
C     TAU1(NLM,JNGS,2)=TAU(NLM,JNGS,2)+.5*DL(2)
C     TAU1(NLM,JNGS,3)=TAU(NLM,JNGS,3)+.5*DL(3)
C
C  NAPONI U TACKAMA NA IVICI PRI ANAL. INTEGRACIJI
C
      DO 31 I=1,3
      EPS(I)=0.
      EPT(I)=0.
      KK=-3
      KK1=-3
      DO 31 N=1,NCV
      KK1=KK1+6
      KK =KK +3
      DO 31 J=1,3
      K =LM(KK1+J)
      KJ=KK+J
      IF(K.EQ.0) GO TO 31
C**** POD KOMENTAROM ZBOG NEDEFINISANOG BLSA I BLTA
C**** EPS(I)=EPS(I)+BLSA(I,KJ)*FUG(K)
C**** EPT(I)=EPT(I)+BLTA(I,KJ)*FUG(K)
   31 CONTINUE
C
      DO 32 I=1,3
      SG(I)=0.
      DT(I)=0.
      DO 32 J=1,3
      SG(I)=SG(I)+EM(I,J)*EPS(J)
   32 DT(I)=DT(I)+EM(I,J)*EPT(J)
C
C   NAPONI U LOKALNOM SISTEMU U TACKAMA (S=1,T=0),(S=0,T=1)
C
C     DO 33 I=1,3
C     DSIGS(I)=DL(I)
C     DSIGT(I)=DL(I)
C     DO 33 J=1,6
C     DSIGS(I)=DSIGS(I)+TSG(J,I)*SG(J)
C  33 DSIGT(I)=DSIGT(I)+TSG(J,I)*DT(J)
      TAU(4)=TAU(4)+SG(1)
      TAU(5)=TAU(5)+SG(3)
      TAU(6)=TAU(6)+DT(1)
      TAU(7)=TAU(7)+DT(2)
      RETURN
      END
      SUBROUTINE IGM5(DEF,STRESS)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C  POTPROGRAM ZA ODREDJIVANJE REPERA VELICINA KOJE SE CUVAJU
C  NA NIVOU INTEGRACIONE TACKE
C
      include 'paka.inc'
      
C
      COMMON /IGRGLA/ NGRU,NGSU,NGTU,NGS,NTE,NUD,IANAL,JTAU,NWE,NT6,INEL
     *,MATG
C
      COMMON /IGMAT / EM(3,3),IBTC,LNAP1,LPLAS,LPLA1
C
      COMMON /REPERM/ MREPER(4)
C
      COMMON /DUPLAP/ IDVA
C
      DIMENSION STRESS(3),DEF(3)
C
      LFUN=MREPER(1)
      LNTA=MREPER(2)
      MATE=MREPER(3)
      LTAU =LPLAS
      LDEFT = LTAU  + JTAU*IDVA
      LDEFPT= LDEFT + 3*IDVA
      LTEQT = LDEFPT+ 3*IDVA
      LTEQYT= LTEQT + 1*IDVA
      LDQPT = LTEQYT+ 1*IDVA
      LIPL  = LDQPT + 1*IDVA
C
      LTAU1=LPLA1
      LDEFT1= LTAU1 + JTAU*IDVA
      LDEFP1= LDEFT1+ 3*IDVA
      LTEQT1= LDEFP1+ 3*IDVA
      LTEQY1= LTEQT1+ 1*IDVA
      LDQPT1= LTEQY1+ 1*IDVA
      LIPL1 = LDQPT1+ 1*IDVA
C
      IRAC=1
      CALL PLAST5(A(LIPL),A(LTAU),A(LDEFPT),A(LTEQT),
     *            A(LTEQYT),A(LDQPT),A(LIPL1),A(LTAU1),A(LDEFT1),
     *            A(LDEFP1),A(LTEQT1),A(LTEQY1),A(LDQPT1),A(LFUN),
     *            STRESS,DEF,IRAC)
      RETURN
      END
      SUBROUTINE PLAST5( PL,TAUT,DEFPT,TEQT,TEQYT,DEFQPT,
     1           PL1,TAU1,DEF1,DEFP,TEQ,TEQY,DEFQP,FUN,
     1           TAU,DEF,IRAC)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PODPROGRAM ZA INTEGRACIJU KONSTITUTIVNIH RELACIJA ZA ELASTOPLASTIC
C     ELASTOPLASTICAN MATERIJAL SA IZOTROPNIM OJACANJEM
C
      COMMON /IGRGLA/ NGRU,NGSU,NGTU,NGS,NTE,NUD,IANAL,JTAU,NWE,NT6,INEL
     *,MATG
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON/TAUIG/ TAUD(3),DEFDPR(3),DEFDS(3),DDEFP(3),
     1              DETAU(3),DDEF(3)
      COMMON/ELKG/DET,WTU,R,S,T,NLM,JNGS,NCV,ND,PI2,SS,GR(3),GS(3)
     1,XJ(3,3),AK(40),BK(40),DLS(40),DLT(40),VS(40,3),VT(40,3),V1(40,3)
      COMMON/MAT2D/E,ANI,ET,TEQY0
      COMMON/PLASTI/LPLAST,LPLAS1,LSIGMA
      COMMON/ITERBR/ITER
      COMMON /CONMAT/ AE,EP,DVT
      COMMON /IGMAT / EM(3,3),IBTC,LNAP1,LPLAS,LPLA1
      DIMENSION TAUT(*),DEFPT(*),TAU(3),DEF(3),TAU1(*),DEF1(*),DEFP(*)
      DIMENSION FUN(2,MATG,*)
C
C     OSNOVNE KONSTANTE
C
      ISEG=0
      IPL=PL
      IPL1=PL1
      IF(ITER.EQ.0) THEN
      DO 510 I = 1,3
  510 TAU(I)=TAUT(I)
      RETURN
      ENDIF
C
      DVT=2.0D0/3.0D0
C
C     INICIJALIZACIJA OSNOVNIH VELICINA
C
      ET =FUN(2,MATG,2)
      E  =FUN(1,MATG,1)
      ANI=FUN(2,MATG,1)
      TEQY0=FUN(1,MATG,2)
C
      TEQ=TEQT
C     IF(ITER.EQ.0.AND.KOR.EQ.1) TEQY=TEQY0
C     IF(ITER.EQ.0.AND.KOR.EQ.1) TEQYT=TEQY0
      TEQY=TEQY0
      IF(IPL.EQ.1) TEQY=TEQT
      AE=(1.0D0+ANI)/E
      BE=1.5/E
      IF(IRAC.EQ.2)GO TO 100
      DO 10 I=1,3
      TAU(I)=0.0D0
      DDEF(I)=DEF(I)-DEFPT(I)
   10 CONTINUE
C
C     PROVERA ELASTICNOG RESENJA
C
      EP=E*ET/(E-ET)
C
C     ODREDIVANJE NAPONA KOJI ODGOVARA ELASTICNOM RESENJU
C
      DO 20 I=1,3
      DO 20 J=1,3
   20 TAU(I)=TAU(I) +    EM(I,J)*DDEF(J)
C
C     ODREDIVANJE EFEKTIVNOG NAPONA KOJI ODGOVARA ELASTICNOM RESENJU
C
      CALL DEVEQG(TAU,TAUEQE,TAUD)
      IF(TAUEQE.GT.TEQY) GO TO 340
      TEQ=TAUEQE
      DEFQP=0.0D0
      GO TO 100
340    PL1=1.0D0
C
C     RESENJE JE ELASTOPLASTICNO , TREBA ODREDITI PRIRASTAJ PLASTICNE
C     DEFORMACIJE IPRIRASTAJ NAPONA PRIMENOM FUNKCIJE EFEKTIVNOG NAPONA
C
C     ODREDIVANJE DEVIJATORA UKUPNE DEFORMACIJE
C
      EMT =  DEF(1)/3.0D0
C
      DEFDS(1)=    DEF(1)-   DEFPT(1)
      DEFDS(2)=    DEF(2)/2. - DEFPT(2)
      DEFDS(3)=    DEF(3)/2. - DEFPT(3)
C
C     ODREDIVANJE POJEDINIH CLANOVA FUNKCIJE EFEKTIVNOG NAPONA
C
      DKV=1.5D0*(DEFDS(1)*DEFDS(1)+2*DEFDS(2)*DEFDS(2)
     1+2.0D0*DEFDS(3)*DEFDS(3))
      DD=DSQRT(DKV)
      TAUEQE=DD/AE
C
C     PRIMENA POSTUPKA BISEKCIJE ZA
C     ODREDIVANJE NULE FUNKCUJE EFEKTIVNOG NAPONA
C
C      GO TO 330
C ZA BILINEARNU KRIVU TEQ SE DIREKTNO RACUNA
      IBISE=0
      IM=0
      IP=0
      TM=0.0D0
      TFM=0.0D0
      TP=0.0D0
      TFP=0.0D0
      IBISM=100
      TEQ1=TEQ
      TOLBIS=1.0D-6
C     DTEQ=TEQEQE-TEQT
      DTEQ=TAUEQE-TEQT
C
   50 IBISE=IBISE+1
C     TEQ1=TEQ
      IF(IBISE.EQ.1)TEQ=TAUEQE
C     IF(IBISE.EQ.2)TEQ=TAUEQE
C
C     ODREDIVANJE DELTA LAMBDA
C
      CALL PRILA(TEQ,ISEG,DLAM,TEQY,EP)
C
      ADL=AE+DLAM
      ADLR=1.0D0/ADL
C
      DEFDS(1)=    DEF(1)-   DEFPT(1)
      DEFDS(2)=    DEF(2)/2. - DEFPT(2)
      DEFDS(3)=    DEF(3)/2. - DEFPT(3)
C
C     KOMPONENTE DEVIJATORA NAPONA
C
      TAUD(1)=    DEFDS(1)/(BE+DLAM)
      TAUD(2)=    DEFDS(2)/(AE+DLAM)
      TAUD(3)=    DEFDS(3)/(AE+DLAM)
C
C     FUNKCIJA EFEKTIVNOG NAPONA
C
      TFQ=9./4.*TAUD(1)*TAUD(1)+3*(TAUD(2)*TAUD(2)+TAUD(3)*TAUD(3))
     1    -TEQ*TEQ
      TEQ1=TEQ
      CALL TEQBI(TEQ,DTEQ,TFQ,TM,TFM,TP,TFP,IM,IP,IBISE)
      IF(IBISE.EQ.1) GO TO 50
      DTEQB=DABS(TEQ1-TEQ)
      TOLSR=DABS(TEQ+TEQ1)/2.0D0
      IF(TOLSR.LT.1.D-9) GO TO 79
      TTOL=DTEQB/TOLSR
      IF(TTOL.LT.TOLBIS)GO TO 60
   79 IF((DABS(TFP).LE.TOLBIS).AND.(DABS(TFM).LE.TOLBIS)) GO TO 60
      IF(IBISE.LE.IBISM) GO TO 50
      WRITE(6,1000)
 1000 FORMAT(' ','DOSTIGNUT MAKSIMALAN BROJ BISEKCIJA U TAUINT5')
      STOP
C
C     ODREDIVANJE KOMPONENATA DEVIJATORA NAPONA
C
   60 CONTINUE
      CALL PRILA(TEQ,ISEG,DLAM,TEQY,EP)
C     ADLR=1.0D0/ADL
C     DO 65 I=2,3
C  65 TAUD(I)=ADLR*DEFDS(I)
C
C     ODREDIVANJE PRIRASTAJA PLASTICNE DEFORMACIJE
C
      DO 70 I=1,3
      DDEFP(I)=DLAM*TAUD(I)
   70 CONTINUE
C
C     ODREDIVANJE PLASTICNE DEFORMACIJE
C
      DO 170 I=1,3
  170 DEFP(I)=DEFPT(I)+DDEFP(I)
C
C     PRITASTAJ EKVIVALENTNE PLASTICNE DEFORMACIJE
C
      DDEFQP=1.5*DDEFP(1)*DDEFP(1)+2*DDEFP(2)*DDEFP(2)
     *                            +2*DDEFP(3)*DDEFP(3)
      DDEFQP=DSQRT(DVT*DDEFQP)
C
C     UKUPNA EKVIVALENTNA PLASTICNA DEFORMACIJA
C
      DEFQP=DEFQPT+DDEFQP
C
C     ODREDIVANJE NAPONA
C
C     TAU(1)=TAUD(1)+TAUM
      TAU(1)=1.5*TAUD(1)
      TAU(2)=TAUD(2)
      TAU(3)=TAUD(3)
C
C     KORIGOVANJE VELICINA IZ PRETHODNOG KORAKA KAD JE POSTIGNUTA
C     KONVERGENCIJA
C
  100 CONTINUE
      DO 290 I=1,3
      DEF1(I)=DEF(I)
  290 TAU1(I)=TAU(I)
      IF(TEQ.GT.TEQY) TEQY=TEQ
      RETURN
      END
      SUBROUTINE TEQBI(X,DX,F,XM2,FM2,XP2,FP2,IM,IP,IBISE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PODPROGRAM ZA RESAVANJE NELINEARNE JEDNACINE F(X)=0.
C
C
      FUBRZ=1.0D0
      IF(IBISE.GT.2) GO TO 10
      IF(IBISE.GT.1) GO TO 5
      X1=X
      F1=F
    5 IF(IBISE.GT.2) GO TO 10
      IR=1
      IF(X.GT.X1.AND.F.GT.F1) IR=2
C
   10 IF(F)20,100,30
   20 IM=IM+1
      IF(IM.GT.1) GO TO 22
      XM2=X
      FM2=F
      GO TO 50
   22 IF(F.LT.FM2) GO TO 50
      XM1=XM2
      FM1=FM2
      XM2=X
      FM2=F
C  25 X=XM1+(XM2-XM1)/(FM2-FM1)*FM1
C     GO TO 100
      GO TO 50
   30 IP=IP+1
      IF(IP.GT.1) GO TO 32
      XP2=X
      FP2=F
      GO TO 50
   32 IF(F.GT.FP2) GO TO 50
      XP1=XP2
      FP1=FP2
      XP2=X
      FP2=F
C  35 X=XP1+(XP2-XP1)/(FP2-FP1)*FP1
C     GO TO 100
   50 CONTINUE
      IF(IBISE.EQ.1) GO TO 60
      IF(IM.GT.0.AND.IP.GT.0) GO TO 80
      IF(IP.GT.0) GO TO 60
      DX=DABS(0.3D0*X)*FUBRZ
      IF(IR.EQ.1) GO TO 55
      X=X+DX
      GO TO 100
   55 X=X-DX
      GO TO 100
   60 DX=DABS(0.3D0*X)*FUBRZ
      IF(IR.EQ.1) GO TO 65
      X=X-DX
      GO TO 100
   65 X=X+DX
      GO TO 100
C
C     KORENI SU RAZDVOJENI - METOD BISEKCIJE
C
   80 IF(IM.GT.5.AND.IP.GT.5) GO TO 90
C  80 CONTINUE
      X=(XP2+XM2)/2.0D0
      DX=XP2-XM2
      GO TO 100
C
C     METOD SECICE
C
C  90 IF(IBISE.GT.10) GO TO 200
   90 CONTINUE
      X=XP2-(XM2-XP2)/(FM2-FP2)*FP2
      DX=XP2-XM2
  100 CONTINUE
      RETURN
      END
      SUBROUTINE PRILA(TEQ,ISEG,DLAM,TEQYT,EP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PODPROGRAM ZA ODREDIVANJE PRIRASTAJA EFEKTIVNE PLASTICN
C     DEFORMACIJE I ODREDIVANJE PRIRASTAJA LAMBDA ZA DATU VREDNOST
C     EFEKTIVNOG NAPONA
C
      COMMON/MAT2D/E,ANI,ET,TEQY0
C
C     UGRADENA SAMO BILINEARNA ZAVISNOST
C
C     IF(ISEG.GT.0) GO TO 50
C     BILINEARNA KRIVA
      DE=E-ET
      IF(DE.GT.0.0001)GO TO 30
      WRITE(3,100)
  100 FORMAT(' ','PERFEKTNA PLASTICNOST NIJE UGRADENA')
      STOP
   30 CONTINUE
      IF(DABS(TEQ).GT.TEQYT) GO TO 140
      DLAM=0.0D0
      GO TO 150
  140 DLAM=1.5D0*(1.0D0-TEQYT/TEQ)/EP
  150 CONTINUE
      RETURN
      END
      SUBROUTINE DEVEQG(TAU,TEQ,TAUD)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PODPROGRAM ZA ODREDIVANJE DEVIJATORA NAPONA EVIVALENTNOG NAPONA
C
      COMMON/ELKG/DET,WTU,R,S,T,NLM,JNGS,NCV,ND,PI2,SS,GR(3),GS(3)
     1,XJ(3,3),AK(40),BK(40),DLS(40),DLT(40),VS(40,3),VT(40,3),V1(40,3)
C
      DIMENSION TAU(3),TAUD(3)
C
      TAUM=TAU(1)/3.0D0
C
      DO 15 I=1,3
      IF(I.NE.1) GO TO 16
      TAUD(I)=TAU(I)-TAUM
      GO TO 15
   16 TAUD(I)=TAU(I)
   15 CONTINUE
C
      TEQ=TAUD(1)*TAUD(1)*9./4.+3*(TAUD(2)*TAUD(2)+TAUD(3)*TAUD(3))
      TEQ=DSQRT(TEQ)
      RETURN
      END
      SUBROUTINE KONSTE(NOP,ID,CORD,FUG,UKUM,NDST,CTR,DST,LM,NM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C*************************************************
C     FORMIRANJE KONSTANTNIH VEKTORA ELEMENATA   *
C*************************************************
      COMMON/ELKG/DET,WTU,R,S,T,NLM,JNGS,NCV,ND,PI2,SS,GR(3),GS(3)
     1,XJ(3,3),AK(40),BK(40),DLS(40),DLT(40),VS(40,3),VT(40,3),V1(40,3)
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /IGRGLA/ NGRU,NGSU,NGTU,NGS,NTE,NUD,IANAL,JTAU,NWE,NT6,INEL
     *,MATG
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      DIMENSION NOP(NE,*),ID(NP,*),NDST(NE,*),
     1CTR(NE,6,*),DST(NUD,*),XE(40,3),FUG(*)
      DIMENSION XS(3),XT(3),LM(NT6,*)
      DIMENSION CORD(NP,*),UKUM(*)
C***
C     OSNOVNA PETLJA PO CVOROVIMA ELEMENTA
C***
C
      NCV=0
      DO  10 NC=1,NTE
      IF(NOP(NLM,NC).EQ.0) GO TO 10
      JJ=NOP(NLM,NC)
      IF(NM.EQ.0) GO TO 80
      NCV=NCV+1
      XE(NC,1)=CORD(JJ,1)
      XE(NC,2)=CORD(JJ,2)
      XE(NC,3)=CORD(JJ,3)
      KK=0
      DO 2 I=1,3
      XS(I)=CTR(NLM,I,NC)
      XT(I)=CTR(NLM,I+3,NC)
      IF((DABS(XS(I)).LT.1.D-20).AND.
     1 (DABS(XT(I)).LT.1.D-20)) GO TO 2
      KK=KK+1
    2 CONTINUE
      IF(KK.NE.0) GO TO 1
      DO 4 I=1,3
      VS(NC,I)=VS(1,I)
      VT(NC,I)=VT(1,I)
      AK(NC)=AK(1)
    4 BK(NC)=BK(1)
      GO TO 3
    1 XX=XS(1)-XE(NC,1)
      YY=XS(2)-XE(NC,2)
      ZZ=XS(3)-XE(NC,3)
      BK(NC)=DSQRT(XX*XX+YY*YY+ZZ*ZZ)
      VS(NC,1)=XX/BK(NC)
      VS(NC,2)=YY/BK(NC)
      VS(NC,3)=ZZ/BK(NC)
      XX=XT(1)-XE(NC,1)
      YY=XT(2)-XE(NC,2)
      ZZ=XT(3)-XE(NC,3)
      AK(NC)=DSQRT(XX*XX+YY*YY+ZZ*ZZ)
      VT(NC,1)=XX/AK(NC)
      VT(NC,2)=YY/AK(NC)
      VT(NC,3)=ZZ/AK(NC)
    3 KK=NDST(NLM,NC)
      PERA=DST(KK,1)
      DLS(NC)=PERA     
      DLT(NC)=DST(KK,2)
      V1(NC,1)=VS(NC,2)*VT(NC,3)-VS(NC,3)*VT(NC,2)
      V1(NC,2)=VS(NC,3)*VT(NC,1)-VS(NC,1)*VT(NC,3)
      V1(NC,3)=VS(NC,1)*VT(NC,2)-VS(NC,2)*VT(NC,1)
C     VEKTOR LM
      NNC=6*(NC-1)
C     DO 5 I=1,6
C   5 LM(NNC+I)=ID(JJ,I)
      GO TO 10
C***
C     KOREKCIJA KOORDINATA CTR(AKO JE NM=0-ZOVE IZ GLAVNOG PROGRAMA
C***
   80 CONTINUE
C  80 DO 15 I=1,6
C     DU(I)=0.
C     IF(ID(JJ,I).EQ.0) GO TO 15
C     K=ID(JJ,I)
C     DU(I)=FUG(K)
C     DU(I)=UKUM(K)
C  15 CONTINUE
C
C     ROS(1)=(CTR(NLM,3,NC)-Z(JJ))*DU(5)-(CTR(NLM,2,NC)-Y(JJ))*DU(6)
C     ROS(2)=(CTR(NLM,1,NC)-X(JJ))*DU(6)-(CTR(NLM,3,NC)-Z(JJ))*DU(4)
C     ROS(3)=(CTR(NLM,2,NC)-Y(JJ))*DU(4)-(CTR(NLM,1,NC)-X(JJ))*DU(5)
C     ROT(1)=(CTR(NLM,6,NC)-Z(JJ))*DU(5)-(CTR(NLM,5,NC)-Y(JJ))*DU(6)
C     ROT(2)=(CTR(NLM,4,NC)-X(JJ))*DU(6)-(CTR(NLM,6,NC)-Z(JJ))*DU(4)
C     ROT(3)=(CTR(NLM,5,NC)-Y(JJ))*DU(4)-(CTR(NLM,4,NC)-X(JJ))*DU(5)
C     DO 14 I=1,3
C     CTR(NLM,I,NC)=  CTR(NLM,I,NC)  +ROS(I)+DU(I)
C  14 CTR(NLM,I+3,NC)=CTR(NLM,I+3,NC)+ROT(I)+DU(I)
   10 CONTINUE
      RETURN
      END
