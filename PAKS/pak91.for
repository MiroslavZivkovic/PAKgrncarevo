C=======================================================================
C
CE        READING DATA ABOUT SUPER BEAM ELEMENTS
CS        UCITAVANJE PODATAKA O GREDNIM SUPER ELEMENTIMA
C
C     SUBROUTINE ULJ9B
C                UEL4A
C                UEL4B
C                LMMHT8
C=======================================================================
      SUBROUTINE ULJ9B
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM POINTERS AND READING INPUT DATA ABOUT SUPER ELEMENTS
CS.   P R O G R A M
CS.      ZA FORMIRANJE REPERA I UCITAVANJE OPSTIH ULAZNIH PODATAKA
CS.      O GREDNIM SUPER ELEMENTIMA
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /DIREKT/ LSTAZZ(9),LDRV0,LDRV1,LDRV,IDIREK
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /PODTIP/ IPODT
      COMMON /SRPSKI/ ISRPS
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /NOVAGR/ NS,NCVS,NCVP,NCVJ,LNOS,LCORS,LIDP,LNVEZ,LNPR,LFPR,
     1                LIDD,LLMU,LMA9,NMC,JEDPP,JEDNN,LVITOP,LVITTP,
     1                LCOPT,LNMA,LIPG,LISN,LIPR,LTHI,LTBT,LTDT,NPRES,
     1                NWPP,NWKK,NWEE,NCU,NCVU,IND3D
      COMMON /LOKROT/ LDLV,LDLV1,LDLV0,LDLV2,IMALR
      COMMON /LOKSIL/ NCFL,LNCFL,LFCFL,NPRL,LNPRL,LFPRL,LTEZP
      COMMON /PTACKA/ IPOMT,LNPOM
      COMMON /IKOVAR/ INDKOV
      COMMON /CUVAJN/ TAUCEN(6,5),INDSEL,NGAUSU
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' ULJ9B'
C
CS     OSNOVNI PODACI O ELEMENTIMA
CE     BASIC DATA ABOUT ELEMENTS
C
      IF(IATYP.GT.1.AND.INDKOV.GE.0.AND.IPODT.EQ.1) INDKOV=-INDKOV
C
      CALL CLEAR(CPP,9)
      CALL CLEAR(TSG,36)
      IDIREK=0
C
C**** OVO UCITAVANJE NA KRAJU PROVERITI DA LI JE U REDU ZA CPP ***
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) NGAUSX,NGAUSY,NGAUSZ,MSET,BETA,MSLOJ,IALFA
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) NGAUSX,NGAUSY,NGAUSZ,MSET,BETA,MSLOJ,IALFA
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) IPODT,NS,NCVP,NPRES,IND3D,NCFL,NPRL,IPOMT,
     1              (CPP(J,1),J=1,3)
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1010) IPODT,NS,NCVP,NPRES,IND3D,NCFL,NPRL,IPOMT,
     1                (CPP(J,1),J=1,3)
      IF(NGAUSY.LT.0.OR.NGAUSZ.LT.0) STOP 
     +' BROJ INTEGRACIONIH TACAKA MORA BITI VECI OD NULE, STOP - PAK91'
      INDSEL=0
      IF(NGAUSX.LT.0) THEN
         IF(INDKOV.LT.0.AND.IPODT.NE.2) THEN
            NGAUSX=-NGAUSX
            INDSEL=1
         ELSE
            STOP '(INDKOV.GE.0.AND.NGAUSX.LT.0)'
         ENDIF
      ENDIF
CE    CHECK FOR NEWTON-COTES INTEGRATION
      INCOTX=INCOT(NGAUSX)
      INCOTY=INCOT(NGAUSY)
      INCOTZ=INCOT(NGAUSZ)
      IF(MSLOJ.EQ.0) MSLOJ = 10
      IMALR=0
      IF(IPODT.NE.2) IMALR=1
      IF(NPRES.EQ.0) NPRES=1
      IF(IALFA.EQ.0.AND.IPODT.EQ.2) IALFA=2
      IF(IALFA.EQ.0.AND.IPODT.EQ.1) IALFA=3
      IF(IALFA.GE.0.AND.IALFA.LT.3.AND.IPODT.EQ.0) IALFA=4
      IF(IALFA.GE.3.AND.IPODT.EQ.2) IALFA=3
      IF(IALFA.GE.3.AND.IPODT.EQ.1) IALFA=3
      IF(IALFA.GE.5.AND.IPODT.EQ.0) IALFA=5
C PROVERITI
C KOD UNULJAVANJA KONSTITUTIVNE MATRICE TREBA NAPRAVITI REDUKOVANE ALFE
      IF(IND3D.EQ.0) IALFA=-1
      IF(IALFA.GT.3.AND.(NGAUSX.LT.4.OR.NGAUSY.LT.4)) THEN
         NGAUSX=4
         NGAUSY=4
         IF(NGAUSZ.GT.2) NGAUSZ=2
         INCOTX=0
         INCOTY=0
         INCOTZ=0
      ENDIF
C     IF(IALFA.GT.3.AND.(NGAUSX.LT.4.OR.NGAUSY.LT.4)) STOP
C    +' INTEGRACIJA U PRESEKU MORA BITI 4X4, STOP - PAK91'
C
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
        CALL WBROJK(KARTIC,0)
      IF(INCOTX.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NGAUSX
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NGAUSX
      ELSE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2001) NGAUSX
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6001) NGAUSX
      ENDIF
      IF(INCOTY.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2002) NGAUSY
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6002) NGAUSY
      ELSE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2003) NGAUSY
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6003) NGAUSY
      ENDIF
      IF(INCOTZ.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2004) NGAUSZ
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6004) NGAUSZ
      ELSE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2005) NGAUSZ
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6005) NGAUSZ
      ENDIF
        IF(MSET.GT.0) THEN
      IF(ISRPS.EQ.0) WRITE(IZLAZ,2010) MSET,BETA,MSLOJ
      IF(ISRPS.EQ.1) WRITE(IZLAZ,6010) MSET,BETA,MSLOJ
          ELSE
      IF(ISRPS.EQ.0) WRITE(IZLAZ,2020) BETA
      IF(ISRPS.EQ.1) WRITE(IZLAZ,6020) BETA
        ENDIF
      IF(ISRPS.EQ.0.AND.IPODT.EQ.2) WRITE(IZLAZ,2026) IALFA
      IF(ISRPS.EQ.1.AND.IPODT.EQ.2) WRITE(IZLAZ,6026) IALFA
      IF(ISRPS.EQ.0.AND.IPODT.EQ.1) WRITE(IZLAZ,2027) IALFA
      IF(ISRPS.EQ.1.AND.IPODT.EQ.1) WRITE(IZLAZ,6027) IALFA
      IF(ISRPS.EQ.0.AND.IPODT.EQ.0) WRITE(IZLAZ,2028) IALFA
      IF(ISRPS.EQ.1.AND.IPODT.EQ.0) WRITE(IZLAZ,6028) IALFA
      ENDIF
C
C *** ZA ANIZOTROPNE MATERIJALE PROVERITI
      BETA=BETA*3.1415926536D0/180.D0
C     IBB0=1
C     IF(DABS(CPP(1,1)).LT.1.D-6.AND.DABS(CPP(2,1)).LT.1.D-6.AND.
C    1   DABS(CPP(3,1)).LT.1.D-6) IBB0=0
      IBB0=0
C
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
        CALL WBROJK(KARTIC,0)
      IF(ISRPS.EQ.0) WRITE(IZLAZ,2035) IPODT,NS,NCVP,NPRES,IND3D,NCFL,
     1                                 NPRL,IPOMT
      IF(ISRPS.EQ.1) WRITE(IZLAZ,6035) IPODT,NS,NCVP,NPRES,IND3D,NCFL,
     1                                 NPRL,IPOMT
      IF(ISRPS.EQ.0) WRITE(IZLAZ,2025) (CPP(J,1),J=1,3)
      IF(ISRPS.EQ.1) WRITE(IZLAZ,6025) (CPP(J,1),J=1,3)
      ENDIF
      IF(NS.EQ.0) STOP 'NS = 0, PROGRAM STOP'
      IF(NCVP.EQ.0) STOP 'NCVP = 0, PROGRAM STOP'
C
CS     REPERI U VEKTORU AU  ZA ULAZNE PODATKE
CE     POINTERS IN INPUT STORAGE VECTOR  AU
C
      IF(IPODT.EQ.0) NCVS=1
      IF(IPODT.EQ.1) NCVS=3
      IF(IPODT.EQ.2) NCVS=9
      LNSLOJ=1
      LMATSL=LNSLOJ+MSET
      LBBET =LMATSL+MSET*MSLOJ
      CALL DELJIV(LBBET,2,INDL)
      IF(INDL.EQ.0) LBBET=LBBET+1
      LDSLOJ=LBBET+MSET*MSLOJ*IDVA
      LTHID =LDSLOJ+MSET*MSLOJ*IDVA
      LBET0 =LTHID+NS*IDVA
      LTBTH =LBET0+NS*IDVA
      LTDTH =LTBTH
      IF(INDBTH.EQ.1) LTDTH=LTBTH+NS*IDVA
      LNMAT =LTDTH
      IF(INDDTH.EQ.1) LNMAT=LTDTH+NS*IDVA
      LIPGC =LNMAT+NS
      LISNA =LIPGC+NS
      LIPRC =LISNA+NS
      LNOS  =LIPRC+NS
      LMXAU=LNOS+NS*NCVS
      NTOT=LMAX+LMXAU-LNSLOJ
      IF(NTOT.GT.MTOT) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NTOT,MTOT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NTOT,MTOT
      STOP
      ENDIF
C
CS     POZIVANJE PROGRAMA ZA ULAZNE PODATKE U VEKTOR AU
CE     CALL ROUTINES FOR INPUT DATA IN VECTOR   AU
C
      LAU=LMAX
      CALL UEL9A(A(LAU))
C
C     MOGUCI BROJ VITOPERENJA U PRESEKU ZA JEDAN SEGMENT
C     MOGUCI BROJ VITOPERENJA U SVIM PRESECIMA ZA JEDAN SEGMENT
      NCVV=3*NCVE*NCVS
      NCVJJ=0
      IF(JEDPP.GT.0) NCVJJ=NCVJ
      NCVN=NCVJJ+ND
      NWE=NCVN*(NCVN+1)/2
      IF(NWE.LT.NWEE) NWE=NWEE
      LA=18
      MXAE=(NWE+2*NWKK+8*NCVN+3*NCVJ+3*NCVV+3*JEDPP+3*JEDNN+24*LA)*IDVA+
     +      NCVN+1
      IF(IATYP.GT.1) MXAE=MXAE+9*NCVN*IDVA
      LMAX=LMAX+MXAE
C     WRITE(3,*) 'MXAE0,LMAX',MXAE,LMAX
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      RETURN
C
 1000 FORMAT(4I5,F10.3,I5,30X,I5)
 1010 FORMAT(8I5,3F10.0)
C-----------------------------------------------------------------------
 2000 FORMAT(
     611X,'BROJ GAUSOVIH TACAKA U PRAVCU OSE R   ......... NGAUSX =',I5/
     616X,'EQ.0; NGAUSX = 2'//)
 2002 FORMAT(
     611X,'BROJ GAUSOVIH TACAKA U PRAVCU OSE S   ......... NGAUSY =',I5/
     616X,'EQ.0; NGAUSY = 2'//)
 2004 FORMAT(
     611X,'BROJ GAUSOVIH TACAKA U PRAVCU OSE T   ......... NGAUSZ =',I5/
     616X,'EQ.0; NGAUSZ = 2')
 2001 FORMAT(
     611X,'BROJ NJUTN-KOTESOVIH TACAKA U PRAVCU OSE R  ... NGAUSX =',I5/
     6//)
 2003 FORMAT(
     611X,'BROJ NJUTN-KOTESOVIH TACAKA U PRAVCU OSE S  ... NGAUSY =',I5/
     6//)
 2005 FORMAT(
     611X,'BROJ NJUTN-KOTESOVIH TACAKA U PRAVCU OSE T  ... NGAUSZ =',I5)
 2010 FORMAT(//
     611X,'BROJ RAZLICITIH VISESLOJNIH SETOVA MATERIJALA ... MSET =',I5/
     616X,'GT.0; SEGMENT - VISESLOJNA LINIJA ILI TACKA'//
     611X,'UGAO SETOVA U ODNOSU NA LOKALNU T OSU ...... BETA =',1PD10.3/
     6/11X,'MAKSIMALAN BROJ SLOJEVA ................... MSLOJ =',5X,I5)
 2020 FORMAT(//
     611X,'UGAO VLAKANA U ODNOSU NA LOKALNU T OSU ..... BETA =',1PD10.3)
 2026 FORMAT(//
     611X,'METOD INKOMPATIBILNIH MODOVA ................... IALFA =',I5/
     616X,'EQ.-1; NE KORISTI SE'/
     616X,'EQ. 0; IALFA=1'/
     616X,'EQ. 1; 9 PARAMETARA - TAYLOR'/
     616X,'EQ. 2; 18 PARAMETARA'/
     616X,'EQ. 3; 9 PARAMETARA')
 2027 FORMAT(//
     611X,'METOD INKOMPATIBILNIH MODOVA ................... IALFA =',I5/
     616X,'EQ.-1; NE KORISTI SE'/
     616X,'EQ. 0; IALFA=3'/
     616X,'EQ. 1; 4 PARAMETARA - TAYLOR'/
     616X,'EQ. 2; 5 PARAMETARA'/
     616X,'EQ. 3; 6 PARAMETARA')
 2028 FORMAT(//
     611X,'METOD INKOMPATIBILNIH MODOVA ................... IALFA =',I5/
     616X,'EQ.-1; NE KORISTI SE'/
     616X,'EQ. 0; IALFA=4'/
     616X,'EQ. 3; 3 PARAMETARA'/
     616X,'EQ. 4; 5 PARAMETARA'/
     616X,'EQ. 5; 2 PARAMETARA')
 2035 FORMAT(//
     611X,'TIP SEGMENTA .................................. IPODT =',I5/
     616X,'EQ.0; TACKA'/
     616X,'EQ.1; LINIJA'/
     616X,'EQ.2; 2/D'//
     611X,'BROJ SEGMENATA U PRESEKU ......................    NS =',I5//
     611X,'BROJ CVOROVA U PRESEKU ........................  NCVP =',I5//
     611X,'BROJ RAZLICITIH PRESEKA ....................... NPRES =',I5//
     611X,'TIP KONSTITUTIVNE MATRICE ..................... IND3D =',I5/
     616X,'EQ.0; TIP 0'/
     616X,'EQ.1; TIP 1'/
     616X,'EQ.2; TIP 2'//
     611X,'BROJ LOKALNIH SILA NA CVOROVIMA SEGMENATA .....  NCFL =',I5//
     611X,'BROJ LOKALNIH PRITISAKA NA CVOROVIMA SEGMENATA . NPRL =',I5//
     611X,'INDIKATOR ORIJENTACIJE LOKALNOG SISTEMA ....... IPOMT =',I5/
     616X,'EQ.0; ORIJENTACIONA TACKA ZA SVAKI ELEMENT'/
     616X,'EQ.1; NAREDNA ORIJENTACIONA TACKA ZA SVE PRESEKE U GRUPI')
 2025 FORMAT(//
     611X,'KOORDINATE ORIJENTACIONE TACKE SVIH PRESEKA. CPPX =',1PD10.3/
     611X,'                                           . CPPY =',1PD10.3/
     611X,'                                           . CPPZ =',1PD10.3)
 2030 FORMAT(///' NEDOVOLJNA DIMENZIJA U VEKTORU A ZA PODATKE O ELEMENTI
     1MA GREDE '/' POTREBNA DIMENZIJA , LMAX=',I10/' RASPOLOZIVA DIMENZI
     2JA,  MTOT =',I10)
C-----------------------------------------------------------------------
 6000 FORMAT(
     611X,'NUMBER OF GAUSS POINTS IN R-DIRECTION ......... NGAUSX =',I5/
     616X,'EQ.0; NGAUSX = 2'//)
 6002 FORMAT(
     611X,'NUMBER OF GAUSS POINTS IN S-DIRECTION ......... NGAUSY =',I5/
     616X,'EQ.0; NGAUSY = 2'//)
 6004 FORMAT(
     611X,'NUMBER OF GAUSS POINTS IN T-DIRECTION ......... NGAUSZ =',I5/
     616X,'EQ.0; NGAUSZ = 2')
 6001 FORMAT(
     611X,'NUMBER OF NEWTON-COTES POINTS IN R-DIRECTION .. NGAUSX =',I5/
     6//)
 6003 FORMAT(
     611X,'NUMBER OF NEWTON-COTES POINTS IN S-DIRECTION .. NGAUSY =',I5/
     6//)
 6005 FORMAT(
     611X,'NUMBER OF NEWTON-COTES POINTS IN T-DIRECTION .. NGAUSZ =',I5)
 6010 FORMAT(//
     611X,'NUMBER OF DIFFERENT MULTILAYERD MATERIAL SETS ... MSET =',I5/
     616X,'GT.0; SEGMENT - MULTILAYERD LINE OR POINT'//
     611X,'ANGLE OF SETS TO LOCAL T AXIS .............. BETA =',1PD10.3/
     6/11X,'MAXIMUM NUMBER OF LAYERS .................. MSLOJ =',5X,I5)
 6020 FORMAT(//
     611X,'ANGLE OF FIBER TO LOCAL T AXIS ............. BETA =',1PD10.3)
 6026 FORMAT(//
     611X,'METHOD OF INCOMPATIBLE MODES ................... IALFA =',I5/
     616X,'EQ.-1; NOT USED'/
     616X,'EQ. 0; IALFA=1'/
     616X,'EQ. 1; 9 PARAMETERS - TAYLOR'/
     616X,'EQ. 2; 18 PARAMETERS'/
     616X,'EQ. 3; 9 PARAMETERS')
 6027 FORMAT(//
     611X,'METHOD OF INCOMPATIBLE MODES ................... IALFA =',I5/
     616X,'EQ.-1; NOT USED'/
     616X,'EQ. 0; IALFA=3'/
     616X,'EQ. 1; 4 PARAMETERS - TAYLOR'/
     616X,'EQ. 2; 5 PARAMETERS'/
     616X,'EQ. 3; 6 PARAMETERS')
 6028 FORMAT(//
     611X,'METHOD OF INCOMPATIBLE MODES ................... IALFA =',I5/
     616X,'EQ.-1; NOT USED'/
     616X,'EQ. 0; IALFA=4'/
     616X,'EQ. 3; 3 PARAMETERS'/
     616X,'EQ. 4; 5 PARAMETERS'/
     616X,'EQ. 5; 2 PARAMETERS')
 6035 FORMAT(//
     611X,'SEGMENT TYPE .................................. IPODT =',I5/
     616X,'EQ.0; POINT '/
     616X,'EQ.1; LINE '/
     616X,'EQ.2; 2/D '// 
     611X,'NUMBER SEGMENTS IN CROSS-SECTION ..............    NS =',I5//
     611X,'NUMBER NODES IN CROSS-SECTION .................  NCVP =',I5//
     611X,'NUMBER DIFFERENT CROSS-SECTIONS ............... NPRES =',I5//
     611X,'CONSTITUTIVE MATRIX TYPE ...................... IND3D =',I5/
     616X,'EQ.0; TYPE 0'/
     616X,'EQ.1; TYPE 1'/
     616X,'EQ.2; TYPE 2'// 
     611X,'NUMBER LOCAL FORCES ...........................  NCFL =',I5//
     611X,'NUMBER LOCAL PRESSURES ........................  NPRL =',I5//
     611X,'LOCAL SYSTEM ORIENTATION INDICATOR ...........  IPOMT =',I5/
     616X,'EQ.0; ORIENTATION POINT FOR EACH ELEMENT'/
     616X,'EQ.1; ORIENTATION POINT FOR ALL SECTIONS IN GROUP')
 6025 FORMAT(//
     611X,'ORIENTATION POINT FOR ALL SECTIONS   ....... CPPX =',1PD10.3/
     611X,'                                     ....... CPPY =',1PD10.3/
     611X,'                                     ....... CPPZ =',1PD10.3)
 6030 FORMAT(///' NOT ENOUGH SPACE IN WORKING VECTOR  A'
     1/' REQUESTED DIMENSION , LMAX=',I10
     2/' AVAILABLE DIMENSION , MTOT=',I10)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE UEL9A(AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM POINTERS AND READING INPUT DATA ABOUT SUPER ELEMENTS
CE.      IN VECTOR AU
CS.   P R O G R A M
CS.      ZA FORMIRANJE REPERA I U VEKTOR AU UCITAVANJE OPSTIH ULAZNIH 
CS.      PODATAKA O GREDNIM SUPER ELEMENTIMA
C .
C ......................................................................
C
      include 'paka.inc'
      
      CHARACTER*10 IME
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /SIMO2D/ LALFE,LHAEM,LHINV,LGEEK,IALFA
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /POSTPR/ LNDTPR,LNDTGR,NBLPR,NBLGR,INDPR,INDGR
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /PLASTV/ LPLAVT,LPLAV1,LSIGMV
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /RESTAR/ TSTART,IREST
      COMMON /MASINA/ INDPC,ICRTA
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /TRANS6/ LTR0,NPD6
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /PODTIP/ IPODT
      COMMON /SRPSKI/ ISRPS
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /NOVAGR/ NS,NCVS,NCVP,NCVJ,LNOS,LCORS,LIDP,LNVEZ,LNPR,LFPR,
     1                LIDD,LLMU,LMA9,NMC,JEDPP,JEDNN,LVITOP,LVITTP,
     1                LCOPT,LNMA,LIPG,LISN,LIPR,LTHI,LTBT,LTDT,NPRES,
     1                NWPP,NWKK,NWEE,NCU,NCVU,IND3D
      COMMON /LOKROT/ LDLV,LDLV1,LDLV0,LDLV2,IMALR
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /COEFSM/ COEF(3),ICOEF
      COMMON /IKOVAR/ INDKOV
      COMMON /CEPMAT/ INDCEP
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /LOKSIL/ NCFL,LNCFL,LFCFL,NPRL,LNPRL,LFPRL,LTEZP
      COMMON /PTACKA/ IPOMT,LNPOM
      COMMON /CVSILE/ NSILA,LESILA
      COMMON /CUVAJN/ TAUCEN(6,5),INDSEL,NGAUSU
      DIMENSION AU(*)
      REAL AU
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UEL9A'
      LMAX8=LMAX8+1
      IF(IREST.EQ.1) THEN
        LMA8=LMAX8
        READ(IELEM,REC=LMAX8)
     1NGAUSX,NGAUSY,NGAUSZ,BETA,NCVE,ITERME,ICORGT,LCEL,LELC,NMA,NMI,
     1MXAU,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,LTR0,IPODT,
     1ND,NGS12,MSLOJ,MXS,MSET,NSILA,LESILA,
     1LNSLOJ,LMATSL,LDSLOJ,LBBET,INCOTX,INCOTY,INCOTZ,
     1LBET0,(CPP(J,1),J=1,3),IBB0,LALFE,LHAEM,LHINV,LGEEK,IALFA,
     1INDBTH,INDDTH,LTBTH,LTDTH,NS,NCVS,NCVP,NCVJ,LNOS,LCORS,LIDP,
     1LNVEZ,LNPR,LFPR,LIDD,LLMU,LMA9,NMC,JEDPP,JEDNN,
     1LCOPT,LNMA,LIPG,LISN,LIPR,LTHI,LTBT,LTDT,NPRES,
     1NWPP,NWKK,NWEE,NCU,NCVU,IND3D,INDKOV,ICOEF,(COEF(I),I=1,3),
     1LDLV,LDLV1,LDLV0,LDLV2,IMALR,NCFL,LNCFL,LFCFL,IPOMT,LNPOM,
     1NPRL,LNPRL,LFPRL,LTEZP,INDSEL,INDCEP,ILEDE,NLD,ICPM1
        CALL READDD(AU(LNSLOJ),MXAU/IDVA,IELEM,LMAX8,LDUZI)
        LMAX8=LMA8
      ENDIF
C
C
CS     POZIVANJE PROGRAMA ZA ULAZNE PODATKE O GREDNIM SUPER ELEMENTIMA
CE     CALL ROUTINE FOR INPUT DATA ABOUT BEAM SUPERELEMENTS
C
C     UCITAVANJE SEGMENATA U PRESEKU, KOORDINATA I OGRANICENJA
      CALL UEL92 (AU(LNOS),AU(LNMAT),AU(LIPGC),AU(LISNA),AU(LIPRC),
     1            AU(LTHID),AU(LNSLOJ),AU(LMATSL),AU(LBBET),AU(LDSLOJ),
     1            AU(LTBTH),AU(LTDTH),NS,NCVS)
      LNEL=LNOS+NS*NCVS
      LCEL=LNEL
      IF(ICVEL.EQ.1) THEN
        LNEL=LCEL+NE
      ENDIF
      LNMA =LNEL+NE*3
      LIPG =LNMA+NE
      LISN =LIPG+NE
      LIPR =LISN+NE
      LNPOM=LIPR+NE
      LTHI =LNPOM+NE
      CALL DELJIV(LTHI,2,INDL)
      IF(INDL.EQ.0) LTHI=LTHI+1
      LTBT =LTHI+NE*IDVA
      LDUZS=LTBT
      IF(INDBTH.EQ.1) LDUZS=LTBT+NE*IDVA
      LTDT =LDUZS
      IF(IPODT.NE.0) LTDT =LDUZS+NS*IDVA
      LCOPT=LTDT
      IF(INDDTH.EQ.1) LCOPT=LTDT+NE*IDVA
      LCORS=LCOPT+NE*3*IDVA
      LTEZP=LCORS+NCVP*3*NPRES*IDVA
      LFPRE=LTEZP+3*NPRES*IDVA
      LNPRE=LFPRE+NE*3*IDVA
      LNOGR=LNPRE+NE*3
      LIDP =LNOGR+NE*3
      LNVEZ=LIDP+NCVP*6*NPRES
      LMXAU=LNVEZ+NP
      NTOT=LMAX+LMXAU-LNSLOJ
      IF(NTOT.GT.MTOT) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NTOT,MTOT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NTOT,MTOT
      STOP
      ENDIF
C     UCITAVANJE KOORDINATA I OGRANICENJA PRESEKA
      LCOR1=LCORS
      LIDP1=LIDP
      IGRA1=32
      DO 5 I=1,NPRES
C     UGRADI DA MENJA BROJAC
         IME(1:1)='P'
         IME(7:10)='.UNV'
         WRITE(IME(2:2),1800) I
 1800 FORMAT(I1)
         WRITE(IME(3:6),1900) NGE
 1900 FORMAT(I4)
         DO 6 J=3,5
            IF(IME(J:J).EQ.' ') IME(J:J)='0' 
    6    CONTINUE
         IF(IREST.NE.1) THEN
         OPEN (IGRA1,FILE=IME,STATUS='UNKNOWN',FORM='FORMATTED',
     1                          ACCESS='SEQUENTIAL')
            CLOSE (IGRA1,STATUS='DELETE')
         ENDIF
         OPEN (IGRA1,FILE=IME,STATUS='UNKNOWN',FORM='FORMATTED',
     1                          ACCESS='SEQUENTIAL')
         CALL ULAZE9(AU(LCOR1),AU(LIDP1),NCVP,I,
     1               AU(LDUZS),AU(LTHID),AU(LNOS),NS,AU(LTEZP))
C        STAMPANJE KOORDINATA PRESEKA U UNV FILE
         IF(NBLGR.GE.0) CALL TGRA9K(AU(LCOR1),NCVP,IGRA1)
         IF(NBLGR.GE.0) CALL TGRA9B(AU(LIDP1),NCVP,I,IGRA1)
         IF(NBLGR.GE.0.AND.IPODT.EQ.1) 
     1   CALL TGRA91(AU(LNOS),AU(LNMAT),NS,NCVS,I,IGRA1,IZLAZ)
         IF(NBLGR.GE.0.AND.IPODT.EQ.2) 
     1 CALL TGRA92(AU(LNOS),AU(LNMAT),NS,NCVS,NGAUSX,NGAUSY,IGRA1,IZLAZ)
         LCOR1=LCOR1+NCVP*3*IDVA
         LIDP1=LIDP1+NCVP*6
         CLOSE (IGRA1,STATUS='KEEP')
    5 CONTINUE
C
      NCVE=3
      NMA=0
      NMI=0
      CALL CLEAR(AU(LNVEZ),NP)
      CALL UEL9B (AU(LNEL),AU(LNMA),AU(LIPG),AU(LISN),AU(LIPR),AU(LTHI),
     1            AU(LTBT),AU(LTDT),AU(LCEL),NMA,NMI,ICVEL,AU(LCOPT),
     1            AU(LFPRE),AU(LNPRE),AU(LNOGR),AU(LNPOM))
      IF(NBLGR.GE.0) CALL TGRAF9(AU(LNEL),AU(LCEL),ICVEL,AU(LCOPT))
C     U SLOBODNOJ NUMERACIJI SVAKI CVOR DOBIJA BROJ MESTA GDE MU SE 
C     NALAZE PODACI O KOORDINATAMA I OGRANICENJIMA
      IF(ICVEL.EQ.1) CALL VEZACE(AU(LNEL),A(LELCV),NE,NCVE)
      CALL VEZA9B(AU(LNEL),AU(LNVEZ),NE,NCVE,NMC,NCU,NCVU)
C
      K36=6
      IF(IPODT.EQ.2) K36=3
      ND=6*NCVE
      NCVJ=K36*NCVS*NCVE
      LNEZ=LNVEZ+NCU
      LFPR=LNEZ+NCVU
      CALL DELJIV(LFPR,2,INDL)
      IF(INDL.EQ.0) LFPR=LFPR+1
      LNOG=LFPR+NCVU*IDVA
      LNPR=LNOG+NCVU
      LIPR=LNPR+NCVU
      LIDD=LIPR+NCVP*6*NCVU
      LLMU=LIDD+6*NCVU
      LMXAU=LLMU+6*NCVU
      NTOT=LMAX+LMXAU-LNSLOJ
      IF(NTOT.GT.MTOT) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NTOT,MTOT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NTOT,MTOT
      STOP
      ENDIF
      CALL CLEAR(AU(LFPR),NCVU)
      CALL ICLEAR(AU(LNOG),(14+NCVP*6)*NCVU)
C     ELIMINISANJE DUPLO DEFINISANIH PODATAKA
      CALL JEDNAC(AU(LFPR),AU(LNPR),AU(LNOG),AU(LIPR),AU(LIDD),
     1            AU(LFPRE),AU(LNPRE),AU(LNOGR),AU(LIDP),A(LID),
     1            AU(LNVEZ),AU(LLMU),AU(LNEL),AU(LNEZ),A(LCVEL),ICVEL,
     1            NCVP,NE,NCVE,NMC,NCU,JEDPP,JEDNN,NP,NSILA,AU(LIPG))
C      CALL IWRR(AU(LIPR),6*NCVP*NCVU,'LIPR')
C      CALL IWRR(AU(LIDD),6*NCVU,'LIDD')
      IF(JEDPP.GT.0) CALL VISINE(A(LMHT),JEDNN,AU(LLMU))
      NCVJJ=0
      IF(JEDPP.GT.0) NCVJJ=NCVJ
C     DIMENZIJA MATRICE KRUTOSTI-NCVN
      NCVN=NCVJJ+ND
C 
      LMH9=LLMU+JEDNN
      LMA9=LMH9+JEDNN+JEDPP
      LLME=LMA9+JEDNN+JEDPP+1
      LMXAU=LLME+NCVJ+ND
      NTOT=LMAX+LMXAU-LNSLOJ
      IF(NTOT.GT.MTOT) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NTOT,MTOT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NTOT,MTOT
      STOP
      ENDIF
C
CE    FORM VECTOR LM AND HEIGHT COLUMNS IN STIFFNESS MATRIX
CS    FORMIRANJE VEKTORA LM I VISINA STUBOVA
C
      IF(JEDPP.GT.0) CALL ICLEAR(AU(LMH9),JEDNN+JEDPP)
      CALL LMMHT9(A(LID),AU(LIDD),AU(LIPR),AU(LNEL),AU(LNOS),AU(LMH9),
     1            AU(LLME),AU(LNVEZ),A(LMHT),
     1            ND,NS,NCVS,NCVP,JEDPP,JEDNN,NMC,NPD6,IPODT)
      NWPP=0
      NWKK=0
      NWEE=JEDNN*(JEDNN+1)/2
      IF(JEDPP.GT.0)
     1CALL ADRES9(AU(LMA9),AU(LMH9),JEDNN+JEDPP,JEDPP,NWKK,NWPP)
      LMA9=LMH9
      LMXAU=LMA9+JEDNN+JEDPP+1
C     SMANJENJE PROSTORA
      CALL JEDNA1(AU(LFPRE),AU(LFPR),NCVU)
      LFPR=LFPRE
      LMXAU=LFPR+NCVU*IDVA
      CALL IJEDN1(AU(LMXAU),AU(LNVEZ),NCU+NCVU)
      LNVEZ=LMXAU
      LNEZ=LNVEZ+NCU
      LMXAU=LNEZ+NCVU
C      CALL IWRR(AU(LNEZ),NCVU,'NEZ ')
      INULA=0
      IF(JEDPP.GT.0) INULA=1
      NPRO1=INULA*((6+6*NCVP)*NCVU+2*JEDNN+JEDPP+1)+NCVU
      CALL IJEDN1(AU(LMXAU),AU(LNPR),NPRO1)
      LNPR=LMXAU
      LIDP=LNPR+NCVU
      LIDD=LIDP+NCVP*6*NCVU*INULA
      LLMU=LIDD+6*NCVU*INULA
      LMA9=LLMU+JEDNN*INULA
      LMXAU=LMA9+(JEDNN+JEDPP+1)*INULA
      CALL STAJED(AU(LNPR),AU(LFPR),AU(LIDP),AU(LIDD),AU(LNEZ),
     1            NCVP,NCVU,INULA,IZLAZ)
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2500) NGE,NCVU,JEDPP,JEDNN,NWKK
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6500) NGE,NCVU,JEDPP,JEDNN,NWKK
      ENDIF
C     WRITE(3,*) 'LFPR,LNVEZ,LNPR,LIDP,LIDD,LLMU,LMA9',
C    1LFPR,LNVEZ,LNPR,LIDP,LIDD,LLMU,LMA9
C     CALL WRR(AU(LFPR),NCVU,'LFPR')
C     CALL IWRR(AU(LNVEZ),NCU,'NVEZ')
C     CALL IWRR(AU(LNPR),NCVU,'LNPR')
C     CALL IWRR(AU(LIDP),NCVP*6*NCVU,'LIDP')
C     CALL IWRR(AU(LIDD),6*NCVU,'LIDD')
C     CALL IWRR(AU(LLMU),JEDNN,'LLMU')
C     CALL IWRR(AU(LMA9),JEDNN+JEDPP+1,'LMA9')
C     CALL IWRR(A(LMHT),JEDN,'LMHT')
C
      LELC=LMXAU
      IF(ICVEL.EQ.1) THEN
        LMXAU=LELC+NMA-NMI+1
        LMAX=LAU+LMXAU-1
        IF(LMAX.GT.MTOT) GO TO 4
        CALL ICLEAR(AU(LELC),NMA-NMI+1)
        CALL VEZAEL(AU(LCEL),AU(LELC),NE,NMI)
      ENDIF
      MXAU = LMXAU - 1
      LMAX=LAU+MXAU
C*** PROSTOR ZA LOKALNU TRANSFORMACIJU CVOROVA SA 6 DOF (PREKO LMXAU)
      LTR0 = LMXAU
      CALL DELJIV(LTR0,2,INDL)
      IF(INDL.EQ.0) LTR0=LTR0+1
      LMXAU=LTR0+NPD6*9*IDVA
C     PROSTOR ZA LOKALNE VEKTORE ROTACIJE
      LDLV =LMXAU
      LDLV1=LMXAU
      LDLV0=LMXAU
      LDLV2=LMXAU
      IF(IMALR.EQ.1) THEN
         NPROS=NCVP*NCVU*3
         LDLV1=LDLV +NPROS*IDVA
         LDLV0=LDLV1+NPROS*IDVA
         LDLV2=LDLV0+NPROS*IDVA
         LMXAU=LDLV2+NPROS*IDVA
         CALL CLEAR(AU(LDLV),4*NPROS)
      ENDIF
C     PROSTOR ZA INKOMPATIBILNA POMERANJA
      LALFE=LMXAU
      LHAEM=LMXAU
      LHINV=LMXAU
      LGEEK=LMXAU
      LA=1 
      IF(IPODT.EQ.2) THEN
         IF(NCVE.NE.2.OR.NCVS.NE.4) IALFA=-1
         IF(IALFA.EQ.1) LA=9 
         IF(IALFA.EQ.2) LA=18
         IF(IALFA.GE.3) LA=9 
      ENDIF
      IF(IPODT.EQ.1) THEN
         IF(NCVE.NE.2.OR.NCVS.NE.2) IALFA=-1
         IF(IALFA.EQ.1) LA=4
         IF(IALFA.EQ.2) LA=5
         IF(IALFA.GE.3) LA=6
      ENDIF
      IF(IPODT.EQ.0) THEN
         IF(NCVE.NE.2.AND.IALFA.GE.0) IALFA=5
         IF(IALFA.EQ.3) LA=3
         IF(IALFA.EQ.4) LA=5
         IF(IALFA.GE.5) LA=2
      ENDIF
      IF(IALFA.GE.0) THEN
         CALL DELJIV(LMXAU,2,INDL)
         IF(INDL.EQ.0) LMXAU=LMXAU+1
         LALFE=LMXAU
         LHAEM=LALFE+NE*LA*NS*IDVA
         LHINV=LHAEM+NE*LA*NS*IDVA
         LGEEK=LHINV+NE*LA*LA*NS*IDVA
         LMXAU=LGEEK+NE*LA*NCVN*NS*IDVA
C        WRITE(3,*) 'LALFE,LHAEM,LHINV,LGEEK',LALFE,LHAEM,LHINV,LGEEK
C        WRITE(3,*) 'LMXAU,NCVN,NCVJJ',LMXAU,NCVN,NCVJJ
      ENDIF
      LESILA=LMXAU
      LMXAU=LESILA+NSILA*ND*IDVA
C
C     REPERI LOKALNIH PRITISAKA
      LFPRL=LMXAU
      LNPRL=LMXAU
      IF(NPRL.GT.0) THEN
         LNPRL=LFPRL+NPRL*IDVA
         LMXAU=LNPRL+NPRL*6
      ENDIF
C     REPERI KONCETRISANIH LOKALNIH SILA
      LFCFL=LMXAU
      LNCFL=LMXAU
      IF(NCFL.GT.0) THEN
         LNCFL=LFCFL+NCFL*IDVA
         LMXAU=LNCFL+NCFL*5
      ENDIF
C
      MXAU = LMXAU - 1
      CALL DELJIV(MXAU,2,INDL)
      IF(INDL.EQ.1) MXAU=MXAU+1
      LMAX=LAU+MXAU
    4 IF(LMAX.GT.MTOT) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) LMAX,MTOT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) LMAX,MTOT
      STOP
      ENDIF
C
      IF((IALFA.GE.0.OR.NSILA.GT.0).AND.IREST.NE.1) 
     1CALL CLEAR(AU(LALFE),(LFCFL-LALFE)/IDVA)
C
C     UCITAVANJE KONCETRISANIH LOKALNIH SILA
      IF(NCFL.GT.0) THEN
         CALL UCLOKS(AU(LFCFL),AU(LNCFL),NCFL)
C         CALL WRR(AU(LFCFL),NCFL,'FCFL')
C         CALL IWRR(AU(LNCFL),5*NCFL,'NCFL')
      ENDIF
C
C     UCITAVANJE LOKALNIH PRITISAKA
      IF(NPRL.GT.0) THEN
         CALL UCLOKP(AU(LFPRL),AU(LNPRL),NPRL)
C         CALL WRR(AU(LFPRL),NPRL,'FPRL')
C         CALL IWRR(AU(LNPRL),6*NPRL,'NPRL')
      ENDIF
C
      NGS12=NGAUSX*NGAUSY*NGAUSZ
C
CS     ZAPISIVANJE SKALARA NA DIREKT ACCES FILE 
CE     WRITE SCALARS TO A DIRECT ACCESS FILE
C
      IF(LDUZI.LE.100) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) LDUZI
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) LDUZI
      STOP
      ENDIF
C     WRITE(3,*) '91,LAU,LMAX8',LAU,LMAX8
      WRITE(IELEM,REC=LMAX8)
     1NGAUSX,NGAUSY,NGAUSZ,BETA,NCVE,ITERME,ICORGT,LCEL,LELC,NMA,NMI,
     1MXAU,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,LTR0,IPODT,
     1ND,NGS12,MSLOJ,MXS,MSET,NSILA,LESILA,
     1LNSLOJ,LMATSL,LDSLOJ,LBBET,INCOTX,INCOTY,INCOTZ,
     1LBET0,(CPP(J,1),J=1,3),IBB0,LALFE,LHAEM,LHINV,LGEEK,IALFA,
     1INDBTH,INDDTH,LTBTH,LTDTH,NS,NCVS,NCVP,NCVJ,LNOS,LCORS,LIDP,
     1LNVEZ,LNPR,LFPR,LIDD,LLMU,LMA9,NMC,JEDPP,JEDNN,
     1LCOPT,LNMA,LIPG,LISN,LIPR,LTHI,LTBT,LTDT,NPRES,
     1NWPP,NWKK,NWEE,NCU,NCVU,IND3D,INDKOV,ICOEF,(COEF(I),I=1,3),
     1LDLV,LDLV1,LDLV0,LDLV2,IMALR,NCFL,LNCFL,LFCFL,IPOMT,LNPOM,
     1NPRL,LNPRL,LFPRL,LTEZP,INDSEL,INDCEP,ILEDE,NLD,ICPM1
C         WRITE(3,*) '91,LMAX8,MXAU,LNSLOJ',LMAX8,MXAU,LNSLOJ
      CALL WRITDD(AU(LNSLOJ),MXAU/IDVA,IELEM,LMAX8,LDUZI)
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
C
CS     PLASTICNOST
CE     PLASTICITY
C
      LPLAST=LMAX
      LPLAS1=LMAX
      LSIGMA=LMAX
      LCOR0 =LMAX
      LGM0  =LMAX
      LVITOP=LMAX
      LVITTP=LMAX
      IF(IATYP.EQ.0) GO TO 10
      IF(NMODM.LE.4) GO TO 10
      NPROS=NE*NGS12*NS*MXS*MODPRO( NMODM )*IDVA
      LPLAS1=LPLAST+NPROS
      LMAX=LPLAS1+NPROS
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      IF(IREST.NE.1) THEN
         CALL CLEAR(A(LPLAST),NPROS*2/IDVA)
C         WRITE(3,*) '91,LMAX8,NPROS,LPLAST',LMAX8,NPROS,LPLAST
         CALL WRITDD(A(LPLAST),NPROS/IDVA,IELEM,LMAX8,LDUZI)
C         WRITE(3,*) '91,LMAX8,NPROS,LPLAS1',LMAX8,NPROS,LPLAS1
         CALL WRITDD(A(LPLAS1),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      ELSE
         CALL READDD(A(LPLAST),NPROS/IDVA,IELEM,LMAX8,LDUZI)
         CALL READDD(A(LPLAS1),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      ENDIF
      IF(IATYP.GE.4) GO TO 10
      NPROS=0
      LSIGMA=LMAX
      IF(JEDPP.GT.0) GO TO 40
      IF(ITERME.EQ.1) GO TO 20
      IF(ICORGT.EQ.1) GO TO 30
      RETURN
C
CE    POINTER FOR STRESSES AT INTEGRATION POINTS FOR ALL ELEMENTS,
CE    USED FOR LINEAR ANALYSIS
   10 LSIGMA=LMAX
      N45=NLD*NS
      NPROS=NE*NGS12*N45*MXS*IDVA
      LMAX=LSIGMA+NPROS
   40 NPRO1=JEDPP*IDVA
      LVITOP=LMAX
      LMAX=LVITOP+NPRO1
      NPROS=NPROS+NPRO1
      IF(IATYP.GT.0) THEN
         LVITTP=LMAX
         LMAX=LVITTP+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
CE    POINTER FOR COORDINATES IN TIME (T) USED FOR LARGE STRAIN ANALYSIS
      LCOR0=LMAX
      IF(IATYP.GE.4) THEN
         NPRO1=NE*NCVE*3*IDVA
         LGM0=LCOR0+NPRO1
         LMAX=LGM0+NPRO1*3
         NPROS=NPROS+NPRO1*4
      ENDIF
CE    POINTER FOR TEMPERATURES AT INTEGRATION POINTS
   20 LTEMGT=LMAX
      IF(ITERME.EQ.1) THEN
         NPRO1=NE*NGS12*NS*MXS*IDVA
         LMAX=LTEMGT+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
CE    POINTER FOR INTEGRATION POINTS COORDINATES
   30 LCORGT=LMAX
      IF(ICORGT.EQ.1) THEN
         NPRO1=NE*NGS12*NS*3*MXS*IDVA
         LMAX=LCORGT+NPRO1
         NPROS=NPROS+NPRO1
      ENDIF
      IF(LMAX.GT.MTOT) CALL ERROR(1)
C        WRITE(3,*) '91,LMAX8,NPROS,LSIGMA',LMAX8,NPROS,LSIGMA
      IF(IREST.NE.1) THEN
         CALL CLEAR(A(LSIGMA),NPROS/IDVA)
C
CS       ZADAVANJE POCETNE VREDNOSTI ZA - B
CE       INITIAL VALUE FOR - B 
C
         IF(IATYP.GE.4)
     1   CALL ZADA9B(A(LSIGMA),NE,NGS12,MXS,N45,NS)
         CALL WRITDD(A(LSIGMA),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      ELSE
         CALL READDD(A(LSIGMA),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      ENDIF
      RETURN
C-----------------------------------------------------------------------
 2000 FORMAT(//' DUZINA STAZE RECL=LDUZI=',I5,' ZA FILE=IELEM, ACCESS=
     1DIRECT, MORA BITI VECA OD    100'//' PROGRAM STOP'//)
 2030 FORMAT(///' NEDOVOLJNA DIMENZIJA U VEKTORU A ZA PODATKE O ELEMENTI
     1MA GREDE '/' POTREBNA DIMENZIJA , LMAX=',I10/' RASPOLOZIVA DIMENZI
     2JA,  MTOT =',I10)
 2500 FORMAT(//' I Z V E S T A J    Z A    G R U P U',I5//
     1' BROJ CVOROVA GREDNIH SUPERELEMENATA U GRUPI ........ NCVU =',I9/
     1' BROJ UNUTRASNJIH JEDNACINA ZA GRUPU ............... JEDPP =',I9/
     1' BROJ KONTURNIH JEDNACINA ZA GRUPU ................. JEDNN =',I9/
     2' BROJ CLANOVA U MATRICI KRUTOSTI GRUPE .............. NWKK =',I9) 
C-----------------------------------------------------------------------
 6000 FORMAT(//' RECORD LENGTH RECL=LDUZI=',I5,'  FILE=IELEM, ACCESS=
     1DIRECT, MUST BE  .GT. THEN  100'//' PROGRAM STOP'//)
 6030 FORMAT(///' NOT ENOUGH SPACE IN WORKING VECTOR  A'
     1/' REQUESTED DIMENSION , LMAX=',I10
     2/' AVAILABLE DIMENSION , MTOT=',I10)
 6500 FORMAT(//' R E P O R T    F O R    G R O U P',I5//
     1' TOTAL NUMBER BEAM NODES IN GROUP ................... NCVU =',I9/
     1' TOTAL NUMBER INTERNAL EQUATIONS FOR GROUP ......... JEDPP =',I9/
     1' TOTAL NUMBER CONTOUR EQUATIONS FOR GROUP .......... JEDNN =',I9/
     2' NUMBER ELEMENTS INTO MATRIX OF GROUP SYSTEM ........ NWKK =',I9) 
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE ULAZE9(CORD,ID,NP,NPRE,DUZS,THID,NEL,NS,TEZP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*1 CH
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO READ NODAL POINT COORDINATES AND CONSTRAINTS SECTION
CS.    P R O G R A M
CS.        ZA UCITAVANJE KOORDINATA I OGRANICENJA CVORNIH TACAKA PRESEKA
C .
CE.           I=1,NP (NP - TOTAL NUMBEL OF NODAL POINT
CS.           I=1,NP (NP - UKUPAN BROJ CVORNIH TACAKA)
C .
CE.            CH - INDICATOR OF POLAR COORDINATES SYSTEM
CS.            CH - KARAKTER INDIKATOR POLARNOG KOORD. SISTEMA
C .
CE.            CORD(I,1) - X COORDINATE
CE.            CORD(I,2) - Y COORDINATE
CE.            CORD(I,3) - Z COORDINATE
CS.            CORD(I,1) - KOORDINATA  X
CS.            CORD(I,2) - KOORDINATA  Y
CS.            CORD(I,3) - KOORDINATA  Z
C .
CE.              ID(I,1) - CONSTRAINT OF TRANSLATION IN DIRECTION X AXIS
CE.              ID(I,2) - CONSTRAINT OF TRANSLATION IN DIRECTION Y AXIS
CE.              ID(I,3) - CONSTRAINT OF TRANSLATION IN DIRECTION Z AXIS
CE.              ID(I,4) - CONSTRAINT OF ROTATION AROUND X AXIS
CE.              ID(I,5) - CONSTRAINT OF ROTATION AROUND Y AXIS
CE.              ID(I,6) - CONSTRAINT OF ROTATION AROUND Z AXIS
CS.              ID(I,1) - OGRANICENJE POMERANJA U PRAVCU - X OSE
CS.              ID(I,2) - OGRANICENJE POMERANJA U PRAVCU - Y OSE
CS.              ID(I,3) - OGRANICENJE POMERANJA U PRAVCU - Z OSE
CS.              ID(I,4) - OGRANICENJE ROTACIJA OKO - X OSE
CS.              ID(I,5) - OGRANICENJE ROTACIJA OKO - Y OSE
CS.              ID(I,6) - OGRANICENJE ROTACIJA OKO - Z OSE
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      include 'paka.inc'
      
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /POSTPR/ LNDTPR,LNDTGR,NBLPR,NBLGR,INDPR,INDGR
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /MPOINC/ MMP,NMPC,NEZAV,LCMPC,LMPC,NEZA1
      COMMON /PODTIP/ IPODT
      COMMON /SRPSKI/ ISRPS
      DIMENSION CORD(NP,*),ID(NP,*),IOPGL(6),DUZS(*),THID(*),NEL(NS,*)
      DIMENSION DXYZ(3),XYZ(3),TEZP(3,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' ULAZE9'
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2300) NPRE
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6300) NPRE
      ENDIF
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) (IOPGL(I),I=1,6),(XYZ(I),I=1,3),ALFAU,INDOF
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1020) (IOPGL(I),I=1,6),(XYZ(I),I=1,3),ALFAU,INDOF
      DO 700 I=1,3
         TEZP(I,NPRE)=XYZ(I)
  700 CONTINUE
C 
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040) (IOPGL(I),I=1,6),(XYZ(I),I=1,3),ALFAU,INDOF
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040) (IOPGL(I),I=1,6),(XYZ(I),I=1,3),ALFAU,INDOF
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000)
      ENDIF
C
      I = 0
      NAUT=0
    5 I=I+1
      CALL ISPITA(ACOZ)
      IF(I.EQ.1) KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) N,CH,(ID(N,J),J=1,6),(CORD(N,J),J=1,3),KORC
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) N,CH,(ID(N,J),J=1,6),(CORD(N,J),J=1,3),KORC
      IF(N.GT.NP) GO TO 110
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)
     1WRITE(IZLAZ,5010) N,CH,(ID(N,J),J=1,6),(CORD(N,J),J=1,3),KORC
      IF(NAUT.GT.0) GO TO 30
      IF(KORC.NE.0) GO TO 20
      IF(CH.EQ.'p'.OR.CH.EQ.'P') CALL POLAR(CORD(N,1),CORD(N,2))
      IF(I.EQ.NP) GO TO 50
      GO TO 5
C
   20 NAUT=1
      N1=N
      KORA=KORC
      GO TO 5
C
CE    AUTOMATIC GENERATE DATA BETWEEN NODAL POINT N1 AND N2
CS    AUTOMATSKO GENERISANJE PODATAKA IZMEDJU CVOROVA N1 I N2
C
   30 N2=N
      CALL DELJIV(N2-N1,KORA,INDD)
      IF(INDD.EQ.1) GO TO 100
      RKORA = KORA
      RN1N2 = N2-N1
      DD = RKORA/RN1N2
      IF(DD.LT.0.0D00) GO TO 100
      DO 31 J=1,3
   31 DXYZ(J)=DD*(CORD(N2,J)-CORD(N1,J))
      IAUT=(N2-N1)/KORA-1
      N = N1
      DO 34 J=1,IAUT
      DO 35 K=1,3
   35 CORD(N+KORA,K)=CORD(N,K)+DXYZ(K)
      IF(CH.EQ.'p'.OR.CH.EQ.'P') CALL POLAR(CORD(N,1),CORD(N,2))
      DO 36 K=1,6
   36 ID(N+KORA,K)=ID(N1,K)
      N=N+KORA
   34 CONTINUE
      IF(CH.EQ.'p'.OR.CH.EQ.'P') CALL POLAR(CORD(N,1),CORD(N,2))
      I=I+IAUT
      IF(I.EQ.NP)THEN
        IF(CH.EQ.'p'.OR.CH.EQ.'P') CALL POLAR(CORD(N2,1),CORD(N2,2))
        GO TO 50
      ENDIF
      NAUT=0
      IF(KORC.EQ.0)THEN
        IF(CH.EQ.'p'.OR.CH.EQ.'P') CALL POLAR(CORD(N2,1),CORD(N2,2))
        GO TO 5
      ENDIF
      KORA=KORC
      NAUT=1
      N1=N2
      GO TO 5
C
CE    UPDATE MATRIX ID
CS    KORIGOVANJE MATRICE ID
C
   50 DO 60 J=1,6
         IF(IOPGL(J).EQ.0) GO TO 60 
         DO 61 N=1,NP
            ID(N,J)=1
   61    CONTINUE
   60 CONTINUE
C  50 JEDN=0
C     NMPC=0
C     DO 60 N=1,NP
C     DO 60 J=1,6
C     IF(IOPGL(J).EQ.1) THEN
C       ID(N,J)=0
C       GO TO 60
C     ENDIF
C     IF(ID(N,J)) 64,66,65
C  64 NMPC=NMPC+1
C     GO TO 60
C  65 ID(N,J)=0
C     GO TO 60
C  66 JEDN=JEDN+1
C     ID(N,J)=JEDN
C  60 CONTINUE
C
CE    UPDATE COORDINATES
CS    KORIGOVANJE KOORDINATA
C
      PI = 1.
      PI = 4.*DATAN(PI)
      ALFAU=ALFAU*PI/180.
      DO 80 N=1,NP
         CORD(N,1)=CORD(N,1)+XYZ(1)
         CORD(N,2)=CORD(N,2)+XYZ(2)
         CORD(N,3)=CORD(N,3)+XYZ(3)
         IF(DABS(ALFAU).GT.1.D-9) THEN
            XP=CORD(N,1)*DCOS(ALFAU)-CORD(N,2)*DSIN(ALFAU)
            YP=CORD(N,1)*DSIN(ALFAU)+CORD(N,2)*DCOS(ALFAU)
            CORD(N,1)=XP
            CORD(N,2)=YP
         ENDIF
   80 CONTINUE
CS    RACUNANJE KARAKTERISTIKA PRESEKA
      IF(IPODT.EQ.1) 
     1CALL PROF91(CORD,DUZS,THID,NEL,NP,NS,INDOF,TEZP,NPRE)
C
CE    PRINT GENERATED DATA FOR NODAL POINTS
CS    STAMPANJE GENERISANIH PODATAKA O CVOROVIMA
C
      IF(NULAZ.NE.1.AND.NULAZ.NE.3) RETURN
      CALL WBROJK(KARTI,1)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2020)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6020)
      DO 70 I=1,NP
      WRITE(IZLAZ,5030) I,(ID(I,J),J=1,6),(CORD(I,J),J=1,3)
   70 CONTINUE
      RETURN
C
  100 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) N2,N1,KORA
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) N2,N1,KORA
      STOP 'PROGRAM STOP: PAK91 - ULAZE9'
C
  110 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200) N,NP
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200) N,NP
      STOP 'PROGRAM STOP: PAK91 - ULAZE9'
C
 1020 FORMAT(6I2,3X,4F10.0,I5)
 1000 FORMAT(I5,A1,6I2,2X,3F10.2,I5)
 5010 FORMAT(1X,I5,4X,A1,6I3,2X,3F12.6,I5,I5)
 5030 FORMAT(1X,I5,6I5,3F12.6,I5)
C-----------------------------------------------------------------------
 2300 FORMAT(//////1X,
     1'U C I T A N I   P O D A C I   Z A   P R E S E K =',I5/
     11X,54('-'))
 2000 FORMAT(////1X,
     1'U C I T A N I   P O D A C I   O   C V O R O V I M A'/
     11X,51('-')//
     21X,'(MOGUCE GENERISANJE PODATAKA O CVOROVIMA,'/
     32X,'UCITATI POTREBAN BROJ KARTICA ZA DEFINISANJE SVIH CVOROVA)'//
     11X,' CVOR KORD    OGRANICENJA          K  O  O  R  D  I  N  A  T 
     1E     KOR KOSI'/
     11X,' BROJ SIST NX NY NZ WX WY WZ        X           Y           Z
     1      GEN SIST')
 2020 FORMAT(1X,
     1'G E N E R I S A N I   P O D A C I   O   C V O R O V I M A'/
     11X,57('-')///
     11X,' CVOR  O  G  R  A  N  I  C  E  NJ  A    K  O  O  R  D  I  N  A
     1  T  E    KOSI'/
     11X,' BROJ   NX   NY   NZ   WX   WY   WZ      X           Y        
     1   Z      SIST')
 2040 FORMAT(////11X,
     9'INDIKATORI GLOBALNIH OGRANICENJA LOKALNIH POMERANJA I ROTACIJA CV
     1OROVA SEGMENATA U PRESEKU'/
     916X,'EQ.0; SLOBODAN'/
     916X,'EQ.1; OGRANICEN'/
     916X,'     LOCALNO POMERANJE DUZ XL - OSE ...... IOPGL(1) =',I5/
     916X,'     LOCALNO POMERANJE DUZ YL - OSE ...... IOPGL(2) =',I5/
     916X,'     LOCALNO POMERANJE DUZ ZL - OSE ...... IOPGL(3) =',I5/
     916X,'     LOCALNA ROTACIJA OKO XL - OSE ....... IOPGL(4) =',I5/
     916X,'     LOCALNA ROTACIJA OKO YL - OSE ....... IOPGL(5) =',I5/
     916X,'     LOCALNA ROTACIJA OKO ZL - OSE ....... IOPGL(6) =',I5///
     911X,'KOREKCIJA LOKALNIH KOORDINANTA U XL PRAVCU . XYZ(1) =',F10.3/
     911X,'KOREKCIJA LOKALNIH KOORDINANTA U YL PRAVCU . XYZ(2) =',F10.3/
     911X,'KOREKCIJA LOKALNIH KOORDINANTA U ZL PRAVCU . XYZ(3) =',F10.3/
     311X,'ROTACIJA PRESEKA OKO LOKALNOG PRAVCA - ZL ... ALFAU =',F10.3/
     111X,'INDIKATOR POMERENOSTI NEUTRALNE OSE ......... INDOF =',I5/
     116X,'EQ.0; NEUTRALNA OSA U TEZISTU PRESEKA'/ 
     116X,'EQ.1; NEUTRALNA OSA U LOKALNOM KOORDINATNOM POCETKU'/) 
 2100 FORMAT(///' BROJ N2=',I5,' NE MOZE SE DOBITI SABIRANJEM BROJA N1='
     1,I5,' I KONACNOG BROJA KORAKA KORA=',I5)
 2200 FORMAT(///' UCITANI CVOR BROJ N =',I5,' VECI JE OD UKUPNOG BROJA
     1CVORNIH TACAKA NP =',I5)
C-----------------------------------------------------------------------
 6300 FORMAT(//////1X,
     1'I N P U T   D A T A   F O R   S E C T I O N =',I5/
     11X,50('-'))
 6000 FORMAT(////1X,
     1'I N P U T   N O D A L   D A T A'/
     11X,31('-')///
     11X,' NODE COOR    CONSTRAINTS        C  O  O  R  D  I  N  A  T  E
     1 S   STEP SKEW'/
     11X,' NUMB SYST NX NY NZ WX WY WZ        X           Y           Z
     1     GENE SYST')
 6020 FORMAT(1X,
     1'G E N E R A T E D   N O D A L   D A T A'/
     11X,39('-')///
     11X,' NODE  C  O  N  S  T  R  A  I  N  S   C  O  O  R  D  I  N  A  
     1T  E  S   SKEW'/
     11X,' NUMB   NX   NY   NZ   WX   WY   WZ      X           Y        
     1   Z      SYST')
 6040 FORMAT(////11X,
     9'INDICATORS FOR GLOBAL CONSTRAINTS OF LOCAL DISPLACEMENTS AND ROTA
     1TIONS NODES IN CROSS-SECTION'/
     916X,'EQ.0; FREE'/
     916X,'EQ.1; RESTRAINED'/
     916X,'       LOCAL TRANSLATION IN XL DIRECTION . IOPGL(1) =',I5/
     916X,'       LOCAL TRANSLATION IN YL DIRECTION . IOPGL(2) =',I5/
     916X,'       LOCAL TRANSLATION IN ZL DIRECTION . IOPGL(3) =',I5/
     916X,'       LOCAL ROTATION AROUND XL AXIS ..... IOPGL(4) =',I5/
     916X,'       LOCAL ROTATION AROUND YL AXIS ..... IOPGL(5) =',I5/
     916X,'       LOCAL ROTATION AROUND ZL AXIS ..... IOPGL(6) =',I5///
     911X,'LOCAL COORDINATES CORECTION IN XL DIRECTION  XYZ(1) =',F10.3/
     911X,'LOCAL COORDINATES CORECTION IN YL DIRECTION  XYZ(2) =',F10.3/
     911X,'LOCAL COORDINATES CORECTION IN ZL DIRECTION  XYZ(3) =',F10.3/
     311X,'CROSS-SECTION ROTATION AROUND ZL DIRECTION .. ALFAU =',F10.3/
     311X,'INDICATOR NEUTRAL AXIS OFSET ................ INDOF =',I5/
     116X,'EQ.0; NEUTRAL AXIS IN CROSS-SECTION GRAVITY CENTER'/ 
     116X,'EQ.1; NEUTRAL AXIS IN LOCAL COORDINATE SYSTEM ORIGIN'/) 
 6100 FORMAT(///' NUMBER N2=',I5,' HAS NOT OBTAIN BY THE SUM OF NUBMBER
     1N1 =',I5,'AND FINITE NUMBER OF STEPS KORA=',I5)
 6200 FORMAT(///' NODE NUMBER N =',I5,' IS GREATER THAN TOTAL NUMBER OF
     1NODAL POINT NP =',I5)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE UEL92 (NEL,MATV,IPGCV,ISNAP,IPRCV,THICK,NSLOJ,MATSL,
     1                  BBET,DSLOJ,TBTH,TDTH,NE,NCVE)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO READING INPUT DATA ABOUT 2D SEGMENTS
CS.   P R O G R A M
CS.      ZA UCITAVANJE ULAZNIH PODATAKA O SEGMENTIMA: 2D
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      CHARACTER*5  CH
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /SRPSKI/ ISRPS
      COMMON /PODTIP/ IPODT
      COMMON /RESTAR/ TSTART,IREST
C
      DIMENSION NEL(NE,*),MATV(*),IPGCV(*),ISNAP(*),IPRCV(*),THICK(*),
     1          NSLOJ(*),MATSL(MSLOJ,*),BBET(MSLOJ,*),DSLOJ(MSLOJ,*),
     1          TBTH(*),TDTH(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UEL92 '
      NGE=1
      IF(ISRPS.EQ.0) CH=' BROJ'
      IF(ISRPS.EQ.1) CH='NUMBE'
      MXS=1
      ICORGT=0
C
CS     P  O  D  A  C  I      O      S  L  O  J  E  V  I  M  A
CE     D  A  T  A      A  B  O  U  T      L  A  Y  E  R  S
C
      IF(MSET.GT.0) THEN
         CH='  SET'
      IF(ISRPS.EQ.0.AND.(NULAZ.EQ.1.OR.NULAZ.EQ.3))
     1WRITE(IZLAZ,2500)
      IF(ISRPS.EQ.1.AND.(NULAZ.EQ.1.OR.NULAZ.EQ.3))
     1WRITE(IZLAZ,6500)
        DO 2 I=1,MSET
          CALL ISPITA(ACOZ)
          IF(INDFOR.EQ.1)
     1    READ(IULAZ,*) NSLOJ(I)
          IF(INDFOR.EQ.2)
     1    READ(ACOZ,1000) NSLOJ(I)
            IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2530) I,NSLOJ(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6530) I,NSLOJ(I)
            ENDIF
            IF(NSLOJ(I).LT.1.OR.NSLOJ(I).GT.MSLOJ) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2505)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6505)
               STOP 'STOP - UEL4B'
            ENDIF
            IF(NSLOJ(I).GT.MXS) MXS=NSLOJ(I) 
            TTT=0.D0
            DO 1 J=1,NSLOJ(I)
               CALL ISPITA(ACOZ)
               IF(INDFOR.EQ.1)
     1         READ(IULAZ,*)   MATSL(J,I),DSLOJ(J,I),BBET(J,I)
               IF(INDFOR.EQ.2)
     1         READ(ACOZ,1515) MATSL(J,I),DSLOJ(J,I),BBET(J,I)
               IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2540) J,MATSL(J,I),DSLOJ(J,I),BBET(J,I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6540) J,MATSL(J,I),DSLOJ(J,I),BBET(J,I)
               ENDIF
               BBET(J,I)=BBET(J,I)*3.1415926536D0/180.D0
               TTT=TTT+DSLOJ(J,I)
    1       CONTINUE
CS....      PROVERA ZA DEBLJINE
            IF(DABS(TTT-1.D0).LT.1.D-6) GO TO 2
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2550) TTT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6550) TTT
            STOP 'STOP - UL2EKC'
    2    CONTINUE      
      ENDIF
C
CS     P  O  D  A  C  I      O      E  L  E  M  E  N  T  I  M  A
CE     D  A  T  A      A  B  O  U  T      E  L  E  M  E  N  T  S
C
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(IPODT.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2002) NGE,CH
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6002) NGE,CH
      ENDIF
      IF(IPODT.EQ.1) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2001) NGE,CH
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6001) NGE,CH
      ENDIF
      IF(IPODT.EQ.2) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NGE,CH
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NGE,CH
      ENDIF
      ENDIF
      IT1=4
      IT2=9
      IF(IPODT.EQ.1) THEN
         IT1=2
         IT2=3
      ENDIF
      IF(IPODT.EQ.0) THEN
         IT1=1
         IT2=1
      ENDIF
      NMATS=  1
      IPRCOS=-1
      IPGSS= -1
      ISNAA= -1
      ISNAA=  0
      THICS=  1.D0
      I = 0
      NAUT=0
    5 I = I + 1
      CALL ISPITA(ACOZ)
      IF(I.EQ.1) KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) NN,NMAT,IPRCO,ISNA,IPGS,THI,KORC,BTH,DTH
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1010) NN,NMAT,IPRCO,ISNA,IPGS,THI,KORC,BTH,DTH
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) (NEL(NN,J),J=1,NCVE)
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) (NEL(NN,J),J=1,NCVE)
      IF(IPRCO.EQ.1) ICORGT=1
      IF(NMAT.EQ.0) NMAT=NMATS
      NMATS=NMAT
      MATV(NN)= NMAT
      IF(IPRCO.EQ.0) IPRCO=IPRCOS
      IPRCOS=IPRCO
      IF(IPRCO.LT.0) IPRCO = 0
      IPRCV(NN)=IPRCO
      IF(ISNA.EQ.0) ISNA=ISNAA
      ISNAA=ISNA
      IF(ISNA.LT.0) ISNA = 0
      ISNAP(NN)=ISNA
      IF(IPGS.EQ.0) IPGS=IPGSS
      IPGSS=IPGS
      IF(IPGS.LT.0) IPGS = 0
      IPGCV(NN)=IPGS
      IF(DABS(THI).LT.1.0D-10) THI=THICS
      THICS=THI
      THICK(NN)=THI
      IF(INDBTH.EQ.1) TBTH(NN)=BTH
      IF(INDDTH.EQ.1) TDTH(NN)=DTH
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
         IF(IPODT.EQ.0) WRITE(IZLAZ,5004) NN,(NEL(NN,J),J=1,NCVE),NMAT,
     1                  IPRCO,ISNA,THI,KORC
         IF(IPODT.EQ.1.AND.NCVE.EQ.2) 
     +                  WRITE(IZLAZ,5002) NN,(NEL(NN,J),J=1,NCVE),NMAT,
     1                  IPRCO,ISNA,THI,KORC
         IF(IPODT.EQ.1.AND.NCVE.EQ.3) 
     +                  WRITE(IZLAZ,5003) NN,(NEL(NN,J),J=1,NCVE),NMAT,
     1                  IPRCO,ISNA,THI,KORC
         IF(IPODT.EQ.2) WRITE(IZLAZ,5000) NN,(NEL(NN,J),J=1,IT1),NMAT,
     1                  IPRCO,ISNA,KORC
         IF(IPODT.EQ.2.AND.NCVE.GT.IT1) 
     +                  WRITE(IZLAZ,5001) (NEL(NN,J),J=IT1+1,NCVE)
         IF(INDBTH.EQ.1) THEN
         IF(DABS(TBTH(NN)).GT.1.0D-10) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040) TBTH(NN)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040) TBTH(NN)
         ENDIF
         ENDIF
         IF(INDDTH.EQ.1) THEN 
         IF(DABS(TDTH(NN)).GT.1.0D-10) THEN 
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2050) TDTH(NN)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6050) TDTH(NN)
         ENDIF
         ENDIF
      ENDIF
      IF(NAUT.GT.0) GO TO 30
      IF(KORC.NE.0) GO TO 20
      IF(I.EQ.NE) GO TO 50
      GO TO 5
C
   20 NAUT=1
      NN1=NN
      KORA=KORC
      GO TO 5
C
CS     AUTOMATSKO GENERISANJE PODATAKA IZMEDJU CVOROVA N1 I N2
CE     AUTOMATIC  GENERATION BETWEN NODES  N1  AND  N2
C
   30 NN2=NN
      IF(NN1.GE.NN2) GO TO 200
      N11=NEL(NN1,1)
      N22=NEL(NN2,1)
      N12=N22-N11
      CALL DELJIV(N12,KORA,INDD)
      IF(INDD.EQ.1) GO TO 100
      DO 40 NC=2,IT1
         N11=NEL(NN1,NC)
         N22=NEL(NN2,NC)
         N21=N22-N11
         IF(N12.NE.N21) GO TO 100
   40 CONTINUE
      IF(NCVE.GT.IT1) THEN
         DO 45 NC=IT1+1,NCVE
            N11=NEL(NN1,NC)
            N22=NEL(NN2,NC)
            IF(N11.EQ.0.AND.N22.EQ.0) GO TO 45
            N21=N22-N11
            IF(N12.NE.N21) GO TO 100
   45    CONTINUE
      ENDIF
      NNN=NN2-NN1-1
      NGG=N12/KORA-1
      IF(NNN.NE.NGG) THEN
         GO TO 150
      ENDIF
      IAUT=N12/KORA-1
      DO 34 J=1,IAUT
         JJ=NN1+J
         MATV(JJ) = MATV(NN1)
         IPRCV(JJ)=IPRCV(NN1)
         ISNAP(JJ)=ISNAP(NN1)
         IPGCV(JJ)=IPGCV(NN1)
         THICK(JJ)=THICK(NN1)
         IF(INDBTH.EQ.1) TBTH(JJ) = TBTH(NN1)
         IF(INDDTH.EQ.1) TDTH(JJ) = TDTH(NN1)
         DO 35 II=1,NCVE
            NODP=NEL(JJ-1,II)
            NEL(JJ,II)=NODP+KORA
            IF(NODP.EQ.0) NEL(JJ,II) = 0
   35    CONTINUE
   34 CONTINUE
      I=I+IAUT
      IF(I.EQ.NE) GO TO 50
      NAUT=0
      IF(KORC.EQ.0) GO TO 5
      KORA=KORC
      NAUT=1
      NN1=NN2
      GO TO 5
C
CS     ODREDJIVANJE MAKSIMALNOG BROJA CVOROVA
CE     OBTAIN MAXIMUM NUMBER OF NODES PER ELEMENT
C
   50 IF(IREST.EQ.1) GO TO 61
      NCVE=IT1
      DO 60 I=1,NE
      DO 60 J=IT1+1,IT2
         IJ=NEL(I,J)
         IF(IJ.GT.0.AND.J.GT.NCVE) NCVE=J
   60 CONTINUE
C
CS     STAMPANJE UCITANIH I GENERISANIH PODATAKA
CE     PRINT INPUT AND GENERATED DATA
C
   61 IF(NULAZ.NE.1.AND.NULAZ.NE.3) RETURN
         CALL WBROJK(KARTI,0)
         IF(IPODT.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2142) NGE,CH
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6142) NGE,CH
         ENDIF
         IF(IPODT.EQ.1) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2141) NGE,CH
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6141) NGE,CH
         ENDIF
         IF(IPODT.EQ.2) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2140) NGE,CH
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6140) NGE,CH
         ENDIF
         DO 70 I=1,NE
            IF(IPODT.EQ.0) WRITE(IZLAZ,5004) I,(NEL(I,J),J=1,NCVE),
     1                     MATV(I),IPRCV(I),ISNAP(I),THICK(I)
            IF(IPODT.EQ.1.AND.NCVE.EQ.2) 
     +                     WRITE(IZLAZ,5002) I,(NEL(I,J),J=1,NCVE),
     1                     MATV(I),IPRCV(I),ISNAP(I),THICK(I)
            IF(IPODT.EQ.1.AND.NCVE.EQ.3) 
     +                     WRITE(IZLAZ,5003) I,(NEL(I,J),J=1,NCVE),
     1                     MATV(I),IPRCV(I),ISNAP(I),THICK(I)
            IF(IPODT.EQ.2) WRITE(IZLAZ,5000) I,(NEL(I,J),J=1,IT1),
     1                     MATV(I),IPRCV(I),ISNAP(I)         
            IF(IPODT.EQ.2.AND.NCVE.GT.IT1) 
     +                     WRITE(IZLAZ,5001) (NEL(I,J),J=IT1+1,NCVE)
         IF(INDDTH.EQ.1) THEN 
         IF(DABS(TDTH(I)).GT.1.0D-10) THEN 
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040) TBTH(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040) TBTH(I)
         ENDIF
         ENDIF
         IF(INDDTH.EQ.1) THEN 
         IF(DABS(TDTH(I)).GT.1.0D-10) THEN 
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2050) TDTH(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6050) TDTH(I)
         ENDIF
         ENDIF
   70    CONTINUE
      RETURN
C
  200 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2120) NN1,NN2
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6120) NN1,NN2
      STOP
C
  150 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2110) NN1,NN2,NGG
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6110) NN1,NN2,NGG
      STOP
C
  100 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) N22,N11,KORA
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) N22,N11,KORA
      STOP
C
 1000 FORMAT(14I5)
 1010 FORMAT(5I5,F10.0,I5,2F10.0)
 1515 FORMAT(I5,2F10.0)
 5000 FORMAT(I6,1X,4I6,5X,3I6,17X,I6)
 5001 FORMAT(6X,5I6)
 5002 FORMAT(I6,1X,2I6,17X,3I6,6X,1PD11.3,I6)
 5003 FORMAT(I6,1X,3I6,11X,3I6,6X,1PD11.3,I6)
 5004 FORMAT(I6,1X,I6,23X,3I6,6X,1PD11.3,I6)
C-----------------------------------------------------------------------
 2000 FORMAT(///' UCITANI PODACI O CETVOROUGAONIM SEGMENTIMA  2 / D GRUP
     1E ELEMENATA',I6/1X,71('-')///
     1' SEGME  CVOR1 CVOR2 CVOR3 CVOR4      MATER KOORD NAPON           
     1       KORAK'/
     1'  BROJ CVOR5 CVOR6 CVOR7 CVOR8 CVOR9 ',A5,' STAMP STAMP          
     1        GENER')
 2001 FORMAT(///' UCITANI PODACI O LINIJSKIM SEGMENTIMA 1/D  GRUPE ELEME
     1NATA',I6/1X,64('-')///
     1' SEGME  CVOR1 CVOR2 CVOR3            MATER KOORD NAPON        DEB
     1LJINA  KORAK'/
     1'  BROJ                               ',A5,' STAMP STAMP        SE
     1GMENTA  GENER')
 2002 FORMAT(///' UCITANI PODACI O TACKASTIM SEGMENTIMA      GRUPE ELEME
     1NATA',I6/1X,64('-')///
     1' SEGME  CVOR1                        MATER KOORD NAPON        DEB
     1LJINA  KORAK'/
     1'  BROJ                               ',A5,' STAMP STAMP        SE
     1GMENTA  GENER')
 2100 FORMAT(///' BROJ CVORA N2=',I5,' NE MOZE SE DOBITI SABIRANJEM BROJ
     1A CVORA N1=',I5,' I KONACNOG BROJA KORAKA KORA=',I5)
 2110 FORMAT(///' IZMEDJU SEGMENATA N1=',I5,' I N2=',I5,' NEMA NG=',I5,
     1' SEGMENATA KOJE TREBA GENERISATI')
 2120 FORMAT(///' BROJ ELEMENATA N1=',I5,' MORA BITI MANJI OD N2=',I5)
 2140 FORMAT(' GENERISANI PODACI O CETVOROUGAONIM SEGMENTIMA  2 / D GRUP
     1E ELEMENATA',I6/1X,74('-')///
     3' SEGME  CVOR1 CVOR2 CVOR3 CVOR4      MATER KOORD NAPON           
     1     '/
     1'  BROJ CVOR5 CVOR6 CVOR7 CVOR8 CVOR9 ',A5,' STAMP STAMP          
     1      ')
 2141 FORMAT(' GENERISANI PODACI O LINIJSKIM SEGMENTIMA 1/D GRUPE ELEMEN
     1ATA',I6/1X,66('-')///
     3' SEGME  CVOR1 CVOR2 CVOR3            MATER KOORD NAPON        DEB
     1LJINA'/
     1'  BROJ                               ',A5,' STAMP STAMP        SE
     1GMENTA')
 2142 FORMAT(' GENERISANI PODACI O TACKASTIM SEGMENTIMA     GRUPE ELEMEN
     1ATA',I6/1X,66('-')///
     3' SEGME  CVOR1                        MATER KOORD NAPON        DEB
     1LJINA'/
     1'  BROJ                               ',A5,' STAMP STAMP        SE
     1GMENTA')
 2500 FORMAT(///6X,' UCITANI PODACI O VISESLOJNIM SETOVIMA MATERIJALA'/
     16X,49('-')///)
 2505 FORMAT(///' BROJ SLOJEVA U MATERIJALNOM SETU MORA BITI VECI OD 0'/
     1' (MAKSIMALNO :     MSLOJ )')
 2530 FORMAT(//10X,'MATERIJALNI SET (',I3,') ',5X,'BROJ SLOJEVA =',I3/)
 2540 FORMAT(/10X,'SLOJ =',I3/10X,'MATERIJAL =',I3/10X,'RELATIVNA ',
     1'DEBLJINA =',1PD10.3/10X,'UGAO VLAKANA =',1PD10.3) 
 2550 FORMAT(/// ' ZBIR RELATIVNIH DEBLJINA SLOJEVA U MATERIJALNOM SETU 
     1MORA BITI   1.00'/' (KONTROLNI ZBIR JE :   TTT =',1PD10.3)
 2040 FORMAT(' VREME NASTAJANJA SEGMENTA - TBTH =',1PD10.3)
 2050 FORMAT(' VREME NESTAJANJA SEGMENTA - TDTH =',1PD10.3)
C-----------------------------------------------------------------------
 6000 FORMAT(///' READING DATA ABOUT TO RECTANGULAR 2 / D SEGMENTS FOR G
     1ROUP',I6/1X,64('-')///
     1' SEGME  NODE1 NODE2 NODE3 NODE4      MATER COORD STRES           
     1        STEP'/
     1' NUMBE NODE5 NODE6 NODE7 NODE8 NODE9 ',A5,' PRINT PRINT          
     1        GENER')
 6001 FORMAT(///' READING DATA ABOUT TO LINES SEGMENTS 1/D  FOR GROUP',
     1I6/1X,57('-')///
     1' SEGME  NODE1 NODE2 NODE3            MATER COORD STRES          T
     1HICK    STEP'/
     1' NUMBE                               ',A5,' PRINT PRINT         S
     1EGMENT  GENER')
 6002 FORMAT(///' READING DATA ABOUT TO POINT SEGMENTS FOR GROUP',
     1I6/1X,52('-')///
     1' SEGME  NODE1                        MATER COORD STRES          T
     1HICK    STEP'/
     1' NUMBE                               ',A5,' PRINT PRINT         S
     1EGMENT  GENER')
 6100 FORMAT(///' NODE NUMBER N2=',I5,' CAN NOT BE DEFINED BY SUPERPOSIT
     1ION OF NODE N1=',I5,' WITH A NUMBER OF STEPS  KORA=',I5)
 6110 FORMAT(///' AMONG SEGMENTS N1=',I5,' AND N2=',I5,' THERE IS NO  ',
     1'NG=',I5,' SEGMENTS TO GENERATE')
 6120 FORMAT(///' SEGMENT NUMBER N1=',I5,' MUST BE SMALLER FROM N2=',I5)
 6140 FORMAT (' GENERATED DATA ABOUT TO RECTANGULAR 2 / D SEGMENTS FOR G
     1ROUP',I6/1X,66('-')///
     1' SEGME  NODE1 NODE2 NODE3 NODE4      MATER COORD STRES           
     1     '/
     1' NUMBE NODE5 NODE6 NODE7 NODE8 NODE9 ',A5,' PRINT PRINT          
     1      ')
 6141 FORMAT (' GENERATED DATA ABOUT TO LINES SEGMENTS 1/D  FOR GROUP',
     1I6/1X,59('-')///
     1' SEGME  NODE1 NODE2 NODE3            MATER COORD STRES          T
     1HICK '/
     1' NUMBE                               ',A5,' PRINT PRINT         S
     1EGMENT')
 6142 FORMAT (' GENERATED DATA ABOUT TO POINT SEGMENTS FOR GROUP',
     1I6/1X,54('-')///
     1' SEGME  NODE1                        MATER COORD STRES          T
     1HICK '/
     1' NUMBE                               ',A5,' PRINT PRINT         S
     1EGMENT')
 6500 FORMAT(///6X,' READING DATA ABOUT MULTILAYERED MATERIAL SETS'/
     16X,46('-')///)
 6505 FORMAT(///' NUMBER OF LAYERS IN MATERIAL SET MUST BE GREATER',
     1          ' THAN   0'/' (MAXIMUM :     MSLOJ )')
 6530 FORMAT(//10X,'MATERIAL SET (',I3,') ',5X,'NUMBER OF LAYERS =',I3/)
 6540 FORMAT(/10X,'LAYER =',I3/10X,'MATERIAL =',I3/10X,'RELATIV ',
     1'THICKNESS =',1PD10.3/10X,'FIBER ANGLE =',1PD10.3) 
 6550 FORMAT(/// ' RELATIV THICKNESSES SUM IN MATERIAL SET MUST BE', 
     1'   1.00'/' (CONTROL SUM IS :   TTT =',1PD10.3)
 6040 FORMAT(' SEGMENT BIRTH TIME - TBTH =',1PD10.3)
 6050 FORMAT(' SEGMENT DEATH TIME - TDTH =',1PD10.3)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE UEL9B (NEL,MATV,IPGCV,ISNAP,IPRCV,THICK,
     1                  TBTH,TDTH,MCVEL,NMA,NMI,ICVEL,
     1                  COPT,FPRE,NPRE,NOGR,NPOMT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO READING INPUT DATA ABOUT BEAM ELEMENTS - FREE NUMBERING
CS.   P R O G R A M
CS.      ZA UCITAVANJE ULAZNIH PODATAKA O ELEMENTIMA: GREDE
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      CHARACTER*5  CH
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /SRPSKI/ ISRPS
      COMMON /PODTIP/ IPODT
      COMMON /CVSILE/ NSILA,LESILA
C
      DIMENSION NEL(NE,*),MATV(*),IPGCV(*),ISNAP(*),IPRCV(*),THICK(*),
     1          TBTH(*),TDTH(*),MCVEL(*),
     1          COPT(NE,*),FPRE(NE,*),NPRE(NE,*),NOGR(NE,*),NPOMT(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UEL9B '
      IF(ISRPS.EQ.0) CH=' BROJ'
      IF(ISRPS.EQ.1) CH='NUMBE'
C
CS     P  O  D  A  C  I      O      E  L  E  M  E  N  T  I  M  A
CE     D  A  T  A      A  B  O  U  T      E  L  E  M  E  N  T  S
C
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NGE
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NGE
      ENDIF
      IT1=2
      IT2=3
      NMATS=  1
      IPRCOS=-1
      IPGSS= -1
      ISNAA= -1
      ISNAA=  0
      THICS=  0.D0
      I = 0
      NAUT=0
    5 I = I + 1
      CALL ISPITA(ACOZ)
      IF(I.EQ.1) KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) NN,NMAT,IPRCO,ISNA,IPGS,THI,KORC,BTH,DTH
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1010) NN,NMAT,IPRCO,ISNA,IPGS,THI,KORC,BTH,DTH
      IF(IPRCO.EQ.1) ICORGT=1
      IF(ICVEL.EQ.1) THEN
         MCVEL(I)=NN
         NI=NN
         IF(I.EQ.1) THEN
            NMA=NN
            NMI=NN
         ELSE
            IF(NMA.LT.NN) NMA=NN
            IF(NMI.GT.NN) NMI=NN
         ENDIF
         NN=I
      ENDIF
C     UCITAVANJE CVOROVA GREDE, BROJEVA PRESEKA I OGRANICENJA PRESEKA
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*)   (NEL(NN,J),J=1,3),(NPRE(NN,J),J=1,3),
     1                (NOGR(NN,J),J=1,3)
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) (NEL(NN,J),J=1,3),(NPRE(NN,J),J=1,3),
     1                (NOGR(NN,J),J=1,3)
C     UCITAVANJE POMOCNE TACKE I FAKTORA PROPORCIONALNOSTI PRESEKA
      CALL ISPITA(ACOZ)
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*)   (COPT(NN,J),J=1,3),(FPRE(NN,J),J=1,3),NPOMT(NN)
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1001)   (COPT(NN,J),J=1,3),(FPRE(NN,J),J=1,3),NPOMT(NN)
C
      IF(NMAT.EQ.0) NMAT=NMATS
      NMATS=NMAT
      MATV(NN)= NMAT
      IF(IPRCO.EQ.0) IPRCO=IPRCOS
      IPRCOS=IPRCO
      IF(IPRCO.LT.0) IPRCO = 0
      IPRCV(NN)=IPRCO
      IF(ISNA.EQ.0) ISNA=ISNAA
      ISNAA=ISNA
      IF(ISNA.LT.0) ISNA = 0
      ISNAP(NN)=ISNA
      IF(IPGS.EQ.0) IPGS=IPGSS
      IPGSS=IPGS
      IF(IPGS.LT.0) IPGS = 0
      IPGCV(NN)=IPGS
      IF(DABS(THI).LT.1.0D-10) THI=THICS
      THICS=THI
      THICK(NN)=THI
      IF(INDBTH.EQ.1) TBTH(NN)=BTH
      IF(INDDTH.EQ.1) TDTH(NN)=DTH
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
         IF(ICVEL.EQ.1) IN=MCVEL(NN)
         IF(ICVEL.EQ.0) IN=NN
         WRITE(IZLAZ,5000) IN,IPGS,THI,KORC
         WRITE(IZLAZ,5004) 
     1         (NEL(NN,J),J=1,IT2),(NPRE(NN,J),J=1,3),(NOGR(NN,J),J=1,3)
       WRITE(IZLAZ,5005) (COPT(NN,J),J=1,3),NPOMT(NN),(FPRE(NN,J),J=1,3)
         IF(INDBTH.EQ.1) THEN
         IF(DABS(TBTH(NN)).GT.1.0D-10) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040) TBTH(NN)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040) TBTH(NN)
         ENDIF
         ENDIF
         IF(INDDTH.EQ.1) THEN 
         IF(DABS(TDTH(NN)).GT.1.0D-10) THEN 
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2050) TDTH(NN)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6050) TDTH(NN)
         ENDIF
         ENDIF
      ENDIF
      IF(NAUT.GT.0) GO TO 30
      IF(KORC.NE.0) GO TO 20
      IF(I.EQ.NE) GO TO 50
      GO TO 5
C
   20 NAUT=1
      IF(ICVEL.EQ.1) N1=NI
      IF(ICVEL.EQ.0) NN1=NN
      KORA=KORC
      GO TO 5
C
CS     AUTOMATSKO GENERISANJE PODATAKA IZMEDJU CVOROVA N1 I N2
CE     AUTOMATIC  GENERATION BETWEN NODES  N1  AND  N2
C
   30 NN2=NN
      IF(ICVEL.EQ.1) THEN
         NN1=NN-1
         N2=NI
      ENDIF
      IF(ICVEL.EQ.1.AND.NN1.GE.NN2) GO TO 200
      IF(ICVEL.EQ.0.AND.NN1.GE.NN2) GO TO 200
      N11=NEL(NN1,1)
      N22=NEL(NN2,1)
      N12=N22-N11
      CALL DELJIV(N12,KORA,INDD)
      IF(INDD.EQ.1) GO TO 100
      DO 40 NC=2,IT1
         N11=NEL(NN1,NC)
         N22=NEL(NN2,NC)
         N21=N22-N11
         IF(N12.NE.N21) GO TO 100
   40 CONTINUE
      DO 45 NC=IT1+1,IT2
         N11=NEL(NN1,NC)
         N22=NEL(NN2,NC)
         IF(N11.EQ.0.AND.N22.EQ.0) GO TO 45
         N21=N22-N11
         IF(N12.NE.N21) GO TO 100
   45 CONTINUE
      IF(ICVEL.EQ.1) NNN=N2-N1-1
      IF(ICVEL.EQ.0) NNN=NN2-NN1-1
      NGG=N12/KORA-1
      IF(NNN.NE.NGG) THEN
         IF(ICVEL.EQ.1) THEN
            NN1=N1
            NN2=N2
         ENDIF
         GO TO 150
      ENDIF
      IAUT=N12/KORA-1
      IF(ICVEL.EQ.1) THEN
         NM=NN+IAUT
         MCVEL(NM)=MCVEL(NN)
         MATV(NM) = MATV(NN)
         IPRCV(NM)=IPRCV(NN)
         ISNAP(NM)=ISNAP(NN)
         IPGCV(NM)=IPGCV(NN)
         THICK(NM)=THICK(NN)
         IF(INDBTH.EQ.1) TBTH(NM) = TBTH(NN)
         IF(INDDTH.EQ.1) TDTH(NM) = TDTH(NN)
         NPOMT(NM)=NPOMT(NN)
         DO 32 II=1,3
            NEL(NM,II)=NEL(NN,II)
            NPRE(NM,II)=NPRE(NN,II)
            NOGR(NM,II)=NOGR(NN,II)
            FPRE(NM,II)=FPRE(NN,II)
            COPT(NM,II)=COPT(NN,II)
   32    CONTINUE
      ENDIF
      DO 34 J=1,IAUT
         JJ=NN1+J
         IF(ICVEL.EQ.1) THEN
            N1=N1+1
            MCVEL(JJ)=N1
         ENDIF
         MATV(JJ) = MATV(NN1)
         IPRCV(JJ)=IPRCV(NN1)
         ISNAP(JJ)=ISNAP(NN1)
         IPGCV(JJ)=IPGCV(NN1)
         THICK(JJ)=THICK(NN1)
         IF(INDBTH.EQ.1) TBTH(JJ) = TBTH(NN1)
         IF(INDDTH.EQ.1) TDTH(JJ) = TDTH(NN1)
         NPOMT(JJ)=NPOMT(NN1)
         DO 35 II=1,3
            NODP=NEL(JJ-1,II)
            NEL(JJ,II)=NODP+KORA
            IF(NODP.EQ.0) NEL(JJ,II) = 0
            NPRE(JJ,II)=NPRE(JJ-1,II)
            NOGR(JJ,II)=NOGR(JJ-1,II)
            FPRE(JJ,II)=FPRE(JJ-1,II)
            COPT(JJ,II)=COPT(JJ-1,II)
   35    CONTINUE
   34 CONTINUE
      IF(ICVEL.EQ.1) I=NM
      IF(ICVEL.EQ.0) I=I+IAUT
      IF(I.EQ.NE) GO TO 50
      NAUT=0
      IF(KORC.EQ.0) GO TO 5
      KORA=KORC
      NAUT=1
      IF(ICVEL.EQ.1) N1=N2
      IF(ICVEL.EQ.0) NN1=NN2
      GO TO 5
C
CS     ODREDJIVANJE MAKSIMALNOG BROJA CVOROVA
CE     OBTAIN MAXIMUM NUMBER OF NODES PER ELEMENT
C
   50 NCVE=IT1
      DO 60 I=1,NE
      DO 60 J=IT1+1,IT2
         IJ=NEL(I,J)
         IF(IJ.GT.0.AND.J.GT.NCVE) NCVE=J
   60 CONTINUE
C
CS     STAMPANJE UCITANIH I GENERISANIH PODATAKA
CE     PRINT INPUT AND GENERATED DATA
C
      IF(NULAZ.NE.1.AND.NULAZ.NE.3) RETURN
         CALL WBROJK(KARTI,0)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2140) NGE
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6140) NGE
         DO 70 I=1,NE
            IF(ICVEL.EQ.1) IN=MCVEL(I)
            IF(ICVEL.EQ.0) IN=I
            WRITE(IZLAZ,5000) IN,IPGCV(I),THICK(I)
            WRITE(IZLAZ,5004) 
     1            (NEL(I,J),J=1,IT2),(NPRE(I,J),J=1,3),(NOGR(I,J),J=1,3)
          WRITE(IZLAZ,5005) (COPT(I,J),J=1,3),NPOMT(I),(FPRE(I,J),J=1,3)
         IF(INDBTH.EQ.1) THEN
         IF(DABS(TBTH(NN)).GT.1.0D-10) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040) TBTH(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040) TBTH(I)
         ENDIF
         ENDIF
         IF(INDDTH.EQ.1) THEN 
         IF(DABS(TDTH(NN)).GT.1.0D-10) THEN 
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2050) TDTH(I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6050) TDTH(I)
         ENDIF
         ENDIF
   70    CONTINUE
      RETURN
C
  200 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2120) NN1,NN2
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6120) NN1,NN2
      STOP
C
  150 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2110) NN1,NN2,NGG
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6110) NN1,NN2,NGG
      STOP
C
  100 CONTINUE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) N22,N11,KORA
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) N22,N11,KORA
      STOP
C
 1000 FORMAT(14I5)
 1001 FORMAT(6F10.0,I5)
 1010 FORMAT(5I5,F10.0,I5,2F10.0)
 5000 FORMAT(I6,33X,I11,5X,1PD11.3,I7)
 5004 FORMAT(10X,3I6,5X,3I6,8X,3I6)
 5005 FORMAT(6X,3F10.3,I9,2X,3F10.3/)
C-----------------------------------------------------------------------
 2000 FORMAT(///' UCITANI PODACI O SUPER GREDNIM ELEMENTIMA  GRUPE ELEME
     1NATA',I6/1X,64('-')///
     1' ELEM.BROJ                             UNUTRASNJE SILE  DEBLJ(B/A
     1)  KORAK GEN/'/
     1'           CVOR1 CVOR2 CVOR3      NPRE1 NPRE2 NPRE3         IOGR1
     1 IOGR2 IOGR3/'/
     1'           KORDX     KORDY     KORDZ    NPOMT       SKAL1     SKA
     1L2     SKAL3')
 2100 FORMAT(///' BROJ CVORA N2=',I5,' NE MOZE SE DOBITI SABIRANJEM BROJ
     1A CVORA N1=',I5,' I KONACNOG BROJA KORAKA KORA=',I5)
 2110 FORMAT(///' IZMEDJU ELEMENATA N1=',I5,' I N2=',I5,' NEMA NG=',I5,
     1' ELEMENATA KOJE TREBA GENERISATI')
 2120 FORMAT(///' BROJ ELEMENATA N1=',I5,' MORA BITI MANJI OD N2=',I5)
 2140 FORMAT(' GENERISANI PODACI O SUPER GREDNIM ELEMENTIMA GRUPE ELEMEN
     1ATA',I6/1X,66('-')///
     1' ELEM.BROJ                             UNUTRASNJE SILE  DEBLJ(B/A
     1)  KORAK GEN/'/
     1'           CVOR1 CVOR2 CVOR3      NPRE1 NPRE2 NPRE3         IOGR1
     1 IOGR2 IOGR3/'/
     1'           KORDX     KORDY     KORDZ    NPOMT       SKAL1     SKA
     1L2     SKAL3')
 2040 FORMAT(/' VREME NASTAJANJA ELEMENTA - TBTH =',1PD10.3)
 2050 FORMAT(/' VREME NESTAJANJA ELEMENTA - TDTH =',1PD10.3)
C-----------------------------------------------------------------------
 6000 FORMAT(///' READING DATA ABOUT BEAM SUPERELEMENTS FOR GROUP',
     1I6/1X,53('-')///
     1' ELEM.NUM.                              INTERNAL LOADS  THICK(B/A
     1)  STEP.GEN./'/
     1'           NODE1 NODE2 NODE3      NSEC1 NSEC2 NSEC3         IRES1
     1 IRES2 IRES3/'/
     1'          COORDX    COORDY    COORDZ    NPOMT      SCALE1    SCAL
     1E2    SCALE3')
 6100 FORMAT(///' NODE NUMBER N2=',I5,' CAN NOT BE DEFINED BY SUPERPOSIT
     1ION OF NODE N1=',I5,' WITH A NUMBER OF STEPS  KORA=',I5)
 6110 FORMAT(///' AMONG ELEMENTS N1=',I5,' AND N2=',I5,' THERE IS NO  ',
     1'NG=',I5,' ELEMENTS TO GENERATE')
 6120 FORMAT(///' ELEMENT NUMBER N1=',I5,' MUST BE SMALLER FROM N2=',I5)
 6140 FORMAT (' GENERATED DATA ABOUT BEAM SUPERELEMENTS FOR GROUP',
     1I6/1X,55('-')///
     1' ELEM.NUM.                              INTERNAL LOADS  THICK(B/A
     1)           /'/
     1'           NODE1 NODE2 NODE3      NSEC1 NSEC2 NSEC3         IRES1
     1 IRES2 IRES3/'/
     1'          COORDX    COORDY    COORDZ    NPOMT      SCALE1    SCAL
     1E2    SCALE3')
 6040 FORMAT(/' ELEMENT BIRTH TIME - TBTH =',1PD10.3)
 6050 FORMAT(/' ELEMENT DEATH TIME - TDTH =',1PD10.3)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE VEZA9B(NEL,NVEZ,NE,NCVE,NMC,NCU,NCVU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO FORM CONECTION VECTOR  
CS.   P R O G R A M
CS.      ZA FORMIRANJE VECTORA VEZE IZMEDJU BROJA CVORA I REDOSLEDA
C .
C ......................................................................
C
      DIMENSION NEL(NE,*),NVEZ(*)
C
C     ODREDJIVANJE MAKSIMALNOG I MINIMALNOG CVORA U GRUPI
      NMIN=NEL(1,1)
      NMAX=NEL(1,1)
      DO 61 I=1,NE
      DO 61 J=1,NCVE
         IF(NMAX.LT.NEL(I,J)) NMAX=NEL(I,J)
         IF(NMIN.GT.NEL(I,J)) NMIN=NEL(I,J)
   61 CONTINUE
C     FORMIRANJE VEKTORA VEZE IZMEDJU BROJA CVORA I REDOSLEDA UCITAVANJA
C     PREKO POLOZAJA; NCU-DUZINA VEKTORA; NCVU-BROJ CVOROVA U GRUPI 
      NMC=NMIN-1
      NCU=NMAX-NMC
      KK=0
      DO 62 I=1,NE
      DO 62 J=1,NCVE
         NCV=NEL(I,J)-NMC
         IF(NVEZ(NCV).EQ.0) THEN
            KK=KK+1
            NVEZ(NCV)=KK
         ENDIF
   62 CONTINUE
      NCVU=KK
      RETURN
      END
C=======================================================================
      SUBROUTINE LMMHT9(ID,IDD,IPR,NEL,NOS,MH9,LME,NVEZ,MHT,
     1                  ND,NS,NCVS,NCVP,JEDPP,JEDNN,NMC,NPD6,IPODT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C .......................................................................
C .
CE.   P R O G R A M
CE.       TO FORM VECTOR LM AND HEIGHT COLUMNS
CS.   P R O G R A M
CS.       ZA FORMIRANJE VEKTORA LM I VISINA STUBOVA MATRICE KRUTOSTI
C .
C .......................................................................
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /GEORGE/ TOLG,ALFAG,ICCGG
      COMMON /DRAKCE/ IDRAKCE,NELUK,NZERO,NEED1,NEED2,NEED3,NNZERO
     1                ,IROWS,LAILU,LUCG,LVCG,LWCG,LPCG,LRCG
      DIMENSION ID(NP,*),IDD(6,*),IPR(NCVP,6,*),NEL(NE,*),NOS(NS,*),
     1          MHT(*),MH9(*),LME(*),NVEZ(*),LM(18)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' LMMHT9'
CE    LOOP OVER ELEMENTS
CS    PETLJA PO ELEMENTIMA
      K36=6
      IF(IPODT.EQ.2) K36=3
      NPD6=0
      DO 100 NLM=1,NE
         DO 10 NC=1,NCVE
            JJ=NEL(NLM,NC)
            IF(JJ.EQ.0) STOP ' NEL'
            NPD6=NPD6+1
C            IF(ID(JJ,6).GT.0) NPD6=NPD6+1
            KK=6*(NC-1)
            DO 20 I=1,6
   20       LM(KK+I)=ID(JJ,I)
   10    CONTINUE
C
CE    FORM HEIGHT COLUMNS
CS    FORMIRANJE VISINA STUBOVA
C
         CALL VISINE(MHT,ND,LM)
      IF (IABS(ICCGG).EQ.1) THEN
         WRITE(IDRAKCE) ND,(LM(I),I=1,ND)
         NELUK=NELUK+1
      ENDIF
C
         IF(JEDPP.EQ.0) GO TO 100
         IF(IABS(ICCGG).EQ.1)STOP'ICCGG.EQ.1.AND.JEDPP.GT.0 - PAK91.FOR'
         DO 50 NSEG=1,NS
            KK=0
            DO 30 I=1,NCVE
               NCV=NEL(NLM,I)-NMC
               II=NVEZ(NCV)
            DO 30 J=1,NCVS
               NC=NOS(NSEG,J)
               IF(NC.EQ.0) STOP 'CVOR NE MOZE BITI NULA'
            DO 30 K=1,K36
               KK=KK+1
               LME(KK)=IPR(NC,K,II)
   30       CONTINUE
            DO 40 I=1,NCVE
               NCV=NEL(NLM,I)-NMC
               II=NVEZ(NCV)
            DO 40 J=1,6
               KK=KK+1
               LME(KK)=IDD(J,II)
   40       CONTINUE
C
         JEDNP=JEDN
         JEDN=JEDNN+JEDPP
         CALL VISINE(MH9,KK,LME)
         JEDN=JEDNP
C         CALL IWRR(LME,KK,'LME ')
C
   50    CONTINUE
  100 CONTINUE
C      IF(JEDPP.GT.0) CALL IWRR(MH9,JEDNN+JEDPP,'MH9 ')
C      CALL IWRR(A(LMHT),JEDN,'LMHT')
C      CALL IWRR(LM,ND,'LM  ')
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE ADRES9(MAXA,MHT,JEDN,JEDNP,NWK,NWP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO CALCULATE ADDRESSES OF DIAGONAL ELEMENTS IN BANDED MATRIX
CS.   P R O G R A M
CS.      ZA FORMIRANJE VEKTORA MAXA
C .
CE.      MHT  - ACTIVE COLUMN HEIGHTS
CE.      MAXA - ADDRESES OF DIAGONAL ELEMENTS
CS.      MHT  - VISINE STUBOVA
CS.      MAXA - ADRESE DIJAGONALNIH CLANOVA
C .
C ......................................................................
C
      COMMON /CDEBUG/ IDEBUG
      DIMENSION MAXA(*),MHT(*)
C
CE    VECTOR MAXA
CS    VEKTOR MAXA
C
      IF(IDEBUG.GT.0) PRINT *, ' ADRES9'
      IF(JEDN.EQ.0) RETURN
      MAXA(1)=1
      MAXA(2)=2
      MK=0
      IF(JEDN.EQ.1) GO TO 100
      DO 10 I=2,JEDN
      IF(MHT(I).GT.MK) MK=MHT(I)
   10 MAXA(I+1)=MAXA(I)+MHT(I)+1
  100 MK=MK+1
      NWK=MAXA(JEDN+1)-1
      NWP=MAXA(JEDNP+1)-1
C MAKSIMALNA VISINA STUPCA
      LMAXM=MK
C
      DO 200 I=1,JEDN+1
  200 MHT(I)=MAXA(I)
      RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE ZADA9B(TAU,NE,NGS12,MXS,N45,NS)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO INITIAL VALUE MATRIX - B
CS.   P R O G R A M
CS.      ZA ZADAVANJE POCETNE JEDINICNE VREDNOSTI ZA MATRICU - B
C .
C ......................................................................
C
      DIMENSION TAU(N45,NGS12,NE,*)
C
      NLD=N45/NS
C
      DO 10 J=1,MXS
      DO 10 I=1,NE
      DO 10 L=1,NS
         LL=(L-1)*NLD
      DO 10 K=1,NGS12
         IF(NLD.EQ.6) THEN
            TAU(LL+1,K,I,J)=1.D0
            TAU(LL+2,K,I,J)=1.D0
            TAU(LL+3,K,I,J)=1.D0
         ELSE
            TAU(LL+1,K,I,J)=1.D0
            TAU(LL+5,K,I,J)=1.D0
            TAU(LL+9,K,I,J)=1.D0
         ENDIF
   10 CONTINUE
      RETURN
      END
C======================================================================
C
C======================================================================
      SUBROUTINE JEDNAC(FPR,NPR,NOG,IPR,IDD,FPRE,NPRE,NOGR,IDP,ID,
     1                  NVEZ,LMU,NEL,NEZ,NCVEL,ICVEL,
     1                  NCVP,NE,NCVE,NMC,NCU,JEDP,JEDN,NP,NSILA,IPGCV)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.       TO DETERMINATION EQUATIONS FOR WARPING FOR COMPLETE GROUP
CS.    P R O G R A M
CS.       ZA ODREDJIVANJE JEDNACINA ZA VITOPERENJA ZA CELU GRUPU
C .
C ......................................................................
C
      DIMENSION FPR(*),NPR(*),NOG(*),IPR(NCVP,6,*),IDD(6,*),
     1          FPRE(NE,*),NPRE(NE,*),NOGR(NE,*),IDP(NCVP,6,*),ID(NP,*),
     1          NVEZ(*),LMU(*),NEL(NE,*),NEZ(*),NCVEL(*),IPGCV(*)
C
C     ODREDJIVANJE VEZE IZMEDJU NVEZ I NEZ ZA STAMPANJE STVARNIH CVOROVA
C
      DO 15 I=1,NCU
         KK=NVEZ(I)
         IF(KK.EQ.0) GO TO 15
         IF(ICVEL.EQ.0) THEN
            NEZ(KK)=I+NMC
         ELSE
            NEZ(KK)=NCVEL(I+NMC)
         ENDIF
   15 CONTINUE
C
C     FORMIRANJE I PROVERA JEDINSTVENIH PODATAKA ZA CVOROVE GREDE
C     NOG-OGRANICENJA; NPR-BROJ PRESEKA; FPR-FAKTOR MNOZENJA KOORDINATA
C
C      CALL WRR(FPRE,NE*3,'FPRE') 
C      CALL IWRR(NPRE,NE*3,'NPRE') 
C      CALL IWRR(NOGR,NE*3,'NOGR') 
      DO 10 I=1,NE
      DO 10 J=1,NCVE
         NCV=NEL(I,J)-NMC
         KK=NVEZ(NCV)
         IF(KK.EQ.0) STOP 'KK =0'
         IF(DABS(FPR(KK)).LT.1.D-10) THEN
            FPR(KK)=FPRE(I,J)
         ELSE
            IF((DABS(FPR(KK)-FPRE(I,J)).GT.1.D-10).AND.
     1          DABS(FPRE(I,J)).GT.1.D-10) STOP ' FPR'
         ENDIF
         IF(NPR(KK).EQ.0) THEN
            NPR(KK)=NPRE(I,J)
         ELSE
            IF((NPR(KK).NE.NPRE(I,J)).AND.NPRE(I,J).NE.0) STOP ' NPR'
         ENDIF
         IF(NOG(KK).EQ.0) THEN
            NOG(KK)=NOGR(I,J)
         ELSE
            IF((NOG(KK).NE.NOGR(I,J)).AND.NOGR(I,J).NE.0) STOP ' NOG'
         ENDIF
C      WRITE(3,*) 'I,J,NOGR(I,J)',I,J,NOGR(I,J)
C      WRITE(3,*) 'NCV,KK,NOG,NPR,FPR,NMC',
C     1NCV,KK,NOG(KK),NPR(KK),FPR(KK),NMC
   10 CONTINUE
C
C     FORMIRANJE JEDNACINA ZA VITOPERENJA ZA CELU GRUPU
C
      IG=0
      JEDP=0
      DO 20 I=1,NCU
         II=NVEZ(I)
         IF(II.EQ.0) GO TO 20
         NO=NOG(II)
         IG1=0
         IG2=0
         IG3=0
         IF(NO.EQ.1.OR.NO.EQ.4.OR.NO.EQ.6.OR.NO.EQ.7) IG1=1
         IF(NO.EQ.2.OR.NO.EQ.4.OR.NO.EQ.5.OR.NO.EQ.7) IG2=1
         IF(NO.EQ.3.OR.NO.EQ.5.OR.NO.EQ.6.OR.NO.EQ.7) IG3=1
         IF(IG.EQ.0) IG=IG3
         NR=NPR(II)
C         WRITE(3,*) 'I,II,NO,IG,NR',I,II,NO,IG,NR
C         IF(IG1.EQ.1.AND.IG2.EQ.1.AND.IG3.EQ.1) GO TO 20
         DO 30 J=1,NCVP
            IF(IG1.EQ.0) THEN
               IF(IDP(J,1,NR).EQ.0) THEN
                  JEDP=JEDP+1
                  IPR(J,1,II)=JEDP
               ENDIF
            ENDIF
            IF(IG2.EQ.0) THEN
               IF(IDP(J,2,NR).EQ.0) THEN
                  JEDP=JEDP+1
                  IPR(J,2,II)=JEDP
               ENDIF
            ENDIF
            IF(IG3.EQ.0) THEN
               IF(IDP(J,3,NR).EQ.0) THEN
                  JEDP=JEDP+1
                  IPR(J,3,II)=JEDP
               ENDIF
            ENDIF
            IF(IDP(J,4,NR).EQ.0) THEN
                  JEDP=JEDP+1
                  IPR(J,4,II)=JEDP
            ENDIF
            IF(IDP(J,5,NR).EQ.0) THEN
                  JEDP=JEDP+1
                  IPR(J,5,II)=JEDP
            ENDIF
            IF(IDP(J,6,NR).EQ.0) THEN
                  JEDP=JEDP+1
                  IPR(J,6,II)=JEDP
            ENDIF
   30    CONTINUE
   20 CONTINUE
C     IF(IG.EQ.0.AND.JEDP.GT.0) STOP 'PROVERI OGRANICENJA'
      IF(IG.EQ.0.AND.JEDP.GT.0) 
     1 WRITE(3,*) 'PROVERI OGRANICENJA UPRAVNA NA PRESEK'
      JEDN=0
      NSILA=0
C
C     REDNI BROJ ELEMENTA SA SILAMA U CVOROVIMA
C
      IF(JEDP.GT.0) THEN
         CALL ICLEAR(IPGCV,NE)
      ELSE
      DO 65 I=1,NE
         IF(IPGCV(I).EQ.1) THEN
            NSILA=NSILA+1
            IPGCV(I)=NSILA
         ELSE
            IPGCV(I)=0
         ENDIF
   65 CONTINUE
      ENDIF
      IF(JEDP.EQ.0) RETURN
      DO 50 I=1,NCU
         II=NVEZ(I)
         IF(II.EQ.0) GO TO 50
         DO 40 J=1,6
            NCV=I+NMC
            IF(ID(NCV,J).EQ.0) GO TO 40
            JEDN=JEDN+1
            IDD(J,II)=JEDN+JEDP
            LMU(JEDN)=ID(NCV,J)
   40    CONTINUE
   50 CONTINUE
      RETURN
      END
C======================================================================
C
C======================================================================
      SUBROUTINE TGRA9K(CORD,NP,II)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.       TO PRINT COORDINATES IN UNIVERSAL FILE
CS.    P R O G R A M
CS.       ZA STAMPANJE KOORDINATA CVOROVA U UNIVERZALNI FILE
C .
C ......................................................................
C
      DIMENSION CORD(NP,*)
C
      IND=-1
      ITYP=15
      WRITE(II,5100) IND
      WRITE(II,5100) ITYP
      IT1=0
      IT2=0
      ICOL=8
      DO 10 I=1,NP
      WRITE(II,5000) I,IT1,IT2,ICOL,(CORD(I,J),J=1,3)
   10 CONTINUE
      WRITE(II,5100) IND
      RETURN
C
 5100 FORMAT(I6)
 5000 FORMAT(4I10,3(1PE13.5))
      END
C======================================================================
C
C======================================================================
      SUBROUTINE TGRA9B(ID,NP,IND1,II)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.       TO PRINT D.O.F. IN UNIVERSAL FILE
CS.    P R O G R A M
CS.       ZA STAMPANJE OGRANICENJA CVOROVA U UNIVERZALNI FILE
C .
C ......................................................................
C
      DIMENSION ID(NP,*)
C      DIMENSION IDD(6)
C
      IND=-1
      ITYP=757
      WRITE(II,5100) IND
      WRITE(II,5100) ITYP
      WRITE(II,5000) IND1
      WRITE(II,5200) IND1
C     COLOR
      ICOL=7
      DO 10 I=1,NP
C        DO 20 IJ=1,6
C           IF(ID(I,IJ).GT.0) THEN
C              IDD(IJ)=0
C           ELSE
C              IDD(IJ)=1
C           ENDIF
C  20    CONTINUE
         WRITE(II,5000) I,ICOL,(ID(I,J),J=1,6)
   10 CONTINUE
      WRITE(II,5100) IND
      RETURN
C
 5100 FORMAT(I6)
 5000 FORMAT(2I10,6I2)
 5200 FORMAT(' DOF SET',I10)
      END
C======================================================================
      SUBROUTINE TGRA92(NEL,NMAT,NE,NCVE,NGAUSX,NGAUSY,IGRAF,IZLAZ)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C .......................................................................
C .
CE.   P R O G R A M
CE.       TO PRINTOUT 2/D ELEMENTS DATA IN UNIVERSAL GRAPHICS FILE
CS.   P R O G R A M
CS.       ZA STAMPANJE 2/D ELEMENATA U UNIVERZALNI FILE
C .
C .......................................................................
C
      COMMON /SRPSKI/ ISRPS
      DIMENSION NEL(NE,*),NMAT(*)
      DIMENSION FIZ(14)         
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' TGRA92'
C
C     FIZICKE OSOBINE
C
      CALL CLEAR(FIZ,14)
      ICL=1
      IPH=40
      NPR=3
      FIZ(1)=0.D0
      IND=-1
      ITYP=772
      WRITE(IGRAF,1100) IND
      WRITE(IGRAF,1100) ITYP
      WRITE(IGRAF,1000) ICL,IPH,NPR
      IF(ISRPS.EQ.0)
     1WRITE(IGRAF,2000) ICL
      IF(ISRPS.EQ.1)
     1WRITE(IGRAF,6000) ICL
      WRITE(IGRAF,1200) (FIZ(I),I=ICL,14)
      WRITE(IGRAF,1100) IND
C
C     M A T E R I J A L I
C
      MAT=NMAT(1)
      CALL MELGR(MAT)
C
C     E L E M E N T I
C
      IF(ISRPS.EQ.0.AND.(NCVE.NE.4.AND.NCVE.NE.8))
     1WRITE(IZLAZ,2200) ICL
      IF(ISRPS.EQ.1.AND.(NCVE.NE.4.AND.NCVE.NE.8))
     1WRITE(IZLAZ,6200) ICL
      NNCVE=NCVE
      IF(NCVE.LT.8) NCVE=4
      IF(NCVE.EQ.9) NCVE=8
C      IF(NGAUSX.NE.NGAUSY) GO TO 160
C     GRAFICKI OPIS RAVANSKOG ELEMENTA: SA 4 CVORA = 5, SA 8 CVOROVA = 6
      IFGD=27
      IF(NCVE.EQ.8) IFGD=28
C     VRSTA 2/D ELEMENTA: 
C          RAVNO STANJE NAPONA: SA 4 CVORA = 44, SA 8 CVOROVA = 45
      IFDI=44
      IF(NCVE.EQ.8) IFDI=45
C     TABELA FIZICKIH OSOBINA
      IPTN=ICL
C     TABELA MATERIJALA
      MPTN=ICL
C     BOJA  
      ICOL=7
C     BROJ CVOROVA NA ELEMENTU
      NNODS=NCVE
      IND=-1
      ITYP=71
      WRITE(IGRAF,1100) IND
      WRITE(IGRAF,1100) ITYP
      DO 10 I=1,NE
C        REDNI BROJ ELEMENTA
         WRITE(IGRAF,1000) I,IFGD,IFDI,IPTN,MPTN,ICOL,NNODS
         IF(NCVE.EQ.4) THEN
            WRITE(IGRAF,1000)(NEL(I,J),J=1,4)
         ELSE
            WRITE(IGRAF,1000) (NEL(I,J),NEL(I,J+4),J=1,4)
         ENDIF
   10 CONTINUE
      WRITE(IGRAF,1100) IND
      NCVE=NNCVE
      RETURN
C
 1000 FORMAT(8I10)
 1100 FORMAT(I6)
 1200 FORMAT(6(1PE13.5))
C-----------------------------------------------------------------------
 2000 FORMAT('FIZICKI SET :',I10)
 2200 FORMAT(//' PROGRAM ZA GRAFICKO PRIKAZIVANJE REZULTATA "IDEAS"'/
     1' ZAHTEVA 2/D ELEMENT SA 4 ILI 8 CVOROVA U GRUPI ELEMENATA NGE ='
     1,I5)
C-----------------------------------------------------------------------
 6000 FORMAT('PHISICAL PROPERTIES SET :',I10)
 6200 FORMAT(//' GRAPHIC PACKAGE   "IDEAS"'/
     1' PERMITS ONLY 2/D ELEMENTS WITH 4 OR 8 NODES PER ELEMENT IN',
     1' GROUP   NGE =',I5)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE TGRA91(NEL,NMAT,NE,NCVE,IND1,IGRAF,IZLAZ)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     PROGRAM ZA STAMPANJE STAPA  U UNIVERZALNI FILE ZA SEGMENT
CE     PROGRAM FOR PRINTOUT DATA IN UNIVERSAL GRAPHICS FILE FOR SEGMENT
C
      COMMON /SRPSKI/ ISRPS
      DIMENSION NEL(NE,*)
C
C      IF(ISRPS.EQ.0.AND.NCVE.GT.2) WRITE(IZLAZ,2200) IND1
C      IF(ISRPS.EQ.1.AND.NCVE.GT.2) WRITE(IZLAZ,6200) IND1
C     GRAFICKI OPIS GREDE: SA 2 CVORA = 1
      IFGD=1
C     VRSTA  ELEMENTA: GREDA SA 2 CVORA  = 21
      IFDI=21
C     TABELA FIZICKIH OSOBINA
      IPTN=IND1
C     TABELA MATERIJALA
      MPTN=IND1
C     BOJA  
      ICOL=7
C     BROJ CVOROVA NA ELEMENTU
      NNODS=2
      IND=-1
      ITYP=71
      WRITE(IGRAF,1100) IND
      WRITE(IGRAF,1100) ITYP
      DO 10 I=1,NE
C        REDNI BROJ ELEMENTA
         WRITE(IGRAF,1000) I,IFGD,IFDI,IPTN,MPTN,ICOL,NNODS
         WRITE(IGRAF,1000) (NEL(I,J),J=1,2)
   10 CONTINUE
      WRITE(IGRAF,1100) IND
      RETURN
C
 1000 FORMAT(8I10)
 1100 FORMAT(I6)
      END
C=======================================================================
      SUBROUTINE TGRAF9(NEL,MCVEL,ICVEL,COPT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     PROGRAM ZA STAMPANJE STAPA  U UNIVERZALNI FILE
CE     PROGRAM FOR PRINTOUT DATA IN UNIVERSAL GRAPHICS FILE
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /SUMELE/ ISUMEL,ISUMGR
      COMMON /SRPSKI/ ISRPS
      COMMON /NIDEAS/ IDEAS
C
      DIMENSION NEL(NE,*),MCVEL(*),COPT(NE,*),NELPOM(3)
      IF(ideas.eq.-1) return
      ISUMGR=ISUMGR+1
C      IF(ISRPS.EQ.0.AND.NCVE.GT.2) WRITE(IZLAZ,2200) NGE
C      IF(ISRPS.EQ.1.AND.NCVE.GT.2) WRITE(IZLAZ,6200) NGE
C     GRAFICKI OPIS GREDE: SA 2 CVORA = 1
      IFGD=1
C     VRSTA  ELEMENTA: GREDA SA 2 CVORA  = 21
      IFDI=21
C     TABELA FIZICKIH OSOBINA
      IPTN=ISUMGR
C     TABELA MATERIJALA
      MPTN=ISUMGR
C     BOJA  
      ICOL=7
C     BROJ CVOROVA NA ELEMENTU
      NNODS=NCVE
      IND=-1
      ITYP=71
      WRITE(IGRAF,1100) IND
      WRITE(IGRAF,1100) ITYP
      DO 10 I=1,NE
         NELPOM(3)=0
         DO 11 J=1,NNODS
            NELPOM(J)=NEL(I,J)
   11    CONTINUE
C        REDNI BROJ ELEMENTA
         IEL=I+ISUMEL
         IF(ICVEL.EQ.1) IEL=MCVEL(I)
         WRITE(IGRAF,1000) IEL,IFGD,IFDI,IPTN,MPTN,ICOL,NNODS
         WRITE(IGRAF,1001) (NELPOM(J),J=1,3),(COPT(I,J),J=1,3)
   10 CONTINUE
      WRITE(IGRAF,1100) IND
      ISUMEL=ISUMEL+NE
      RETURN
C
 1000 FORMAT(8I10)
 1001 FORMAT(3I10,3(1PE13.5))
 1100 FORMAT(I6)
C-----------------------------------------------------------------------
C2200 FORMAT(//' PROGRAM ZA GRAFICKO PRIKAZIVANJE REZULTATA "IDEAS"'/
C    1' ZAHTEVA GREDU SA 2 CVORA PO ELEMENTU U GRUPI ELEMENATA NGE ='
C    1,I5)
C-----------------------------------------------------------------------
C6200 FORMAT(//' GRAPHIC PACKAGE   "IDEAS"'/
C    1' PERMITS ONLY BEAM WITH 2 NODES PER ELEMENT IN GROUP',
C    1'  NGE =',I5)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE STAJED(NPR,FPR,IDP,IDD,NEZ,
     1                  NCVP,NCVU,INULA,IZLAZ)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     PROGRAM ZA STAMPANJE BROJEVA JEDNACINA
CE     PROGRAM FOR PRINTOUT NUMBERS EQUATIONS
C
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /SRPSKI/ ISRPS
      DIMENSION NPR(*),FPR(*),NEZ(*),IDP(NCVP,6,*),IDD(6,*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' STAJED'
C
      IF(NULAZ.NE.1.AND.NULAZ.NE.3) RETURN
      DO 10 I=1,NCVU
      IF(ISRPS.EQ.0) 
     1WRITE(IZLAZ,2000) 
      IF(ISRPS.EQ.1) 
     1WRITE(IZLAZ,6000) 
         WRITE(IZLAZ,1000) NEZ(I),NPR(I),FPR(I)
         IF(INULA.GT.0) THEN
      IF(ISRPS.EQ.0) 
     1WRITE(IZLAZ,2100) 
      IF(ISRPS.EQ.1) 
     1WRITE(IZLAZ,6100) 
            DO 20 J=1,NCVP
               WRITE(IZLAZ,1100) J,(IDP(J,K,I),K=1,6)
   20       CONTINUE
      IF(ISRPS.EQ.0) 
     1WRITE(IZLAZ,2200) 
      IF(ISRPS.EQ.1) 
     1WRITE(IZLAZ,6200) 
            WRITE(IZLAZ,1100) NEZ(I),(IDD(K,I),K=1,6)
         ENDIF
   10 CONTINUE
      RETURN
C
 1000 FORMAT(I6,10X,I5,10X,F10.3)
 1100 FORMAT(I6,10X,6I5)
C-----------------------------------------------------------------------
 2000 FORMAT(/' CVOR ELEM.     BROJ PRESEKA     FAKTOR SKALIRANJA')
 2100 FORMAT(' CVOR SEGM.     UNUTRASNJE JEDNACINE ZA PRESEK')
 2200 FORMAT(' CVOR ELEM.     KONTURNE JEDNACINE ZA PRESEK')
C-----------------------------------------------------------------------
 6000 FORMAT(/' NODE ELEM.    SECTION NUMBER     SCALE FACTOR')
 6100 FORMAT(' NODE SEGM.     INTERNAL EQUATIONS FOR SECTION')
 6200 FORMAT(' NODE ELEM.     CONTOUR EQUATIONS FOR SECTION')
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE UCLOKS(FFUG,NFUG,NCFL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO READ CONCENTRATED FORCES
CS.    P R O G R A M
CS.        ZA UCITAVANJE KONCENTRISANIH SILA
C .
CE.    I=1,NCF   (NCF - NUMBER OF CONCENTRATED FORCES)
CS.    I=1,NCF   (NCF - BROJ KONCENTRISANIH SILA)
C .
CE.         NFUJ(I)  -  NUMBER OF EQUATION
CE.         NFUG(I)  -  NUMBER OF TIME FUNCTION
CE.         FFUG(I)  -  FUNCTION MULTIPLIER
CS.         NFUJ(I)  -  BROJ JEDNACINE
CS.         NFUG(I)  -  BROJ VREMENSKE FUNKCIJE
CS.         FFUG(I)  -  FAKTOR MNOZENJA
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      include 'paka.inc'
      
      COMMON /NOVAGR/ NS,NCVS,NCVP,NCVJ,LNOS,LCORS,LIDP,LNVEZ,LNPR,LFPR,
     1                LIDD,LLMU,LMA9,NMC,JEDPP,JEDNN,LVITOP,LVITTP,
     1                LCOPT,LNMA,LIPG,LISN,LIPR,LTHI,LTBT,LTDT,NPRES,
     1                NWPP,NWKK,NWEE,NCU,NCVU,IND3D
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /MPOINC/ MMP,NMPC,NEZAV,LCMPC,LMPC,NEZA1
      COMMON /AXISYM/ INDAX
      COMMON /SRPSKI/ ISRPS
      DIMENSION NFUG(5,*),FFUG(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UCLOKS'
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2010)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6010)
      ENDIF
      I = 0
      NAUT=0
    5 I=I+1
      CALL ISPITA(ACOZ)
C      PRINT * , 'IZASO IZ ISPITA'
      IF(I.EQ.1) KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) NN,IP,NC,FAK,KORC,II,NJ
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) NN,IP,NC,FAK,KORC,II,NJ
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)
     1WRITE(IZLAZ,5020) NN,IP,NC,FAK,KORC,II,NJ
C    IF(ICVEL.EQ.0) THEN
         NI=NN
         IF(NN.LT.0.OR.NN.GT.NCVP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
            STOP ' PROGRAM STOP - PAK91 - UCLOKS'
         ENDIF
C     ELSE
C        N=NN-NPI+1
C        NI=NELCV(N)
C        IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
C     IF(ISRPS.EQ.0)
C    1WRITE(IZLAZ,2100) NN
C     IF(ISRPS.EQ.1)
C    1WRITE(IZLAZ,6100) NN
C           STOP ' PROGRAM STOP - PAK05 - FSPOLJ'
C        ENDIF
C     ENDIF
      IF(NC.LE.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200) NC
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200) NC
         STOP ' PROGRAM STOP - PAK91 - UCLOKS'
      ENDIF
      IF(IP.LT.1.OR.IP.GT.6) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2300) IP
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6300) IP
         STOP ' PROGRAM STOP - PAK91 - UCLOKS'
      ENDIF
C     NJ = ID(NI,IP)
C     IF(NJ.EQ.0) THEN
C     IF(ISRPS.EQ.0)
C    1WRITE(IZLAZ,2030) NN,IP
C     IF(ISRPS.EQ.1)
C    1WRITE(IZLAZ,6030) NN,IP
C     ENDIF
C     IF(NJ.GE.0) THEN
C        NFUJ(I) = NJ
C        NFUG(I) = NC
C        FFUG(I) = FAK
C     ELSE
C     ENDIF
         NFUG(1,I)=NN
         NFUG(2,I)=IP
         NFUG(3,I)=NC
         NFUG(4,I)=II
         NFUG(5,I)=NJ
         FFUG(I)=FAK
      IF(NAUT.GT.0) GO TO 30
      IF(KORC.GT.0) GO TO 20
C NE STAMPA GENERISANE PODATKE (NIJE UGRADJENO) !!!
      IF(I.EQ.NCFL) RETURN
      GO TO 5
C
   20 NAUT=1
      N1  =NN
      FAK1=FAK
      KORA=KORC
      GO TO 5
C
CE    AUTOMATIC GENERATE DATA BETWEEN NODES N1 AND N2
CS    AUTOMATSKO GENERISANJE PODATAKA IZMEDJU CVOROVA N1 I N2
C
   30 N2    = NN
      FAK2  = FAK
      RKORA = KORA
      RN1N2 = N2-N1
      DD    = RKORA/RN1N2
      DF1F2 = DD*(FAK2-FAK1)
      IAUT  = (N2-N1)/KORA-1
      IA    = I+IAUT
C     NFUJ(IA) = NFUJ(I)
C     NFUG(IA) = NFUG(I)
C     FFUG(IA) = FFUG(I)
      NN = N1
      DO 34 J=1,IAUT
         NN=NN+KORA
C        IF(ICVEL.EQ.0) THEN
            NI=NN
            IF(NN.LE.0.OR.NN.GT.NCVP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
               STOP ' PROGRAM STOP - PAK05 - FSPOLJ'
            ENDIF
C        ELSE
C           N=NN-NPI+1
C           NI=NELCV(N)
C           IF(NI.EQ.0.OR.NN.LT.NPI.OR.NN.GT.NPA) THEN
C     IF(ISRPS.EQ.0)
C    1WRITE(IZLAZ,2100) NN
C     IF(ISRPS.EQ.1)
C    1WRITE(IZLAZ,6100) NN
C              STOP ' PROGRAM STOP - PAK05 - FSPOLJ'
C           ENDIF
C        ENDIF
C         NJ = ID(NI,IP)
         IF(NJ.EQ.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2030) NN,IP
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6030) NN,IP
         ENDIF
C PROVERI ZA POVEZANA POMERANJA
C         NFUJ(I) = NJ
C         NFUG(I) = NFUG(I-1)
C         FFUG(I) = FFUG(I-1)+DF1F2
         I=I+1
   34 CONTINUE
      IF(I.EQ.NCFL) GO TO 50
      NAUT=0
      IF(KORC.EQ.0) GO TO 5
      KORA=KORC
      NAUT=1
      N1=N2
      FAK1=FAK2
      GO TO 5
C
CE    PRINT READ AND GENERATE NODAL DATA
CS    STAMPANJE UCITANIH I GENERISANIH PODATAKA
C
   50 IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
         CALL WBROJK(KARTI,0)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2040)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6040)
         DO 70 I=1,NCFL
C            NJ = NFUJ(I)
            IF(NJ.EQ.0) GO TO 70
C            NC = NFUG(I)
C            FAK = FFUG(I)
            WRITE(IZLAZ,5050) NJ,NC,FAK
   70    CONTINUE
      ENDIF
      RETURN
 1000 FORMAT(3I5,F10.2,3I5)
 5020 FORMAT(10X,I5,7X,I5,7X,I5,7X,1PD12.5,I8,7X,I5,7X,I5)
 5050 FORMAT(11X,I8,17X,I5,13X,1PD15.8)
C-----------------------------------------------------------------------
 2000 FORMAT(///'1'/6X,'PODACI O LOKALNIM CVORNIM SILAMA'/6X,32('-'))
 2010 FORMAT(//////6X,'U C I T A N I     P O D A C I'///11X,
     1'CVOR SEG.  STEP.SLOB.   FUNK.BR.   FAKTOR MNOZ.   KORAK GEN.', 
     1'CVOR ELEM.  ELEMENT BR.')
 2030 FORMAT(' ZA CVOR N =',I5,' U PRAVCU',I2,' POSTOJI OGRANICENJE,',
     1' UCITANA SILA SE IGNORISE')
 2040 FORMAT(6X,
     1'G E N E R I S A N I     P O D A C I'///11X,'JEDNACINA BROJ',
     15X,'BROJ VREM. FUNKCIJE',5X,'FAKTOR MNOZENJA')
 2100 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O SILAMA'/
     1' CVOR',I5,' NE POSTOJI'//' PROGRAM STOP - PAK91 - UCLOKS'//)
 2200 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O SILAMA'/
     1' BROJ FUNKCIJE NC =',I5//' PROGRAM STOP - PAK91 - UCLOKS'//)
 2300 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O SILAMA'/
     1' INDIK. PRAVCA IP =',I5//' PROGRAM STOP - PAK91 - UCLOKS'//)
C-----------------------------------------------------------------------
 6000 FORMAT(///'1'/6X,'CONCENTRATED LOCAL LOADS DATA'/6X,29('-'))
 6010 FORMAT(//////6X,'I N P U T      D A T A'///11X,
     1'NODE SEGM.    DOF   FUNCTION NU.   PROP. FACTOR    STEP GEN.',
     1'NODE ELEM.  ELEMENT NUMBER')
 6030 FORMAT(' NODE,  N =',I5,' IN DIRECTION',I2,' IS FIXED,',
     1' READ LOAD IS IGNORED')
 6040 FORMAT(6X,
     1'G E N E R A T E D     D A T A'///11X,'EQUATIONS NUMBER',
     13X,'TIME FUNCTION NUMBER',4X,'MULTIPL. FACTOR')
 6100 FORMAT(//' ERROR IN INPUT DATA ABOUT CONCENTRATED LOADS'/
     1' NODE',I5,' NOT EXIST'//' PROGRAM STOP - PAK91 - UCLOKS'//)
 6200 FORMAT(//' ERROR IN INPUT DATA ABOUT CONCENTRATED LOADS'/
     1' NO. FUNCTION NC =',I5//' PROGRAM STOP - PAK91 - UCLOKS'//)
 6300 FORMAT(//' ERROR IN INPUT DATA ABOUT CONCENTRATED LOADS'/
     1' DOF.  IP =',I5//' PROGRAM STOP - PAK91 - UCLOKS'//)
C-----------------------------------------------------------------------
      END
C=======================================================================
      SUBROUTINE UCLOKP(FFUG,NFUG,NCFL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.        TO READ LOCAL PRESSURE
CS.    P R O G R A M
CS.        ZA UCITAVANJE LOKALNIH PRITISAKA
C .
CE.    I=1,NCF   (NCF - NUMBER OF LOCAL PRESSURE)
CS.    I=1,NCF   (NCF - BROJ LOKALNIH PRITISAKA)
C .
CE.         NFUJ(I)  -  NUMBER OF EQUATION
CE.         NFUG(I)  -  NUMBER OF TIME FUNCTION
CE.         FFUG(I)  -  FUNCTION MULTIPLIER
CS.         NFUJ(I)  -  BROJ JEDNACINE
CS.         NFUG(I)  -  BROJ VREMENSKE FUNKCIJE
CS.         FFUG(I)  -  FAKTOR MNOZENJA
C .
C ......................................................................
C
      CHARACTER*250 ACOZ
      include 'paka.inc'
      
      COMMON /NOVAGR/ NS,NCVS,NCVP,NCVJ,LNOS,LCORS,LIDP,LNVEZ,LNPR,LFPR,
     1                LIDD,LLMU,LMA9,NMC,JEDPP,JEDNN,LVITOP,LVITTP,
     1                LCOPT,LNMA,LIPG,LISN,LIPR,LTHI,LTBT,LTDT,NPRES,
     1                NWPP,NWKK,NWEE,NCU,NCVU,IND3D
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /MPOINC/ MMP,NMPC,NEZAV,LCMPC,LMPC,NEZA1
      COMMON /AXISYM/ INDAX
      COMMON /SRPSKI/ ISRPS
      DIMENSION NFUG(6,*),FFUG(*)
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' UCLOKP'
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000)
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2010)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6010)
      ENDIF
      I = 0
      NAUT=0
    5 I=I+1
      CALL ISPITA(ACOZ)
C      PRINT * , 'IZASO IZ ISPITA'
      IF(I.EQ.1) KARTI=KARTIC
      IF(INDFOR.EQ.1)
     1READ(IULAZ,*) (NFUG(IJ,I),IJ=1,6),FFUG(I),KORS,KORE
      IF(INDFOR.EQ.2)
     1READ(ACOZ,1000) (NFUG(IJ,I),IJ=1,6),FFUG(I),KORS,KORE
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3)
     1WRITE(IZLAZ,5020) (NFUG(IJ,I),IJ=1,6),FFUG(I),KORS,KORE
      DO 20 IJ=3,5
         NN=NFUG(IJ,I)
         IF(NN.LT.0.OR.NN.GT.NCVP) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2100) NN
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6100) NN
            STOP ' PROGRAM STOP - PAK91 - UCLOKP'
         ENDIF
   20 CONTINUE
      IF(NFUG(6,I).LE.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200)NFUG(6,I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200)NFUG(6,I)
         STOP ' PROGRAM STOP - PAK91 - UCLOKP'
      ENDIF
      IF(NFUG(2,I).LE.0.OR.NFUG(2,I).GT.NS) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2300)NFUG(2,I)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6300)NFUG(2,I)
         STOP ' PROGRAM STOP - PAK91 - UCLOKS'
      ENDIF
C      IF(NAUT.GT.0) GO TO 30
C      IF(KORC.GT.0) GO TO 20
C NE STAMPA GENERISANE PODATKE (NIJE UGRADJENO) !!!
      IF(I.EQ.NCFL) RETURN
      GO TO 5
 1000 FORMAT(6I5,F10.2,2I5)
 5020 FORMAT(5X,I5,6X,I5,6X,3I5,7X,I5,7X,1PD12.5,I8,7X,I5)
C-----------------------------------------------------------------------
 2000 FORMAT(///'1'/6X,'PODACI O LOKALNIM PRITISCIMA'/6X,28('-'))
 2010 FORMAT(//////6X,'U C I T A N I     P O D A C I'///3X,
     1'ELEMENT BR.  SEGMENT BR.  CVOROVI SEGMENTA      FUNK.BR.   FAKTOR
     1 MNOZ.   KORAK SEG.  KORAK EL.') 
 2100 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O SILAMA'/
     1' CVOR',I5,' NE POSTOJI'//' PROGRAM STOP - PAK91 - UCLOKP'//)
 2200 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O SILAMA'/
     1' BROJ FUNKCIJE NC =',I5//' PROGRAM STOP - PAK91 - UCLOKP'//)
 2300 FORMAT(//' GRESKA U UCITAVANJU ULAZNIH PODATAKA O SILAMA'/
     1' BROJ SEGMENTA NS =',I5//' PROGRAM STOP - PAK91 - UCLOKP'//)
C-----------------------------------------------------------------------
 6000 FORMAT(///'1'/6X,'LOCAL PRESSURE LOADS DATA'/6X,25('-'))
 6010 FORMAT(//////6X,'I N P U T      D A T A'///3X,
     1'ELEMENT NO.  SEGMENT NO.  NODES OF SEGMENT      FUNC.NO.   PROP. 
     1FACTOR    STEP SEG.   STEP EL.') 
 6100 FORMAT(//' ERROR IN INPUT DATA ABOUT CONCENTRATED LOADS'/
     1' NODE',I5,' NOT EXIST'//' PROGRAM STOP - PAK91 - UCLOKP'//)
 6200 FORMAT(//' ERROR IN INPUT DATA ABOUT CONCENTRATED LOADS'/
     1' NO. FUNCTION NC =',I5//' PROGRAM STOP - PAK91 - UCLOKP'//)
 6300 FORMAT(//' ERROR IN INPUT DATA ABOUT CONCENTRATED LOADS'/
     1' SEGMENT NS =',I5//' PROGRAM STOP - PAK91 - UCLOKP'//)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE PROF91(COR,EL,THI,NEL,NP,NELM,INDOF,TEZP,NPRE)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     CALCULATION OF CROSS SECTION DATA
C
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /SRPSKI/ ISRPS
C 
      DIMENSION COR(NP,*),EL(*),THI(*),NEL(NELM,*),TEZP(3,*)
C
C     DEFINICIJE PROMENLJIVIH
C     NTIP - TIP PRESEKA(1-OTVORENI; 2-ZATVORENI; 3-KRSTASTI)
C     NT   BROJ TACAKA PROFILA
C     COR(N,1) - BROJ TACKE NA KONTURI-PRVA TACKA NA KRAJU KONTURE
C     COR(N,2),COR(N,3) - KOORDINATE KARAKTERISTICNIH TACAKA PROFILA
C     ENATA PARAL. SA OSOM Z, ODNOSNO Y(0.-NE UZIMA SE KOD CVORA N,
C                                       1.-UZIMA SE KOD CVORA N)
C     U PROIZVOLJNOM KOORD. SISTEMU
C     DEB - DEBLJINE SEGMENATA IZ KOJIH JE SASTAVLJEN POPRECNI PRESEK
C     ELM - MATRICA SPOJEVA I DEBLJINA
C     ELM(N,1) - TO JE BROJ SEGMENTA-N
C     ELM(N,2) - TO JE PRVA TACKA SEGMENTA N OD KOJEG JE SASTAVLJEN PROF
C     ELM(N,3) - TO JE DRUGA TACKA SEGMENTA N
C     ELM(N,4) - TO JE DEBLJINA SEGMENTA N
C     EL(I) - VEKTOR DUZINA
C     POVR - POVRSINA POPRECNOG PRESEKA
C     ZC - KOORDINATA TEZISTA
C     YC - KOORDINATA TEZISTA
C     ZIP,YIP - MOMENTI INERCIJE U ODNOSU NA TEZISNE  OSE
C     ZI,YI,CI - MOMENTI  INERCIJE U ODNOSU NA GLAVNE TEZISNE OSE
C     ALFA - UGAO ZAOKRETANJA GLAVNE OSE U ODNOSU NA OSU
C            COR(N,2)-(PRVU).
C     OM - OMEGA
C     SWOY,SWOZ - SEKTORSKI LINIJSKI STATICKI MOMENTI
C     WPM - OMEGA PRIM TACKE M
C     SM - LUCNA KOORDINATA GLAVNE NULTE TACKE M
C     YM,ZM - KOORDINATE GLAVNE NULTE TACKE M
C     AY,AZ - KOORDINATE CENTRA SMICANJA
C     SWO(I) - SEKTORSKI STATICKI MOMENT ODSECKA
C     SEX(N,1) - EKSTREMUM TAUW(0.-NEMA EKSTREMUM,
C                               1.-IMA  EKSTREMUM NA SEGMENTU N)
C     SEX(N,2) - VREDNOST S0  NA SEGMENTU N-ZA EKSTR. TAUW
C     STEX(1,J,K) - VREDNOST STATICKOG MOMENTA ZA OSU 2 SEGMENTA J
C        K=1 - EKSTR. SW0
C        K=2 - EKSTR. SY
C        K=3 - EKSTR. SZ
C     CSI(80,2)- SIRINA PRESEKA ZA ODREDJIVANJE SMICAJNIH NAPONA
C     EXC(2,20,3)- SIRINA PRESEKA ZA TACKE EKSTREMUMA
C     NKAR - BROJ KARAKTERISTICNIH TACAKA ZA RACUNANJE OMEDJENE
C     POVRSINE KOD ZATVORENOF PROFILA
C     CORK(5,3) - BROJEVI KARAKTERISTICNIH TACAKA I NJIHOVE KOORDINATE
C     NNKAR(5) - BROJ TACAKA KOJI PRIPADA POJEDINIM KARAKTERISTICNIM
C     TACKAMA
C     NBROJ(5,20) - BROJEVI TACAKA PROFILA KOJE PRIPADAJU POJEDINIM
C     KARAKTERISTICNIM TACKAMA
C     RJ - MOMENT INERCIJE KOD ZARVORENIH PROFILA
C     NVR - VRSTA TORZIJE(0-SAINT-VENANT,1-OMETANA TORZIJA)
C     TK - MOMENTI INERCIJE PRI UVIJANJU
C     KOORDINATNI SISTEM U KOME SE ZADAJU KOORDINATE
C     MORA BITI DESNI
C     UCITATI ULAZNE PODATKE ZA PROFIL
C     ODREDJIVANJE KOORDINATA TEZISTA PRESEKA
C
      PI = 1.
      PI = 4.*DATAN(PI)
C
      DO 5 I=1,NELM
      II=NEL(I,1)
      IK=NEL(I,2)
    5 EL(I)=DSQRT((COR(IK,1)-COR(II,1))**2+(COR(IK,2)-COR(II,2))**2)
      POVR=0.
      DO 6 I=1,NELM
    6 POVR=POVR+THI(I)*EL(I)
      ZC=0.
      YC=0.
      DO 7 I=1,NELM
      II=NEL(I,1)
      IK=NEL(I,2)
      YC=YC+(COR(IK,2)+COR(II,2))*THI(I)*EL(I)
    7 ZC=ZC+(COR(IK,1)+COR(II,1))*THI(I)*EL(I)
      ZC=ZC/2./POVR
      YC=YC/2./POVR
C     ODREDJIVANJE MOMENTA INERCIJE ZA TEZISNE OSE
      ZIP=0.
      YIP=0.
      ZYIP=0.
C
      DO 8 I=1,NELM
      II=NEL(I,1)
      IK=NEL(I,2)
C
      YIP=YIP+(1./12.*(COR(II,1)-COR(IK,1))**2+(0.5*(COR(II,1)+COR(IK,1)
     1)-ZC)**2)*EL(I)*THI(I)
C
      IF(DABS(COR(II,1)-COR(IK,1)).LT.1.0D-6) THEN
       YIP=YIP+EL(I)*THI(I)**3/12.
      ENDIF
C
      ZIP=ZIP+(1./12.*(COR(II,2)-COR(IK,2))**2+(0.5*(COR(II,2)+COR(IK,2)
     1)-YC)**2)*EL(I)*THI(I)
C
      IF(DABS(COR(II,2)-COR(IK,2)).LT.1.0D-6) THEN
       ZIP=ZIP+EL(I)*THI(I)**3/12.
      ENDIF
C
    8 ZYIP=ZYIP+(-1./12.*(COR(IK,1)-COR(II,1))*(COR(II,2)-COR(IK,2))+(0.
     15*(COR(II,1)+COR(IK,1))-ZC)*(0.5*(COR(II,2)+COR(IK,2))-YC))*EL(I)*
     2THI(I)
C
C     POLOZAJ GLAVNIH OSA
      IF((DABS(ZYIP).LE.0.0001).AND.(DABS(ZIP-YIP).LE.0.0001)) GO TO 9
      GO TO 10
    9 ALFA=0.
      GO TO 11
   10 IF(DABS(ZYIP).GT.0.0001) GO TO 12
      IF(ZIP-YIP)13,14,15
   15 ALFA=0.
      GO TO 11
   13 ALFA=PI/2.
      GO TO 11
   12 IF(DABS(ZIP-YIP).GT.0.0001) GO TO 160
   14 IF(ZYIP)16,16,17
   16 ALFA=PI/4.
      GO TO 11
   17  ALFA=3.*PI/4.
      GO TO 11
  160 BETA=(DABS(2.*ZYIP/DSQRT((ZIP-YIP)**2+4.*ZYIP**2)))
      BETA=DATAN(BETA/DSQRT(1.-BETA**2))
      IF((ZYIP.LT.0.).AND.(ZIP.GT.YIP)) GO TO 18
      IF((ZYIP.LT.0.).AND.(ZIP.LT.YIP)) GO TO 19
      IF((ZYIP.GT.0.).AND.(ZIP.LT.YIP)) GO TO 20
      ALFA=-0.5*BETA
      GO TO 11
   18 ALFA=0.5*BETA
      GO TO 11
   19 ALFA=0.5*(PI-BETA)
      GO TO 11
   20 ALFA=0.5*(PI+BETA)
C     GLAVNI MOMENTI INERCIJE
   11 IF (NELM.GT.1) GO TO 24
      ZI=THI(1)*EL(1)*EL(1)*EL(1)/12.
      YI=EL(1)*THI(1)*THI(1)*THI(1)/12.
      GO TO 26
   24 CONTINUE
C RADOVAN
      IF(ZYIP.LT.1.0D-5) THEN
        ZI=ZIP
        YI=YIP
       ELSE
        ZI=0.5*(ZIP+YIP+DSQRT((ZIP-YIP)**2+4.*ZYIP**2))
        YI=0.5*(ZIP+YIP-DSQRT((ZIP-YIP)**2+4.*ZYIP**2))
      ENDIF
C   RADOVAN ??? 30.01.97
        TMP=ZI
        IF(ZI.LT.YI) THEN
         ZI=YI
         YI=TMP
        ENDIF
C   ????
C RADOVAN END
   26 CI=ZI+YI
      ALFAST = ALFA*180./PI
C      KOORDINATE TEMENA U ODNOSU NA GLAVNE CENTRALNE OSE
      TEZP(1,NPRE)=ZC
      TEZP(2,NPRE)=YC
      IF(INDOF.EQ.0) THEN
         TEZP(1,NPRE)=0.
         TEZP(2,NPRE)=0.
         DO 21 I=1,NP
            YY=COR(I,2)
            COR(I,2)=COR(I,2)-YC
            COR(I,1)=COR(I,1)-ZC
C           YY=COR(I,2)
C           COR(I,2)=(COR(I,2)-YC)*DCOS(ALFA)-(COR(I,1)-ZC)*DSIN(ALFA)
C           COR(I,1)=(COR(I,1)-ZC)*DCOS(ALFA)+(YY-YC)*DSIN(ALFA)
   21    CONTINUE
      ENDIF
C
C...  STAMPA
C
      ALFAST = ALFA*180./PI
      IF(NULAZ.EQ.1.OR.NULAZ.EQ.3) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000)POVR,ZC,YC,ZI,YI,ALFAST
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000)POVR,ZC,YC,YI,ZI,ALFAST
      ENDIF
C
C...  KOREKCIJA ZA POMEREN PROFIL (GREDA ZAJEDNO SA LJUSKOM)
C
C     IF(IPOMP.EQ.1)THEN
C       DZ=COR(1,2)
C       DY=COR(1,1)
C       YI=YI+DZ*DZ*POVR
C       ZI=ZI+DY*DY*POVR
C     IF(ISRPS.EQ.0)
C    1WRITE(IZLAZ,2010)DY,DZ,YI,ZI
C     IF(ISRPS.EQ.1)
C    1WRITE(IZLAZ,6010)DY,DZ,YI,ZI
C     ENDIF
      RETURN
 2000 FORMAT(//6X,'K A R A K T E R I S T I K E    P R E S E K A'//
     111X,'POVRSINA POPRECNOG PRESEKA ................  POVR =',1PD12.5/
     211X,'KOORDINATE TEZISTA         ................  XC   =',1PD12.5/
     254X,                                           '  YC   =',1PD12.5/
     311X,'GLAVNI MOMENTI INERCIJE    ................  J(1) =',1PD12.5/
     354X,                                           '  J(2) =',1PD12.5/
     411X,'UGAO IZMEDJU INICIJALNIH I GLAVNIH OSA ....  ALFA =',1PD12.5)
C2010 FORMAT(//6X,'P O M E R E N O S T   P R E S E K A'//
C    211X,'POMERANJE GLAVNIH OSA .....................  D1   =',1PD12.5/
C    254X,                                           '  D2   =',1PD12.5/
C    311X,'MOMENTI INERCIJE  .........................  J<1> =',1PD12.5/
C    354X,                                           '  J<2> =',1PD12.5)
 6000 FORMAT(//6X,'C R O S S   S E C T I O N   P R O P E R I T Y'//
     111X,'CROSS SECTION AREA ........................  POVR =',1PD12.5/
     211X,'CENTER OF GRAVITY  ........................  XC   =',1PD12.5/
     254X,                                           '  YC   =',1PD12.5/
     311X,'MAIN MOMENTS OF INERTIA ...................  J(1) =',1PD12.5/
     354X,                                           '  J(2) =',1PD12.5/
     411X,'ANGLE BETWEEN INITIAL AND MAIN AXES .......  ALFA =',1PD12.5)
C6010 FORMAT(//6X,'D I S P L A C E D   C R O S S   S E C T I O N'//
C    211X,'DISPLACEMENT OF AXES ......................  D1   =',1PD12.5/
C    254X,                                           '  D2   =',1PD12.5/
C    311X,'MOMENTS OF INERTIA ........................  J<1> =',1PD12.5/
C    354X,                                           '  J<2> =',1PD12.5)
      END
