C=======================================================================
C
C        INTEGRALJENJE MATRICA MASA  IZOPARAMETARSKE LJUSKE
C
C   SUBROUTINE K81MAS
C              READM8
C              SIST8M
C              ELTM8
C
C=======================================================================
      SUBROUTINE K81MAS
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C    GLAVNI PROGRAM ZA RACUNANJE MATRICA MASA ELEMENATA
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /CDEBUG/ IDEBUG
C
      IF(IDEBUG.GT.0) PRINT *, ' K81MAS'
C
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
      LAU=LMAX
      CALL READ83(A(LAU))
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
      LAE=LMAX
      NWE=ND*(ND+1)/2
      MXAE=NWE*IDVA
      LMAX = LAE + MXAE
C
      IF(LMAX.LT.MTOT) GO TO 70
      WRITE(IZLAZ,2009) LMAX,MTOT
      STOP
C
C     FORMIRANJE MATRICE MASA ELEMENATA I PAKOVANJE U SISTEM
C
   70 CALL SIST8M(A(LAE),A(LAU))
C
      RETURN
C-----------------------------------------------------------------------
 2009 FORMAT(///' NOT ENOUGH SPACE IN WORKING VECTOR  A'
     1/' REQUESTED DIMENSION , LMAX=',I10
     2/' AVAILABLE DIMENSION , MTOT=',I10)
CS 2009 FORMAT(/1X,'NEDOVOLJNA DIMENZIJA U OSNOVNOM RADNOM VEKTORU A ZA UC
CS     1ITAVANJE ULAZNIH PODATAKA'/1X,'POTREBNA DIMENZIJA, LMAX=',I10/1X,'
CS     2RASPOLOZIVA DIMENZIJA, MTOT=',I10)
C-----------------------------------------------------------------------
      END
C======================================================================
      SUBROUTINE READ83(AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     GLAVNI UPRAVLJACKI PROGRAM ZA UCITAVANJE ULAZNIH PODATAKA U AU
C
      include 'paka.inc'
      
C
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /ZAPISI/ LSTAZA(5)
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /PODTIP/ IPODT
      COMMON /TRANS6/ LTR0,NPD6
      COMMON /INDCEL/ IND3D
      COMMON /COEFSM/ COEF(3),ICOEF
      COMMON /IKOVAR/ INDKOV
      COMMON /CUVAJN/ TAUCEN(6,5),INDSEL,NGAUSU
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
C
      DIMENSION AU(*)
      REAL AU
C
C     POZIVANJE PROGRAMA ZA ULAZNE PODATKE
C
      COMMON /CDEBUG/ IDEBUG
      IF(IDEBUG.GT.0) PRINT *, ' READ83'
C
C     UCITAVANJE ULAZNIH PODATAKA SA DISKA
      LSTAZA(1)=LMAX8
      READ(IELEM,REC=LMAX8)
     1NGAUSX,NGAUSY,NGAUSZ,BETA,NCVE,ITERME,ICORGT,LCEL,LELC,NMA,NMI,
     1LMXAU,MXAU,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,LTR0,IPODT,
     1ND,NGS12,MSLOJ,MXS,MSET,NGS4,NSILA,LESILA,
     1LNSLOJ,LMATSL,LDSLOJ,LBBET,INCOTX,INCOTY,INCOTZ,
     1LBET0,(CPP(J,1),J=1,3),IBB0,LALFE,LHAEM,LHINV,LGEEK,IALFA,IND3D,
     1INDBTH,INDDTH,LTBTH,LTDTH,INDKOV,ICOEF,(COEF(I),I=1,3),INDSEL,
     1ILEDE,NLD,ICPM1
      LSTAZA(2)=LMAX8+1
      CALL READDD(AU(LNSLOJ),MXAU/IDVA,IELEM,LMAX8,LDUZI)
      LMAX=LAU+MXAU
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
      RETURN
      END
C======================================================================
C
C======================================================================
      SUBROUTINE SIST8M(AE,AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     GLAVNI UPRAVLJACKI PROGRAM  ZA MATRICE MASA ELEMENATA LJUSKE
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /ZAPISI/ LSTAZA(5)
      COMMON /MATERM/ LMODEL,LGUSM
      COMMON /DUPLAP/ IDVA
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /REPERM/ MREPER(4)
      COMMON /UPDLAG/ LUL,LCORUL
      COMMON /DIREKT/ LSTAZZ(9),LDRV0,LDRV1,LDRV,IDIREK
      COMMON /TRANS6/ LTR0,NPD6
      COMMON /DINAMI/ IMASS,IDAMP,PIP,DIP,MDVI
      COMMON /KAKO6O/ LLJUS,LKAKO6
      COMMON /CDEBUG/ IDEBUG
C
      DIMENSION AE(*),AU(*)
      REAL AE,AU
C
      IF(IDEBUG.GT.0) PRINT *, ' SIST8M'
C
C     REPERI U VEKTORU ELEMENATA AE
      LSKE=1
      MXAE1=LSKE +ND*(ND+1)/2*IDVA
C
C     OSNOVNA PETLJA PO ELEMENTIMA
C
C
C     RACUNANJE MATRICE ELEMENTA
C
      KORD=LCORD
      IF(IATYP.EQ.3) KORD=LCORUL
      IF(IMASS.EQ.1) GO TO 150
      CALL DIMAS8(A(LID),A(KORD),AU(LTHID),AU(LNEL),AU(LNMAT),
     1 A(LDRV0),A(LDRV),A(LSK),AE(LSKE),A(LLJUS),A(LDRV1),
     1 AU(LNSLOJ),AU(LMATSL),AU(LDSLOJ),AU(LTR0),A(LGUSM),A(LAU),
     1 A(LMAXA))
      GO TO 100
  150 CALL ELTM8(A(LID),A(KORD),AU(LTHID),AU(LNEL),AU(LNMAT),
     1 A(LDRV0),A(LDRV),A(LSK),AE(LSKE),A(LLJUS),A(LDRV1),
     1 AU(LNSLOJ),AU(LMATSL),AU(LDSLOJ),AU(LTR0),A(LGUSM),A(LAU))
  100 RETURN
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE ELTM8  (ID,CORD,DEB,NOP,IMAT,DRG0,DRG,SK,SKE,LJUS,DRV1,
     1                   NSLOJ,MATSL,DSLOJ,TR0,GUSM,AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     INTEGRACIJA PO POVRSINI MATRICA ELEMENATA
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /IZLE4B/ H(9,3),GM(3,9),BLT(6,54),BE(9,54),ETP(6,6),UEL(54)
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /ITERBR/ ITER
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /REPERM/ MREPER(4)
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /DIREKT/ LSTAZZ(9),LDRV0,LDRV1,LDRV,IDIREK
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /TEMPCV/ LTECV,ITEMP
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /PODTIP/ IPODT
      COMMON /CDEBUG/ IDEBUG
C
      DIMENSION AU(*)
      REAL AU
C
      DIMENSION ID(NP,*),CORD(NP,*),LJUS(*),
     1          DRG0(NP,*),DRG(NP,*),DRV1(NP,*),TR0(*),GUSM(50,*)
      DIMENSION SK(*),SKE(*),DEB(*),NOP(NE,*),IMAT(*),NSLOJ(*),
     1          MATSL(MSLOJ,*),DSLOJ(MSLOJ,*)
      DIMENSION XG(55),WGT(55),NREF(11),VN(3,9),
     1          GKS(3,2,9),LM(54),EF1(3),EF2(3),EF3(3),EF0(3),
     1          DRGTM0(9,3),MTR(9),TTR(3,3,9)
      DIMENSION NREFTP(7),WGTTP(10),XGTP(10),YGTP(10)
      DIMENSION WNC(15),XNC(15)
      DATA NREF/0,1,3,6,10,15,21,28,36,45,55/
      DATA WGT/            2.D0,               1.D0,               1.D0,
     1       .555555555555556D0, .888888888888889D0, .555555555555556D0,
     2       .347854845137454D0, .652145154862546D0, .652145154862546D0,
     3       .347854845137454D0, .236926885056189D0, .478628670499366D0,
     4       .568888888888889D0, .478628670499366D0, .236926885056189D0,
     5       .171324492379170D0, .360761573048139D0, .467913934572691D0,
     6       .467913934572691D0, .360761573048139D0, .171324492379170D0,
     7       .129484966168870D0, .279705391489277D0, .381830050505119D0,
     8       .417959183673469D0, .381830050505119D0, .279705391489277D0,
     9       .129484966168870D0, .101228536290376D0, .222381034453374D0,
     9       .313706645877887D0, .362683783378362D0, .362683783378362D0,
     1       .313706645877887D0, .222381034453374D0, .101228536290376D0,
     2       .081274388361574D0, .180648160694857D0, .260610696402935D0,
     3       .312347077040003D0, .330239355001260D0, .312347077040003D0,
     4       .260610696402935D0, .180648160694857D0, .081274388361574D0,
     5       .066671344308688D0, .149451349150581D0, .219086362515982D0,
     6       .269266719309996D0, .295524224714753D0, .295524224714753D0,
     7       .269266719309996D0, .219086362515982D0, .149451349150581D0,
     8       .066671344308688D0/
      DATA XG /            0.D0,-.577350269189626D0, .577350269189626D0,
     1      -.774596669241483D0,               0.D0, .774596669241483D0,
     2      -.861136311594053D0,-.339981043584856D0, .339981043584856D0,
     3       .861136311594053D0,-.906179845938664D0,-.538469310105683D0,
     4                     0.D0, .538469310105683D0, .906179845938664D0,
     5      -.932469514203152D0,-.661209386466265D0,-.238619186083197D0,
     6       .238619186083197D0, .661209386466265D0, .932469514203152D0,
     7      -.949107912342759D0,-.741531185599394D0,-.405845151377397D0,
     8                     0.D0, .405845151377397D0, .741531185599394D0,
     9       .949107912342759D0,-.960289856497536D0,-.796666477413627D0,
     9      -.525532409916329D0,-.183434642495650D0, .183434642495650D0,
     1       .525532409916329D0, .796666477413627D0, .960289856497536D0,
     2      -.968160239507626D0,-.836031107326636D0,-.613371432700590D0,
     3      -.324253423403809D0,               0.D0, .324253423403809D0,
     4       .613371432700590D0, .836031107326636D0, .968160239507626D0,
     5      -.973906528517172D0,-.865063366688985D0,-.679409568299024D0,
     6      -.433395394129247D0,-.148874338981631D0, .148874338981631D0,
     7       .433395394129247D0, .679409568299024D0, .865063366688985D0,
     8       .973906528517172D0/
C
      DATA WNC/            2.D0,               1.D0,               1.D0,
     1       .333333333333333D0,1.333333333333333D0, .333333333333333D0,
     2       .250000000000000D0, .750000000000000D0, .750000000000000D0,
     3       .250000000000000D0, .155555555555556D0, .711111111111111D0,
     4       .266666666666667D0, .711111111111111D0, .155555555555556D0/
C
      DATA XNC/            0.D0,              -1.D0,               1.D0,
     1                    -1.D0,               0.D0,               1.D0,
     2                    -1.D0,-.333333333333333D0, .333333333333333D0,
     3                     1.D0,              -1.D0,             -0.5D0,
     4                     0.D0,              0.5D0,               1.D0/
C
      DATA NREFTP /0,0,0,0,0,0,3/
C
      DATA WGTTP /.3333333333333D0, .3333333333333D0, .3333333333333D0,
     1            .1259391805448D0, .1259391805448D0, .1259391805448D0,
     3            .1323941527885D0, .1323941527885D0, .1323941527885D0,  
     4            .2250000000000D0/
C
      DATA XGTP  /.1666666666667D0, .6666666666667D0, .1666666666667D0,
     1            .1012865073235D0, .7974269853531D0, .1012865073235D0, 
     2            .4701420641051D0, .4701420641051D0, .0597158717898D0,
     3            .3333333333333D0/
C
      DATA YGTP  /.1666666666667D0, .1666666666667D0, .6666666666667D0, 
     1            .1012865073235D0, .1012865073235D0, .7974269853531D0,  
     2            .0597158717898D0, .4701420641051D0, .4701420641051D0,
     3            .3333333333333D0/
C
      IF(IDEBUG.GT.0) PRINT *, ' ELTM8'
C
      NCVE3=NCVE*3
      NWE=ND*(ND+1)/2
C
CS            P E T L J A    P O    E L E M N T I M A
CE            L O O P    O V E R    E L E M E N T S
C
      L6=0
C
      DO 10 NLM=1,NE
C
CS       NASTAJANJE I NESTAJANJE ELEMENATA
CE       ELEMENT BIRTH AND DEATH OPTION
C
         IBD=0
         CALL DTHBTH(AU(LTBTH),AU(LTDTH),VREME,NLM,IBD)
         IF(IBD.EQ.1) GO TO 10
C
      CALL CLEAR(SKE,NWE)
C
      IND6=0
      IBTC=0
      D05=DEB(NLM)*0.5
      DO 47 NBR=1,NCVE
      IG=NOP(NLM,NBR)
      IF(IG.EQ.0) GO TO 47
      DO 48 I=1,3
      EF0(I)=DRG0(IG,I)
      EF1(I)=DRV1(IG,I)
   48 EF3(I)=DRG(IG,I)
      CALL V1V2(EF1,EF2,EF3,2)
C**  TRANSFORMACIJA ZA CVOROVE SA 6 DOF
      MTR(NBR)=0
      IF(ID(IG,6).GT.0.OR.LJUS(IG).EQ.1)THEN
        IND6=1
        MTR(NBR)=1
        DO 50 I=1,3
        DO 50 J=1,3
        L6=L6+1
   50   TTR(I,J,NBR)=TR0(L6)
        CALL TRAV(EF1,EF2,EF3,TTR(1,1,NBR))
        EF0(1)=TTR(3,1,NBR)
        EF0(2)=TTR(3,2,NBR)
        EF0(3)=TTR(3,3,NBR)
      ENDIF
C
C
      DO 49 I=1,3
      GKS(I,1,NBR)=-D05*EF2(I)
   49 GKS(I,2,NBR)= D05*EF1(I)
C
      IF(IATYP.EQ.3)THEN
        DO 17 I=1,3
   17   GM(I,NBR)=D05*EF3(I)
      ELSE
        DO 18 I=1,3
   18   GM(I,NBR)=D05*EF0(I)
      ENDIF
      IF(IATYP.EQ.2.OR.IATYP.EQ.3)THEN
        DO 19 I=1,3
   19   DRGTM0(NBR,I)=EF3(I)-EF0(I)
      ENDIF
C
   47 CONTINUE
C
CS     VEKTOR  LM I VEKTOR LOKALNIH POMERANJA
CE     VECTOR  LM  AND  LOCALL DISPLACEMENTS
C
      DO 1678 I=1,ND
 1678 LM(I)=0
      KT=0
      KR=NCVE3
      DO 1222 I=1,NCVE
      II=NOP(NLM,I)
       DO 1221 J=1,3
        KT=KT+1
        KR=KR+1
        IF(II.EQ.0) GO TO 1221
        LM(KR)=ID(II,3+J)
        LM(KT)=ID(II,J)
 1221  CONTINUE
 1222 CONTINUE
C
CS         P E T L J A    P O    S L O J E V I M A
CE         L O O P    O V E R    L A Y E R S
C
      MAT=IMAT(NLM)
      MST=MAT
      NNSL=1
      IF(MSET.GT.0) THEN
        NNSL=NSLOJ(MST)
        TTT=-1.D0
      ENDIF
C
      DO 25 MSL=1,NNSL
C
C
        IF(MSET.GT.0) THEN
           DDD =DSLOJ(MSL,MST)
           TTT =TTT+2.D0*DDD
           MAT =MATSL(MSL,MST)
        ENDIF   
C
C
      GUST=GUSM(NMODM,MAT)
C
CS...... PETLJA PO GAUSOVIM TACKAMA 
CE...... LOOP OVER GAUSS POINTS
C
      JG=0
      DO 20 NGT=1,NGAUSZ
        JGR=NREF(NGAUSZ)+NGT
        IF(INCOTZ.EQ.0)THEN
          T =XG (JGR)
          WT=WGT(JGR)
        ELSE
          T =XNC(JGR)
          WT=WNC(JGR)
        ENDIF
        IF(MSET.GT.0) THEN
          T  =TTT-DDD*(1.D0-T)
          WT =DDD*WT
        ENDIF
C
        DO 20 NGR=1,NGAUSX
          IF(IPODT.NE.1.AND.IPODT.NE.3)THEN
            JGR=NREF(NGAUSX)+NGR
            IF(INCOTX.EQ.0)THEN
              R =XG (JGR)
              WR=WGT(JGR)
            ELSE
              R =XNC(JGR)
              WR=WNC(JGR)
            ENDIF
          ENDIF
          IF(IPODT.EQ.1.OR.IPODT.EQ.3)THEN
            JGR=NREFTP(NGAUSX)+NGR
            R=XGTP(JGR)
            S=YGTP(JGR)
            WR=WGTTP(JGR)
            WS=.5D0
          ENDIF
C
          DO 20 NGS=1,NGAUSY
            IF(IPODT.NE.1.AND.IPODT.NE.3)THEN
              JGR=NREF(NGAUSY)+NGS
              IF(INCOTY.EQ.0)THEN
                S =XG (JGR)
                WS=WGT(JGR)
              ELSE
                S =XNC(JGR)
                WS=WNC(JGR)
              ENDIF
            ENDIF
CS     JAKOBIJAN U TACKI R, S, T
CE     JACOBIAN MATRIX  IN  R,S,T  POINT
            CALL IZLJAC (XJ,DET,CORD,NOP,DEB,R,S,T,VN,BB0,GKS,NLM,1)
      WD=WR*WS*WT*DET*GUST
      NCV3=NCVE3-2
      CALL CLEAR(BLT,6*54)
      DO 150 I=1,NCV3,3
      NCI=(I+2)/3
      BLT(1,I)=H(NCI,1)
      BLT(2,I)=0.0D0
      BLT(3,I)=0.0D0
      BLT(1,I+1)=0.0D0
      BLT(2,I+1)=H(NCI,1)
      BLT(3,I+1)=0.0D0
      BLT(1,I+2)=0.0D0
      BLT(2,I+2)=0.0D0
      BLT(3,I+2)=H(NCI,1)
      IR=I+NCVE3
      DO 150 J=1,3
      BLT(J,IR)=T*H(NCI,1)*GKS(J,1,NCI)
      BLT(J,IR+1)=T*H(NCI,1)*GKS(J,2,NCI)
      BLT(J,IR+2)=0.0D0
  150 CONTINUE
C
CS    TRANSFORMACIJA MATRICE - BLT ZA LOKALNI SISTEM CVORA
CE    TRANSFORM MATRIX - BLT FOR LOCAL NODAL SISTEM
C
      IF(IND6.GT.0) THEN
         ICD=6
         CALL TRAB(BLT,ICD,MTR,TTR,NCVE)
      ENDIF
C
C     INTEGRACIJA SKE
C
      IJ=0
      DO 430 I=1,ND
      DO 430 J=I,ND
      IJ=IJ+1
      IF(LM(I).EQ.0.OR.LM(J).EQ.0) GO TO 430
      XX=0.D0
      DO 440 K=1,3
  440 XX=XX+BLT(K,I)*BLT(K,J)
      SKE(IJ)=SKE(IJ)+XX*WD
  430 CONTINUE
C
   20 CONTINUE
   25 CONTINUE
C-------------------------- KRAJ PETLJE PO GAUSOVIM TACKAMA --------
C
C     RASPOREDJIVANJE MATRICE KRUTOSTI (SKE)
C
C      CALL IWRR(LM,54,'LM')
C      CALL WRR(SKE,NWE,'SKE ')
      CALL SPAKUJ(SK ,A(LMAXA),SKE,LM,ND)
C      CALL IWRR(A(LMAXA),JEDN,'MAX ')
C      CALL WRR(SK,NWK,'M  ')
C
   10 CONTINUE
      RETURN
      END
C======================================================================
      SUBROUTINE DIMAS8(ID,CORD,DEB,NOP,IMAT,DRG0,DRG,SK,SKE,LJUS,DRV1,
     1                  NSLOJ,MATSL,DSLOJ,TR0,GUSM,AU,MAXA)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     INTEGRACIJA PO POVRSINI MATRICA ELEMENATA
C
      include 'paka.inc'
      
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /IZLE4B/ H(9,3),GM(3,9),BLT(6,54),BE(9,54),ETP(6,6),UEL(54)
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /ITERBR/ ITER
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /REPERM/ MREPER(4)
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /DIREKT/ LSTAZZ(9),LDRV0,LDRV1,LDRV,IDIREK
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /TEMPCV/ LTECV,ITEMP
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /PODTIP/ IPODT
      COMMON /CDEBUG/ IDEBUG
C
      DIMENSION AU(*)
      REAL AU
C
      DIMENSION ID(NP,*),CORD(NP,*),MAXA(*),LJUS(*),
     1          DRG0(NP,*),DRG(NP,*),DRV1(NP,*),TR0(*),GUSM(50,*)
      DIMENSION CMC(9),SK(*),SKE(*),DEB(*),NOP(NE,*),IMAT(*),NSLOJ(*),
     1          MATSL(MSLOJ,*),DSLOJ(MSLOJ,*)
      DIMENSION XG(15),WGT(15),NREF(6),VN(3,9),
     1          GKS(3,2,9),LM(54),EF1(3),EF2(3),EF3(3),EF0(3),
     1          DRGTM0(9,3),MTR(9),TTR(3,3,9)
      DIMENSION NREFTP(7),WGTTP(10),XGTP(10),YGTP(10)
      DIMENSION WNC(15),XNC(15)
      DATA NREF /0,1,3,6,10,15/
C
      DATA WGT/            2.D0,               1.D0,               1.D0,
     1       .555555555555556D0, .888888888888889D0, .555555555555556D0,
     2       .347854845137454D0, .652145154862546D0, .652145154862546D0,
     3       .347854845137454D0, .236926885056189D0, .478628670499366D0,
     4       .568888888888889D0, .478628670499366D0, .236926885056189D0/
C
      DATA XG /            0.D0,-.577350269189626D0, .577350269189626D0,
     1      -.774596669241483D0,               0.D0, .774596669241483D0,
     2      -.861136311594053D0,-.339981043584856D0, .339981043584856D0,
     3       .861136311594053D0,-.906179845938664D0,-.538469310105683D0,
     4                     0.D0, .538469310105683D0, .906179845938664D0/
C
      DATA WNC/            2.D0,               1.D0,               1.D0,
     1       .333333333333333D0,1.333333333333333D0, .333333333333333D0,
     2       .250000000000000D0, .750000000000000D0, .750000000000000D0,
     3       .250000000000000D0, .155555555555556D0, .711111111111111D0,
     4       .266666666666667D0, .711111111111111D0, .155555555555556D0/
C
      DATA XNC/            0.D0,              -1.D0,               1.D0,
     1                    -1.D0,               0.D0,               1.D0,
     2                    -1.D0,-.333333333333333D0, .333333333333333D0,
     3                     1.D0,              -1.D0,             -0.5D0,
     4                     0.D0,              0.5D0,               1.D0/
C
      DATA NREFTP /0,0,0,0,0,0,3/
C
      DATA WGTTP /.3333333333333D0, .3333333333333D0, .3333333333333D0,
     1            .1259391805448D0, .1259391805448D0, .1259391805448D0,
     3            .1323941527885D0, .1323941527885D0, .1323941527885D0,  
     4            .2250000000000D0/
C
      DATA XGTP  /.1666666666667D0, .6666666666667D0, .1666666666667D0,
     1            .1012865073235D0, .7974269853531D0, .1012865073235D0, 
     2            .4701420641051D0, .4701420641051D0, .0597158717898D0,
     3            .3333333333333D0/
C
      DATA YGTP  /.1666666666667D0, .1666666666667D0, .6666666666667D0, 
     1            .1012865073235D0, .1012865073235D0, .7974269853531D0,  
     2            .0597158717898D0, .4701420641051D0, .4701420641051D0,
     3            .3333333333333D0/
C
      IF(IDEBUG.GT.0) PRINT *, ' DIMAS8'
C
      NCVE3=NCVE*3
      NWE=ND*(ND+1)/2
C
CS            P E T L J A    P O    E L E M N T I M A
CE            L O O P    O V E R    E L E M E N T S
C
      L6=0
C
      DO 10 NLM=1,NE
C
CS       NASTAJANJE I NESTAJANJE ELEMENATA
CE       ELEMENT BIRTH AND DEATH OPTION
C
         IBD=0
         CALL DTHBTH(AU(LTBTH),AU(LTDTH),VREME,NLM,IBD)
         IF(IBD.EQ.1) GO TO 10
C
      CALL CLEAR(SKE,NWE)
C
      IND6=0
      IBTC=0
      D05=DEB(NLM)*0.5
      DO 47 NBR=1,NCVE
      IG=NOP(NLM,NBR)
      IF(IG.EQ.0) GO TO 47
      DO 48 I=1,3
      EF0(I)=DRG0(IG,I)
      EF1(I)=DRV1(IG,I)
   48 EF3(I)=DRG(IG,I)
      CALL V1V2(EF1,EF2,EF3,2)
C**  TRANSFORMACIJA ZA CVOROVE SA 6 DOF
      MTR(NBR)=0
      IF(ID(IG,6).GT.0.OR.LJUS(IG).EQ.1)THEN
        IND6=1
        MTR(NBR)=1
        DO 50 I=1,3
        DO 50 J=1,3
        L6=L6+1
   50   TTR(I,J,NBR)=TR0(L6)
        CALL TRAV(EF1,EF2,EF3,TTR(1,1,NBR))
        EF0(1)=TTR(3,1,NBR)
        EF0(2)=TTR(3,2,NBR)
        EF0(3)=TTR(3,3,NBR)
      ENDIF
C
C
      DO 49 I=1,3
      GKS(I,1,NBR)=-D05*EF2(I)
   49 GKS(I,2,NBR)= D05*EF1(I)
C
      IF(IATYP.EQ.3)THEN
        DO 17 I=1,3
   17   GM(I,NBR)=D05*EF3(I)
      ELSE
        DO 18 I=1,3
   18   GM(I,NBR)=D05*EF0(I)
      ENDIF
      IF(IATYP.EQ.2.OR.IATYP.EQ.3)THEN
        DO 19 I=1,3
   19   DRGTM0(NBR,I)=EF3(I)-EF0(I)
      ENDIF
C
   47 CONTINUE
C
CS     VEKTOR  LM I VEKTOR LOKALNIH POMERANJA
CE     VECTOR  LM  AND  LOCALL DISPLACEMENTS
C
      DO 1678 I=1,ND
 1678 LM(I)=0
      KT=0
      KR=NCVE3
      DO 1222 I=1,NCVE
      II=NOP(NLM,I)
       DO 1221 J=1,3
        KT=KT+1
        KR=KR+1
        IF(II.EQ.0) GO TO 1221
        LM(KR)=ID(II,3+J)
        LM(KT)=ID(II,J)
 1221  CONTINUE
 1222 CONTINUE
C
CS         P E T L J A    P O    S L O J E V I M A
CE         L O O P    O V E R    L A Y E R S
C
      AMASA=0.D0
      MAT=IMAT(NLM)
      MST=MAT
      NNSL=1
      IF(MSET.GT.0) THEN
        NNSL=NSLOJ(MST)
        TTT=-1.D0
      ENDIF
C
      DO 25 MSL=1,NNSL
C
C
        IF(MSET.GT.0) THEN
           DDD =DSLOJ(MSL,MST)
           TTT =TTT+2.D0*DDD
           MAT =MATSL(MSL,MST)
        ENDIF   
C
C
      GUST=GUSM(NMODM,MAT)
C
CS...... PETLJA PO GAUSOVIM TACKAMA 
CE...... LOOP OVER GAUSS POINTS
C
      JG=0
      DO 20 NGT=1,NGAUSZ
        JGR=NREF(NGAUSZ)+NGT
        IF(INCOTZ.EQ.0)THEN
          T =XG (JGR)
          WT=WGT(JGR)
        ELSE
          T =XNC(JGR)
          WT=WNC(JGR)
        ENDIF
        IF(MSET.GT.0) THEN
          T  =TTT-DDD*(1.D0-T)
          WT =DDD*WT
        ENDIF
C
        DO 20 NGR=1,NGAUSX
          IF(IPODT.NE.1.AND.IPODT.NE.3)THEN
            JGR=NREF(NGAUSX)+NGR
            IF(INCOTX.EQ.0)THEN
              R =XG (JGR)
              WR=WGT(JGR)
            ELSE
              R =XNC(JGR)
              WR=WNC(JGR)
            ENDIF
          ENDIF
          IF(IPODT.EQ.1.OR.IPODT.EQ.3)THEN
            JGR=NREFTP(NGAUSX)+NGR
            R=XGTP(JGR)
            S=YGTP(JGR)
            WR=WGTTP(JGR)
            WS=.5D0
          ENDIF
C
          DO 20 NGS=1,NGAUSY
            IF(IPODT.NE.1.AND.IPODT.NE.3)THEN
              JGR=NREF(NGAUSY)+NGS
              IF(INCOTY.EQ.0)THEN
                S =XG (JGR)
                WS=WGT(JGR)
              ELSE
                S =XNC(JGR)
                WS=WNC(JGR)
              ENDIF
            ENDIF
CS     JAKOBIJAN U TACKI R, S, T
CE     JACOBIAN MATRIX  IN  R,S,T  POINT
      CALL IZLJAC (XJ,DET,CORD,NOP,DEB,R,S,T,VN,BB0,GKS,NLM,1)
      WD=WR*WS*WT*DET*GUST
C                                    
C     INTEGRACIJA SKE                
C                                    
      AMASA= AMASA+WD
   20 CONTINUE
   25 CONTINUE
      CALL PODMA8(NOP,CMC)
      DO 80 NC=1,NCVE
         IF(NOP(NLM,NC).EQ.0)GO TO 80
         NNC=3*(NC-1)
         DO 75 I=1,3
            NJ=LM(NNC+I)
            IF(NJ.EQ.0) GO TO 75
C            NJM=MAXA(NJ)
C            SK(NJM)=SK(NJM)+AMASA*CMC(NC)
            SK(NJ)=SK(NJ)+AMASA*CMC(NC)
   75    CONTINUE
   80 CONTINUE
C
   10 CONTINUE
      RETURN
      END
C======================================================================
      SUBROUTINE PODMA8(NOP,CMC)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C     PODELA MASA ELEMENTA PO CVOROVIMA
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /CDEBUG/ IDEBUG
      DIMENSION NOP(NE,*),CMC(*)
C
      IF(IDEBUG.GT.0) PRINT *, ' PODMA8'
C
      IF(NCVE.GT.4) GO TO 100
      CMC(1)=0.25D0
      CMC(2)=CMC(1)
      CMC(3)=CMC(1)
      CMC(4)=CMC(1)
      CMC(5)=0.D0
      CMC(6)=CMC(5)
      CMC(7)=CMC(5)
      CMC(8)=CMC(5)
      CMC(9)=CMC(5)
      GO TO 200
C
C     KOREKCIJA FUNKCIJA KADA JE BROJ CVOROVA VECI OD 4
C
  100 CMC(1)=0.0625D0
      CMC(2)=CMC(1)
      CMC(3)=CMC(1)
      CMC(4)=CMC(1)
      CMC(5)=0.125D0
      CMC(6)=CMC(5)
      CMC(7)=CMC(5)
      CMC(8)=CMC(5)
      CMC(9)=0.25D0
      C112=1.D0/12.
      C124=1.D0/24.
      C148=1.D0/48.
      IF(NOP(NLM,9).NE.0) GO TO 110
      CMC(1)=CMC(1)+C148
      CMC(2)=CMC(2)+C148
      CMC(3)=CMC(3)+C148
      CMC(4)=CMC(4)+C148
      CMC(5)=CMC(5)+C124
      CMC(6)=CMC(6)+C124
      CMC(7)=CMC(7)+C124
      CMC(8)=CMC(8)+C124
      CMC(9)=0.D0
C     PETI CVOR
      IF(NOP(NLM,5).NE.0) GO TO 10
      CMC(1)=CMC(1)+C112
      CMC(2)=CMC(2)+C112
C     SESTI CVOR
   10 IF(NOP(NLM,6).NE.0) GO TO 20
      CMC(2)=CMC(2)+C112
      CMC(3)=CMC(3)+C112
C     SEDMI CVOR
   20 IF(NOP(NLM,7).NE.0) GO TO 30
      CMC(3)=CMC(3)+C112
      CMC(4)=CMC(4)+C112
C     OSMI CVOR
   30 IF(NOP(NLM,8).NE.0) GO TO 40
      CMC(1)=CMC(1)+C112
      CMC(4)=CMC(4)+C112
   40 GO TO 200
C     PETI CVOR
  110 IF(NOP(NLM,5).NE.0) GO TO 11
      CMC(1)=CMC(1)+C124
      CMC(2)=CMC(2)+C124
      CMC(9)=CMC(9)+C124
C     SESTI CVOR
   11 IF(NOP(NLM,6).NE.0) GO TO 21
      CMC(2)=CMC(2)+C124
      CMC(3)=CMC(3)+C124
      CMC(9)=CMC(9)+C124
C     SEDMI CVOR
   21 IF(NOP(NLM,7).NE.0) GO TO 31
      CMC(3)=CMC(3)+C124
      CMC(4)=CMC(4)+C124
      CMC(9)=CMC(9)+C124
C     OSMI CVOR
   31 IF(NOP(NLM,8).NE.0) GO TO 200
      CMC(1)=CMC(1)+C124
      CMC(4)=CMC(4)+C124
      CMC(9)=CMC(9)+C124
  200 CONTINUE
      RETURN
      END
