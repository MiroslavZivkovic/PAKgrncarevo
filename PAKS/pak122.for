C=======================================================================
C
C   SUBROUTINE S02EGL
C              READE1
C              SISTT1
C              ELTE1
C              MEL011
C              MEL031
C=======================================================================
      SUBROUTINE S14EGL
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     GLAVNI UPRAVLJACKI PROGRAM ZA FORMIRANJE MATRICA I VEKTORA 
CS     1/D ELEMENATA
CE     MAIN PROGRAM FOR CALCULATION OF ELEMENT MATRIX FOR 
CE     1/D ELEMENTS
C
      include 'paka.inc'
      
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /ELEMAE/ MXAE,LAE,LMXAE,LHE,LBET,LBED,LRTHE,LSKE,LLM
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /DUPLAP/ IDVA
      COMMON /SRPSKI/ ISRPS
C
      LAU=LMAX
      CALL READ14(A(LAU))
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
      LAE=LMAX
      NCVE3=NCVE*3
      MXAE = NCVE3+(NCVE3+NCVE3*(NCVE3+1)/2)*IDVA
      LMAX = LAE + MXAE
      IF(LMAX.LT.MTOT) GO TO 70
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2009) LMAX,MTOT
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6009) LMAX,MTOT
      STOP
C
C
C
   70 CALL SIST14(A(LAE),A(LAU))
C
      RETURN
C-----------------------------------------------------------------------
 2009 FORMAT(///' NEDOVOLJNA DIMENZIJA U VEKTORU A ZA MATRICE ELEMENATA'
     1/' POTREBNA DIMENZIJA, LMAX=',I10/
     2' RASPOLOZIVA DIMENZIJA, MTOT=',I10)
 6009 FORMAT(///' NOT ENOUGH SPACE IN WORKING VECTOR  A'
     1/' REQUESTED DIMENSION , LMAX=',I10
     2/' AVAILABLE DIMENSION , MTOT=',I10)
C-----------------------------------------------------------------------
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE READ14(AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     UPRAVLJACKI PROGRAM ZA UCITAVANJE ULAZNIH PODATAKA U AU
CE     MENAGEMENT ROUTINE FOR INPUT DATA IN    AU
C
      include 'paka.inc'
      
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /DUPLAP/ IDVA
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /ZAPISI/ LSTAZA(5)
      COMMON /GAPELE/ GAP,AKN,AKNZ,AKS,AMY,AMZ,PFOR
C
      DIMENSION AU(*)
      REAL AU
C
CS     CITANJE SKALARA IZ DIREKT ACCES FILE 
CE     READ SCALARS FROM A DIRECT ACCESS FILE
C
      LSTAZA(1)=LMAX8
      READ(IELEM,REC=LMAX8)
     1 NCVE,ITERME,MXAU,LNEL,LNMAT,LAPRS,LISNA,LLMEL,LCEL,LELC,NMA,NMI,
     1 GAP,AKN,AKNZ,AKS,AMY,AMZ,PFOR,LIPGC,LIPRC,
     1 INDBTH,INDDTH,LTBTH,LTDTH
      LSTAZA(2)=LMAX8+1
      CALL READDD(AU(LAPRS),MXAU/IDVA,IELEM,LMAX8,LDUZI)
      LMAX=LAU+MXAU
      CALL DELJIV(LMAX,2,INDL)
      IF(INDL.EQ.0) LMAX=LMAX+1
C      
      GO TO 10
C      IF(IATYP.EQ.0) GO TO 10
      IF(NMODM.LE.4.OR.NMODM.EQ.11.OR.NMODM.EQ.12) GO TO 10
CS....  PLASTICNOST
CS....  VELICINE NA KRAJU PRETHODNOG KORAKA
CE     PLASTICITY
      LPLAST=LMAX
      NPROS=NE*MODPR1( NMODM )*IDVA
      LPLAS1=LPLAST+NPROS
CS....  VELICINE ZA TEKUCI KORAK
      NPROS1 = NPROS
      LMAX=LPLAS1+NPROS1
      LSIGMA = LMAX
      IF(NMODM.EQ.5) LSIGMA=LPLAS1+2*NE*IDVA
C
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      LSTAZA(3)=LMAX8+1
      CALL READDD(A(LPLAST),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      LSTAZA(4)=LMAX8+1
      CALL READDD(A(LPLAS1),NPROS1/IDVA,IELEM,LMAX8,LDUZI)
      RETURN
C
   10 LSIGMA=LMAX
      NPROS=6*NE*IDVA
      LMAX=LSIGMA+NPROS
      IF(LMAX.GT.MTOT) CALL ERROR(1)
      LSTAZA(5)=LMAX8+1
      CALL READDD(A(LSIGMA),NPROS/IDVA,IELEM,LMAX8,LDUZI)
      RETURN
      END
C======================================================================
      SUBROUTINE SIST14(AE,AU)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     GLAVNI UPRAVLJACKI PROGRAM  ZA MATRICE ELEMENATA I SISTEMA
CE     MAIN MANAGEMENT  PROGRAM  FOR ELEMENT MATRIX
C
      include 'paka.inc'
      
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /ELEMAE/ MXAE,LAE,LMXAE,LHE,LBET,LBED,LRTHE,LSKE,LLM
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /TEMPCV/ LTECV,ITEMP
      COMMON /ZAPISI/ LSTAZA(5)
      COMMON /DUPLAP/ IDVA
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /UPDLAG/ LUL,LCORUL
      COMMON /DIREKT/ LSTAZZ(9),LDRV0,LDRV1,LDRV,IDIREK
C
      DIMENSION AE(*),AU(*)
      REAL AE,AU
C       REPERI U VEKTORU ELEMENATA AE
      NCVE3=NCVE*3
      ND=NCVE3
      NWE=NCVE3*(NCVE3+1)/2
      LRTHE=1
      LSKE=LRTHE+NCVE3*IDVA
      LLM=LSKE+NWE*IDVA
      MXAE1=LLM+NCVE3
C
CS            P E T L J A    P O    E L E M E N T I M A
CE            L O O P    O V E R    E L E M E N T S
C
      DO 100 NLM=1,NE
C
CS       NASTAJANJE I NESTAJANJE ELEMENATA
CE       ELEMENT BIRTH AND DEATH OPTION
C
         IBD=0
         CALL DTHBTH(AU(LTBTH),AU(LTDTH),VREME,NLM,IBD)
         IF(IBD.EQ.1) GO TO 100
C
      IZBR=MXAE/IDVA
      CALL CLEAR(AE,IZBR)
C
CE    LCORD - POINTER FOR INITIAL COORDINATES 
CE    LCORUL- POINTER FOR CURRENT COORDINATES IF(IATYP.GE.3), SEE /13/
C
      KORD=LCORD
C      IF(IATYP.GE.3) KORD=LCORUL
C
CE    STRAIN AND STRESS CALCULATION AND INTEGRATION OF ELEMENT STIFFNESS
CE    MATRIX AND INTERNAL FORCES
C
      CALL ELTE14(AE(LSKE),AE(LLM),AU(LNEL),AU(LNMAT),
     1AU(LAPRS),A(KORD),A(LRTDT),A(LFTDT),
     2A(LSIGMA),AU(LLMEL),A(LTECV),ND,NCVE3,AU(LIPGC),A(LDRV0),A(LID))
C
CS     RASPOREDJIVANJE MATRICE KRUTOSTI (SKE)
CE     ASSEMBLE STIFFNESS MATRIX
C
      IF(ISKNP.EQ.2) GO TO 100
      CALL SPAKUJ(A(LSK),A(LMAXA),AE(LSKE),AE(LLM),ND)
  100 CONTINUE
C
C      
      GO TO 10
C      IF(IATYP.EQ.0) GO TO 10
      IF(NMODM.LE.4.OR.NMODM.EQ.11.OR.NMODM.EQ.12) GO TO 10
      NPROS=NE*MODPR1( NMODM )*IDVA
      LMA8=LSTAZA(4)-1
      CALL WRITDD(A(LPLAS1),NPROS/IDVA,IELEM,LMA8,LDUZI)
      RETURN
C
   10 NPROS=6*NE*IDVA
      LMA8=LSTAZA(5)-1
      CALL WRITDD(A(LSIGMA),NPROS/IDVA,IELEM,LMA8,LDUZI)
      RETURN
      END
C=======================================================================
      SUBROUTINE ELTE14(SKE,LM,NEL,NMAT,APRS,CORD,
     1                  RTDT,FTDT,SIGMA,LMEL,TECV,ND,NCVE3,IPGC,DRV,ID)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICA ELEMENATA I SISTEMA
CE     FORM ELEMENT MATRIX
C
      include 'paka.inc'
      
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /GRUPEE/ NGEL,NGENL,LGEOM,NGEOM,ITERM
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /REPERM/ MREPER(4)
      COMMON /TEMPCV/ LTECV,ITEMP
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /ANALIZ/ LINEAR,ITERGL,INDDIN
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /MPOINC/ MMP,NMPC,NEZAV,LCMPC,LMPC,NEZA1
      COMMON /SRPSKI/ ISRPS
      COMMON /VISK1/ APR
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /GAPELE/ GAP,AKN,AKNZ,AKS,AMY,AMZ,PFOR
C
      DIMENSION SKE(*),LM(6),NEL(NE,*),NMAT(*),APRS(3,*),
     1          CORD(NP,*),RTDT(JEDN),FTDT(*),SIGMA(NE,*),LMEL(NCVE3,*),
     1          TECV(*),IPGC(*),DRV(NP,*),ID(NP,*)
      DIMENSION UE(6),UEL(6),FE(6),FEL(6),D(3),EF(3,3),TSG(6,6),ETP(6,6)
C
      IF(NGENL.EQ.0) STOP ' NGENL.EQ.0 U GAP'
C
CS     VEKTOR LM, GLOBALNA POMERANJA NA ELEMENTU UE
CE     VECTOR LM, ELEMENT GLOBAL DISPLACEMENTS UE
C
      DO 10 NC=1,ND
         K=LMEL(NC,NLM)
         LM(NC)=K
         IF(K.GT.0)THEN
           UE(NC)=RTDT(K)
         ELSEIF(K.EQ.0)THEN
           UE(NC)=0.D0
         ELSE
           UE(NC)=CONDOF(RTDT,A(LCMPC),A(LMPC),K)
         ENDIF
   10 CONTINUE
C
C     CVOROVI ELEMENTA I STATUS GAP
      NC1=NEL(NLM,1)
      NC2=NEL(NLM,2)
      MAT=NMAT(NLM)
C
C     ODREDJIVANJE PRAVCA GAP I VELICINE GAP PREKO CVOROVA
c     d(l)-projekcija duzine gap, xl2-kvadrat duzine, xl-duzina
   40 XL2=0.D0
      IF(IPGC(NLM).EQ.0) THEN
C        =0; PREKO CVOROVA
         DO 505 L=1,3
            D(L)=CORD(NC2,L)-CORD(NC1,L)
            XL2=XL2+D(L)*D(L)
  505    CONTINUE
         if(xl2.lt.1.d-8) THEN
            WRITE(IZLAZ,2900) NLM,NC1,NC2
 2900 FORMAT(//' KOD GAP ELEMENTA',I6,' CVOROVI',I6,' I ',I6,
     1' SE POKLAPAJU ')
            stop '(xl2.lt.1.d-8)'
         ENDIF
         XL=DSQRT(XL2)
         DO 506 L=1,3
            EF(1,L)=D(L)/XL
  506    CONTINUE
      ELSEIF(IPGC(NLM).EQ.1) THEN
C        =1; UCITAN PRAVAC
         DO 507 L=1,3
            XL2=XL2+APRS(L,NLM)*APRS(L,NLM)
  507    CONTINUE
         if(xl2.lt.1.d-8) THEN
            WRITE(IZLAZ,2901) NLM
 2901 FORMAT(//' KOD GAP ELEMENTA',I6,' NIJE UCITAN PRAVAC')
            stop '(xl2.lt.1.d-8)'
         ENDIF
         XL=DSQRT(XL2)
         DO 508 L=1,3
            EF(1,L)=APRS(L,NLM)/XL
  508    CONTINUE
      ELSEIF(IPGC(NLM).EQ.2.OR.IPGC(NLM).EQ.3) THEN
C        NORMALA NA LJUSKU JE PRAVAC
         IF(ID(NC1,6).NE.0) THEN
            WRITE(IZLAZ,2902) NLM,NC1
 2902 FORMAT(//' KOD GAP ELEMENTA',I6,' U CVORU',I6,
     1' NE MOZE SE KORISTITI NORMALA NA LJUSKU ZA PRAVAC GAP')
            stop ' NE MOZE SE KORISTITI VEKTOR NORMALE ZA PRAVAC GAP'
         ENDIF 
         DO 509 L=1,3
            XL2=XL2+DRV(NC1,L)*DRV(NC1,L)
  509    CONTINUE
         if(xl2.lt.1.d-8) THEN
            WRITE(IZLAZ,2903) NLM,NC1
 2903 FORMAT(//' KOD GAP ELEMENTA',I6,' U CVORU',I6,
     1' NIJE DEFINISANA NORMALA NA LJUSKU')
            stop ' NIJE DEFINISANA NORMALA NA LJUSKU ZA PRAVAC GAP'
         ENDIF 
         XL=DSQRT(XL2)
         DO 510 L=1,3
            IF(IPGC(NLM).EQ.2) EF(1,L)=DRV(NC1,L)/XL
            IF(IPGC(NLM).EQ.3) EF(1,L)=-DRV(NC1,L)/XL
  510    CONTINUE
      ENDIF
C     ODREDJIVANJE DRUGE DVE OSE LOKALNOG SISTEMA ELEMENTA
      CALL V2V3(EF,TSG)
C
C     ODREDJIVANJE LOKALNIH POMERANJA CVOROVA ELEMENTA
      CALL CLEAR(UEL,6)
      CALL MNOZI1(UEL,TSG,UE,6,6)
C
C     POMERANJA U GAP-U
      IF(IPGC(NLM).EQ.0) THEN
         USEP=UEL(4)-UEL(1)+XL+GAP
      ELSE
         USEP=UEL(4)-UEL(1)+GAP
      ENDIF
      USES=UEL(5)-UEL(2)
      USET=UEL(6)-UEL(3)
C
CS    RACUNANJE UNUTRASNJIH SILA FTDT=BET*TAU
CE    INTERNAL FORCE
C
      IF(ISKNP.EQ.1) GO TO 400
      FN=0.
      FSS=0.
      FST=0.
      IF(USEP.GT.1.D-15) THEN
C        OTVOREN GAP I POSOJI KRUTOST U PRAVCU ZATEZANJA
         IF(AKNZ.GT.1.D-10) FN=AKNZ*USEP
      ELSE
C        ZATVOREN GAP - NORMALNA I SMICUCE SILE
         FN=AKN*USEP
         FSS=AKS*USES
         FST=AKS*USET
         IF(AMZ.GT.1.D-10) THEN
C           RAZLICITI KOEFICIJENTI TRENJA U S I T PRAVCU
            IF(DABS(FSS).GT.DABS(AMY*FN)) FSS=SIGN(AMY*FN,FSS)
            IF(DABS(FST).GT.DABS(AMZ*FN)) FST=SIGN(AMZ*FN,FST)
         ELSE
C           ISTI KOEFICIJENTI TRENJA U S I T PRAVCU
            FS=DSQRT(FSS*FSS+FST*FST)
            IF(FS.GT.1.D-8) THEN
               CFS=FSS/FS
               CFT=FST/FS
               IF(DABS(FS).GT.DABS(AMY*FN)) FS=SIGN(AMY*FN,FS)
               FSS=FS*CFS
               FST=FS*CFT
            ENDIF
         ENDIF
      ENDIF
C
C     LOKALNE UNUTRASNJE SILE (OBRNUT ZNAK POSTO SE PAKUJE U VEKTOR UNUTRASNJIH SILA)
      FEL(1)=-FN
      FEL(2)=-FSS
      FEL(3)=-FST
      FEL(4)= FN
      FEL(5)= FSS
      FEL(6)= FST
      SIGMA(NLM,1)=FN
      SIGMA(NLM,2)=FSS
      SIGMA(NLM,3)=FST
      SIGMA(NLM,4)=USEP
      SIGMA(NLM,5)=USES
      SIGMA(NLM,6)=USET
C
C
C     ODREDJIVANJE GLOBALNIH SILA U CVOROVIMA ELEMENTA
      CALL CLEAR(FE,6)
      CALL MNOZI2(FE,TSG,FEL,6,6)
C
CS       RAZMESTANJE UNUTRASNJIH SILA FE U GLOBALNI VEKTOR FTDT
CE       ASSEMBLE INTERNAL FORCE VECTOR
C
      CALL SILPAK(FTDT,FE,LM,ND,A(LCMPC),A(LMPC))
C
CS    INTEGRACIJA SKE
CE    ELEMENT STIFFNESS MATRIX
C
  400 IF(ISKNP.EQ.2) GO TO 50
      CALL CLEAR(ETP,36)
      IF(USEP.GT.1.D-15) THEN
C        OTVOREN GAP I POSOJI KRUTOST U PRAVCU ZATEZANJA
         IF(AKNZ.GT.1.D-10) THEN
            ETP(1,1)= AKNZ
            ETP(1,4)=-AKNZ
            ETP(4,1)=-AKNZ
            ETP(4,4)= AKNZ
         ENDIF
      ELSE
C        ZATVOREN GAP - SLEPLJEN ILI KLIZANJE
         ETP(1,1)= AKN
         ETP(1,4)=-AKN
         ETP(4,1)=-AKN
         ETP(4,4)= AKN
         IF(AMZ.GT.1.D-10) THEN
C           RAZLICITI KOEFICIJENTI TRENJA U S I T PRAVCU
            IF(DABS(FSS).LT.DABS(AMY*FN)-1.D-15) THEN
C              NEMA KLIZANJA
               ETP(2,2)= AKS
               ETP(2,5)=-AKS
               ETP(5,2)=-AKS
               ETP(5,5)= AKS
            ENDIF
            IF(DABS(FST).LT.DABS(AMZ*FN)-1.D-15) THEN
C              NEMA KLIZANJA
               ETP(3,3)= AKS
               ETP(3,6)=-AKS
               ETP(6,3)=-AKS
               ETP(6,6)= AKS
            ENDIF
         ELSE
C           ISTI KOEFICIJENTI TRENJA U S I T PRAVCU
            IF(DABS(FS).LT.DABS(AMY*FN)-1.D-15) THEN
C              NEMA KLIZANJA
               ETP(2,2)= AKS
               ETP(2,5)=-AKS
               ETP(3,3)= AKS
               ETP(3,6)=-AKS
               ETP(5,2)=-AKS
               ETP(5,5)= AKS
               ETP(6,3)=-AKS
               ETP(6,6)= AKS
            ENDIF
         ENDIF
      ENDIF
      CALL TRAETP(ETP,ELAST,TSG)
      KL=0
      DO 600 L=1,6
      DO 600 K=L,6
        KL=KL+1
        SKE(KL)=ELAST(L,K)
  600 CONTINUE
C
   50 RETURN
C
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE V2V3(EF,TSG)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C        FORMIRANJE TRIEDRA JEDINICNIH VEKTORA  V1   V2   VN
C 
      COMMON /CDEBUG/ IDEBUG
      DIMENSION EF(3,*),TSG(6,*)
C
      IF(IDEBUG.GT.0) PRINT *, ' V1V2'
C .                 JEDINICNI VEKTOR  V1  --> EF1
C .                 JEDINICNI VEKTOR  V2  --> EF2
C     V3=V1xj
      DINT=DSQRT(EF(1,1)*EF(1,1)+EF(1,3)*EF(1,3))
      IF(DINT.LT.1.D-6)THEN
         EF(3,1)=1.
         EF(3,2)=0.
         EF(3,3)=0.
      ELSE
         EF(3,1)=-EF(1,3)/DINT
         EF(3,2)=0.
         EF(3,3)= EF(1,1)/DINT
      ENDIF
C     V2=V3xV1
      EF(2,1)=EF(1,3)*EF(3,2)-EF(1,2)*EF(3,3)
      EF(2,2)=EF(1,1)*EF(3,3)-EF(1,3)*EF(3,1)
      EF(2,3)=EF(1,2)*EF(3,1)-EF(1,1)*EF(3,2)
C     MATRICA TRANSFORMACIJE
      CALL CLEAR(TSG,36)
      DO 10 I=1,3
      DO 10 J=1,3
	   TSG(I,J)=EF(I,J)
	   TSG(3+I,3+J)=EF(I,J)
   10 CONTINUE
      RETURN
      END