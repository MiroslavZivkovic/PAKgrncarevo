C=======================================================================
C
C    HILL'S MUSCLE MODEL     
C
C=======================================================================
C
C
C    SUBROUTINE D2M31
C               TAU231
C
      SUBROUTINE D2M31(TAU,DEF,IRAC,LPOCG,LPOC1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
CE  SPACE IN WORKING VECTOR 

      include 'paka.inc'
      
C
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /REPERM/ MREPER(4)
      COMMON /DUPLAP/ IDVA
      COMMON /CDEBUG/ IDEBUG
C
      DIMENSION TAU(4),DEF(4)
      LFUN=MREPER(1)
      MATE=MREPER(4)
C
      LTAU=LPOCG
      LDEFT=LTAU + 4*IDVA
      LDEFPP=LDEFT + 4*IDVA
      LPOT=LDEFPP + 1*IDVA
      LEMP=LPOT + 1*IDVA
      LRAC=LEMP + 1*IDVA
      LPER=LRAC + 1*IDVA
C
      LTAU1=LPOC1
      LDEFT1=LTAU1 + 4*IDVA
      LDEFP1=LDEFT1 + 4*IDVA
      LPOT1=LDEFP1 + 1*IDVA
      LEMP1=LPOT1 + 1*IDVA
      LRAC1=LEMP1 + 1*IDVA
      LPER1=LRAC1 + 1*IDVA
C
      CALL TAU231(A(LTAU),A(LDEFT),A(LDEFPP),A(LPOT),A(LEMP),A(LRAC),
     1  A(LPER),A(LTAU1),A(LDEFT1),A(LDEFP1),A(LPOT1),A(LEMP1),A(LRAC1),
     1    A(LPER1),A(LFUN),MATE,TAU,DEF,IRAC)
C
      RETURN
      END
C
C =====================================================================
C
      SUBROUTINE TAU231(TAUT,DEFT,SIGST,DALMMT,DALMST,TAUTP,DEFTP,
     1                  TAU1,DEF1,SIGS1,DALMM1,DALMS1,TAUTP1,DEFTP1,
     1                  FUN,MATE,TAU,DEF,IRAC)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     PODPROGRAM ZA INTEGRACIJU KONSTITUTIVNIH RELACIJA ZA 
C     MATERIJALNI MODEL MISICA
C
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /ITERBR/ ITER
      COMMON /CDEBUG/ IDEBUG
C
      COMMON /RMISIC/ VMS(3,3),VMS1(3,3),RACGR(3,3)
      COMMON /MISIC/ NTS,NTALF,DALM(2,2,30)
C
      DIMENSION TAU(*),DEF(*),TAU1(*),DEF1(*),TAUT(*),DEFT(*),
     1          SIS1(4),TAUL(4),DEFL(4),TSE(4,4)
      DIMENSION FUN(8,MATE),FUN2(9)
C
      IF(IDEBUG.EQ.1) PRINT *, 'TAU231'
C
CE  INITIAL DATA
C
      TOLF=1.0D-8
      TOLBIS=1.0D-8
      MAXBIS=100
C
      ALT = VREME
C
CE  MATERIAL CONSTANTS
C
      E    = FUN(1,MAT)
      ANI  = FUN(2,MAT)
      ALF =  FUN(3,MAT)
      BETAB = FUN(4,MAT)
      A    = FUN(5,MAT)
      DEFMP= FUN(6,MAT)
      AKA  = FUN(7,MAT)
      FI   = FUN(8,MAT)
C
      DELM0 = DT*DEFMP
C
C  MATRIX ELASTICITY
C
      DO 1 I = 1,3
        FUN2(I)=E
    1 CONTINUE
      GG=E/2.0/(1+ANI)
C
      DO 3 I = 4,9
        IF (I.GT.3.AND.I.LE.6) FUN2(I)=ANI
        IF (I.GT.6.AND.I.LE.9) FUN2(I)=GG
    3 CONTINUE
C
      CALL MEL02(FUN2)
C
      IF(IRAC.EQ.2) RETURN
C
C     ZA ITER=0 UZIMA TAU=TAUT I VRACA SE
C
      IF (ITER.EQ.0) THEN
         DO 5 I = 1,4
    5    TAU(I) = TAUT(I)
         RETURN
      ENDIF
C
CS   LAMDAP U TRENUTKU T+DT, U PRAVCU OSE R
C
      VINTEZ = DSQRT(VMS(1,1)*VMS(1,1)+VMS(1,2)*VMS(1,2)+
     &               VMS(1,3)*VMS(1,3))
C
CS  VEKTOR Gr U TRENUTKU T=0 
C
      VNTEZ1 = DSQRT(VMS1(1,1)*VMS1(1,1)+VMS1(1,2)*VMS1(1,2)+
     &               VMS1(1,3)*VMS1(1,3))
C
      DALMAP =  VINTEZ/VNTEZ1
C
C  VLAKNA SU U PRAVCU OSE R, KOOR. SISTEMA R-S
C
        TEZ=DSQRT(VMS(1,1)*VMS(1,1)+VMS(1,2)*VMS(1,2)+VMS(1,3)*VMS(1,3))
        UGAO=VMS(1,1)/TEZ
        PRAVAC=DACOS(UGAO)
C
 199  CONTINUE
C
      IF(IETYP.EQ.1) DLAMDZ=RACGR(3,3)
C
C PREBACIVANJE DEFORMACIJE I GRADIJENTA SA DEKARTOVIH NA MATERIJALNE OSE
C
      KS=4
      IF(IETYP.EQ.2) KS=3
C
      CALL CLEAR(DEFL,4)
      IF(DABS(PRAVAC).GT.1.0D-10) THEN
         CALL MATRTE(TSE,PRAVAC)
         CALL MNOZI1(DEFL,TSE,DEF,4,4)
      ELSE
         CALL JEDNA1(DEFL,DEF,4)
      ENDIF
C
      DO 11 I = 1,4 
      TAUL(I) = 0.D0
      DO 11 J = 1,4 
   11 TAUL(I) = TAUL(I)+ELAST(I,J)*DEFL(J) 
C
C  ACTIVATION FUNCTION 
C
      DO 113 I = 1,NTALF-1
      IF ((ALT-DALM(1,2,I)).LT.TOLF) THEN
        ALFAAK = DALM(2,2,I)
        GO TO 118
      ENDIF
C
      IF(ALT.GT.DALM(1,2,NTALF)) THEN
        WRITE(3,2530) ALT
 2530   FORMAT(/' ','FUNKCIJA AKTIVACIJE NIJE DEFINISANA ZA OVU 
     1  VREDNOST VREMENA',1PD12.5)
        STOP
      ENDIF
C
      IF (ALT.GT.DALM(1,2,I).AND.ALT.LT.DALM(1,2,I+1)) THEN
        ALFAAK = (DALM(2,2,I+1)-DALM(2,2,I))*(ALT-DALM(1,2,I))/
     1  (DALM(1,2,I+1)-DALM(1,2,I)) + DALM(2,2,I)
        GO TO 118
      ENDIF
  113 CONTINUE
C
  118 IF (ALFAAK.GT.0.D0) GO TO 25
C
C SLUCAJ KADA NEMA AKTIVACIJE !!!!!!!
C
      DELM =0.D0
      DLAM =0.D0
      DO 15 I=1,4
   15 TAUL(I) = TAUL(I)*(1.D0-FI)
      DALMM0 = (1.D0+AKA)*DALMAP - AKA 
      DALMS0 = 1.D0 
      DALMMT = DALMM0 
      DALMST = DALMS0 
      GO TO 200
C
C SLUCAJ KADA POSTOJI AKTIVACIJA !!!!!!!
C      
  25  CONTINUE
      IF (DALMMT.LT.TOLF.AND.KOR.EQ.1) THEN
        DALMMT=1.D0
        DALMST=1.D0
      ENDIF
C
      IF (DALMMT.LT.DALM(1,1,1).OR.DALMMT.GT.DALM(1,1,NTS)) THEN
       WRITE(3,2130) DALMMT
 2130  FORMAT(/' ','FUNKCIJA SIG0 NIJE DEFINISANA ZA OVU VREDNOST LAMDAM
     1 ',1PD12.5)
       STOP
      ENDIF  
C
C     NAPON SIG0
C
      DO 111 I = 1,NTS-1
      IF ((DALMMT-DALM(1,1,I)).LT.TOLF) THEN
        SIG0T = DALM(2,1,I)
        GO TO 119
      ENDIF
C
      IF (DALMMT.GT.DALM(1,1,I).AND.DALMMT.LT.DALM(1,1,I+1)) THEN
        SIG0T = (DALM(2,1,I+1)-DALM(2,1,I))*(DALMMT-DALM(1,1,I))/
     1  (DALM(1,1,I+1)-DALM(1,1,I)) + DALM(2,1,I)
        GO TO 119
      ENDIF
  111 CONTINUE
C
  119 CE = SIG0T/A
      SIGST = BETAB*(DEXP(ALF*(DALMST-1.D0))-1.D0)
      SIG0T = SIG0T*ALFAAK
C
      A1 = (1.D0+AKA)*DALMAP-DALMMT-AKA*DALMST
      A2 = (SIGST+BETAB)*(1.D0-(CE*A1/DELM0))
      A3 = (SIGST+BETAB)*AKA*CE/DELM0
      A5 = SIG0T+BETAB 
      A6 = (-SIG0T+(BETAB*CE))/DELM0*A1
      A7 = AKA*(SIG0T-(BETAB*CE))/DELM0
C
C     PRIMENA NEWTON-VOG POSTUPKA (BISEKCIJE) ZA
C     ODREDIVANJE NULE FUNKCIJE EFEKTIVNOG NAPONA
C 
      I = 0
  120 I = I + 1
      IF (I.EQ.1) DLAM=0.0D0
      DLAM1 = DLAM
      FPR = ALF*DEXP(ALF*DLAM)*(A2+A3*DLAM)+A3*DEXP(ALF*
     1 DLAM)+ A7
      F = DEXP(ALF*DLAM)*(A2+A3*DLAM)+A7*DLAM-A5+A6
C
      DLAM=DLAM-F/FPR
      IF(I.GT.MAXBIS) THEN                                                  
        WRITE(3,1030)
 1030   FORMAT(' ','DOSTIGNUT MAKSIMALAN BROJ BISEKCIJA U TI231')
        STOP
      ENDIF
      IF(DABS(F).LT.TOLF) GO TO 162
      GO TO 120
C
  162 CONTINUE
C
      DELM = A1-AKA*DLAM
      SIGS1 = DEXP(ALF*DLAM)*(SIGST+BETAB)-BETAB
      SIGM1 = SIG0T*(1.D0+DELM/DELM0)/(1.D0-CE*DELM/DELM0)
C
C      IF ((DELM/DELM0).GT.0.1D0) THEN
C      SIGM1 = 1.8D0*SIG0T*ALFAAK
C      SIGS1 = -SIGS1
C      ENDIF
C
      DO 133 I = 1,4
  133 SIS1(I) = 0.D0
      SIS1(1) = SIGS1
C
C
C FOR TOTAL LAGRANGE FORMULATION
C
      IF(IATYP.EQ.2) THEN
        CALL PIOKOS(RACGR,SIS1)
      ENDIF
C
      DO 105 I=1,4
  105 TAUL(I) = TAUL(I)*(1.D0-FI)+FI*ALFAAK*SIS1(I)
C
C      IF (ITER.EQ.1) THEN
C      TAUTP1 = TAUT(1)
C      DEFTP1 = DEFT(1)
C     ENDIF
C     FUN2(1) = (TAUL(1)-TAUTP1)/(DEFL(1)-DEFTP1)
C      CALL MEL01(FUN2)
C
C      TAUTP1 = TAUL(1)
C      DEFTP1 = DEFL(1)
C
C     AZURIRANJE VELICINA ZA SLEDECI KORAK 
C
  200 CONTINUE
      DALMM1 = DALMMT+DELM
      DALMS1 = DALMST+DLAM
C
      IF(DABS(PRAVAC).GT.1.0D-10) THEN
         CALL CLEAR(TAU,4)
         CALL MNOZI2(TAU,TSE,TAUL,4,4)
      ELSE
         CALL JEDNA1(TAU,TAUL,4)
      ENDIF
C
CE     TRANSFORM ELAST MATRIX
C
      IF(DABS(PRAVAC).GT.1.0D-10.AND.IETYP.NE.1)
     1CALL TRAEL(ELAST,TSE,4,3,3,ELAST)
      IF(DABS(PRAVAC).GT.1.0D-10.AND.IETYP.EQ.1)
     1CALL TRAEL(ELAST,TSE,4,4,4,ELAST)
C
      DO 608 I = 1,4
      TAU1(I) = TAU(I)
  608 DEF1(I) = DEF(I)
      RETURN
      END

