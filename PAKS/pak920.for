C=======================================================================
C
C=======================================================================
      SUBROUTINE INT92  (ID,CORD,THID,THI,NOP,IMAT,DRG0,DRG,SK,FTDT,SKE,
     1                   RTDT,DRV1,NSLOJ,MATSL,BBET,DSLOJ,BET0,ISNA,
     1                   IPGC,TR0,ALFE,HAEM,HINV,GEEK,IALFA,LA,UPRI,
     1                   COR0,GM0,TEMGT,CORGT,AU,N45,TAU,VITOP,VITTP,
     1                   NOS,LME,IDP,CORS,VIT,VITE,SKEL,MAEL,VOP,
     1                   VITL,VITT,VIT0,BTT,COPT,
     1                   NVEZ,NPR,FPR,IDD,LMU,FTD,VR,VS,NCVN,VZ,
     1                   BNL,ZAPS,NPRZ,INDZS,GUSM,MAXA,KOZOVE,CEGE,
     1                   DLV,DLV1,DLV0,DLV2,FCFL,NCFF,SKE1,FTD1,
     1                   IPGG,ESILA,NPOMT,FPRL,NPRF,TEZP,BNLK,BNLKS,
     +                   MCVEL,NCVEL)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS     FORMIRANJE MATRICA ELEMENATA I SISTEMA
CE     FORM ELEMENT MATRIX
C
      include 'paka.inc'
      
      CHARACTER*6 IME
      COMMON /IZOL4B/ NGS12,ND,MSLOJ,MXS,MSET,LNSLOJ,LMATSL,LDSLOJ,LBBET
      COMMON /IZLE4B/ H(9,3),GM(3,9),BLT(6,54),BE(9,54),ETP(6,6),UEL(54)
      COMMON /GLAVNI/ NP,NGELEM,NMATM,NPER,
     1                IOPGL(6),KOSI,NDIN,ITEST
      COMMON /DINAMI/ IMASS,IDAMP,PIP,DIP,MDVI
      COMMON /FVREME/ NTABFT,MAXTFT,LNTFT,LTABFT
      COMMON /PERKOR/ LNKDT,LDTDT,LVDT,NDT,DT,VREME,KOR
      COMMON /REPERI/ LCORD,LID,LMAXA,LMHT
      COMMON /SISTEM/ LSK,LRTDT,NWK,JEDN,LFTDT
      COMMON /ELEMAU/ MXAU,LAU,LLMEL,LNEL,LNMAT,LTHID,LIPGC,LIPRC,LISNA,
     1 LMXAU,LAPRS
      COMMON /GRUPEE/ NGEL,NGENL,LGEOM,NGEOM,ITERM
      COMMON /ELEIND/ NGAUSX,NGAUSY,NGAUSZ,NCVE,ITERME,MAT,IETYP
      COMMON /ELEMEN/ ELAST(6,6),XJ(3,3),ALFA(6),TEMP0,DET,NLM,KK
      COMMON /DUZINA/ LMAX,MTOT,LMAXM,LRAD,NRAD
      COMMON /BROJUK/ KARTIC,INDFOR,NULAZ
      COMMON /ELEALL/ NETIP,NE,IATYP,NMODM,NGE,ISKNP,LMAX8
      COMMON /PLASTI/ LPLAST,LPLAS1,LSIGMA
      COMMON /PLASTV/ LPLAVT,LPLAV1,LSIGMV
      COMMON /REPERM/ MREPER(4)
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      COMMON /DIREKT/ LSTAZZ(9),LDRV0,LDRV1,LDRV,IDIREK
      COMMON /ORIENT/ CPP(3,3),XJJ(3,3),TSG(6,6),BETA,LBET0,IBB0
      COMMON /BTHDTH/ INDBTH,INDDTH,LTBTH,LTDTH
      COMMON /TEMPCV/ LTECV,ITEMP
      COMMON /INTGRA/ INCOTX,INCOTY,INCOTZ
      COMMON /VELIKE/ LCOR0,LGM0,JG,NGR,NGS,NGT,NGS4
      COMMON /CVOREL/ ICVEL,LCVEL,LELCV,NPA,NPI,LCEL,LELC,NMA,NMI
      COMMON /NOVAGR/ NS,NCVS,NCVP,NCVJ,LNOS,LCORS,LIDP,LNVEZ,LNPR,LFPR,
     1                LIDD,LLMU,LMA9,NMC,JEDPP,JEDNN,LVITOP,LVITTP,
     1                LCOPT,LNMA,LIPG,LISN,LIPR,LTHI,LTBT,LTDT,NPRES,
     1                NWPP,NWKK,NWEE,NCU,NCVU,IND3D
      COMMON /ANALIZ/ LINEAR,ITERGL,INDDIN
      COMMON /RESTAR/ TSTART,IREST
      COMMON /NELINE/ NGENN
      COMMON /PODTIP/ IPODT
      COMMON /ITERBR/ ITER
      COMMON /DUPLAP/ IDVA
      COMMON /INDKON/ IKONV
      COMMON /INDNAP/ NAPON
      COMMON /FILTER/ TOLNAP,TOLPOM
      COMMON /ENERGI/ ENE1,ENE2,ENE
      COMMON /ITERAC/ METOD,MAXIT,TOLE,TOLS,TOLM,KONVE,KONVS,KONVM
      COMMON /ABSTOL/ TOLA
      COMMON /LOKROT/ LDLV,LDLV1,LDLV0,LDLV2,IMALR
C PRIVREMENO
      COMMON /PROBAS/ IILS
      COMMON /ENERGP/ ENE91,ENE92,ENEP,IKONVP
      COMMON /UGAOV6/ TE(6,6)
      COMMON /SRPSKI/ ISRPS
      COMMON /COEFSM/ COEF(3),ICOEF
      COMMON /IKOVAR/ INDKOV
      COMMON /LOKSIL/ NCFL,LNCFL,LFCFL,NPRL,LNPRL,LFPRL,LTEZP
      COMMON /ECLANM/ AMAXK,AMINK,AMAXF,AMINF
      COMMON /PTACKA/ IPOMT,LNPOM
      COMMON /ZADATA/ LNZADJ,LNZADF,LZADFM,NZADP
      COMMON /VELIKD/ DETG,QP(3,3),IGLPR
      COMMON /PRINCI/ PRINC(3)
      COMMON /LEVDES/ ILEDE,NLD,ICPM1
      COMMON /GRADIJ/ GRAD(3,3),GRAE(3,3),GRAP(3,3)
      COMMON /CVSILE/ NSILA,LESILA
      COMMON /GAUSVR/ LTEMGT,LCORGT,ICORGT
      COMMON /CUVAJN/ TAUCEN(6,5),INDSEL,NGAUSU
      COMMON /MATIZO/ E,V
      COMMON /MATANI/ EX,EY,EZ,VXY,VYZ,VZX,GXY,GYZ,GZX
      COMMON /POSTPR/ LNDTPR,LNDTGR,NBLPR,NBLGR,INDPR,INDGR
      COMMON /RADIZA/ INDBG
C
      DIMENSION AU(*)
      REAL AU
C
      DIMENSION ID(NP,*),CORD(NP,*),FTDT(*),RTDT(*),UPRI(*),MAXA(*),
     1          DRG0(NP,*),DRG(NP,*),DRV1(NP,*),TR0(*),THI(*),
     1          COPT(NE,*),TEMGT(NGS12,*),CORGT(3,NGS12,*),THID(*)
      DIMENSION SK(*),SKE(*),NOP(NE,*),IMAT(*),NSLOJ(*),ISNA(*),IPGC(*),
     1          MATSL(MSLOJ,*),BBET(MSLOJ,*),DSLOJ(MSLOJ,*),BET0(*),
     1          ZAPS(*),NPRZ(*),GUSM(50,*),AMASC(3),IPGG(*),ESILA(ND,*),
     1          ALFE(LA,*),HAEM(LA,*),HINV(LA,LA,*),GEEK(LA,NCVN,*)
      DIMENSION XG(55),WGT(55),NREF(11),TBETA(6,6),
     1          LM(54),EF1(3),EF2(3),EF3(3),
     1          COEFE(3),TTR(3,3,3)
      DIMENSION COR(3,3),CORT(3,3),CON(3,3),
     1          COR0(NE,3,*),GM0(NE,3,3,*),TRLN(6,6),TSS(6,6)
      DIMENSION FOT(6,6),EKOR(6,18),GERS(6,18),LJA(18),MJA(18),
     1          CEGE(LA,*),HAEML(18),UPR(18),SKOV(6),XJT(3,3),XJ0(3,3),
     1          GRAN(3,3),CT(3,3,3,3),FE(63),DUEL(63)
      DIMENSION TAU(N45,NGS12,NE,*),VITOP(*),VITTP(*),HK(3,3),HM(3,3),
     1          STRAIN(6),TA(6),STRESS(6),D(3)
      DIMENSION V3(3,3,3),VT(3,3,3),V0(3,3,3),VIT(*),SKEL(*),BTT(6,*),
     1          VITL(3,NCVS,*),VITT(3,NCVS,*),VIT0(3,NCVS,*),BNL(9,*),
     1          VOP(*),VITE(*),FTD(*),VR(3,NCVS,*),VS(3,NCVS,*),
     1          VZ(3,NCVS,*),DLV(3,NCVP,*),DLV1(3,NCVP,*),DLV0(3,NCVP,*)
     1          ,DLV2(3,NCVP,*),FCFL(*),NCFF(5,*),SKE1(*),FTD1(*),
     1          FPRL(*),NPRF(6,*),NGC(3),NLC(3),VITP(3,3,3),TEZP(3,*),
     1          SILP(3,3,3)
      DIMENSION CORS(NCVP,3,*),IDP(NCVP,6,*),NOS(NS,*),LME(*),MAEL(*),
     1          NVEZ(*),NPR(*),FPR(*),IDD(6,*),LMU(*),NPOMT(*),
     +          MCVEL(*),NCVEL(*)
      DIMENSION WNC(15),XNC(15)
      DIMENSION BNLK(9,*),BNLKS(LA,*)
      DIMENSION POCET(8,26)
      COMMON /POCNAP/ IPOCET
      COMMON /CDEBUG/ IDEBUG
C     DATA POCET/
C    + -.1510, -.1510, -.1510, -.1510,  .1510,  .1510,  .1510,  .1510,
C    + -.1510, -.1510, -.1510, -.1510,  .1510,  .1510,  .1510,  .1510,
C    + -.1510, -.1510, -.1510, -.1510,  .1510,  .1510,  .1510,  .1510,
C    + -.2800, -.2800, -.2800, -.2800,  .2800,  .2800,  .2800,  .2800,
C    + -.2800, -.2800, -.2800, -.2800,  .2800,  .2800,  .2800,  .2800,
C    + -.2800, -.2800, -.2800, -.2800,  .2800,  .2800,  .2800,  .2800,
C    + -.3030, -.3030, -.3030, -.3030,  .3030,  .3030,  .3030,  .3030,
C    + -.3030, -.3030, -.3030, -.3030,  .3030,  .3030,  .3030,  .3030,
C    + -.3030, -.3030, -.3030, -.3030,  .3030,  .3030,  .3030,  .3030,
C    + -.1600, -.1600, -.1600, -.1600,  .1600,  .1600,  .1600,  .1600,
C    + -.1600, -.1600, -.1600, -.1600,  .1600,  .1600,  .1600,  .1600,
C    + -.1600, -.1600, -.1600, -.1600,  .1600,  .1600,  .1600,  .1600,
C    + -.1600, -.1600, -.1600, -.1600,  .1600,  .1600,  .1600,  .1600,
C    +  .1510,  .1510,  .1510,  .1510, -.1510, -.1510, -.1510, -.1510,
C    +  .1510,  .1510,  .1510,  .1510, -.1510, -.1510, -.1510, -.1510,
C    +  .1510,  .1510,  .1510,  .1510, -.1510, -.1510, -.1510, -.1510,
C    +  .2800,  .2800,  .2800,  .2800, -.2800, -.2800, -.2800, -.2800,
C    +  .2800,  .2800,  .2800,  .2800, -.2800, -.2800, -.2800, -.2800,
C    +  .2800,  .2800,  .2800,  .2800, -.2800, -.2800, -.2800, -.2800,
C    +  .3030,  .3030,  .3030,  .3030, -.3030, -.3030, -.3030, -.3030,
C    +  .3030,  .3030,  .3030,  .3030, -.3030, -.3030, -.3030, -.3030,
C    +  .3030,  .3030,  .3030,  .3030, -.3030, -.3030, -.3030, -.3030,
C    +  .1600,  .1600,  .1600,  .1600, -.1600, -.1600, -.1600, -.1600,
C    +  .1600,  .1600,  .1600,  .1600, -.1600, -.1600, -.1600, -.1600,
C    +  .1600,  .1600,  .1600,  .1600, -.1600, -.1600, -.1600, -.1600,
C    +  .1600,  .1600,  .1600,  .1600, -.1600, -.1600, -.1600, -.1600/
      DATA POCET/
     + -.1660, -.1660, -.1260, -.1260,  .1190,  .1190,  .1070,  .1070,
     + -.2060, -.2060, -.1660, -.1660,  .1310,  .1310,  .1190,  .1190,
     + -.2460, -.2460, -.2060, -.2060,  .1430,  .1430,  .1310,  .1310,
     + -.2460, -.2460, -.2460, -.2460,  .1430,  .1430,  .1430,  .1430,
     + -.2460, -.2460, -.2460, -.2460,  .1430,  .1430,  .1430,  .1430,
     + -.2460, -.2460, -.2460, -.2460,  .1430,  .1430,  .1430,  .1430,
     + -.2460, -.2460, -.2460, -.2460,  .1430,  .1430,  .1430,  .1430,
     + -.2460, -.2460, -.2460, -.2460,  .1430,  .1430,  .1430,  .1430,
     + -.2460, -.2460, -.2460, -.2460,  .1430,  .1430,  .1430,  .1430,
     + -.1960, -.1960, -.2460, -.2460,  .1120,  .1120,  .1430,  .1430,
     + -.1960, -.1960, -.1960, -.1960,  .1120,  .1120,  .1120,  .1120,
     + -.2460, -.2460, -.1960, -.1960,  .1430,  .1430,  .1120,  .1120,
     + -.1960, -.1960, -.2460, -.2460,  .1120,  .1120,  .1430,  .1430,
     +  .1190,  .1190,  .1070,  .1070, -.1660, -.1660, -.1260, -.1260,
     +  .1310,  .1310,  .1190,  .1190, -.2060, -.2060, -.1660, -.1660,
     +  .1430,  .1430,  .1310,  .1310, -.2460, -.2460, -.2060, -.2060,
     +  .1430,  .1430,  .1430,  .1430, -.2460, -.2460, -.2460, -.2460,
     +  .1430,  .1430,  .1430,  .1430, -.2460, -.2460, -.2460, -.2460,
     +  .1430,  .1430,  .1430,  .1430, -.2460, -.2460, -.2460, -.2460,
     +  .1430,  .1430,  .1430,  .1430, -.2460, -.2460, -.2460, -.2460,
     +  .1430,  .1430,  .1430,  .1430, -.2460, -.2460, -.2460, -.2460,
     +  .1430,  .1430,  .1430,  .1430, -.2460, -.2460, -.2460, -.2460,
     +  .1120,  .1120,  .1430,  .1430, -.1960, -.1960, -.2460, -.2460,
     +  .1120,  .1120,  .1120,  .1120, -.1960, -.1960, -.1960, -.1960,
     +  .1430,  .1430,  .1120,  .1120, -.2460, -.2460, -.1960, -.1960,
     +  .1120,  .1120,  .1430,  .1430, -.1960, -.1960, -.2460, -.2460/
C
      DATA NREF/0,1,3,6,10,15,21,28,36,45,55/
      DATA WGT/            2.D0,               1.D0,               1.D0,
     1       .555555555555556D0, .888888888888889D0, .555555555555556D0,
     2       .347854845137454D0, .652145154862546D0, .652145154862546D0,
     3       .347854845137454D0, .236926885056189D0, .478628670499366D0,
     4       .568888888888889D0, .478628670499366D0, .236926885056189D0,
     5       .171324492379170D0, .360761573048139D0, .467913934572691D0,
     6       .467913934572691D0, .360761573048139D0, .171324492379170D0,
     7       .129484966168870D0, .279705391489277D0, .381830050505119D0,
     8       .417959183673469D0, .381830050505119D0, .279705391489277D0,
     9       .129484966168870D0, .101228536290376D0, .222381034453374D0,
     9       .313706645877887D0, .362683783378362D0, .362683783378362D0,
     1       .313706645877887D0, .222381034453374D0, .101228536290376D0,
     2       .081274388361574D0, .180648160694857D0, .260610696402935D0,
     3       .312347077040003D0, .330239355001260D0, .312347077040003D0,
     4       .260610696402935D0, .180648160694857D0, .081274388361574D0,
     5       .066671344308688D0, .149451349150581D0, .219086362515982D0,
     6       .269266719309996D0, .295524224714753D0, .295524224714753D0,
     7       .269266719309996D0, .219086362515982D0, .149451349150581D0,
     8       .066671344308688D0/
      DATA XG /            0.D0,-.577350269189626D0, .577350269189626D0,
     1      -.774596669241483D0,               0.D0, .774596669241483D0,
     2      -.861136311594053D0,-.339981043584856D0, .339981043584856D0,
     3       .861136311594053D0,-.906179845938664D0,-.538469310105683D0,
     4                     0.D0, .538469310105683D0, .906179845938664D0,
     5      -.932469514203152D0,-.661209386466265D0,-.238619186083197D0,
     6       .238619186083197D0, .661209386466265D0, .932469514203152D0,
     7      -.949107912342759D0,-.741531185599394D0,-.405845151377397D0,
     8                     0.D0, .405845151377397D0, .741531185599394D0,
     9       .949107912342759D0,-.960289856497536D0,-.796666477413627D0,
     9      -.525532409916329D0,-.183434642495650D0, .183434642495650D0,
     1       .525532409916329D0, .796666477413627D0, .960289856497536D0,
     2      -.968160239507626D0,-.836031107326636D0,-.613371432700590D0,
     3      -.324253423403809D0,               0.D0, .324253423403809D0,
     4       .613371432700590D0, .836031107326636D0, .968160239507626D0,
     5      -.973906528517172D0,-.865063366688985D0,-.679409568299024D0,
     6      -.433395394129247D0,-.148874338981631D0, .148874338981631D0,
     7       .433395394129247D0, .679409568299024D0, .865063366688985D0,
     8       .973906528517172D0/
C
      DATA WNC/            2.D0,               1.D0,               1.D0,
     1       .333333333333333D0,1.333333333333333D0, .333333333333333D0,
     2       .250000000000000D0, .750000000000000D0, .750000000000000D0,
     3       .250000000000000D0, .155555555555556D0, .711111111111111D0,
     4       .266666666666667D0, .711111111111111D0, .155555555555556D0/
C
      DATA XNC/            0.D0,              -1.D0,               1.D0,
     1                    -1.D0,               0.D0,               1.D0,
     2                    -1.D0,-.333333333333333D0, .333333333333333D0,
     3                     1.D0,              -1.D0,             -0.5D0,
     4                     0.D0,              0.5D0,               1.D0/
C
      IF(IDEBUG.GT.0) PRINT *, ' INT92 '
      IF(IABS(INDKOV).NE.2) CALL CLEAR(BNLK,9*LA)
CE    INTGL: INTEGRATING INDICATOR FOR LARGE STRAINS
CE           (=0-IN PRINCIPAL DIRECTIONS (e.g. PAK3406.FOR);
CE            =1-IN GLOBAL CARTESIAN COORDINATE SYSTEM (e.g. PAK3406K.FOR))
CS    INDIKATOR ZA INTEGRACIJU: (0-U GL.PRAVCIMA; 1-U DEKARTOVOM) 
      INTGL=0
C
CE    IGLPR: INDICATOR FOR RECKONING OF PRINCIPAL DIRECTIONS FOR LARGE STRAINS
CE           (=0-NO; =1-YES)
CS    INDIKATOR ZA RACUNANJE GLAVNIH PRAVACA (=0-NE;=1-DA)
      IGLPR=0
C
CE    IATYP: INDICATOR FOR TYPE OF ANALYSIS FOR GROUP
CE           (=5; LARGE STRAIN - ROTATED LOGARITHMIC STRAIN)
CE    ILEDE: INDICATOR FOR LEFT-HAND OR RIGHT-HAND BASIS FOR LARGE STRAINS
CE           (=0-LEFT-HAND;=1-RIGHT-HAND)
CS    ILEDE: INDIKATOR ZA LEVU I DESNU BAZU ZA VELIKE DEFORMACIJE
CS           (=0-LEVA,=1-DESNA)
CE    ICPM1: INDICATOR FOR STORAGE OF MATRIX FOR LARGE STRAINS
CS    ICPM1: INDIKATOR ZA CUVANJE MATRICA ZA VELIKE DEFORMACIJE
C            [Be (ICPM1=0); Cp**-1 (ICPM1=1); Fp (ICPM1=2)]
CE    NLD  : DIMENSION OF MATRIX FOR STORAGE: 6=(Be, Cp**-1); 9=(Fp)
      IF(IATYP.EQ.5.OR.ILEDE.EQ.1.OR.ICPM1.EQ.2) IGLPR=1
C            IF(IATYP.EQ.5)IGLPR=1
C
CE    INDICATOR FOR CONTROL PRINTING (=0-NO;=1-YES)
CS    INDIKATOR KONTROLNE STAMPE (=0-NE;=1-DA)
      IST=1
C      IF(IST.EQ.0) WRITE(3,*)'ITERGL,NGENN,ITER',ITERGL,NGENN,ITER
C      IF(IST.EQ.0.AND.JEDPP.GT.0) CALL IWRR(IDP,6*NP*NCVP,'IDP ')
C      IF(IST.EQ.0.AND.JEDPP.GT.0) CALL IWRR(IDD,NP*6,'IDD ')
C      IF(IST.EQ.0) CALL IWRR(NOS,NS*NCVS,'NOS ')
C
C     INDIKATOR ZA POCETNE NAPONE ZA SUPERGREDNI ELEMENT (0-NE,1-DA)
            IPOCET=0
C
C      COEFE(1)=0.833333333D0
      COEFE(1)=COEF(1)
      COEFE(2)=COEF(2)
      COEFE(3)=COEF(3)
C
      NCVV=3*NCVE*NCVS
      NCVJJ=0
      IF(JEDPP.GT.0) NCVJJ=NCVJ
      NWE=NCVN*(NCVN+1)/2
C
      IF(IDIREK.EQ.0)THEN
C
CS       FORMIRANJE VEKTORA NORMALE U TRENUTKU 0 NA OSNOVU KOORDINATA
CE       FORM UNIT NORMAL VECTORS IN TIME "0"
C
         L6=-8
C        PETLJA PO BROJEVIMA ELEMENATA
         DO 40 NLM=1,NE
C        PETLJA PO GLOBALNIM CVOROVIMA (NBR - REDNI BROJ CVORA 1 - 3)
         DO 40 NBR=1,NCVE
C           BROJ GLOBALNOG CVORA (IG)
            IG=NOP(NLM,NBR)
            IF(IG.EQ.0) GO TO 40
C           LOKALNE KOORDINATE GLOBALNIH CVOROVA
            IF(NBR.EQ.1) T=1.
            IF(NBR.EQ.2) T=-1.
            IF(NBR.EQ.3) T=0.
C           INTERPOLACIJSKE FUNKCIJE I IZVODI ZA GLOBALNE CVOROVE
            CALL INTER9(HK,T,NCVE)
C      IF(IST.EQ.0) CALL WRR(HK,9,'HK  ')
C           RACUNANJE BAZNOG VEKTORA GT
            CALL CLEAR(EF3,3)
C           PETLJA PO GLOBALNIM CVOROVIMA (I - REDNI BROJ CVORA 1 - 3)
            DO 1227 I=1,NCVE
C              BROJ GLOBALNOG CVORA (II)
               II=NOP(NLM,I)
C              PETLJA PO KOMPONENTAMA (X,Y,Z)
            DO 1227 J=1,3
C              GLOBALNE KOORDINATE
               COR(I,J)=CORD(II,J)
C              BAZNI VEKTOR GT (DX/DT ZA J=1,DY/DT ZA J=2,DZ/DT ZA J=3)
               EF3(J)=EF3(J)+HK(I,2)*COR(I,J)
 1227       CONTINUE
C           INDIKATOR (NPOM) ZA BAZNI VEKTOR 1 
C (=-1, ZADAJE SE KOMPLETAN; =0, UPRAVNO NA GREDU; =1,PREMA POM. TACKI)
            NPOM=NPOMT(NLM)
C           RACUNANJE VEKTORA (GP) ZA CVOR (NBR) ELEMENTA (NLM)
            DO 1228 J=1,3
C              POMOCNA TACKA ZA SVAKI ELEMENT
               IF(IPOMT.EQ.0) THEN
                  IF(NPOM.EQ.-1) EF1(J)=COPT(NLM,J)
                  IF(NPOM.NE.-1) EF1(J)=COPT(NLM,J)-COR(NBR,J)
               ENDIF
C              ISTA POMOCNA TACKA ZA SVE ELEMENTE U GRUPI
               IF(IPOMT.EQ.1) EF1(J)=CPP(J,1)-COR(NBR,J)
 1228       CONTINUE
C           JEDINICNI GP
            CALL JEDV(EF1(1),EF1(2),EF1(3))
C           JEDINICNI GT
            CALL JEDV(EF3(1),EF3(2),EF3(3))
C           KONACNO RACUNANJE GS 
            CALL AXBV(EF3,EF1,EF2)
C           KONACNO JEDINICNI GS
            CALL JEDV(EF2(1),EF2(2),EF2(3))
C           POMOCNA TACKA ZA SVAKI ELEMENT
            IF(IPOMT.EQ.0) THEN
C              KONACNO JEDINICNI GR (GT JE TANGETNO NA REF. OSU)
               IF(NPOM.EQ.0) CALL AXBV(EF2,EF3,EF1)
C              KONACNO JEDINICNI GT (SVI GR KOD ELEMENTA SE SEKU U P.T.)
               IF(NPOM.EQ.1.OR.NPOM.EQ.-1) CALL AXBV(EF1,EF2,EF3)
            ENDIF
C           POMOCNA TACKA ZA SVE ELEMENTE U GRUPI
C           KONACNO JEDINICNI GT (SVI GR U GRUPI PROLAZE KROZ CPP)
            IF(IPOMT.EQ.1) CALL AXBV(EF1,EF2,EF3)
C
C           NORMALA NA PRESEK JE OSA Z
C           KOSINUSI VEZE IZMEDJU LOKALNOG I GLOBALNOG SISTEMA U CVORU
C**  6 DOF    ---   TRANSFORMACIJA; V1, V2, V3 
            L6=L6+9
            LEF2=L6+3
            LEF3=L6+6
            CALL JEDNA1(TR0(L6),EF1,3)
            CALL JEDNA1(TR0(LEF2),EF2,3)
            CALL JEDNA1(TR0(LEF3),EF3,3)
C           IF(IST.EQ.0) WRITE(3,*) 'NLM,NBR',NLM,NBR
C           IF(IST.EQ.0) CALL WRR(EF1,3,'EF1 ')
C           IF(IST.EQ.0) CALL WRR(EF2,3,'EF2 ')
C           IF(IST.EQ.0) CALL WRR(EF3,3,'EF3 ')
CG          IMALR=0
CG          IF(IMALR.EQ.1) THEN
CG             NCV=IG-NMC
CG             II=NVEZ(NCV)
CG             NPRE=NPR(II)
CG             FPRE=FPR(II)
CG             DO 43 NSEG=1,NS
CG             DO 42 J=1,NCVS
CG                NC=NOS(NSEG,J)
CG             DO 42 K=1,3
CG                VIT0(K,J,NBR)=CORS(NC,K,NPRE)*FPRE
CG 42          CONTINUE
CG          IF(IPODT.EQ.1) THEN
CG             CALL CLEAR(EF3,3)
CG             EF3(3)=1.
CG             DO 45 J=1,NCVS
CG                IF(J.EQ.1) S=1.
CG                IF(J.EQ.2) S=-1.
CG                IF(J.EQ.3) S=0.
CG                CALL INTER9(HM,S,NCVS)
CG                CALL CLEAR(EF2,3)
CG                DO 44 M=1,NCVS
CG                DO 44 K=1,3
CG                   EF2(K)=EF2(K)+HM(M,2)*VIT0(K,M,I)
CG 44             CONTINUE
CG                CALL AXBV(EF2,EF3,EF1)
CG                CALL JEDV(EF1(1),EF1(2),EF1(3))
CG                CALL JEDNAK(VR(1,J,I),EF1,THA,3)
CG 45          CONTINUE
CG          ENDIF
C
CG          IF(IPODT.EQ.0) THEN
CG             CALL CLEAR(VR,NCVV)
CG             CALL CLEAR(VS,NCVV)
CG             DO 66 I=1,NCVE
CG             DO 66 J=1,NCVS
CG                VR(1,J,I)=THA
CG                VS(2,J,I)=THA*THB
CG 66          CONTINUE
CG          ENDIF
C
CG 43          CONTINUE
CG          ENDIF
   40    CONTINUE
         RETURN
      ENDIF
C
C        STAMPANJE SEGMENATA U UNIVERZALNI FILE
C
         IF(IPODT.NE.0.AND.KOR.EQ.1.AND.ITER.EQ.0.AND.ISKNP.NE.2)
     1                  CALL TGRASK(NOP,DRV1,DRG,TR0,TTR,V3,V0,
     1                              NE,NP,NCVE,IATYP,
     1                              NS,NCVP,NCVS,IPODT,NMC,NGE,IREST,
     1                              CORD,CORS,NOS,NVEZ,NPR,FPR)
C
CS.....   REPERI ZA MODEL MATERIJALA  
CE.....   MATERIAL MODEL POINTER
      LFUN=MREPER(1)
      LNTA=MREPER(2)
      LTEM=MREPER(3)
      MATE=MREPER(4)
CS.....   MATRICA TRANSFORMISANJA KONSTITUITIVNIH RELACIJA LAMINATA
CE.....   FIBER ORIENTATION TRANSFORMATION MATRIX
      IF(MSET.EQ.0.AND.MODORT(NMODM).EQ.1.AND.IBB0.EQ.0)
     1   CALL STBET9(TBETA,BETA)
C     CALL WRR(TBETA,36,'TBET')
C
C      WRITE(3,*) 'ITER,ISKNP,KOR,NGENL',ITER,ISKNP,KOR,NGENL
C      WRITE(*,*) 'ITER,ISKNP,KOR,NGENL',ITER,ISKNP,KOR,NGENL
         IME(1:2)='SE'
         WRITE(IME(3:6),1900) NGE
 1900 FORMAT(I4)
         DO 6 J=3,5
            IF(IME(J:J).EQ.' ') IME(J:J)='0' 
    6    CONTINUE
      IF(JEDPP.GT.0.AND.KOZOVE.NE.5) THEN
C         IF(IST.EQ.0) CALL IWRR(MAEL,JEDPP+JEDNN+1,'MAE1')
         IF(IREST.NE.1.AND.KOR.EQ.1.AND.ITER.EQ.0.AND.ISKNP.NE.2) THEN
         OPEN (33,FILE=IME,STATUS='UNKNOWN',FORM='UNFORMATTED',
     1                         ACCESS='SEQUENTIAL')
C         WRITE(*,*) 'OTVARA I BRISE 33'
            CLOSE (33,STATUS='DELETE')
         ENDIF
         OPEN (33,FILE=IME,STATUS='UNKNOWN',FORM='UNFORMATTED',
     1                         ACCESS='SEQUENTIAL')
C         WRITE(3,*) 'ISKNP,ITER,KOR',ISKNP,ITER,KOR
C         WRITE(*,*) 'ISKNP,ITER,KOR',ISKNP,ITER,KOR
         CALL CLEAR(VIT,JEDPP+JEDNN)
         IF(IATYP.EQ.0) CALL CLEAR(VITOP,JEDPP)
         IF(ISKNP.EQ.2.OR.ITER.GT.0) THEN
            DO 243 I=1,JEDNN
               J=LMU(I)
               IF(J.EQ.0) STOP ' LMU'
               IF(IATYP.EQ.0) VIT(JEDPP+I)=RTDT(J)
               IF(IATYP.GT.0) VIT(JEDPP+I)=UPRI(J)
  243      CONTINUE
C        WRITE(3,*) 'JEDPP,JEDNN,NCVN',JEDPP,JEDNN,NCVN
C        WRITE(*,*) 'JEDPP,JEDNN,NCVN',JEDPP,JEDNN,NCVN
            CALL READD(SKEL,NWKK,33)
C       WRITE(3,*) 'NWKK,NWPP,NWEE,NWE',NWKK,NWPP,NWEE,NWE
C       WRITE(*,*) 'NWKK,NWPP,NWEE,NWE',NWKK,NWPP,NWEE,NWE
            CALL READD(VIT,JEDPP,33)
C             CALL WRR(SKEL,NWKK,'SKE3')
C             CALL WRR(VIT,JEDPP+JEDNN,'VIT3')
            CALL RESENP(SKEL,VIT,MAEL,JEDPP+JEDNN,JEDPP,IZLAZ,3)
C             CALL WRR(SKEL,NWKK,'SKEL')
C             CALL WRR(VIT,JEDPP+JEDNN,'VIT ')
            CALL ZBIRM1(VITOP,VIT,JEDPP)
C PROVERA KONVERGENCIJE
C            IF(NGENL.GT.0.AND.IILS.NE.-1) THEN
            IF(ITERGL.GT.0.AND.KONVE.GT.0.AND.IILS.NE.-1) THEN
C               WRITE(3,*) 'NGENL',NGENL
C               WRITE(*,*) 'NGENL',NGENL
               CALL READD(FTD,JEDPP+JEDNN,33)
C INDIKATOR ZA KONVERGENCIJU NA UNUTRASNJIM POMERANJIMA
               IKONVP=0
               ENEP=1.D0
               EMINP=TOLA
               TOLEP=DSQRT(TOLE)
               IF(ITER.EQ.1) THEN
                  CALL ENERG(FTD,VIT,JEDPP+JEDNN,ENE91)
                  ENE92=ENE91
                  IF(DABS(ENE91).LT.EMINP) ENE91=ENEP
               ELSE
                  CALL ENERG(FTD,VIT,JEDPP+JEDNN,ENE92)
               ENDIF
               ENEP=ENE92/ENE91
               IF(DABS(ENEP).LT.TOLEP) IKONVP=1
               IF(DABS(ENE92).LT.EMINP) IKONVP=1
      IF(NBLPR.GE.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2001) ITER,ENE92,ITER,ENEP
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6001) ITER,ENE92,ITER,ENEP
      ENDIF
      IF(ISRPS.EQ.0)
     1WRITE(*,2001) ITER,ENE92,ITER,ENEP
      IF(ISRPS.EQ.1)
     1WRITE(*,6001) ITER,ENE92,ITER,ENEP
            ENDIF
C
         ENDIF
         IF(ISKNP.NE.2) CALL CLEAR(SKEL,NWKK)
         CALL CLEAR(FTD,JEDPP+JEDNN)
C
C         IF(ITER.EQ.0.AND.IATYP.GE.4) 
C     1      CALL JEDNA1(VITTP,VITOP,JEDPP)
         IF(IREST.EQ.1.AND.ITER.EQ.0.AND.IATYP.GT.0) 
     1   CALL JEDNA1(VITOP,VITTP,JEDPP)
C          CALL WRR(RTDT,JEDN,'RTDT')
C          CALL WRR(UPRI,JEDN,'UPRI')
C          CALL WRR(FTDT,JEDN,'FTDT')
C          CALL WRR(VITOP,JEDPP,'VITO')
C          CALL WRR(VIT,JEDPP+JEDNN,'VIT ')
      ENDIF
C
CS            P E T L J A    P O    E L E M N T I M A
CE            L O O P    O V E R    E L E M E N T S
C
      L6=0
      GRZAP=0.D0
      GRMAS=0.D0
C
C       CALL WRR(RTDT,JEDN,'RTUL')
C       CALL WRR(FTDT,JEDN,'FTUL')
      DO 100 NLM=1,NE
C       WRITE(3,*) 'NLM,ITER,JEDPP,JEDNN,ND',
C     1                          NLM,ITER,JEDPP,JEDNN,ND
C
CS       NASTAJANJE I NESTAJANJE ELEMENATA
CE       ELEMENT BIRTH AND DEATH OPTION
C
         IBD=0
         CALL DTHBTH(AU(LTBT),AU(LTDT),VREME,NLM,IBD)
         IF(IBD.EQ.1) WRITE(3,*) ' PRESKOCEN ELEMENT, NLM',NLM
         IF(IBD.EQ.1) GO TO 100
C
         NNXYZ=(NLM-1)*NGS12*NS*MXS-1
         IPG=IPGG(NLM)
C.....................
CS.....   MATRICA TRANSFORMISANJA KONSTITUITIVNIH RELACIJA LAMINATA
CE.....   FIBER ORIENTATION TRANSFORMATION MATRIX
C U BET0 CUVA UGAO BETA ZA SVAKI ELEMENT, SAD JE ZA CELU GRUPU ISTI BETA  
C     IF(MSET.EQ.0.AND.MODORT(NMODM).EQ.1.AND.IBB0.EQ.1)
C    1   CALL STBET9(TBETA,BET0(NLM))
C
CS       VEKTOR  LM I LME I VEKTOR LOKALNIH POMERANJA
CE       VECTOR  LM  AND LME AND  LOCALL DISPLACEMENTS
C
         KK=0
         DO 110 J=1,NCVE
            NODP=NOP(NLM,J)
         DO 110 I=1,6
            KK=KK+1
C           GLOBALNE JEDNACINE ZA ELEMENT (NLM)
            LM(KK)=ID(NODP,I)
  110    CONTINUE
C        (ND) BROJ GLOBALNIH STEPENI SLOBODE ZA ELEMENT (ILI PODELEMENT)
         IF(JEDPP.EQ.0) CALL IJEDN1(LME,LM,ND)
         IF(JEDPP.GT.0) THEN
C           (NCVJ) BROJ LOKALNIH STEPENI SLOBODE ZA PODELEMENT
            KK=NCVJ
            DO 62 I=1,NCVE
               NCV=NOP(NLM,I)-NMC
               II=NVEZ(NCV)
            DO 62 J=1,6
               KK=KK+1
C              GLOBALNE JEDNACINE ZA PODELEMENT ELEMENTA (NLM)
               LME(KK)=IDD(J,II)
   62       CONTINUE
         ENDIF
C          IF(IST.EQ.0) CALL IWRR(LM,ND,'LM  ')
C        (COR) KOORDINATE GLOBALNIH CVOROVA (II) ELEMENTA (NLM)
         DO 1222 I=1,NCVE
            II=NOP(NLM,I)
         DO 1222 J=1,3
 1222    COR(I,J)=CORD(II,J)
C         IF(IST.EQ.0) CALL WRR(COR,3*3,'COR ')
C         IF(IST.EQ.0) CALL WRR(CORD,3*NP,'CORD')
C
C        ODREDJIVANJE POLOZAJA LOKALNIH VEKTORA
C
         CALL PLOKV(NOP,DRV1,DRG,TR0,TTR,V3,V0,
     1              NE,NP,NLM,NCVE,IATYP,L6)
C
C     UBACIVANJE (NCFL) LOKALNIH SILA U PRESEKU
C
       IF(NCFL.GT.0.AND.JEDPP.GT.0) THEN
         DO 600 I=1,NCFL
C           (NJ) BROJ ELEMENTA
            NJ=NCFF(5,I)
            NLMM=NLM
            IF(ICVEL.EQ.1) NLMM=MCVEL(NLM)
            IF(NJ.NE.NLMM) GO TO 600
C           (II) BROJ GLOBALNOG CVORA ELEMENTA (NJ)
            II=NCFF(4,I)
C           PROVERA DA LI UCITANI CVOR PRIPADA ELEMENTU
            DO 622 NBR=1,NCVE
               IG=NOP(NLM,NBR)
               IGG=IG
               IF(ICVEL.EQ.1) IGG=NCVEL(IG)
               IF(II.EQ.IGG) GO TO 623
  622       CONTINUE
            STOP 'LOKALNA SILA NA NEPOSTOJECEM CVORU'
C           (NC) BROJ CVORA SEGMENTA
  623       NC=NCFF(1,I)
C           (K) INDIKATOR PRAVCA
            K =NCFF(2,I)
C           (NF) BROJ VREMENSKE FUNKCIJE
            NF=NCFF(3,I)
C           (NMC)=MINIMALNI_BROJ_GLOBALNOG_CVORA-1
C       OVO PROVERITI DOBRO
            II=II-NMC
C           (NCV) MESTO NA KOME SE NALAZE PODACI ZA GLOBANI CVOR (II)
            NCV=NVEZ(II)
C           (NJ) BROJ LOKALNE JEDNACINE ZA:
C           PRAVAC (K), CVOR SEGMENTA (NC) I GLOBALNI CVOR ELEMENTA (II)
            NJ=IDP(NC,K,NCV)
C           (FAK) FAKTOR MNOZENJA
            FAK=FCFL(I)
C           (FT) VREMENSKA FUNKCIJA
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
            IF(IND.GT.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200) NF,VREME
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200) NF,VREME
               STOP
            ENDIF
C           WRITE(3,*) 'NC,K,NF,II,NJ,FAK',NC,K,NF,II,NJ,FCFL(I)
C           UKUPNA LOKALNA SILA PO INTEZITETU
            FCF=FAK*FT
C           DODAVANJE LOKALNE SILE U VEKTOR LOKALNIH SILA
            IF(NJ.GT.0) FTD(NJ)=FTD(NJ)+FCF
C           DODAVANJE LOKALNE SILE U VEKTOR GLOBALNIH SILA
C           PROJEKTOVANJE LOKALNE SILE U PRAVCU (K) NA GLOBALNE OSE (J)
            DO 601 J=1,3
C              (NJ) GLOBALNA JEDNACINA ZA PRAVAC (J) I GLOBALNI CVOR (II)
               NJ=IDD(J,NCV)
C              SILA U PRAVCU LOKALNOG VEKTORA (K) U 
C              GLOBALNOM CVORU (II) KOJI NA ELEMENTU IMA REDNI BROJ (NBR)
               IF(NJ.GT.0) FTD(NJ)=FTD(NJ)+FCF*V3(J,K,NBR)
  601       CONTINUE
  600    CONTINUE
C          CALL WRR(FTD,JEDPP+JEDNN,'FTD ')
       ENDIF
C
         DO 242 I=1,ND
            UEL(I)=0.D0
            UPR(I)=0.D0
            IF(LM(I).EQ.0) GO TO 242
            J=LM(I)
            UEL(I)=RTDT(J)
            IF(NGENL.GT.0) UPR(I)=UPRI(J)
  242    CONTINUE
C          CALL WRR(UEL,ND,'UEL ')
C          CALL WRR(UPR,ND,'UPR ')
C
         CALL JEDNA1(VOP(NCVJJ+1),UEL,ND)
         IF(NGENL.GT.0) CALL JEDNA1(VITE(NCVJJ+1),UPR,ND)
C
CS            P E T L J A    P O    S E G M E N T I M A
CE            L O O P    O V E R    S E G M E N T S
C
         IBTC=0
         CALL CLEAR(AMASC,3)
         ZAPRE=0.D0
         AMASA=0.D0
C        (THB) ZA PRAVOUGAONI PRESEK ODNOS DEBLJINA (B/A) ZA ELEMENT (NLM)
         THB=THI(NLM)
C        (NSEG) TEKUCI PODELEMENT, (NS) UKUPNO PODELEMENATA U ELEMENTU (NLM)
         DO 200 NSEG=1,NS
C           (ISN) INDIKATOR STAMPANJA NAPONA
            ISN=ISNA(NSEG)
C SADA            IF(IPODT.EQ.2) ISN=2
C           (NLS) REDNI BROJ PODELEMENTA U GRUPI ELEMENATA
            NLS=(NLM-1)*NS+NSEG
C           (NS45) TRENUTNO ISKORISCEN PROSTOR U VEKTORU NAPONA
            NS45=(NSEG-1)*6
C            WRITE(3,*) 'NSEG,NCVE,NCVS',NSEG,NCVE,NCVS
C           BRISANJE MATRICE KRUTOSTI (SKE) PODELEMENTA (NSEG)
            CALL CLEAR(SKE,NWE)
C           BRISANJE VEKTORA VITOPERENJA (VOP) PODELEMENTA (NSEG)
            IF(JEDPP.GT.0) CALL CLEAR(VOP,NCVJ)
C           BRISANJE VEKTORA PRIRASTAJA VITOPERENJA (VITE) PODELEMENTA (NSEG)
            IF(JEDPP.GT.0.AND.NGENL.GT.0) CALL CLEAR(VITE,NCVJ)
C           BRISANJE PROSTORA ZA LOKALNE KOORDINATE PODELEMENTA (NSEG)
            CALL CLEAR(VITL,NCVV)
            CALL CLEAR(VITT,NCVV)
            CALL CLEAR(VIT0,NCVV)
C        LME(NCVJ)
C            IF(JEDPP.GT.0) CALL WRR(VITOP,JEDPP,'VITO')
C           (K36) BROJ LOKALNIH STEPENI SLOBODE PO CVORU PODELEMENTA
            K36=6
            IF(IPODT.EQ.2) K36=3
            KK=0
C           PETLJA PO GLOBALNIM CVOROVIMA ELEMENTA (NLM)
            DO 61 I=1,NCVE
C              SIFTOVAN GLOBALNI CVOR SA REDNIM BROJEM (I) NA ELEMENTU (NLM)
               NCV=NOP(NLM,I)-NMC
C              (II) MESTO NA KOME SE NALAZE PODACI ZA GLOBANI CVOR (NCV+NMC)
               II=NVEZ(NCV)
C              (NPRE) REDNI BROJ POPRECNOG PRESEKA ZA GLOBANI CVOR (NCV+NMC) 
               NPRE=NPR(II)
C              (FPRE) SKALIRAJUCI FAKTOR ZA KOORD. POPRECNOG PRESEKA (NPRE)
               FPRE=FPR(II)
C           PETLJA PO LOKALNIM CVOROVIMA SEGMENTA (NSEG)
            DO 61 J=1,NCVS
C              (NC) LOKALNI CVOR SA REDNIM BROJEM (J) NA SEGMENTU (NSEG)
               NC=NOS(NSEG,J)
C           PETLJA PO LOKALNIM STEPENIMA SLOBODE ZA LOKALNI CVOR (NC)
            DO 61 K=1,K36
C              (KK) REDNI BROJ LOKALNOG STEPENA SLOBODE ZA PODELEMENT (NSEG)
               KK=KK+1
               VO=0.D0
               VP=0.D0
               IF(JEDPP.GT.0) THEN
C                 BROJ LOKALNE JEDNACINE ZA STEPEN SLOBODE (K),
C                 CVOR SEGMENTA (NC) I GLOBANI CVOR (NCV+NMC) 
                  NJ=IDP(NC,K,II)
C                 FORMIRANJE VEKTORA (LME) ZA LOKALNE JEDNACINE (NJ)
                  LME(KK)=NJ
C                  WRITE(3,*) 'KK,NJ',KK,NJ
C PROVERI ZA T.L.
C                 (VO) TEKUCE VITOPERENJE ZA JEDNACINU (NJ)
                  IF(NJ.GT.0.AND.IATYP.GT.1) VO=VITOP(NJ)
C                 (VP) PRETHODNO VITOPERENJE ZA JEDNACINU (NJ)
                  IF(NJ.GT.0.AND.IATYP.GE.4) VP=VITTP(NJ)
C                 (VOP) VEKTOR TEKUCIH VITOPERENJA ZA PODELEMENT (NSEG)
                  IF(NJ.GT.0) VOP(KK)=VITOP(NJ)
C                 (VITE) VEKTOR PRIRASTAJA VITOPERENJA ZA PODELEMENT (NSEG)
                  IF(NJ.GT.0.AND.NGENL.GT.0) VITE(KK)=VIT(NJ)
               ENDIF
C              FORMIRANJE VEKTORA LOKALNIH KOORDINATA ZA PODELEMENT (NSEG)
C              (K) LOKALNI STEPEN SLOBODE, (J) REDNI BROJ LOKALNOG CVORA
C                                          (I) REDNI BROJ GLOBALNOG CVORA
               IF(K.LE.3) THEN
C                 (VITL) TEKUCE LOKALNE KOORDINATE
                  VITL(K,J,I)=CORS(NC,K,NPRE)*FPRE+VO
C                 (VITT) PRETHODNE LOKALNE KOORDINATE
                  VITT(K,J,I)=CORS(NC,K,NPRE)*FPRE+VP
C                 (VIT0) POCETNE LOKALNE KOORDINATE
                  VIT0(K,J,I)=CORS(NC,K,NPRE)*FPRE
               ENDIF
   61       CONTINUE
C
C     UBACIVANJE (NPRL) LOKALNIH PRITISAKA PO SEGMENTIMA
C
       IF(NPRL.GT.0.AND.JEDPP.GT.0) THEN
         DO 700 I=1,NPRL
C           (NJ) BROJ ELEMENTA
            NJ=NPRF(1,I)
            NLMM=NLM
            IF(ICVEL.EQ.1) NLMM=MCVEL(NLM)
            IF(NJ.NE.NLMM) GO TO 700
C           (JS) BROJ SEGMENTA
            JS=NPRF(2,I)
            IF(JS.NE.NSEG) GO TO 700
C            WRITE(3,*) ' NLM',NJ, ' NSEG',JS
C           (NCPS) BROJ CVOROVA NA IVICI SEGMENTA POD PRITISKOM
            NCPS=2
            IF(NPRF(5,I).NE.0) NCPS=3
C           (NGC) BROJEVI GLOBALNIH CVOROVA ELEMENTA (NJ)
            NGC(3)=0
            DO 722 NBR=1,NCVE
               NGCC=NOP(NLM,NBR)
               NGC(NBR)=NGCC
C               IF(ICVEL.EQ.1) NGC(NBR)=NCVEL(NGCC)
  722       CONTINUE
C            CALL IWRR(NGC,3,'NGC ')
C           (NLC) BROJEVI CVOROVA SEGMENTA POD PRITISKOM
            NLC(1)=NPRF(3,I)
            NLC(2)=NPRF(4,I)
            NLC(3)=NPRF(5,I)
C            CALL IWRR(NLC,3,'NLC ')
C           PROVERA DA LI UCITANI CVOROVI ZA PRITISAK PRIPADAJU SEGMENTU
            K2=0
C           (IL) REDNI BROJ LOKALNOG CVORA POD PRITISKOM
            DO 761 IL=1,NCPS
               DO 762 JL=1,NCVS
C                 (NC) LOKALNI CVOR SA REDNIM BROJEM (JL) NA SEGMENTU (NSEG)
                  NC=NOS(NSEG,JL)
                  IF(NLC(IL).EQ.NC) THEN
                     K2=K2+1
                     DO 763 KL=1,3
                     DO 763 LL=1,3
                        VITP(KL,IL,LL)=VITL(KL,JL,LL)
  763                CONTINUE
                     GO TO 761
                  ENDIF
  762          CONTINUE
  761       CONTINUE
            IF(K2.LT.2) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,3000) NSEG,(NLC(IL),IL=1,NCPS)
 3000 FORMAT(//' SEGMENTU',I5,' NE PRIPADAJU CVOROVI',3I5)
               STOP ' GRESKA KOD LOKALNIH PRITISAKA'
            ENDIF
C
C           (SILP) SILE LOKALNOG PRITISKA PO CVOROVIMA SEGMENTA
            CALL CLEAR(SILP,27)
C           INTEGRACIJA SILE PRITISKA PO GAUS TACKAMA
            S=0.
            T=0.
            WS=2.
            WT=2.
C           (HM) INTERPOLACIJSKE FUNKCIJE ZA PRESEK
            CALL INTER9(HM,S,NCPS)
C           (HK) INTERPOLACIJSKE FUNKCIJE PO DUZINI ELEMENTA
            CALL INTER9(HK,T,NCVE)
C           (XJ) POVRSINSKI JAKOBIJAN, (D) JEDINICNI VEKTOR NORMALE
            CALL GRGSGP(XJ,D,HM,HK,COR,VITP,V3,NCVE,NCPS,DETP)
C            CALL WRR3(XJ,9,'XJP ')
C            CALL WRR(D,3,'D   ')
C           (NF) BROJ VREMENSKE FUNKCIJE
            NF=NPRF(6,I)
C           (FAK) FAKTOR MNOZENJA
            FAK=FPRL(I)
C           (FT) VREMENSKA FUNKCIJA
            CALL TABF(A(LTABFT),A(LNTFT),NF,NTABFT,VREME,FT,NTMX,IND)
            IF(IND.GT.0) THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2200) NF,VREME
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6200) NF,VREME
               STOP
            ENDIF
C           WRITE(3,*) 'DETP,NF,FT,FAK',DETP,NF,FT,FAK
C           TEZINSKI KOEFICIJENTI
            WTU=WS*WT*DETP
C           UKUPNI LOKALNI PRITISAK PO INTEZITETU
            FCF=FAK*FT*WTU
C           RACUNANJE SILA PO CVOROVIMA
            DO 770 IL=1,NCPS
            DO 770 JL=1,NCVE
            DO 770 KL=1,3
               SILP(IL,JL,KL)=SILP(IL,JL,KL)+FCF*HM(IL,1)*HK(JL,1)*D(KL)
  770       CONTINUE
C            CALL WRR3(SILP,27,'SILG')
C           KRAJ INTEGRACIJE
C
C           DODAVANJE SILA NA GLOBALNE I LOKALNE JEDNACINE
            DO 771 JL=1,NCVE
               II=NGC(JL)
C              (NMC)=MINIMALNI_BROJ_GLOBALNOG_CVORA-1
               II=II-NMC
C              (NCV) MESTO NA KOME SE NALAZE PODACI ZA GLOBANI CVOR (II)
               NCV=NVEZ(II)
            DO 771 KL=1,3
C              (NJ) GLOBALNA JEDNACINA ZA PRAVAC (KL) I GLOBALNI CVOR (II)
               NJ=IDD(KL,NCV)
               IF(NJ.GT.0) THEN
                  DO 772 IL=1,NCPS
CGL                  FTD(NJ)=FTD(NJ)+SILP(IL,JL,KL)
C                     WRITE(3,*)' IL',IL,' JL',JL,' KL',KL
C                     WRITE(3,*)' NJG',NJ,' SILP',SILP(IL,JL,KL)
  772             CONTINUE
               ENDIF
  771       CONTINUE
            DO 775 JL=1,NCVE
               II=NGC(JL)
C              (NMC)=MINIMALNI_BROJ_GLOBALNOG_CVORA-1
               II=II-NMC
C              (NCV) MESTO NA KOME SE NALAZE PODACI ZA GLOBANI CVOR (II)
               NCV=NVEZ(II)
            DO 775 IL=1,NCPS
C              (NC) BROJ CVORA SEGMENTA
               NC=NLC(IL)
C              SILA U LOKALNOM CVORU (IL) I PRESEKU (JL) U GLOBALNOM DEKARTOVOM
               DO 776 KL=1,3
                  EF1(KL)=SILP(IL,JL,KL)
  776          CONTINUE
C              TENZORSKA TRANSFORMACIJA SILE IZ GLOB. U LOK. DEKARTOV SISTEM
               CALL CLEAR(EF2,3)
               CALL MNOZI2(EF2,V3(1,1,JL),EF1,3,3)
C              SILE PRITISKA U ODNOSU NA LOKALNI DEKARTOV SISTEM
               DO 777 KL=1,3
                  SILP(IL,JL,KL)=EF2(KL)
C                 (NJ) BROJ LOKALNE JEDNACINE ZA:
C                 PRAVAC (KL), CVOR SEGMENTA (NC) I GLOBALNI CVOR ELEMENTA (II)
                  NJ=IDP(NC,KL,NCV)
C                 DODAVANJE LOKALNE SILE PRITISKA U VEKTOR LOKALNIH SILA
                  IF(NJ.GT.0) FTD(NJ)=FTD(NJ)+EF2(KL)
C                  WRITE(3,*)' NC',NC,' KL',KL,' NCV',NCV
C                  IF(NJ.GT.0) WRITE(3,*)' NJ',NJ,' EF2',EF2(KL)
  777          CONTINUE
  775       CONTINUE
C            CALL WRR3(SILP,27,'SILL')
  700    CONTINUE
            IF(NSEG.EQ.NS) THEN
C            WRITE(3,*) 'JEDPP',JEDPP,'JEDNN',JEDNN,'NLM,NS',NLM,NSEG
C            CALL WRR6(FTD(JEDPP+1),JEDNN,'FTDP')
            ENDIF
       ENDIF
C
            THA=THID(NSEG)/2.
            IF(IPODT.EQ.1) THEN
               CALL CLEAR(VR,NCVV)
               CALL CLEAR(EF3,3)
C TREBA DOGRADITI DA SE RACUNA GT U LOKALNOM SISTEMU ZA SVAKI CVOR SEGMENTA
               EF3(3)=1.
               DO 63 I=1,NCVE
               DO 63 J=1,NCVS
                  IF(J.EQ.1) S=1.
                  IF(J.EQ.2) S=-1.
                  IF(J.EQ.3) S=0.
                  CALL INTER9(HM,S,NCVS)
                  CALL CLEAR(EF2,3)
                  DO 64 M=1,NCVS
                  DO 64 K=1,3
                     EF2(K)=EF2(K)+HM(M,2)*VITL(K,M,I)
   64             CONTINUE
                  CALL AXBV(EF2,EF3,EF1)
                  CALL JEDV(EF1(1),EF1(2),EF1(3))
                  CALL JEDV(EF2(1),EF2(2),EF2(3))
                  CALL JEDV(EF3(1),EF3(2),EF3(3))
                  CALL JEDNAK(VR(1,J,I),EF1,THA,3)
                  CALL JEDNAK(VS(1,J,I),EF2,THA,3)
                  CALL JEDNAK(VZ(1,J,I),EF3,THA,3)
   63          CONTINUE
            ENDIF
C
            IF(IPODT.EQ.0) THEN
               CALL CLEAR(VR,NCVV)
               CALL CLEAR(VS,NCVV)
               DO 65 I=1,NCVE
               DO 65 J=1,NCVS
                  VR(1,J,I)=THA
                  VS(2,J,I)=THA*THB
   65          CONTINUE
            ENDIF
C T.L.
            IF(IATYP.EQ.2) THEN
               CALL JEDNA1(VITT,VIT0,NCVJ)
               CALL JEDNA1(VIT0,VITL,NCVJ)
               CALL JEDNA1(VITL,VITT,NCVJ)
            ENDIF
C
C     SLEDECI DEO PROGRAMA IZVRSAVA SE SAMO JEDNOM PO ELEMENTU
      IF(NSEG.EQ.1) THEN
C T.L.
         IF(IATYP.EQ.2) THEN
            CALL JEDNA1(VT,V0,9*NCVE)
            CALL JEDNA1(V0,V3,9*NCVE)
            CALL JEDNA1(V3,VT,9*NCVE)
         ENDIF
C        IF(IST.EQ.0) CALL WRR(TTR,9*NCVE,'TTR ')
C        IF(IST.EQ.0) WRITE(3,*) 'IATYP',IATYP
C        IF(IST.EQ.0) CALL WRR(V0,27,'V0  ')
C        IF(IST.EQ.0) CALL WRR(V3,27,'V3  ')
C
CE    PREPARATION OF CONFIGURATION FOR LARGE/FINITE STRAIN ANALYSIS
CE    CON(NCVE,3): UNDEFORMED CONFIGURATION, FOR IATYP>=3
      IF(IATYP.GE.3) THEN
C
CS          KOORDINATE U TRENUTKU - 0
CE          COORDINATE IN TIME - 0
C
            DO 11 I=1,NCVE
               II=(I-1)*6
            DO 11 K=1,3
               CON(I,K)=COR(I,K)-UEL(II+K)
   11       CONTINUE
C
C         WRITE(3,9997) ((CON(I,J),J=1,3),I=1,NCVE)
C 9997 FORMAT(' CON',3(1PD12.5))
C         WRITE(3,9998) ((COR(I,J),J=1,3),I=1,NCVE)
C 9998 FORMAT(' COR',3(1PD12.5))
C         WRITE(3,9999) (UEL(I),I=1,3*NCVE)
C 9999 FORMAT(' UEL',3(1PD12.5))
      ENDIF
C
C
CE    PREPARATION OF CONFIGURATION FOR LARGE STRAIN ANALYSIS
CE    CORT(NCVE,3): ORIGINAL CONFIGURATION AT PREVIOUS TIME STEP
CE                  FOR IATYP>=4.
C
         IF(IATYP.EQ.4) THEN
            DO 1224 I=1,NCVE
            DO 1224 J=1,3
               IF(ITER.EQ.0) THEN
                  COR0(NLM,J,I)=COR(I,J)
                  DO 1225 K=1,3
                     GM0(NLM,J,K,I)=V3(J,K,I)
 1225             CONTINUE
               ENDIF
               CORT(I,J)=COR0(NLM,J,I)
               DO 1226 K=1,3
                  VT(J,K,I)=GM0(NLM,J,K,I)
 1226          CONTINUE
 1224       CONTINUE
         ENDIF
      ENDIF
C            IF(IST.EQ.0.AND.IPODT.NE.2) CALL WRR(VR,NCVV,'VR  ')
C       CALL IWRR(LME,NCVN,'LME ')
C       CALL WRR(VITL,NCVJ,'VITL')
C       CALL WRR(VIT0,NCVJ,'VIT0')
C       CALL WRR(VOP,NCVN,'VOP ')
C       IF(NGENL.GT.0)CALL WRR(VITE,NCVN,'VITE')
C
      R=0.0D0
      S=0.0D0
      T=0.0D0
C       WRITE(3,*) 'NCVE,NCVS,IALFA,KOZOVE,LA,NLS'
C       WRITE(3,*) NCVE,NCVS,IALFA,KOZOVE,LA,NLS
      IF(IALFA.GE.0.AND.KOZOVE.NE.5) THEN
         IF(ISKNP.NE.1) THEN
C
CS          RACUNANJE IZRAZA - F * U + h
CE          CALCULATE EXPRESSION - F * U + h
C
            CALL CLEAR(HAEML,LA)
C             CALL WRR(GEEK(1,1,NLS),LA*NCVN,'GEE2')
C             CALL WRR(HAEM(1,NLS),LA,'HAE2')
C             CALL WRR(HINV(1,1,NLS),LA*LA,'HIN2')
            IF(NGENL.GT.0) THEN
               CALL MNOZI1(HAEML,GEEK(1,1,NLS),VITE,LA,NCVN)
            ELSE
               CALL MNOZI1(HAEML,GEEK(1,1,NLS),VOP,LA,NCVN)
            ENDIF
            IF(NGENL.GT.0) CALL ZBIRM1(HAEML,HAEM(1,NLS),LA)
C             CALL WRR(HAEML,LA,'HAL2')
C
CS          RACUNANJE PARAMETARA - ALFA
CE          CALCULATE PARAMETERS - ALFA
C           ALFA = ALFA - (H**-1) * (F * U + h )
C
            IF(NGENL.EQ.0) CALL CLEAR(ALFE(1,NLS),LA)
            CALL INTEV1(ALFE(1,NLS),HINV(1,1,NLS),HAEML,-1.D0,LA,LA)
C             CALL WRR(ALFE(1,NLS),LA,'ALF2')
C
         ENDIF
C
CS       BRISANJE PROSTORA ZA MATRICE H, F, h, E
CS       CLEAR SPACE FOR MATRIX H, F, h, E
C
         IF(ISKNP.NE.2) CALL CLEAR(HINV(1,1,NLS),LA*LA)
         IF(ISKNP.NE.2) CALL CLEAR(GEEK(1,1,NLS),LA*NCVN)
         IF(NGENL.GT.0) CALL CLEAR(HAEM(1,NLS),LA)
         CALL CLEAR(EKOR,6*LA)
C
C
CS       INTERPOLACIJSKE FUNKCIJE U TACKI R, S, T
CE       INTERPOLATED FUNCTIONS IN R,S,T POINT
C
         CALL INTER9(HK,T,NCVE)
         IF(IPODT.EQ.1) CALL INTER9(HM,S,NCVS)
         IF(IPODT.EQ.2) CALL INTER2(H,R,S,NOS,NS,NSEG,NCVS)
C            CALL WRR(HK,9,'HK0 ')
C            CALL WRR(H,27,'H0  ')
C
CS       JAKOBIJAN U TACKI R, S, T
CE       JACOBIAN MATRIX IN R,S,T POINT
C
      IF(IPODT.EQ.0)CALL GRGS09(XJ,D,HK,COR,VITL,V3,VR,R,VS,S,NCVE,NCVS)
       IF(IPODT.EQ.1) CALL GRGS19(XJ,D,HM,HK,COR,VITL,V3,VR,R,NCVE,NCVS)
       IF(IPODT.EQ.2) CALL GRGSG9(XJ,D,H,HK,COR,VITL,V3,NCVE,NCVS)
C            CALL WRR(XJ,9,'XJJ0')
C
CS       INVERTOVAN JAKOBIJAN - XJ
CE       INVERSE JACOBIAN - XJ
C
         CALL MINV3(XJ,DET)
         IF(DET.LT.1.D-10) GOTO 900
C            CALL WRR3(XJ,9,'XJ0 ')
         DET0=DET
C
CS       MATRICA TRANSFORMACIJE - FOT (KOVARIJANTNI - GLOBALNI DEKARTOV) 
CE       TRANSFORMATION MATRIX - FOT (COVARIANT - GLOBAL CARTESIAN)
C
         CALL TRANSE(FOT,XJ)
C
      ENDIF 
C
C
CS    P E T L J A    P O    S L O J E V I M A
CE    L O O P    O V E R    L A Y E R S
C
C
      IPGCT=IPGC(NSEG)
      MAT=IMAT(NSEG)
      GUST=GUSM(NMODM,MAT)
      MST=MAT
      NNSL=1
      IF(MSET.GT.0) THEN
         NNSL=NSLOJ(MST)
C         COEFE(1)=CFS(1,MST)
C         COEFE(2)=CFS(2,MST)
         TTT=-1.D0
      ENDIF
C
      DO 25 MSL=1,NNSL
C
         IF(MSET.GT.0) THEN
            BETA=BBET (MSL,MST)
            IF(IBB0.EQ.1) BETA=BETA+BET0(NLM)
            IF(MODORT(NMODM).EQ.1)  CALL STBET9(TBETA,BETA)
            DDD =DSLOJ(MSL,MST)
            TTT =TTT+2.D0*DDD
            MAT =MATSL(MSL,MST)
         ENDIF   
C
         GO TO (  1,  2,999,940,999,999,999,999,999,940,
     1          999,999,999,999,999,999,940,940,940,999,
     2          940,999,999,999,999,999,999,999,999,999,
     3          999,999,999,999,999,999,999,999,999,999,
     4          999,999,999,999,999,999,999,999,999,999,
     5          999,999,999,999,999,999,999,999,999,999,
     6          999,999,999,999,999,999,999,999,999,999,
     7          999,999,999,999,999,999,999,999,999,999,
     8          999,999,999,999,999,999,999,999,999,999,
     9          999,999,999,999,999,999,999,999,999,999),NMODM
C
    1    CALL MEL91(A(LFUN),COEFE,ETP,1,IND3D)
         GO TO 999
C
    2    CALL MEL92(A(LFUN),COEFE,ETP,TBETA,BETA,1,IND3D)
CS    MATRICA TRANSFORMACIJE
C      IF(IBB0.EQ.1) THEN
C        IF(IATYP.GT.1) THEN
C           CALL JACTE3(NOP,CORD,HE,R,S,T,0)
C           CALL TRANA9(XJJ,TSS,0)
C           CALL MNOZM1(TSG,TSGE(1,1,NLM),TSS,6,6,6)
C        ENDIF
C      ELSE
C         IF(IATYP.EQ.0.OR.IATYP.EQ.1) THEN
CC            CALL JEDNA1(TSG,TSGE(1,1,NLM),36)
C         ELSE
       IF(IPODT.EQ.2) CALL GRGSG9(XJJ,D,H,HK,COR,VITL,V3,NCVE,NCVS)
            CALL TRANA9(XJJ,TSS,0)
            CALL MNOZM1(TE,TBETA,TSS,6,6,6)
C         ENDIF
C      ENDIF
      CALL TRAETP(ETP,ETP,TE)
      GO TO 999
C
CS    MATRICA TRANSFORMACIJE
  940 IF(IBB0.EQ.1) THEN
C        IF(IATYP.GT.1) THEN
C           CALL JACTE3(NOP,CORD,HE,R,S,T,0)
C           CALL TRANA9(XJJ,TSS,0)
C           CALL MNOZM1(TSG,TSGE(1,1,NLM),TSS,6,6,6)
C        ENDIF
      ELSE
C         IF(IATYP.EQ.0.OR.IATYP.EQ.1) THEN
CC            CALL JEDNA1(TSG,TSGE(1,1,NLM),36)
C         ELSE
       IF(IPODT.EQ.2) CALL GRGSG9(XJJ,D,H,HK,COR,VITL,V3,NCVE,NCVS)
            CALL TRANA9(XJJ,TSS,0)
C       CALL WRR(TSS,36,'TSS ')
            CALL MNOZM1(TE,TBETA,TSS,6,6,6)
C       CALL WRR(TE,36,'TE  ')
C         ENDIF
      ENDIF
C
CS       PETLJA PO GAUSOVIM TACKAMA 
CE       LOOP OVER GAUSS POINTS
C
 999     IF(INDSEL.EQ.1) THEN
            NGAUXX=NGAUSX
            NGAUYY=NGAUSY
            NGAUZZ=NGAUSZ
            IALFAA=IALFA
C            NGAUSX=1
            NGAUSY=1
            NGAUSZ=1
            IALFA=-1
         ENDIF
         GO TO 997
 998     NGAUSX=NGAUXX
         NGAUSY=NGAUYY
         NGAUSZ=NGAUZZ
         IALFA=IALFAA
 997     JG=0
         NGAUSU=NGAUSX*NGAUSY*NGAUSZ
C
         DO 20 NGR=1,NGAUSX
            JGR=NREF(NGAUSX)+NGR
            IF(INCOTX.EQ.0)THEN
               R =XG (JGR)
               WR=WGT(JGR)
            ELSE
               R =XNC(JGR)
               WR=WNC(JGR)
            ENDIF
            IF(MSET.GT.0) THEN
               R =TTT-DDD*(1.D0-R)
               WR=DDD*WR
            ENDIF
C
         DO 20 NGS=1,NGAUSY
            JGR=NREF(NGAUSY)+NGS
            IF(INCOTY.EQ.0)THEN
               S =XG (JGR)
               WS=WGT(JGR)
            ELSE
               S =XNC(JGR)
               WS=WNC(JGR)
            ENDIF
C ... INTERPOLACIJSKE FUNKCIJE
            IF(IPODT.EQ.1) CALL INTER9(HM,S,NCVS)
C
         DO 20 NGT=1,NGAUSZ
            JGR=NREF(NGAUSZ)+NGT
            IF(INCOTZ.EQ.0)THEN
               T =XG (JGR)
               WT=WGT(JGR)
            ELSE
               T =XNC(JGR)
               WT=WNC(JGR)
            ENDIF
C ... INTERPOLACIJSKE FUNKCIJE
            CALL INTER9(HK,T,NCVE)
C     IF(IST.EQ.0) CALL WRR(HK,6,'HK  ')
            JG=JG+1
C      WRITE(3,*) 'NGAUSU,JG,R,S,T,THA',NGAUSU,JG,R,S,T,THA
C       IF(JG.EQ.1)
C     +    WRITE(3,*) 'NSEG,NGR,NGS,NGT,R,S,T',NSEG,NGR,NGS,NGT,R,S,T
C
CS          INTERPOLACIJSKE FUNKCIJE U TACKI R, S, T
CE          INTERPOLATED FUNCTIONS IN R,S,T POINT
C
            IF(IPODT.EQ.2) CALL INTER2(H,R,S,NOS,NS,NSEG,NCVS)
C     IF(IST.EQ.0.AND.IPODT.EQ.1) CALL WRR(HM,6,'HM  ')
C     IF(IST.EQ.0.AND.IPODT.EQ.2) CALL WRR(H,27,'H   ')
C
CS          JAKOBIJAN U TACKI R, S, T
CE          JACOBIAN MATRIX IN R,S,T POINT
C
      IF(IPODT.EQ.0)CALL GRGS09(XJ,D,HK,COR,VITL,V3,VR,R,VS,S,NCVE,NCVS)
       IF(IPODT.EQ.1) CALL GRGS19(XJ,D,HM,HK,COR,VITL,V3,VR,R,NCVE,NCVS)
       IF(IPODT.EQ.2) CALL GRGSG9(XJ,D,H,HK,COR,VITL,V3,NCVE,NCVS)
            CALL JEDNA1(XJJ,XJ,9)
C          CALL WRR3(XJJ,9,'XJJ ')
C
CS          INVERTOVAN JAKOBIJAN - XJ
CE          INVERSE JACOBIAN - XJ
C
            CALL MINV3(XJ,DET)
C         WRITE(3,*) 'DET',DET
C         IF(IST.EQ.0) CALL WRR(VR,3*NCVS*NCVE,'VR  ')
C         IF(IST.EQ.0) CALL WRR(VS,3*NCVS*NCVE,'VS  ')
C         IF(IST.EQ.0) CALL WRR(V3,27,'V3G ')
C         IF(IST.EQ.0) CALL WRR(D,3,'D   ')
C         IF(IST.EQ.0) CALL WRR(XJ,9,'XJ  ')
            IF(DET.LT.1.D-10) GOTO 900
C
            IF(KOZOVE.EQ.5) GO TO 70
C
CS          TEMPERATURA, GLOBALNE KOORDINATE GAUSOVE TACKE
CE          TEMPHERATURE AND GLOBAL COORDINATES OF GAUSS POINT
C
            IF(ICORGT.EQ.1) CALL JEDNA1(CORGT(1,JG,NLM),D,3)
            IF(ITERME.EQ.1)
     1      CALL JACGA9(NOP,A(LTECV),HK,TGT,NE,NCVE,NLM)
            IF(ITERME.EQ.1) TEMGT(JG,NLM)=TGT
C
CS    MATRICA TRANSFORMACIJE - TST (KOVARIJANTNI - GLOBALNI DEKARTOV) 
CE    TRANSFORMATION MATRIX - TST (COVARIANT - GLOBAL CARTESIAN)
C
            CALL TRANSE(TRLN,XJ)
C          CALL WRR6(TRLN,36,'TRLN')
C
          IF(IALFA.GE.0) THEN
               DETT=DET0/DET
C                WRITE(3,*) 'DET0,DET',DET0,DET
C
CS             FORMIRANJE MATRICE - E (KOVARIJANTNA)
CE             FORM MATRIX - E (COVARIANT)
C
               IF(IPODT.EQ.0) THEN
                  IF(IALFA.LT.5) THEN
                     IF(IND3D.EQ.0) THEN
                        DET1=0.D0
                        DET2=0.D0
C                        DET1=DETT*DSQRT(COEFE(1))
C                        DET2=DETT*DSQRT(COEFE(2))
                     ELSE
                        DET1=DETT
                        DET2=DETT
                     ENDIF
                     EKOR(3,1)=-T*XJJ(3,1)*DETT
                     EKOR(3,2)=-T*XJJ(3,2)*DETT
                     EKOR(3,3)=-T*XJJ(3,3)*DETT
                     EKOR(5,1)=-T*XJJ(2,1)*DET1
                     EKOR(5,2)=-T*XJJ(2,2)*DET1
                     EKOR(5,3)=-T*XJJ(2,3)*DET1
                     EKOR(6,1)=-T*XJJ(1,1)*DET2
                     EKOR(6,2)=-T*XJJ(1,2)*DET2
                     EKOR(6,3)=-T*XJJ(1,3)*DET2
                  ENDIF
                  IF(IALFA.NE.3) THEN
C STARO
C                    X1L=VITL(1,1,1)+R*VR(1,1,1)+S*VS(1,1,1)
C                    X2L=VITL(2,1,1)+R*VR(2,1,1)+S*VS(2,1,1)
C                    V3GT=V3(1,3,1)*XJJ(3,1)+V3(2,3,1)*XJJ(3,2)+
C    1                    V3(3,3,1)*XJJ(3,3)
C                    AST=(X2L*VS(1,1,1)+X1L*VS(2,1,1))*V3GT
C                    ART=(X2L*VR(1,1,1)+X1L*VR(2,1,1))*V3GT
C                    BST=(3.*X1L*X1L*X2L*VS(1,1,1)+
C    1                       X1L*X1L*X1L*VS(2,1,1)-
C    1                       X2L*X2L*X2L*VS(1,1,1)-
C    1                    3.*X1L*X2L*X2L*VS(2,1,1))*V3GT
C                    BRT=(3.*X1L*X1L*X2L*VR(1,1,1)+
C    1                       X1L*X1L*X1L*VR(2,1,1)-
C    1                       X2L*X2L*X2L*VR(1,1,1)-
C    1                    3.*X1L*X2L*X2L*VR(2,1,1))*V3GT
C NOVO
                     X1L=VITL(1,1,1)+R*VR(1,1,1)
                     X2L=VITL(2,1,1)+S*VS(2,1,1)
                     V3GT=XJJ(3,1)*XJJ(3,1)+XJJ(3,2)*XJJ(3,2)+
     1                    XJJ(3,3)*XJJ(3,3)
                     V3GT=DSQRT(V3GT)
                     AST=THA*THB*X1L*V3GT
                     ART=THA*X2L*V3GT
                     BST=THA*THB*X1L*(X1L*X1L-3.*X2L*X2L)*V3GT
                     BRT=THA*X2L*(3.*X1L*X1L-X2L*X2L)*V3GT
                     IF(IALFA.EQ.4) THEN
                        EKOR(5,4)=AST
                        EKOR(6,4)=ART
                        EKOR(5,5)=BST
                        EKOR(6,5)=BRT
                     ENDIF
                     IF(IALFA.EQ.5) THEN
                        EKOR(5,1)=AST
                        EKOR(6,1)=ART
                        EKOR(5,2)=BST
                        EKOR(6,2)=BRT
                     ENDIF
C                CALL WRR(VR,3*NCVS*NCVE,'VR  ')
C                CALL WRR(VS,3*NCVS*NCVE,'VS  ')
C                CALL WRR(VITL,3*NCVS*NCVE,'VITL')
C                CALL WRR(V3,9*NCVE,'V3  ')
C                CALL WRR(XJJ,9,'XJJ ')
C                WRITE(3,*) 'X1L,X2L,V3GT',X1L,X2L,V3GT
C                WRITE(3,*)'A,B',EKOR(5,4),EKOR(5,5),EKOR(6,4),EKOR(6,5)
C                CALL WRR(EKOR,6*LA,'EKOR')
                  ENDIF
               ENDIF
               IF(IPODT.EQ.1) THEN
                  IF(IALFA.NE.3) THEN
                     EKOR(2,1)=S*DETT
                     EKOR(3,2)=T*DETT
                     EKOR(5,3)=S*DETT
                     EKOR(5,4)=T*DETT
                     IF(IALFA.EQ.2) THEN
                        EKOR(2,5)=S*T*DETT
                        EKOR(3,5)=-S*T*DETT
                        EKOR(5,5)=(S*S-T*T)*DETT
                     ENDIF
                  ENDIF
                  IF(IALFA.EQ.3) THEN
                     EKOR(2,1)=-S*XJJ(2,1)*DETT
                     EKOR(2,2)=-S*XJJ(2,2)*DETT
                     EKOR(2,3)=-S*XJJ(2,3)*DETT
                     EKOR(3,4)=-T*XJJ(3,1)*DETT
                     EKOR(3,5)=-T*XJJ(3,2)*DETT
                     EKOR(3,6)=-T*XJJ(3,3)*DETT
                     EKOR(4,1)=-S*XJJ(1,1)*DETT
                     EKOR(4,2)=-S*XJJ(1,2)*DETT
                     EKOR(4,3)=-S*XJJ(1,3)*DETT
                     EKOR(5,1)=-S*XJJ(3,1)*DETT
                     EKOR(5,2)=-S*XJJ(3,2)*DETT
                     EKOR(5,3)=-S*XJJ(3,3)*DETT
                     EKOR(5,4)=-T*XJJ(2,1)*DETT
                     EKOR(5,5)=-T*XJJ(2,2)*DETT
                     EKOR(5,6)=-T*XJJ(2,3)*DETT
                     EKOR(6,4)=-T*XJJ(1,1)*DETT
                     EKOR(6,5)=-T*XJJ(1,2)*DETT
                     EKOR(6,6)=-T*XJJ(1,3)*DETT
                  ENDIF
               ENDIF
               IF(IPODT.EQ.2) THEN
                  IF(IALFA.NE.3) THEN
                     EKOR(1,1)=R*DETT
                     EKOR(2,2)=S*DETT
                     EKOR(3,3)=T*DETT
                     EKOR(4,4)=R*DETT
                     EKOR(5,5)=S*DETT
                     EKOR(6,6)=T*DETT
                     EKOR(6,7)=R*DETT
                     EKOR(4,8)=S*DETT
                     EKOR(5,9)=T*DETT
                     IF(IALFA.EQ.2) THEN
                        EKOR(1,10)=R*S*DETT
                        EKOR(2,10)=-R*S*DETT
                        EKOR(4,10)=(R*R-S*S)*DETT
                        EKOR(5,11)=R*T*DETT
                        EKOR(6,11)=S*T*DETT
                        EKOR(4,12)=R*T*DETT
                        EKOR(6,12)=R*S*DETT
                        EKOR(2,13)=S*T*DETT
                        EKOR(3,13)=-S*T*DETT
                        EKOR(5,13)=(S*S-T*T)*DETT
                        EKOR(4,14)=S*T*DETT
                        EKOR(5,14)=R*S*DETT
                        EKOR(1,15)=-R*T*DETT
                        EKOR(3,15)=R*T*DETT
                        EKOR(6,15)=(T*T-R*R)*DETT
                        EKOR(1,16)=R*S*T*DETT
                        EKOR(4,16)=R*R*T*DETT
                        EKOR(6,16)=R*R*S*DETT
                        EKOR(2,17)=R*S*T*DETT
                        EKOR(4,17)=S*S*T*DETT
                        EKOR(5,17)=R*S*S*DETT
                        EKOR(3,18)=R*S*T*DETT
                        EKOR(5,18)=R*T*T*DETT
                        EKOR(6,18)=S*T*T*DETT
                     ENDIF
                  ENDIF
                  IF(IALFA.EQ.3) THEN
                     EKOR(1,1)=-R*XJJ(1,1)*DETT
                     EKOR(1,2)=-R*XJJ(1,2)*DETT
                     EKOR(1,3)=-R*XJJ(1,3)*DETT
                     EKOR(2,4)=-S*XJJ(2,1)*DETT
                     EKOR(2,5)=-S*XJJ(2,2)*DETT
                     EKOR(2,6)=-S*XJJ(2,3)*DETT
                     EKOR(3,7)=-T*XJJ(3,1)*DETT
                     EKOR(3,8)=-T*XJJ(3,2)*DETT
                     EKOR(3,9)=-T*XJJ(3,3)*DETT
                     EKOR(4,1)=-R*XJJ(2,1)*DETT
                     EKOR(4,2)=-R*XJJ(2,2)*DETT
                     EKOR(4,3)=-R*XJJ(2,3)*DETT
                     EKOR(4,4)=-S*XJJ(1,1)*DETT
                     EKOR(4,5)=-S*XJJ(1,2)*DETT
                     EKOR(4,6)=-S*XJJ(1,3)*DETT
                     EKOR(5,4)=-S*XJJ(3,1)*DETT
                     EKOR(5,5)=-S*XJJ(3,2)*DETT
                     EKOR(5,6)=-S*XJJ(3,3)*DETT
                     EKOR(5,7)=-T*XJJ(2,1)*DETT
                     EKOR(5,8)=-T*XJJ(2,2)*DETT
                     EKOR(5,9)=-T*XJJ(2,3)*DETT
                     EKOR(6,1)=-R*XJJ(3,1)*DETT
                     EKOR(6,2)=-R*XJJ(3,2)*DETT
                     EKOR(6,3)=-R*XJJ(3,3)*DETT
                     EKOR(6,7)=-T*XJJ(1,1)*DETT
                     EKOR(6,8)=-T*XJJ(1,2)*DETT
                     EKOR(6,9)=-T*XJJ(1,3)*DETT
                  ENDIF
               ENDIF
C
CS             FORMIRANJE MATRICE - G (GLOBALNI DEKARTOV)
CE             FORM MATRIX - G (GLOBAL CARTESIAN)
C
               CALL MNOZM1(GERS,FOT,EKOR,6,LA,6)
C                IF(JG.EQ.1) CALL WRR(EKOR,6*LA,'EKOR')
C                IF(JG.EQ.1) CALL WRR(GERS,6*LA,'GERS')
            ENDIF
C
CS          KOREKCIJA SMICANJA ZA MATERIJALE ZAVISNE OD FIZICKOG STANJA
CE          SHEAR CORECTION 
C
C ???????? OVO PROVERI ZASTO NMODM.EQ.3 I ZASTO NE NMODM.EQ.10
C           IF(MSET.GT.0.AND.(NMODM.EQ.3.OR.NMODM.EQ.4).AND.IPODT.NE.2)
C    1      CALL  SMICC (DSLOJ,MATSL,COEFE,TGT,MST,NNSL,
C    1                   NMODM,LFUN,LNTA,LTEM,MATE)
C
CS          FORMIRANJE KONSTITUITIVNE MATRICE
CE          CONSTITUITIVE MATRIX
C
            GO TO ( 70, 70,  3,  4,  5,  5,  5,  5,  5,  5,
     1               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     2               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     3               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     4               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     5               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     6               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     7               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     8               5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
     9               5,  5,  5,  5,  5,  5,  5,  5,  5,  5),NMODM
C
    3     CALL MEL93(A(LFUN),A(LNTA),A(LTEM),MATE,TGT,COEFE,ETP,1,IND3D)
            GO TO 70
C
    4     CALL MEL94(A(LFUN),A(LNTA),A(LTEM),MATE,TGT,
     1               COEFE,ETP,TBETA,BETA,1,IND3D)
CS          MATRICA TRANSFORMACIJE
            CALL TRAETP(ETP,ETP,TE)
            GO TO 70
C
    5       IBTC=IBTC+1
            IRAC=2
            NPROS=(NNXYZ+IBTC)*MODPRO( NMODM )*IDVA
            LPLAS=LPLAST+NPROS     
            LPLA1=LPLAS1+NPROS
           CALL MDMAT4(STRAIN,TA,NMODM,IRAC,LPLAS,LPLA1,IND3D,TGT,INTGL)
C
   70       WTU=WR*WS*WT*DET
C           SAMO ZA ELASTICNE MATERIJALE LOKALNA MATRICA ELAST
            IF(NMODM.LT.5) CALL JEDNA1(ELAST,ETP,36)
C            IF(JG.EQ.1) CALL WRR6(ELAST,36,'ELAL')
C           FORMIRANJE VEKTORA H ZA MATRICU MASA
            WD=WTU*GUST
            DO 149 I=1,NCVE
               AMASC(I)=AMASC(I)+HK(I,1)*WD
  149       CONTINUE
            IF(KOZOVE.EQ.5) GO TO 20
            IF(KOR.EQ.1.AND.ITER.EQ.0.AND.INDZS.GT.0.AND.ISKNP.NE.2)THEN
               ZAPRE=ZAPRE+WTU
               AMASA=AMASA+WD
            ENDIF
C
CS          FORMIRANJE MATRICE BL0 LINEARNO U GLOBALNOM DEKARTOVOM
CE          FORM LINEAR BL0 MATRIX 
C
C            IF(INDSEL.EQ.1) CALL CLEAR(BTT,6*NCVN)
            CALL CLEAR(BTT,6*NCVN)
            IF(IATYP.GT.1) CALL CLEAR(BNL,9*NCVN)
            IF(IPODT.EQ.0) THEN 
C
CS    MATRICE BM, BB I BS U GAUS TACKI R, S I T U KOVARIJANTNOM SISTEMU
CS    FORMIRANJE MATRICE B LINEARNO - BLT
CE    MATRIX BM, BB I BS IN GAUSS POINT R, S I T IN COVARIANT SISTEM
CE    FORM LINEAR B MATRIX - BLT 
C
               CALL BETB09(BTT,XJJ,HK,VITL,V3,VR,R,VS,S,NCVE,NCVS,NCVJJ,
     1                     BNL,IATYP,IND3D)
C
CS    TRANSFORMACIJA MATRICE - BLT (KOVARIJANTNI - GLOBALNI DEKARTOV) 
CE    TRANSFORM MATRIX - BLT (COVARIANT - GLOBAL CARTESIAN)
C
               CALL TRANS4(BTT,TRLN,NCVN)
            ENDIF
            IF(IPODT.EQ.1) THEN
               IF(INDKOV.LT.0) THEN
                 CALL BETB19(BTT,XJJ,HM,HK,VITL,V3,VR,R,VS,VZ,
     1                       NCVE,NCVS,NCVJJ,BNL,IATYP,IND3D)
C          CALL WRR6(BTT,6*NCVN,'BKOV')
C
CS    TRANSFORMACIJA MATRICE - BLT (KOVARIJANTNI - GLOBALNI DEKARTOV) 
CE    TRANSFORM MATRIX - BLT (COVARIANT - GLOBAL CARTESIAN)
C
                 CALL TRANS4(BTT,TRLN,NCVN)
               ELSE
                 CALL BETB19(BTT,XJ,HM,HK,VITL,V3,VR,R,VS,VZ,
     1                       NCVE,NCVS,NCVJJ,BNL,IATYP,IND3D)
               ENDIF
            ENDIF
            IF(IPODT.EQ.2) 
     1      CALL BETBE9(BTT,XJ,H,HK,VITL,V3,NCVE,NCVS,NCVJJ,BNL,IATYP)
C          CALL WRR3(VR,NCVV,'VRB ')
C         IF(IST.EQ.0.AND.JG.EQ.1) CALL WRR(VITL,3*NCVS*NCVE,'VITL')
C         IF(IST.EQ.0.AND.JG.EQ.1) CALL WRR(V3,9*NCVE,'V3  ')
C         IF(IST.EQ.0.AND.JG.EQ.1)  CALL WRR(XJ,9,'XJ  ')
C          IF(JG.EQ.1) CALL WRR6(BTT,6*NCVN,'BTT0')
C
CS          FORMIRANJE MATRICE BL1 LINEARNO
CE          FORM LINEAR BL1 MATRIX
C
C            IF(IATYP.EQ.2) CALL BETL13(BLT,NOP,LM,RTDT,STRAIN,0)
C
C
CS          PREBACIVANJE ROTACIJA IZ LOKALNOG U GLOBALNI SISTEM
CS          TRANSFORMACIJA MATRICE - BLT ZA LOKALNI SISTEM CVORA
CE          TRANSFORM MATRIX - BLT FOR LOCAL NODAL SISTEM
C
            CALL TRAB9(BTT,6,TTR,NCVE,NCVJJ)
C            IF(JG.EQ.1) CALL WRR6(BTT,6*NCVN,'BTT ')
C           PROVERI ZA IF(IATYP.EQ.2) - TTR TREBA DA BUDE POCETNO 
            IF(IATYP.GT.1)
     1      CALL TRAB9(BNL,9,TTR,NCVE,NCVJJ)
C
CS    MATRICA TRANSFORM. DEFORMACIJA - TSG (GLOBALNI - LOKALNI DEKARTOV)
CE    STRAIN TRANSFORMATION MATRIX - TSG (GLOBAL - LOCAL CARTESIAN) 
C
C           CALL WRR3(XJJ,9,'XJJ ')
            CALL JEDNA1(XJ0,XJJ,9)
            CALL TRANA9(XJ0,TSG,0)
C           CALL WRR3(XJ0,9,'XJ1 ')
C           CALL WRR6(TSG,36,'TSG ')
C
         IF(ISKNP.NE.1) THEN
C
CS          RACUNANJE DEFORMACIJA U GLOBALNOM DEKARTOVOM
CE          CALCULATE STRAINS IN GLOBAL CARTESIAN 
C
            CALL CLEAR(STRAIN,6)
C
CS          LINEARNOST I M.N.O.
CE          LINEAR PART AND M.N.O.
C
            IF(IATYP.EQ.0.OR.IATYP.EQ.1)
     1      CALL MNOZI1(STRAIN,BTT,VOP,6,NCVN)
C
CS         GEOMETRIJSKA NELINEARNOST - UKUPNE DEFORMACIJE ZA T.L. I U.L.
CE          GEOMETRICAL NONLINEARITY - TOTAL STRAIN FOR T.L. AND U.L.
C
            IF(IATYP.EQ.2.OR.IATYP.EQ.3)
     1      CALL UKDEF9(COR,VITL,V3,CON,VIT0,V0,UEL,H,HK,HM,VR,R,VS,S,
     1                  STRAIN,TRLN,TSS,IATYP,NCVE,NCVS,IPODT)
C          CALL WRR6(TSS,36,'TSS ')
C          CALL WRR6(STRAIN,6,'STRA')
C         IF(IATYP.EQ.2) CALL BETL13(BLT,NOP,LM,RTDT,STRAIN,1)
C         IF(IATYP.EQ.3) CALL STRUL3(BLT,NOP,LM,RTDT,STRAIN)
C
CS       VELIKE DEFORMACIJE
CE       LARGE STRAIN
C
         IF(IATYP.GE.4) THEN
C
CS          STARO - Be, Cp**-1, Fp
CE          STRESS(6): OLD - Be, Cp**-1
CE          GRAP(3,3): OLD - Fp
C
            IF(ILEDE.EQ.0.AND.ICPM1.LE.1) THEN
               CALL JEDNA1(STRESS,TAU(NS45+1,JG,NLM,1),NLD)
C               IF(IST.EQ.1) CALL WRR(STRESS,NLD,'BOLD')
            ENDIF
C DA BI OVO RADILO TREBA RANIJE REZERVISATI 9 MESTA!!!            
            IF(ILEDE.EQ.1.OR.(ILEDE.EQ.0.AND.ICPM1.EQ.2)) THEN 
               CALL JEDNA1(GRAP,TAU(NS45+1,JG,NLM,1),NLD)
CE             Fp**-1
               CALL MINV3(GRAP,DUM)
C               IF(IST.EQ.1) CALL WRR(GRAP,NLD,'BOLD')
            ENDIF
C
CS          JAKOBIJEVA MATRICA U TACKI (R,S,T) U TRENUTKU - T,0
CE          JACOBIAN MATRIX IN POINT (R,S,T) IN TIME - T,0
C
      IF(IPODT.EQ.0)
     1CALL GRGS09(XJT,D,HK,CORT,VITT,VT,VR,R,VS,S,NCVE,NCVS)
      IF(IPODT.EQ.1)CALL GRGS19(XJT,D,HM,HK,CORT,VITT,VT,VR,R,NCVE,NCVS) 
      IF(IPODT.EQ.2) CALL GRGSG9(XJT,D,H,HK,CORT,VITT,VT,NCVE,NCVS)
C
      IF(IPODT.EQ.0)
     1CALL GRGS09(XJ0,D,HK,CON,VIT0,V0,VR,R,VS,S,NCVE,NCVS)
      IF(IPODT.EQ.1)CALL GRGS19(XJ0,D,HM,HK,CON,VIT0,V0,VR,R,NCVE,NCVS) 
      IF(IPODT.EQ.2) CALL GRGSG9(XJ0,D,H,HK,CON,VIT0,V0,NCVE,NCVS)
C            CALL GRGSG9(CORT,XJT,HE,NCVE)
C
CS          INVERTOVAN JAKOBIJAN - XJT, XJ0
CE          INVERSE JACOBIAN - XJT, XJ0
C
            CALL MINV3(XJT,DUM)
C            IF(DUM.LT.1.D-10) GOTO 900
            CALL MINV3(XJ0,DUM)
C            IF(DUM.LT.1.D-10) GOTO 900
C
CS          INKOMPATIBILNE DEFORMACIJE
CE          GRAN(3,3): DEFORMATION GRADIENT OF INCOMPATIBILE DISPLACEMENT
CE                     FOR LARGE STRAIN (IT DOES NOT WORK PROPERLY, YET)!?
            IF(IALFA.GE.0) THEN
               GRAD(1,1)=-R*ALFE(1,NLM)
               GRAD(2,1)=-R*ALFE(2,NLM)
               GRAD(3,1)=-R*ALFE(3,NLM)
               GRAD(1,2)=-S*ALFE(4,NLM)
               GRAD(2,2)=-S*ALFE(5,NLM)
               GRAD(3,2)=-S*ALFE(6,NLM)
               GRAD(1,3)=-T*ALFE(7,NLM)
               GRAD(2,3)=-T*ALFE(8,NLM)
               GRAD(3,3)=-T*ALFE(9,NLM)
C OVO PROVERITI
               CALL MNOZM3(GRAN,GRAD,XJT,3,3,3)
C               CALL WRR(GRAN,9,'GRAA')
            ENDIF
C
CS          RACUNANJE GRADIJENTA DEFORMACIJE OD T DO T+DT
CE          CALCULATE DEFORMATION GRADIENT FROM T TO T+DT OR 0 TO T+DT
C
            IF(ILEDE.EQ.0) THEN
               IF(ICPM1.EQ.0) CALL MNOZM4(GRAD,XJJ,XJT,3,3,3)
               IF(ICPM1.GE.1) CALL MNOZM4(GRAD,XJJ,XJ0,3,3,3)
            ENDIF
            IF(ILEDE.EQ.1) CALL MNOZM4(GRAD,XJJ,XJ0,3,3,3)
c            IF(IST.EQ.1) CALL WRR3(XJJ,9,'XJJ ')
c            IF(IST.EQ.1) CALL WRR3(XJT,9,'XJT ')
c            IF(IST.EQ.1) CALL WRR3(GRAD,9,'GRAD')
            IF(IALFA.GE.0) CALL ZBIRM1(GRAD,GRAN,9)
C
C
CELYK  	 THIS IF-BLOCK HAS NO ACTUAL MEANING, BECAUSE
CELYK  	 THE CONDITIONAL PARAMETER IS EXPLICITLY SET.
CE       IT DOES NOT INFLUENCE SIGNIFICANTLY
         KOREKG=0
         IF(KOREKG.EQ.1) THEN
CS          RACUNANJE NORMIRANOG GRADIJENTA DEFORMACIJE
CE          DETERMINANT (DETG) OF DEFORMATION GRADIENT [GRAD(3,3)]
            CALL DETER3(GRAD,DETG)
CE          DETGM: STORAGE OF MAXIMUM MODIFICATION OF VOLUME
            IF(DETG.GT.DETGM) DETGM=DETG
CS SA KOREKCIJOM
            DETG=DEXP(-1.D0/3.D0*DLOG(DETG))
CS BEZ KOREKCIJE
C            DETG=1.D0
CE          NORMALIZED DEFORMATION GRADIENT T TO T+DT OR 0 TO T+DT
            CALL JEDNAK(GRAN,GRAD,DETG,9)
         ELSE
CE          NON NORMALIZED DEFORMATION GRADIENT T TO T+DT OR 0 TO T+DT
            CALL JEDNA1(GRAN,GRAD,9)
         ENDIF
C            CALL WRR(GRAN,9,'GRAN')
C
CS          RACUNANJE GRADIJENTA DEFORMACIJE OD 0 DO T+DT
CE          CALCULATE DEFORMATION GRADIENT FROM 0 TO T+DT
            CALL MNOZM4(GRAD,XJJ,XJ0,3,3,3)
CE          DETERMINANT (DETG) OF DEFORMATION GRADIENT [GRAD(3,3)]
            CALL DETER3(GRAD,DETG)
            IF(DETG.LT.1.D-15) STOP 'DETG=0, PAK32.FOR'
C            IF(IST.EQ.1) CALL WRR3(XJJ,9,'XJJ ')
C            IF(IST.EQ.1) CALL WRR3(XJ0,9,'XJ0 ')
C            IF(IST.EQ.1) CALL WRR3(GRAD,9,'GRAD')
C            IF(IST.EQ.1) WRITE(3,*) 'DETG',DETG
C
CS          PROBNI LEVI KOSI-GRINOV TENZOR DEFORMACIJE
CE          TRIAL ELASTIC LEFT CAUCHY-GREEN'S DEFORMATION TENSOR
C           STRESS(6): Be* = Ft * Be * FtT  (ICPM1=0)
C           STRESS(6): Be* = F * (Cp**-1) * FT  (ICPM1=1)
            IF(ILEDE.EQ.0.AND.ICPM1.LE.1) CALL PIOKOS(GRAN,STRESS)
C
CS          RACUNANJE ELASTICNOG GRADIJENTA DEFORMACIJE
CE          TRIAL ELASTIC DEFORMATION GRADIENT
C           GRAE(3,3): Fe = F * Fp**-1
CE          TRIAL ELASTIC LEFT CAUCHY-GREEN'S DEFORMATION TENSOR
C           STRESS(6): Be = Fe * FeT
            IF(ILEDE.EQ.0.AND.ICPM1.EQ.2) THEN
C  GRAD ILI GRAN
               CALL MNOZM1(GRAE,GRAD,GRAP,3,3,3)
               CALL MNOZM3(GRAP,GRAE,GRAE,3,3,3)
               CALL TENVEK(GRAP,STRESS,1)
               CALL JEDNA1(XJ,GRAE,9)
            ENDIF
C
CE          TRIAL ELASTIC DEFORMATION GRADIENT
C           GRAE(3,3): Fe = F * Fp**-1 
CE          TRIAL ELASTIC RIGHT CAUCHY-GREEN'S DEFORMATION TENSOR
C           STRESS(6): Ce = FeT * Fe
            IF(ILEDE.EQ.1) THEN
C  GRAD ILI GRAN
               CALL MNOZM1(GRAE,GRAD,GRAP,3,3,3)
               CALL MNOZM2(GRAP,GRAE,GRAE,3,3,3)
               CALL TENVEK(GRAP,STRESS,1)
               CALL JEDNA1(XJ,GRAE,9)
            ENDIF
C
CS          GLAVNE VREDNOSTI I PRAVCI
CE          PRINCIPAL STRETCHES AND DIRECTIONS
C
CE           PRINC(3): PRINCIPAL VALUES
CE           QP(3,3) : PRINCIPAL DIRECTIONS
CE              IGLPR: INDICATOR FOR RECKONING OF PRINCIPAL DIRECTIONS FOR LARGE STRAINS
CE                     (=0-NO; =1-YES)
C            IF(IST.EQ.1) CALL WRR6(STRESS,6,'BECE')
            IF(IGLPR.EQ.1) THEN
               CALL GLAVN(STRESS)
               CALL GLAPR3(STRESS,QP)
C               IF(IST.EQ.1) CALL WRR3(PRINC,3,'PP  ') 
C               IF(IST.EQ.1) CALL WRR3(QP,9,'QP  ') 
            ENDIF
C
CS          PROBNE ELASTICNE DEFORMACIJE
CE          TRIAL ELASTIC STRAIN
C
CELYK       IATYP=4: LARGE STRAIN - ROTATED GREEN LAGRANGE
            IF(IATYP.EQ.4) THEN
               IF(IGLPR.EQ.1) THEN
                  CALL CLEAR(STRESS,6)
                  STRESS(1)=PRINC(1)
                  STRESS(2)=PRINC(2)
                  STRESS(3)=PRINC(3)
               ENDIF
C              E* = .5 * ( Be* - I )
               CALL UKDEFV(STRAIN,STRESS)
            ENDIF
C
CELYK       IATYP=5: LARGE STRAIN - ROTATED LOGARITHMIC
            IF(IATYP.EQ.5) THEN
CS             GLAVNE VREDNOSTI
CS             LAMBDA
CE             P1,P2,P3: PRINCIPAL STRECHES
               P1=DSQRT(PRINC(1))
               P2=DSQRT(PRINC(2))
               P3=DSQRT(PRINC(3))
C               IF(IST.EQ.1) WRITE (3,*) 'L1,L2,L3',P1,P2,P3
CE             LOGARITHMIC STRAIN
               STRAIN(1)=DLOG(P1)
               STRAIN(2)=DLOG(P2)
               STRAIN(3)=DLOG(P3)
            ENDIF
C
CS          TRANSFORMACIJA DEFORMACIJA: GLAVNI PRAVCI - DEKARTOV SISTEM
CE          TRANSFORMATION OF STRAINS: PRINCIPAL DIRECTIONS - GLOBAL CARTESIAN
CE          INTGL:INTEGRATING INDICATOR FOR LARGE STRAINS
CE                (=0-IN PRINCIPAL DIRECTIONS (e.g. PAK3406.FOR);
CE                 =1-IN GLOBAL CARTESIAN COORDINATE SYSTEM (e.g. PAK3406K.FOR))
            IF(IGLPR.EQ.1) THEN
               IF(INTGL.EQ.1) CALL DIJADS(QP,STRAIN)
CE             ENGINEERING SHEAR STRAINS
               STRAIN(4)=2.D0*STRAIN(4)
               STRAIN(5)=2.D0*STRAIN(5)
               STRAIN(6)=2.D0*STRAIN(6)
            ENDIF
C            IF(IST.EQ.1) CALL WRR3(STRAIN,6,'STDE')
         ENDIF
CELYK    END OF LARGE STRAIN IF-BLOCK
CELYK    ASSOCIATED WITH SPIN TENSOR IN FINITE STRAIN FORMULATION
C
CS       INKOMPATIBILNE DEFORMACIJE U GLOBALNOM DEKARTOVOM
CE       INCOMPATIBILE STRAIN
C
         IF(IALFA.GE.0) CALL MNOZI1(STRAIN,GERS,ALFE(1,NLS),6,LA)
C         CALL WRR(STRAIN,6,'DEFO')
C
CS       TRANSFORMACIJA DEFORMACIJA (GLOBALNI - LOKALNI DEKARTOV)
CE       TRANSFORM STRAIN (GLOBAL - LOCAL CARTESIAN) 
C
C         IF(IPODT.EQ.0.OR.IPODT.EQ.1) THEN
         IF(IND3D.LT.2.OR.IPODT.EQ.0.OR.IPODT.EQ.1) THEN
            CALL CLEAR(TA,6) 
            CALL MNOZI1(TA,TSG,STRAIN,6,6)
            IF(IPODT.EQ.0.OR.IPODT.EQ.1) TA(1)=0.D0
            IF(IPODT.EQ.0) TA(2)=0.D0
            CALL JEDNA1(STRAIN,TA,6)
         ENDIF
C
CS       TERMICKE DEFORMACIJE   ETH=ALFA*(T-T0)
CE       THERMAL STRAINS
C
         IF(NMODM.EQ.3.OR.NMODM.EQ.4) THEN
            DTGT0=TGT-TEMP0
            IF(IPODT.EQ.2) THEN
               STRAIN(1)=STRAIN(1)-ALFA(1)*DTGT0
               STRAIN(2)=STRAIN(2)-ALFA(2)*DTGT0
               STRAIN(3)=STRAIN(3)-ALFA(3)*DTGT0
            ENDIF
            IF(IPODT.EQ.1) THEN
               STRAIN(2)=STRAIN(2)-ALFA(2)*DTGT0
               STRAIN(3)=STRAIN(3)-ALFA(3)*DTGT0
C               IF(NAPON.EQ.1) STRAIN(1)=ALFA(1)*DTGT0
            ENDIF
            IF(IPODT.EQ.0) THEN
               STRAIN(3)=STRAIN(3)-ALFA(3)*DTGT0
C               IF(NAPON.EQ.1) STRAIN(1)=ALFA(1)*DTGT0
C               IF(NAPON.EQ.1) STRAIN(2)=ALFA(2)*DTGT0
            ENDIF
         ENDIF
C         CALL WRR6(STRAIN,6,'STRK')
C
CS       RACUNANJE NAPONA
CE       CALCULATE STRESS 
C
         CALL CLEAR(STRESS,6)
C
         IF(NMODM.LT.5) THEN
C           WRITE(3,*) 'NLM,NSEG,JG,NGE',NLM,NSEG,JG,NGE
C
CS          MATERIJALNA LINEARNOST
CE          MATERIAL LINEAR
C
CS          KOSIJEVI NAPONI U GLOBAL. ILI LOKAL. DEKART. SISTEMU
CE          CAUCHY STRESS IN GLOBAL OR LOCAL CARTESIAN SYSTEM 
C
            CALL MNOZI1(STRESS,ELAST,STRAIN,6,6)
C            CALL WRR6(ELAST,36,'ELAS')
C            CALL WRR6(STRESS,6,'STRE')
C
CS          TRANSFORMACIJA NAPONA NA GLOBALNI SISTEM
CE          TRANSFORM STRESS TO GLOBAL COORDS.
C
C            IF(IPODT.EQ.0.OR.IPODT.EQ.1) THEN
            IF(IND3D.LT.2.OR.IPODT.EQ.0.OR.IPODT.EQ.1) THEN
               CALL CLEAR(TA,6) 
               CALL MNOZI2(TA,TSG,STRESS,6,6)
               IF(ISN.EQ.2) CALL JEDNA1(STRESS,TA,6)
            ELSE
               CALL JEDNA1(TA,STRESS,6)
               DO 21 I=1,6
CS                KOSIJEVI NAPONI U GLOBAL. ILI LOKAL. DEKART. SISTEMU
CE                CAUCHY STRESS IN GLOBAL OR LOCAL CARTESIAN SYSTEM 
                  CALL GLLOKN(TA,TSG,STRESS(I),ISN,I)
   21          CONTINUE
            ENDIF
C            CALL WRR6(TA,6,'TA  ')
C
CS          CISCENJE NUMERICKIH GRESAKA ZA NAPONE
CE          CLEANING NUMERICAL ERRORS FOR STRESS
C
C           IF(IATYP.EQ.0) CALL CISTIN(STRESS,6)
C
            IF(INDSEL.EQ.1) THEN
               IF(NGAUSU.LT.NGS12) THEN
                  CALL JEDNA1(TAUCEN(1,NGR),STRESS,6)
               ELSE
              CALL ZBIR2B(TAU(NS45+1,JG,NLM,MSL),TAUCEN(1,NGR),STRESS,6)
               ENDIF
            ELSE
               CALL JEDNA1(TAU(NS45+1,JG,NLM,MSL),STRESS,6)
            ENDIF
C            IF(NGAUSU.LT.NGS12) CALL WRR6(TAUCEN(1,NGR),6,'TAUC')
C            IF(NGAUSU.LT.NGS12) CALL WRR6(TAUCEN(1,1),6,'TAUC')
C           IF(NAPON.EQ.1) THEN
C           OVDE MOGU DA SE RACUNAJU POPRECNE DEFORMACIJE AKO JE POTREBNO
C           ENDIF
         ELSE
C
C           POCETNI NAPONI
            IF(IPOCET.EQ.1) STRESS(1)=POCET(JG,NSEG)
C
CS          NAPONI ZA PLASTICAN MODEL
CE          STRESS FOR MATERIAL NONLINEARITY 
C
            IRAC=1
C            WRITE(3,*) 'IRAC,NMODM',IRAC,NMODM
C            CALL WRR(A(LPLAS),26,'PLAS')
C            CALL WRR(A(LPLA1),26,'PLA1')
            IF(IPODT.EQ.2.AND.IND3D.LT.2)STOP'IPODT.EQ.2.AND.IND3D.LT.2'
       CALL MDMAT4(STRAIN,STRESS,NMODM,IRAC,LPLAS,LPLA1,IND3D,TGT,INTGL)
C             CALL WRR(STRAIN,6,'STR ')
C             CALL WRR(STRESS,6,'STRE')
C
CS          TRANSFORMACIJA NAPONA NA GLOBALNI SISTEM
CE          TRANSFORM STRESS TO GLOBAL COORDS.
C
            IF(IPODT.EQ.0.OR.IPODT.EQ.1) THEN
               CALL JEDNA1(ELAST,ETP,36)
               IF(ISKNP.NE.2.AND.MODORT(NMODM).EQ.1) THEN
C OVO PROVERITI ZA ANIZOTROPNE GREDE I LJUSKE MOZDA JE URADJENO U MODELU
                  CALL TRAETP(ELAST,ELAST,TE)
               ENDIF
               CALL CLEAR(TA,6) 
               CALL MNOZI2(TA,TSG,STRESS,6,6)
            ELSE
               CALL JEDNA1(TA,STRESS,6)
            ENDIF
C
CS          PROMENA ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORMACIJE
CE          UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR
C
C            IF(NAPON.EQ.1.AND.IATYP.EQ.4) THEN
C               LDEFT1=LPLA1+6*IDVA
C          CALL BE90TE(TAU(NS45+1,JG,NLM,1),TA,GRAD,A(LDEFT1),ISN)
C            ENDIF
C
CS          PROMENA ELASTICNOG LEVOG KOSI - GRINOVOG TENZORA DEFORMACIJE
CE          UPDATE ELASTIC LEFT CAUCHY - GREEN DEFORMATION TENSOR Be
C
C  OVO PROVERITI ????????????????????????????
CE          NAPON: INDICATOR FOR CONVERGENCE OF PROCEDURE (=0-NO;=1-YES)
CELYK       IATYP = 4, ILEDE=1: LARGE STRAIN, GREEN-LAGRANGE TENSOR
CELYK       IATYP = 4, ILEDE=0: LARGE STRAIN, ROTATED GREEN-LAGRANGE TENSOR
CELYK       IATYP = 5, ILEDE=1: LARGE STRAIN, LOGARITHMIC TENSOR
CELYK       IATYP = 5, ILEDE=0: LARGE STRAIN, ROTATED LOGARITHMIC TENSOR
CE          ILEDE: INDICATOR FOR LEFT-HAND OR RIGHT-HAND BASIS FOR LARGE STRAINS
CE                 (=0-LEFT-HAND;=1-RIGHT-HAND)
CE          ICPM1: INDICATOR FOR STORAGE OF MATRIX FOR LARGE STRAINS
C                  [Be (ICPM1=0); Cp**-1 (ICPM1=1); Fp (ICPM1=2)]
CE          NLD  : DIMENSION OF MATRIX FOR STORAGE: 6=(Be, Cp**-1); 9=(Fp)
            IF(NAPON.EQ.1.AND.IATYP.GE.4) THEN
C               CALL WRR6(TAU(1,JG,NLM),NLD,'BST ')
CE             LEFT-HAND BASIS
               IF(ILEDE.EQ.0) THEN
C
CE                STORAGE OF ELASTIC LEFT CAUCHY - GREEN DEFOR. TENS.
CE                STRAIN(6)      : Be
CE                TAU(6,NGS12,NE): Be
                  IF(ICPM1.EQ.0)
     1			CALL JEDNA1(TAU(NS45+1,JG,NLM,1),STRAIN,NLD)
C
CE                STORAGE OF INVERSE PLASTIC RIGHT CACHY-GREEN DEFOR. TENS.
CE                STRAIN(6)      : Be
CE                GRAN(3,3)      : F
CE                TAU(6,NGS12,NE): CP**-1
                  IF(ICPM1.EQ.1) THEN
CS                   TRANSF. ELAS. LEVOG KOSI - GRINOVOG TENZORA DEFOR.
CS                   U DESNI PLASTICNI INVERZNI
CE                   TRANSFORM. ELASTIC LEFT CAUCHY - GREEN DEFOR. TENS.
C                    CP**-1 = F**-1 * Be * F**-T
                     CALL MINV3(GRAN,DUM)
C                     CALL WRR(GRAN,6,'GR-1')
                     CALL PIOKOS(GRAN,STRAIN)
C                     CALL WRR6(STRAIN,6,'CP-1')
C                     CALL WRR6(TAU(NS45+1,JG,NLM,1),6,'BST ')
                     CALL JEDNA1(TAU(NS45+1,JG,NLM,1),STRAIN,6)
C                     CALL WRR6(TAU(NS45+1,JG,NLM,1),6,'BNOV')
CS                    PROVERA PROMENE GLAVNIH PRAVACA ZA NOVO Be
CE                    CHECK OF INFLECTION OF PRINCIPAL DIRECTIONS FOR NEW Be
C                     IF(NLM.EQ.1.AND.JG.EQ.1) THEN
C                        WRITE(3,*) 'NLM,JG,ITER,KOR',NLM,JG,ITER,KOR
C                        CALL WRR3(PRINC,3,'PRI0')
C                        CALL WRR3(QP,9,'QP0 ')
C                        CALL GLAVN(STRAIN)
C                        CALL GLAPR3(STRAIN,QP)
C                        CALL WRR3(PRINC,3,'PRIN')
C                        CALL WRR3(QP,9,'QP  ')
C                     ENDIF
                  ENDIF
               ENDIF
C
CE             STORAGE OF PLASTIC DEFORMATION GRADIENT
CE             TAU(9,NGS12,NE): Fp
               IF(ILEDE.EQ.1.OR.(ILEDE.EQ.0.AND.ICPM1.EQ.2)) THEN 
                  CALL JEDNA1(GRAD,TAU(NS45+1,JG,NLM,1),NLD)
                  P1=DEXP(STRAIN(1))
                  P2=DEXP(STRAIN(2))
                  P3=DEXP(STRAIN(3))
                  CALL DIJAD(GRAN,QP,QP,P1,P2,P3)
CE                Fp=EXP(dEp)*Fp
                  CALL MNOZM1(GRAP,GRAN,GRAD,3,3,3)
                  CALL JEDNA1(TAU(NS45+1,JG,NLM,1),GRAP,NLD)
C
CS                 PROVERA PLASTICNE ROTACIJE
CE                 CHECK OF PLASTIC ROTATION TENSOR Rp (MUST BE Rp=I)
C                  IF(NLM.EQ.1.AND.JG.EQ.1) THEN
C                     WRITE(3,*) 'NLM,JG,ITER,KOR',NLM,JG,ITER,KOR
C                     CALL WRR3(GRAD,9,'GRAD')
C                     CALL WRR3(PRINC,3,'PRI0')
C                     CALL WRR3(QP,9,'QP0 ')
C                     CALL WRR3(GRAP,9,'GRAP')
C                     CALL MNOZM2(GRAN,GRAP,GRAP,3,3,3)
C                     CALL WRR3(GRAN,9,'GRAN')
C                     CALL TENVEK(GRAN,STRESS,1)
C                     CALL GLAVN(STRESS)
C                     CALL GLAPR3(STRESS,QP)
C                     CALL WRR3(PRINC,3,'PRIN')
C                     CALL WRR3(QP,9,'QP  ')
C                     CALL MNOZM3(GRAN,GRAP,GRAP,3,3,3)
C                     CALL WRR3(GRAN,9,'GRA1')
C                     CALL TENVEK(GRAN,STRESS,1)
C                     CALL GLAVN(STRESS)
C                     CALL GLAPR3(STRESS,QP)
C                     CALL WRR3(PRINC,3,'PRI1')
C                     CALL WRR3(QP,9,'QP1 ')
C                  ENDIF
C
CELYK             THIS IF-BLOCK DOESN'T ACTUALLY AFFECT,
CELYK             BECAUSE NAPKO IS EXPLICITLY SET AS 0.
CE                TRANSFORMATION OF STRESSES AND CONSTITUTIVE TENSOR
CE                FROM REFERENT TO CURRENT CONFIGURATION
                  NAPKO=0
                  IF(NAPKO.EQ.1) THEN
                     IF(IATYP.EQ.4.AND.ILEDE.EQ.1) THEN
                        CALL MINV3(GRAP,DETP)
CE                      DETGP: MUST BE ZERO FOR PLASTIC DEFORMATION GRADIENT
                        IF(DETP.GT.DETGP) DETGP=DETP
                        CALL MNOZM1(GRAE,GRAD,GRAP,3,3,3)
CS                      TRANSF. PIOLA KIRKOFOV - KOSIJEV NAPON 
CE                      TRANSFORM. SECOND PIOLA KIRCHHOFF - CAUCHY STRESS
C                       s = F * S * FT
                        CALL PIOKOS(GRAE,TA)
                        CALL CEPMT(ELAST,CT,0)
C                       Cmnop = Fmi Fnj Fok Fpl Cijkl
                        CALL RRRRC(ELAST,CT,GRAE,1)
                     ENDIF
                  ENDIF
               ENDIF
C               IF(IST.EQ.1) CALL WRR6(TAU(NS45+1,JG,NLM,1),NLD,'BNOV')
            ENDIF
C
         ENDIF
C
CELYK    END OF IF-BLOCK FOR STRESS COMPUTATION
C
        IF(NGENL.GT.0.OR.(NZADP.GT.0.AND.ISKNP.EQ.2.AND.NGENL.EQ.0))THEN
C
CS          RACUNANJE UNUTRASNJIH SILA
CE          CALCULATE INTERNAL FORCES
C           r = BT * S 
C
            IF(JEDPP.GT.0) CALL INTEGF(FTD,BTT,TA,LME,-WTU,NCVN,6)
            IF(JEDPP.EQ.0) CALL INTEGF(FTDT,BTT,TA,LM,WTU,NCVN,6)
         IF(NZADP.GT.0.AND.ISKNP.EQ.2.AND.NGENL.EQ.0.AND.JEDPP.GT.0)THEN
C        OVO TREBA PROVERITI DA LI JE POTREBNO ZA LINEARNU ANALIZU
                  DO 142 I=1,JEDNN
                     IF(LMU(I).EQ.0) STOP ' LMU'
                     J=LMU(I)
                     FTDT(J)=FTDT(J)-FTD(JEDPP+I)
  142             CONTINUE
            ENDIF
C
         ENDIF
C
CS       INTEGRACIJA VEKTORA - h
CE       INTEGRATE VEKTOR - h
C        h = GT * S
C
         IF(NGENL.GT.0.AND.IALFA.GE.0) 
     +   CALL INTEV2(HAEM(1,NLS),GERS,TA,WTU,LA,6)
C
         IF(IPG.GT.0.AND.NSILA.GT.0) THEN
            CALL JEDNAK(STRAIN,TA,WTU,6)
            CALL MNOZI2(ESILA(1,IPG),BTT,STRAIN,ND,6)
         ENDIF
C
      ENDIF
C
C
CS    INTEGRACIJA MATRICE KRUTOSTI ELEMENTA - SKE
CE    INTEGRATE ELEMENT STIFFNESS MATRIX - SKE
C     SKE = BT * C * B
C
C
      IF(ISKNP.EQ.2) GO TO 20
C
CS    TRANSFORM. MATRICE ELAST. - ETP (LOKALNI - GLOBALNI DEKART.)
CE    TRANSFORM ELASTICITY MATRIX - ETP (LOCAL - GLOBAL CARTESIAN)
C
C          CALL WRR6(ELAST,36,'ELAP')
C            IF(IPODT.EQ.0.OR.IPODT.EQ.1) THEN
            IF(IND3D.LT.2.OR.IPODT.EQ.0.OR.IPODT.EQ.1) THEN
               CALL TRAETP(ELAST,ELAST,TSG)
            ENDIF
C
C          IF(JG.EQ.1) CALL WRR6(TSG,36,'TSG ')
C          IF(JG.EQ.1) CALL WRR6(ELAST,36,'ELAK')
C          IF(JG.EQ.1) CALL WRR6(BTT,6*NCVN,'BTTK')
C          IF(JG.EQ.1) WRITE(3,*) 'NLM,NSEG,WTU',NLM,NSEG,WTU
C          IF(JG.EQ.1) CALL IWRR(LME,NCVN,'LME ')
         CALL INTEGK(SKE,BTT,ELAST,LME,WTU,NCVN,6)
C          CALL WRR6(SKE,NWE,'SKE ')
C
CS    GEOMETRIJSKI NELINEARAN DEO MATRICE KRUTOSTI
CE    GEOMETRIC NONLINEAR PART OF STIFFNESS MATRIX   
C
      IBNLK=0
      IF(IATYP.GT.1.AND.IABS(INDKOV).NE.2) THEN
         CALL CLEAR(BE,81)
         CALL CLEAR(SKOV,6) 
         IF(IPODT.EQ.0.OR.IPODT.EQ.1) THEN
C
CS          TRANSFORMACIJA NAPONA SA GLOBALNOG NA KONTRAVARIJANTNI SISTEM
CE          TRANSFORM STRESS FROM GLOBAL TO CONTRAVARIANT COORD. SYSTEM
C
            CALL MNOZI2(SKOV,TRLN,TA,6,6)
C            CALL WRR(SKOV,6,'SKOV')
            SKOV(1)=0.D0
            IF(IPODT.EQ.0) SKOV(2)=0.D0
            IF(IPODT.EQ.0) SKOV(4)=0.D0
         ENDIF
         IF(IPODT.EQ.2) THEN
            CALL JEDNA1(SKOV,TA,6)
         ENDIF
         II=-3
         DO 39 I=1,3
            IF(IBNLK.EQ.1) THEN
               IF(IPODT.EQ.2.AND.LA.EQ.9) THEN
C  INKOMPATIBILNA KOVARIJANTNA MATRICA BNL U DEKARTOVOM SISTEMU (3.1.18)
                  BNLK(  I,  I)=-R*XJ(1,1)
                  BNLK(3+I,  I)=-R*XJ(2,1)
                  BNLK(6+I,  I)=-R*XJ(3,1)
                  BNLK(  I,3+I)=-S*XJ(1,2)
                  BNLK(3+I,3+I)=-S*XJ(2,2)
                  BNLK(6+I,3+I)=-S*XJ(3,2)
                  BNLK(  I,6+I)=-T*XJ(1,3)
                  BNLK(3+I,6+I)=-T*XJ(2,3)
                  BNLK(6+I,6+I)=-T*XJ(3,3)
               ENDIF
            ENDIF
            BE(  I,3+I)=SKOV(4)
            BE(3+I,  I)=SKOV(4)
            BE(  I,6+I)=SKOV(6)
            BE(6+I,  I)=SKOV(6)
            BE(3+I,6+I)=SKOV(5)
            BE(6+I,3+I)=SKOV(5)
            II=II+3
         DO 39 J=1,3
   39    BE(II+J,II+J)=SKOV(I)
CKNL
         CALL INTEGK(SKE,BNL,BE,LME,WTU,NCVN,9)
      ENDIF
C
      IF(IALFA.GE.0) THEN
C
CS       PROIZVOD MATRICA - GT * C
CE       MULTIPLY MATRIX - GT * C
C
         CALL MNOZM2(CEGE,GERS,ELAST,LA,6,6)
         IF(IATYP.GT.1.AND.IABS(INDKOV).NE.2.AND.IBNLK.EQ.1) 
     1   CALL MNOZM2(BNLKS,BNLK,BE,LA,9,9)
C
CS       INTEGRACIJA MATRICE - H
CE       INTEGRATE MATRIX - H
C        H = GT * C * G
C
         CALL INTEM1(HINV(1,1,NLS),CEGE,GERS,WTU,LA,LA,6)
         IF(IATYP.GT.1.AND.IABS(INDKOV).NE.2.AND.IBNLK.EQ.1) 
     1   CALL INTEM1(HINV(1,1,NLS),BNLKS,BNLK,WTU,LA,LA,9) 
C
CS       INTEGRACIJA MATRICE - GAMA
CE       INTEGRATE MATRIX - GAMA
C        GAMA = GT * C * B
C
         CALL INTEM1(GEEK(1,1,NLS),CEGE,BTT,WTU,LA,NCVN,6)
         IF(IATYP.GT.1.AND.IABS(INDKOV).NE.2.AND.IBNLK.EQ.1) 
     1   CALL INTEM1(GEEK(1,1,NLS),BNLKS,BNL,WTU,LA,NCVN,9)
      ENDIF
C         CALL WRR3(VR,NCVV,'VR20')
C
   20    CONTINUE
         IF(NGAUSU.LT.NGS12) GO TO 998
C
   25 CONTINUE
      IF(KOZOVE.EQ.5) GO TO 200
C
CS-------------------------- KRAJ PETLJE PO GAUSOVIM TACKAMA --------
CE-------------------------- END  LOOP  OVER  GAUSS  POINTS  --------
C
         IF(IALFA.GE.0) THEN
C
CS          INVERTOVANJE MATRICE - H
CE          INVERSE MATRIX - H
C
            IF(ISKNP.NE.2) CALL MINV(HINV(1,1,NLS),LA,DET,LJA,MJA)
C           CALL WRR(GEEK(1,1,NLS),LA*NCVN,'GEE1')
C           CALL WRR(HAEM(1,NLS),LA,'HAE1')
C           CALL WRR(HINV(1,1,NLS),LA*LA,'HIN1')
C
            IF(NGENL.GT.0) THEN
C
CS             RACUNANJE IZRAZA - (H**-1) * h
CE             CALCULATE EXPRESSION - (H**-1) * h
C
               CALL CLEAR(HAEML,LA)
               CALL MNOZI1(HAEML,HINV(1,1,NLS),HAEM(1,NLS),LA,LA)
C             CALL WRR(HAEML,LA,'HAL1')
C
CS             KOREKCIJA UNUTRASNJIH SILA
CE             CORECTION INTERNAL FORCES
C              r = r - FT * (H**-1) * h
C
               IF(JEDPP.GT.0) 
     1         CALL INTEGF(FTD,GEEK(1,1,NLS),HAEML,LME,1.D0,NCVN,LA)
               IF(JEDPP.EQ.0) 
     1         CALL INTEGF(FTDT,GEEK(1,1,NLS),HAEML,LM,-1.D0,NCVN,LA)
C
               IF(IPG.GT.0) 
     1         CALL MNOZ2I(ESILA(1,IPG),GEEK(1,1,NLS),HAEML,ND,LA)
C
            ENDIF
C
CS          KOREKCIJA MATRICE KRUTOSTI
CE          CORECTION STIFFNESS MATRIX
C           K = K - FT * (H**-1) * F
C
            IF(ISKNP.NE.2)
     1CALL INTEGK(SKE,GEEK(1,1,NLS),HINV(1,1,NLS),LME,-1.D0,NCVN,LA)
C
         ENDIF
C
CS       RASPOREDJIVANJE MATRICE KRUTOSTI (SKE)
CE       ASSEMBLE STIFFNESS MATRIX
C
            IF(ISKNP.NE.2) THEN
               IF(JEDPP.GT.0) CALL SPAKUJ(SKEL,MAEL,SKE,LME,NCVJ+ND)
               IF(JEDPP.EQ.0) CALL SPAKUJ(SK,MAXA,SKE,LM,ND)
            ENDIF
C
  200    CONTINUE
C         IF(ISKNP.NE.2) THEN
C          WRITE(3,*) 'PAKOVANJE SK-ISKNP,ITER',ISKNP,ITER
C          CALL WRR6(SKE,NWE,'SKE ')
C          IF(JEDPP.GT.0) THEN
C           CALL WRR(SKEL,NWKK,'SKE2')
C           CALL IWRR(LME,NCVJ+ND,'LME ')
C           CALL IWRR(MAEL,JEDPP+JEDNN,'MAEL')
C          ENDIF
C          IF(JEDPP.EQ.0) THEN
C           CALL WRR(SK,NWK,'SK  ')
C           CALL IWRR(MAXA,JEDN+1,'MAXA')
C           CALL IWRR(LM,ND,'LM  ')
C          ENDIF
C         ENDIF
C
C        RASPOREDJIVANJE KONCENTRISANIH MATRICE MASA AMASC U VEKTOR ZAPS
         IF(KOZOVE.EQ.5) THEN
            IK=0
            DO 499 I=1,NCVE
            DO 499 K=1,6
               IK=IK+1
               IF(K.GT.3) GO TO 499
               NJ=LM(IK)
               IF(NJ.GT.0) THEN
                  IF(IMASS.EQ.1) THEN
                     NNJ=MAXA(NJ)
                     SK(NNJ)=SK(NNJ)+AMASC(I)
                  ENDIF
                  IF(IMASS.EQ.2) THEN
                     SK(NJ)=SK(NJ)+AMASC(I)
                  ENDIF
               ENDIF
  499       CONTINUE
            GO TO 100
         ENDIF
         IF(KOR.EQ.1.AND.ITER.EQ.0.AND.INDZS.GT.0.AND.ISKNP.NE.2)THEN
C        WRITE(3,*) 'AMASA,NCVE,ND,NLM',AMASA,NCVE,ND,NLM
C        CALL WRR(AMASC,NCVE,'AMAS')
            IK=0
            DO 500 I=1,NCVE
            DO 500 K=1,6
               IK=IK+1
               IF(K.GT.3) GO TO 500
               NJ=LM(IK)
               IF(NJ.GT.0) THEN
                  NPRNJ=NPRZ(NJ)
                  IF(NPRNJ.GT.0.AND.NPRNJ.NE.K) STOP 'NPRNJ'
                  NPRZ(NJ)=K
                  ZAPS(NJ)=ZAPS(NJ)+AMASC(I)
               ENDIF
  500       CONTINUE
            GRZAP=GRZAP+ZAPRE
            GRMAS=GRMAS+AMASA
         ENDIF
  100 CONTINUE
      IF(KOZOVE.EQ.5) RETURN
      IF(KOR.EQ.1.AND.ITER.EQ.0.AND.INDZS.GT.0.AND.ISKNP.NE.2)THEN
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2000) NGE,GRZAP,NGE,GRMAS
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6000) NGE,GRZAP,NGE,GRMAS
      ENDIF
C      IF(NGENL.GT.0.AND.IST.EQ.0) CALL WRR(FTDT,JEDN,'FTDT')
C      IF(IST.EQ.0.AND.ISKNP.NE.2) CALL WRR(SK,NWK,'SK  ')
C
CS       STATICKA KONDENZACIJA VITOPERENJA
C
      IF(JEDPP.GT.0) THEN
         CALL JEDNA1(VIT,FTD,JEDPP+JEDNN)
C      WRITE(3,*) 'DOLE-ITER,ISKNP,KOR,NGENL',ITER,ISKNP,KOR,NGENL
C      WRITE(*,*) 'DOLE-ITER,ISKNP,KOR,NGENL',ITER,ISKNP,KOR,NGENL
C      WRITE(3,*) 'DOLE-JEDPP,JEDNN',JEDPP,JEDNN
C      WRITE(3,*) 'DOLE-NWKK,NWPP,NWEE,NWE',NWKK,NWPP,NWEE,NWE
C      WRITE(*,*) 'DOLE-JEDPP,JEDNN',JEDPP,JEDNN
C      WRITE(*,*) 'DOLE-NWKK,NWPP,NWEE,NWE',NWKK,NWPP,NWEE,NWE
C        IF(ITER.GT.0) THEN
C            WRITE(3,*) 'VRACA 33'
            REWIND 33
C           BACKSPACE 33 
C           BACKSPACE 33
C        ENDIF
C      CALL JEDNA1(SKE1,SKEL,NWKK)
C      CALL JEDNA1(FTD1,FTD,JEDPP+JEDNN)
         IF(ISKNP.NE.2) THEN
C            IF(IST.EQ.0) CALL WRR(SKEL,NWKK,'SKE0')
C            IF(IST.EQ.0) CALL WRR(FTD,JEDPP+JEDNN,'VIT0')
      SMIN=1.D15
      SMAX=-1.D15
      DO 901 I=1,JEDNN+JEDPP
         IPOC=MAEL(I)
C        SIFTOVANJE DIJAGONALNIH CLANOVA
C        IF(I.LE.JEDPP) THEN
C           SKEL(IPOC)=1.0000001*SKEL(IPOC)
C            SKEL(IPOC)=1.D-7+SKEL(IPOC)
C        ENDIF
C          WRITE(3,*) 'PRE-I,LMU(I),IPOC',I,LMU(I),IPOC
C         WRITE(3,911) I,IPOC,SKEL(IPOC)
C 911    FORMAT(2I5,1PD10.2)
         IF(SMIN.GT.SKEL(IPOC)) SMIN=SKEL(IPOC)
         IF(SMAX.LT.SKEL(IPOC)) SMAX=SKEL(IPOC)
  901 CONTINUE
C         WRITE(3,*) 'SMIN,SMAX',SMIN,SMAX
            CALL RESENP(SKEL,FTD,MAEL,JEDPP+JEDNN,JEDPP,IZLAZ,1)
C     DO 902 I=1,JEDNN
C        IPOC=MAEL(JEDPP+I)
C         WRITE(3,*) 'POS-I,LMU(I),IPOC',I,LMU(I),IPOC
C         WRITE(3,901) (SKEL(J),J=IPOC,IPOC+I-1)
C 902 CONTINUE
            CALL WRITED(SKEL,NWKK,33)
            CALL TROUGO(SKEL(NWPP+1),SKE,MAEL(JEDPP+1),JEDNN,NWPP)
C            IF(IST.EQ.0) CALL WRR(SKEL,NWKK,'SKE1')
C            CALL WRR6(FTD(JEDPP+1),JEDNN,'FTD1')
C            IF(IST.EQ.0) CALL WRR(FTD,JEDPP+JEDNN,'FTD1')
            CALL RESENP(SKEL,FTD,MAEL,JEDPP+JEDNN,JEDPP,IZLAZ,2)
            CALL WRITED(FTD,JEDPP,33)
C            IF(IST.EQ.0) CALL WRR(SKEL,NWKK,'SKE2')
C            CALL WRR6(FTD(JEDPP+1),JEDNN,'FTD2')
C            IF(IST.EQ.0) CALL WRR(FTD,JEDPP+JEDNN,'FTD2')
         ENDIF
         IF(ISKNP.EQ.2.AND.NGENL.GT.0) THEN
C               WRITE(3,*) 'ISKNP,NGENL',ISKNP,NGENL
C               WRITE(*,*) 'ISKNP,NGENL',ISKNP,NGENL
            CALL READD(SKEL,NWKK,33)
            CALL RESENP(SKEL,FTD,MAEL,JEDPP+JEDNN,JEDPP,IZLAZ,2)
            CALL WRITED(FTD,JEDPP,33)
C            IF(IST.EQ.0) CALL WRR(SKEL,NWKK,'SKE2')
C             CALL WRR(FTD,JEDPP+JEDNN,'FTD2')
         ENDIF
         IF(NGENL.GT.0) CALL WRITED(VIT,JEDPP+JEDNN,33)
C
CS             RASPOREDJIVANJE UNUTRASNJIH SILA
CE             ASSEMBLE INTERNAL FORCES
C
C         IF(ISKNP.NE.1.AND.NGENL.GT.0) THEN
          IF(ISKNP.NE.2.OR.NGENL.NE.0) THEN
            DO 143 I=1,JEDNN
               IF(LMU(I).EQ.0) STOP ' LMU'
               J=LMU(I)
               FTDT(J)=FTDT(J)-FTD(JEDPP+I)
  143       CONTINUE
C            IF(IST.EQ.0) CALL WRR(FTDT,JEDN,'FTDT')
C                         CALL WRR6(FTDT,JEDN,'FTIZ')
         ENDIF
C
CS       RASPOREDJIVANJE MATRICE KRUTOSTI (SKE)
CE       ASSEMBLE STIFFNESS MATRIX
C
         IF(ISKNP.NE.2) THEN
C           IF(IST.EQ.0) WRITE(3,*) 'PAKOVANJE SK-ISKNP,ITER',ISKNP,ITER
C            IF(IST.EQ.0) CALL WRR(SKE,JEDNN*(JEDNN+1)/2,'SKE ')
C            IF(IST.EQ.0) CALL IWRR(A(LMAXA),JEDN+1,'MAXA')
C            IF(IST.EQ.0) CALL IWRR(LMU,JEDNN,'LMU ')
C PROVERITI OVO PAKOVANJE , MOZDA MORA RUCNO PREPISIVANJE
            CALL SPAKUJ(SK,MAXA,SKE,LMU,JEDNN)
C            IF(IST.EQ.0) CALL WRR(SK,NWK,'SKKK')
         ENDIF
         CLOSE (33,STATUS='KEEP')
C
C      WRITE(3,2100) AMAXK,AMINK,AMAXF,AMINF
C      IF(ISKNP.NE.2) CALL RESEN(SKE1,FTD1,MAEL,JEDPP+JEDNN,1)
C      CALL RESEN(SKE1,FTD1,MAEL,JEDPP+JEDNN,2)
C      WRITE(3,*)'ISKNP,JEDPP,JEDNN,NWKK',ISKNP,JEDPP,JEDNN,NWKK
C      WRITE(3,2100) AMAXK,AMINK,AMAXF,AMINF
C      CALL WRR(FTD1,JEDPP+JEDNN,'FTD1')
C
         IF(NAPON.EQ.1.AND.IATYP.GT.0) 
     1   CALL JEDNA1(VITTP,VITOP,JEDPP)
      ENDIF
      RETURN
C
  900 IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2002) NGE,NLM,R,S,T,DET
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6002) NGE,NLM,R,S,T,DET
      DO 988 J=1,NCVE
      IF(ISRPS.EQ.0)
     1WRITE(IZLAZ,2003) NOP(NLM,J),(CORD(NOP(NLM,J),I),I=1,3),
     1                             ((V3(I,K,J),I=1,3),K=1,3)
      IF(ISRPS.EQ.1)
     1WRITE(IZLAZ,6003) NOP(NLM,J),(CORD(NOP(NLM,J),I),I=1,3),
     1                             ((V3(I,K,J),I=1,3),K=1,3)
  988 CONTINUE
      STOP
C2100 FORMAT(///
C    111X,'NAJVECI  DIJAGONALNI CLAN MATRICE KRUTOSTI      =',1PD12.5/
C    111X,'NAJMANJI DIJAGONALNI CLAN MATRICE KRUTOSTI      =',1PD12.5//
C    111X,'NAJVECI  DIJAGONALNI CLAN FAKTORIZOVANE MATRICE =',1PD12.5/
C    111X,'NAJMANJI DIJAGONALNI CLAN FAKTORIZOVANE MATRICE =',1PD12.5)
C-----------------------------------------------------------------------
 2000 FORMAT(///
     111X,'GRUPA ELEMENATA',I5,' ZAPREMINA =',1PD12.5/
     111X,'GRUPA ELEMENATA',I5,'      MASA =',1PD12.5)
 2001 FORMAT(/11X,'ITERACIJA = ',I4,5X,'  ENE92    =',1PD12.4/
     1        11X,'ENERGIJA (',I3,') / ENERGIJA ( 0 ) =',1PD12.4)
 2002 FORMAT(/' ','U GRUPI ELEMENATA BR. ',I5/
     1        ' ','ZA ELEMENT BR. ',I5/' ','GAUSOVA TACKA CIJE SU VREDNO
     1STI R, S, T  = ',3F10.4/5X,'DETERMINANTA JAKOBIJANA MANJA ILI JEDN
     2AKA NULI, DET = ',1PD10.3)
 2003 FORMAT(
     1' CVOR,           KOORDINATE,                    VEKTORI NORMALE'/
     1I5,3(2X,1PD10.3),3(2X,1PD10.3)/2(41X,3(2X,1PD10.3)/))
 2200 FORMAT(///' ARGUMENT VAN OPSEGA ZADATE KRIVE'/
     1' VREMENSKA FUNKCIJA BROJ =',I5/
     2' ARGUMENT VREME =',1PD12.4)
C-----------------------------------------------------------------------
 6000 FORMAT(///
     111X,'ELEMENT GROUP',I5,' VOLUME =',1PD12.5/
     111X,'ELEMENT GROUP',I5,'   MASS =',1PD12.5)
 6001 FORMAT(/11X,'ITERATION = ',I4,2X,'  ENE92 =',1PD12.4/
     1        11X,'ENE92 (',I3,') / ENE92 ( 0 ) =',1PD12.4)
 6002 FORMAT(/' ','ELEMENT GROUP NUM. ',I5/
     1        ' ','ELEMENT NUM. ',I5/' ','GAUSS POINT R, S, T  = ',
     1       3F10.4/5X,'ZERO OR NEGATIVE JACOBIAN DETERMINANTE,',
     2      ' DET = ',1PD10.3)
 6003 FORMAT(
     1' NODES,          COORDINATES,                    NORMAL VECTORS'/
     1I5,3(2X,1PD10.3),3(2X,1PD10.3)/2(41X,3(2X,1PD10.3)/))
 6200 FORMAT(///' ARGUMENT IS OUT OF PRESCRIBED CURVE RANGE'/
     1' TIME FUNCTION NO. =',I5/
     2' ARGUMENT TIME  =',1PD12.4)
C-----------------------------------------------------------------------
      END
C======================================================================
C
C======================================================================
      SUBROUTINE PLOKV(NOP,DRV1,DRG,TR0,TTR,V3,V0,
     1                 NE,NP,NLM,NCVE,IATYP,L6)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.       TO FORM LOCAL VECTORS
CS.    P R O G R A M
CS.       ZA ODREDJIVANJE POLOZAJA LOKALNIH VEKTORA
C .
C ......................................................................
C
      DIMENSION NOP(NE,*),DRV1(NP,*),DRG(NP,*),TR0(*),TTR(3,3,*),
     1          V3(3,3,*),V0(3,3,*),EF1(3),EF2(3),EF3(3)
C
         DO 48 NBR=1,NCVE
            IG=NOP(NLM,NBR)
            IF(IG.EQ.0) GO TO 48
C           POCETNI LOKALNI VEKTORI
            DO 50 I=1,3
            DO 50 J=1,3
               L6=L6+1
               V0(J,I,NBR)=TR0(L6)
               TTR(I,J,NBR)=TR0(L6)
   50       CONTINUE
            IF(IATYP.GT.1) THEN
               DO 49 I=1,3
                  EF1(I)=DRV1(IG,I)
                  EF3(I)=DRG(IG,I)
   49          CONTINUE
               CALL AXBV(EF3,EF1,EF2)
C               WRITE(3,*) 'NLM,NB ',NLM,NBR
C               CALL WRR(EF1,3,'XGLO')
C               CALL WRR(EF2,3,'YGLO')
C               CALL WRR(EF3,3,'ZGLO')
C              TRANSFORMACIJA GLOBALNIH VEKTORA NA LOKALNE
               CALL TRAV9(EF1,EF2,EF3,TTR(1,1,NBR))
               CALL JEDNA1(V3(1,1,NBR),EF1,3)
               CALL JEDNA1(V3(1,2,NBR),EF2,3)
               CALL JEDNA1(V3(1,3,NBR),EF3,3)
            ELSE
               CALL JEDNA1(V3(1,1,NBR),V0(1,1,NBR),9)
            ENDIF
   48    CONTINUE
      RETURN
      END
C======================================================================
C
C======================================================================
      SUBROUTINE TGRASK(NOP,DRV1,DRG,TR0,TTR,V3,V0,
     1                  NE,NP,NCVE,IATYP,
     1                  NS,NCVP,NCVS,IPODT,NMC,NGE,IREST,
     1                  CORD,CORS,NOS,NVEZ,NPR,FPR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.       TO PRINT GLOBAL COORDINATES IN UNIVERSAL FILE
CS.    P R O G R A M
CS.       ZA STAMPANJE GLOBALNIH KOORDINATA SEGMENATA U UNIVERZALNI FILE
C .
C ......................................................................
C
      CHARACTER*10 IME
      COMMON /SUMELE/ ISUMEL,ISUMGR
      DIMENSION NOP(NE,*),DRV1(NP,*),DRG(NP,*),TR0(*),TTR(3,3,*),
     1          V3(3,3,*),V0(3,3,*),CORD(NP,*),
     1          CORS(NCVP,3,*),NOS(NS,*),NVEZ(*),NPR(*),FPR(*),
     1          COR(3),NEL(8)
c
c    za neu
      dimension iopgl(6)
      call clear(iopgl,6)
      IGRFn=94
      IME(1:2)='GE'
      IME(7:10)='.neu'
      WRITE(IME(3:6),1900) NGE
 1900 FORMAT(I4)
      DO 56 J=3,5
         IF(IME(J:J).EQ.' ') IME(J:J)='0' 
   56 CONTINUE
      IF(IREST.NE.1) THEN
      OPEN (IGRFn,FILE=IME,STATUS='UNKNOWN',FORM='FORMATTED',
     1                       ACCESS='SEQUENTIAL')
         CLOSE (IGRFn,STATUS='DELETE')
      ENDIF
      OPEN (IGRFn,FILE=IME,STATUS='UNKNOWN',FORM='FORMATTED',
     1                       ACCESS='SEQUENTIAL')
      NULA=0
	JEDAN=1
C
      IND=-1
      ITYP=403
      ICOL=46
      WRITE(igrfn,9100) IND
      WRITE(igrfn,9100) ITYP
 9100 FORMAT(I6)
 9000 FORMAT(I6,10I3,3(1PE13.5),I2)
c
C     za unv
      IGRFF=34
      IME(7:10)='.UNV'
      IF(IREST.NE.1) THEN
      OPEN (IGRFF,FILE=IME,STATUS='UNKNOWN',FORM='FORMATTED',
     1                       ACCESS='SEQUENTIAL')
         CLOSE (IGRFF,STATUS='DELETE')
      ENDIF
      OPEN (IGRFF,FILE=IME,STATUS='UNKNOWN',FORM='FORMATTED',
     1                       ACCESS='SEQUENTIAL')
      IND=-1
      ITYP=15
      WRITE(IGRFF,5100) IND
      WRITE(IGRFF,5100) ITYP
      IT1=0
      IT2=0
      ICOL=8
      L6=0
      NC4=4
      IF(IPODT.EQ.1) NC4=2
      KK=0
      DO 100 NLM=1,NE
      CALL PLOKV(NOP,DRV1,DRG,TR0,TTR,V3,V0,
     1           NE,NP,NLM,NCVE,IATYP,L6)
      DO 100 NSEG=1,NS
C      DO 100 I=1,NCVE
      DO 100 I=1,2
         NV=NOP(NLM,I)
         NCV=NV-NMC
         II=NVEZ(NCV)
         NPRE=NPR(II)
         FPRE=FPR(II)
         IF(IPODT.EQ.1.AND.I.EQ.2) THEN
            I1=NC4
            I2=1
            I3=-1
         ELSE
            I1=1
            I2=NC4
            I3=1
         ENDIF
      DO 100 J=I1,I2,I3
         NC=NOS(NSEG,J)
         KK=KK+1
         DO 60 K=1,3
            COR(K)=CORD(NV,K)
         DO 60 JK=1,3
            COR(K)=COR(K)+V3(K,JK,I)*CORS(NC,JK,NPRE)*FPRE
   60    CONTINUE
         WRITE(IGRFF,5000) KK,IT1,IT2,ICOL,(COR(K),K=1,3)
c        neu
         WRITE(Igrfn,9000) kk,NULA,NULA,JEDAN,ICOL,(IOPGL(k),k=1,6),
     +                  (COR(k),k=1,3),NULA
c         
  100 CONTINUE
      WRITE(Igrfn,9100) IND
      WRITE(IGRFF,5100) IND
C
C     STAMPANJE SEGMENATA
C
c     neutral
C
C     E L E M E N T I
C
C     GRAFICKI OPIS ELEMENTA: SA 8 CVOROVA = 25, SA 20 CVOROVA = 26
      IFGDn=25
C     VRSTA 3/D ELEMENTA: SA 8 CVOROVA = 8, SA 20 CVOROVA = 12
      IFDIn=8
C     TABELA FIZICKIH OSOBINA
      IPTNn=1
C     BROJ CVOROVA NA ELEMENTU
      NNODSn=8
      IND=-1
      ITYP=404
      WRITE(IGRFn,9100) IND
      WRITE(IGRFn,9100) ITYP


c     univerzal
c
      IF(IPODT.EQ.2) THEN
C        GRAFICKI OPIS ELEMENTA: SA 8 CVOROVA = 19, 
         IFGD=19
C        VRSTA 3/D ELEMENTA: SA 8 CVOROVA = 115,
         IFDI=115
      ELSE
C        GRAFICKI OPIS LJUSKE: SA 4 CVORA =  5,
         IFGD=5
C        VRSTA  ELEMENTA: SA  4 CVORA = 94,
         IFDI=94
      ENDIF
C     BROJ CVOROVA NA ELEMENTU
      NNODS=NC4*2
C     TABELA FIZICKIH OSOBINA
      IPTN=NGE
C     TABELA MATERIJALA
      MPTN=NGE
C     BOJA  
      ICOL=7
      IND=-1
      ITYP=71
      WRITE(IGRFF,1100) IND
      WRITE(IGRFF,1100) ITYP
      IEL=0
C      IEL=ISUMEL
      KK=0
      DO 101 NLM=1,NE
      DO 101 NSEG=1,NS
         IEL=IEL+1
         IJ=0
         DO 201 I=1,2
         IF(IPODT.EQ.1.AND.I.EQ.2) THEN
            I1=NC4
            I2=1
            I3=-1
         ELSE
            I1=1
            I2=NC4
            I3=1
         ENDIF
         DO 201 J=I1,I2,I3
            KK=KK+1
            IJ=IJ+1
            NEL(IJ)=KK
  201    CONTINUE
C        REDNI BROJ ELEMENTA
         WRITE(IGRFF,1000) IEL,IFGD,IFDI,IPTN,MPTN,ICOL,NNODS
         WRITE(IGRFF,1000) (NEL(J),J=1,NNODS)
c
c        neutral
c
         mptnn=mptn
         zero=0.
         WRITE(IGRFn,8000) IEL,ICOL,MPTNn,IFGDn,IFDIn,MPTNn,NULA,NULA
            WRITE(IGRFn,8001) (NEL(J),J=5,8),(NEL(J),J=1,4),
     +                        NULA,NULA
            WRITE(IGRFn,8011) NULA,NULA,NULA,NULA,NULA,NULA,NULA,NULA,
     +                        NULA,NULA
         WRITE(IGRFn,8002) ZERO,ZERO,ZERO
         WRITE(IGRFn,8002) ZERO,ZERO,ZERO
         WRITE(IGRFn,8002) ZERO,ZERO,ZERO
         WRITE(IGRFn,8003) NULA,NULA,NULA,NULA,NULA,NULA,NULA,NULA,
     +                     NULA,NULA,NULA,NULA,NULA,NULA,NULA,NULA

  101 CONTINUE
      WRITE(IGRFn,1100) IND
      CLOSE(IGRFn,STATUS='KEEP')
c
      WRITE(IGRFF,1100) IND
      CLOSE (IGRFF,STATUS='KEEP')
C      ISUMEL=ISUMEL+NE*NS
      RETURN
 8000 FORMAT(I6,7I4)
 8001 FORMAT(10I6)
 8011 FORMAT(10I2)
 8002 FORMAT(3F3.0)
 8003 FORMAT(16I2)
 8100 FORMAT(I6)
 8200 FORMAT(6(1PE13.5))
C
 5100 FORMAT(I6)
 5000 FORMAT(4I10,3(1PE13.5))
 1000 FORMAT(8I10)
 1100 FORMAT(I6)
      END
C=======================================================================
C
C=======================================================================
      SUBROUTINE GRGSGP(XJ,D,H,HK,COR,VITL,V3,NCVE,NCVS,DETP)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.   P R O G R A M
CE.      TO CALCULATE DERIVATION CARTESIAN BY NATURAL COORDINATES
CE.      COVARIANT BASIS VECTORS - JACOBIAN MATRIX
CS.   P R O G R A M
CS.      ZA RACUNANJE IZVODA DEKARTOVIH PO PRIRODNIM KOORDINATAMA
CS.      KOVARIJANTNI BAZNI VEKTORI - JAKOBIJEVA MATRICA
C .
C ......................................................................
C
      DIMENSION XJ(3,*),D(*),H(3,*),HK(3,*),COR(3,*),VITL(3,3,*),
     1          V3(3,3,*),XJJ(3,3),ST(3)
C
C        (D) KOORDINATE GAUSOVE TACKE
         CALL CLEAR(D,3)
C        (XJ) JAKOBIJAN MATRICA
         CALL CLEAR(XJ,9)
C        (NCVE) BROJ GLOBALNIH CVOROVA
         DO 111 K=1,NCVE
C           (XJJ) POMOCNI PROSTOR ZA SUMU PO (J) I PO (M)
            CALL CLEAR(XJJ,9)
C           (J) OSA LOKALNOG DEKARTOVOG KOORDINATNOG SISTEMA
            DO 112 J=1,3
C              (ST) PROSTOR ZA SUMU PO (M) PO BAZNIM VEKTORIMA G1,G2,G3
               CALL CLEAR(ST,3)
C              (NCVS) BROJ LOKALNIH CVOROVA, SUMA PO (M)
               DO 113 M=1,NCVS
C                 (H) INTERPOLACIJSKE FUNKCIJE, (VITL) LOKALNE KOORDINATE
                  ST(2)=ST(2)+H(M,2)*VITL(J,M,K)
                  ST(3)=ST(3)+H(M,1)*VITL(J,M,K)
  113          CONTINUE
C            CALL WRR(ST,3,'ST  ')
C           (I) PROJEKTOVANJE NA GLOBALNU DEKARTOVU OSU XI
            DO 112 I=1,3
C           (M) BAZNI VEKTOR GM
            DO 112 M=2,3
               XJJ(I,M)=XJJ(I,M)+V3(I,J,K)*ST(M)
  112       CONTINUE
C            CALL WRR(XJJ,9,'XJJJ')
C        (I) PROJEKCIJA NA GLOBALNU DEKARTOVU OSU XI BAZNIH VEKTORA G1,G2,G3
         DO 111 I=1,3
            XJ(2,I)=XJ(2,I)+HK(K,1)*XJJ(I,2)
            XJ(3,I)=XJ(3,I)+HK(K,2)*(XJJ(I,3)+COR(K,I))
C            D(I)=D(I)+HK(K,1)*(XJJ(I,3)+COR(K,I))
  111    CONTINUE
C     VEKTOR NORMALE U GAUS TACKI G2XG3
      XN=XJ(2,2)*XJ(3,3)-XJ(3,2)*XJ(2,3)
      YN=XJ(3,1)*XJ(2,3)-XJ(3,3)*XJ(2,1)
      ZN=XJ(2,1)*XJ(3,2)-XJ(2,2)*XJ(3,1)
      DETP=DSQRT(XN*XN+YN*YN+ZN*ZN)
      D(1)=XN/DETP
      D(2)=YN/DETP
      D(3)=ZN/DETP
      RETURN
      END
C======================================================================
      SUBROUTINE JACGA9(NOP,TECV,H,TGT,NE,NCVE,NLM)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
CS    TEMPERATURA I KOORDINATE U INTEGRACIONOJ TACKI
CE    TEMPERATURE AND COORDINATES IN INTEGRATE POINT
C
      DIMENSION NOP(NE,*),TECV(*),H(NCVE,*)
C
      TGT=0.0
      DO 80 I=1,NCVE
         IC=NOP(NLM,I)
         IF(IC.EQ.0) GO TO 80
         TGT=TGT+H(I,1)*TECV(IC)
   80 CONTINUE
      RETURN
      END
C=======================================================================
      SUBROUTINE WRR3(A,N,CHAR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.       TO WRITE REAL VECTOR IN OUTPUT FILE
CS.    P R O G R A M
CS        ZA ZAPISIVANJE REALNOG VEKTORA U IZLAZNI FILE
C .
C ......................................................................
C
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      CHARACTER*4 CHAR
      COMMON /CDEBUG/ IDEBUG
      DIMENSION A(*)
C
      IF(IDEBUG.GT.0) PRINT *, ' WRR'
      WRITE(IZLAZ,5010) CHAR
      WRITE(IZLAZ,5000) (A(I),I=1,N)
      RETURN
C
 5010 FORMAT(A4)
 5000 FORMAT(3(1PD18.9))
      END
C=======================================================================
      SUBROUTINE WRR6(A,N,CHAR)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C ......................................................................
C .
CE.    P R O G R A M
CE.       TO WRITE REAL VECTOR IN OUTPUT FILE
CS.    P R O G R A M
CS        ZA ZAPISIVANJE REALNOG VEKTORA U IZLAZNI FILE
C .
C ......................................................................
C
      COMMON /TRAKEJ/ IULAZ,IZLAZ,IELEM,ISILE,IRTDT,IFTDT,ILISK,ILISE,
     1                ILIMC,ILDLT,IGRAF,IDINA,IPOME,IPRIT,LDUZI
      CHARACTER*4 CHAR
      COMMON /CDEBUG/ IDEBUG
      DIMENSION A(*)
C
      IF(IDEBUG.GT.0) PRINT *, ' WRR'
      WRITE(IZLAZ,5010) CHAR
      WRITE(IZLAZ,5000) (A(I),I=1,N)
      RETURN
C
 5010 FORMAT(A4)
 5000 FORMAT(6(1PD12.5))
      END
